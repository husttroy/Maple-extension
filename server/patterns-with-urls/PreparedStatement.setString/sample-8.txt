results[https://github.com/patrickvane/school_6/blob/3d711f43e884efc6bd349004bec113f4613a5ad4/00. My Objects/My_Database_Connection_Pool/MyConnection.java][getDatabaseDataValue][10] = -> TRY {  -> TRY { -> statementGetDatabaseDataValue.setString(1,key,)@ -> result=openResultSet(statementGetDatabaseDataValue,)@ } CATCH(Exception) { -> throw new MyException(e,)@ } } CATCH(MyException) {}
results[https://github.com/patrickanderson/fingerpaint-project-code/blob/39d04ff669d433b72edaa59af59cc029ed2a3ca7/pdfdoclet/example/laby/com/jlaby/jdbc/oracle/IdGenerator.java][createNewID][1] = -> TRY {  -> TRY { -> ms_prepGetNewUniqueID.setString(1,m_sequenceName,)@ -> Log.info("IdGenerator","createNewID","Execute query for sequence "+m_sequenceName,)@ } CATCH(Exception) { -> throw new LabySQLException(e,)@ } } CATCH(LabySQLException) {}
results[https://github.com/angusmacdonald/h2o/blob/db9e715d743a0c5f74a5651ab53589956a8fd764/src/main/org/h2/jdbc/JdbcDatabaseMetaData.java][getFunctions][12] = -> TRY {  -> TRY { -> prep=conn.prepareAutoCloseStatement("SELECT TOPIC "+"FROM INFORMATION_SCHEMA.HELP WHERE SECTION = ?",)@ -> prep.setString(1,section,)@ -> rs=prep.executeQuery()@ -> prep.close()@ } CATCH(Exception) { -> throw logAndConvert(e,)@ } } CATCH(SQLException) {}
results[https://github.com/danilogr/RepSys/blob/473ff8fbf493ded7cc1b5901aa4080c19fdd209e/src/dao/impl/jdbc/NumeroTelefonicoJDBCDAO.java][selectByNumero][2] = -> TRY {  -> TRY { -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setString(1,numero,)@ -> rs=stmt.executeQuery()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/eiNetwork/eiNetwork2/blob/ae5a90c3afe03a620c536a1a085c6667596f66c6/vufind/import/src/org/vufind/AlphaBrowseProcessor.java][insertBrowseScoping][1] = -> TRY {  -> TRY { -> insertBrowseScopeValueStatement.setLong(1,browseValueId,)@ -> insertBrowseScopeValueStatement.setString(2,recordIdFull,)@ -> insertBrowseScopeValueStatement.executeUpdate()@ } CATCH(Exception) { -> logger.error("Error adding "+browseType+" '"+browseValue+"' browse scoping "+e.toString(),e,)@ } } CATCH(SQLException) {}
results[https://github.com/svn2github/sakai-kernel/blob/15d1c50a4ca38338300008539e6890c666f36d7e/tags/kernel-K-1.0-RC1/content/component/db/sakai-content-impl/src/main/java/org/sakaiproject/content/impl/serialize/impl/conversion/Type1BlobCollectionConversionHandler.java][convertSource][9] = -> TRY {  -> CATCH(Exception) { -> log.warn("Failed to parse "+id+"["+xml+"]",e1,)@ } -> TRY { -> updateRecord.setBytes(1,result,)@ -> updateRecord.setString(2,id,)@ } CATCH(Exception) { -> log.warn("Failed to process record "+id,e,)@ } } CATCH(SQLException) {}
results[https://github.com/danilogr/RepSys/blob/473ff8fbf493ded7cc1b5901aa4080c19fdd209e/src/dao/impl/jdbc/UsuarioNumeroTelefonicoJDBCDAO.java][getLigacoes][2] = -> TRY {  -> TRY { -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setString(1,num.getNumero(),)@ -> rs=stmt.executeQuery()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/danilogr/RepSys/blob/4336c62f0574fda8016af1f86a44d6da695d072e/src/dao/impl/jdbc/ContaValorFixoJDBCDAO.java][delete][4] = -> TRY {  -> TRY { -> conta=(ContaVO) vo@ -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setString(1,conta.getNome(),)@ -> stmt.executeUpdate()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/danilogr/RepSys/blob/473ff8fbf493ded7cc1b5901aa4080c19fdd209e/src/dao/impl/jdbc/UsuarioNumeroTelefonicoJDBCDAO.java][getNumeros][2] = -> TRY {  -> TRY { -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setString(1,user.getEmail(),)@ -> rs=stmt.executeQuery()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/danilogr/RepSys/blob/473ff8fbf493ded7cc1b5901aa4080c19fdd209e/src/dao/impl/jdbc/NumeroTelefonicoJDBCDAO.java][delete][2] = -> TRY {  -> num=(NumeroTelefonicoVO) vo@ -> TRY { -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setString(1,num.getNumero(),)@ -> stmt.executeUpdate()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/gts/src/gov/nih/nci/cagrid/gts/service/TrustedAuthorityManager.java][removeLevelFromTrustedAuthorities][3] = -> TRY {  -> TRY { -> s=c.prepareStatement("delete FROM "+TrustedAuthorityTrustLevelsTable.TABLE_NAME+" where "+TrustedAuthorityTrustLevelsTable.TRUST_LEVEL+"= ?",)@ -> s.setString(1,level,)@ -> s.execute()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in removing the trust level "+level+" from the Trusted Authorities, the following statement generated the error: \n",e,)@ -> fault=new GTSInternalFault()@ -> fault.setFaultString("Unexpected error the trust level, "+level+" from the trusted authorites!!!",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalFault) {}
results[https://github.com/apache/tomee/blob/8e78f86f2163748c3b4ee6eae1b2f0394be314c3/openejb-itests/src/main/java/org/apache/openejb/test/entity/bmp/BasicBmpBean.java][ejbFindByLastName][3] = -> TRY {  -> TRY { -> stmt=con.prepareStatement("SELECT id FROM entity WHERE last_name = ?",)@ -> stmt.setString(1,lastName,)@ -> set=stmt.executeQuery()@ } CATCH(Exception) { -> throw new FinderException("FindByPrimaryKey failed",)@ } } ELSE { -> throw new javax.ejb.ObjectNotFoundException()@!(keys.size()>0) } CATCH(javax.ejb.FinderException) {}
results[https://github.com/vyloy/lnvc/blob/38625c0c7f2c0e5c562bcd3cea11043a281b6a54/lvmc/openfire_src/src/plugins/monitoring/src/java/org/jivesoftware/openfire/reporting/stats/RrdSqlBackend.java][exists][4] = -> TRY {  -> TRY { -> pstmt=con.prepareStatement(JDBC_SELECT,)@ -> pstmt.setString(1,id,)@ -> rs=pstmt.executeQuery()@ } CATCH(Exception) { -> Log.error("Error while accessing information in database: "+e,)@ } FINALLY { -> DbConnectionManager.closeConnection(rs,pstmt,con,)@ } } CATCH(IOException) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/gts/src/gov/nih/nci/cagrid/gts/service/GTSAuthorityManager.java][doesAuthorityExist][4] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+AuthorityTable.TABLE_NAME+" where "+AuthorityTable.GTS_URI+"= ?",)@ -> s.setString(1,gtsURI,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in determining if the Authority GTS "+gtsURI+" exists, the following statement generated the error: \n",e,)@ -> fault=new GTSInternalFault()@ -> fault.setFaultString("Unexpected error in determining if the Authority GTS "+gtsURI+" exists.",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalFault) {}
results[https://github.com/eea/eea.eunis/blob/22e9545e6e929c1a74633f96ec99ea9807a1bb39/web/src/main/java/ro/finsiel/eunis/dataimport/ImportParser.java][startElement][4] = -> TRY {  -> IF { -> TRY { -> LOOP { -> preparedStatement.setString(i,"NULL",)@i<=numberOfColumns } } CATCH(Exception) { -> throw new RuntimeException(e.getMessage(),e,)@ } } } CATCH(SAXException) {}
results[https://github.com/danilogr/RepSys/blob/473ff8fbf493ded7cc1b5901aa4080c19fdd209e/src/dao/impl/jdbc/UsuarioNumeroTelefonicoJDBCDAO.java][getLigacao][2] = -> TRY {  -> TRY { -> stmt=this.getConnection().prepareStatement(sql,)@ -> dt=df.format(dataHora.getTime(),)@ -> stmt.setString(1,dt,)@ -> rs=stmt.executeQuery()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/ECF/Newsreader/blob/ac761a35637c84e5b9c2ff2e3c1a0ccc599b7a87/bundles/org.eclipse.ecf.protocol.nntp.store.derby/src/org/eclipse/ecf/protocol/nntp/store/derby/internal/ServerDAO.java][getServer][2] = -> TRY {  -> TRY { -> getServer.setString(1,url,)@ -> getServer.execute()@ -> r=getServer.getResultSet()@ -> IF { -> return  new IServer[]@r==null } } CATCH(Exception) { -> throw new StoreException(e.getMessage(),e,)@ } } CATCH(StoreException) {}
results[https://github.com/NCIP/cagrid2/blob/20d61f015b88897b216c1a5151cca9696216568a/cagrid-gts/cagrid-gts-service/src/main/java/org/cagrid/gts/service/impl/GTSAuthorityManager.java][updateAuthorityPriority][1] = -> TRY {  } ELSE { -> TRY { -> update=c.prepareStatement("UPDATE "+AuthorityTable.TABLE_NAME+" SET "+AuthorityTable.PRIORITY+" = ? WHERE "+AuthorityTable.GTS_URI+" = ?",)@!(doesAuthorityExist(uri,)) -> update.setInt(1,priority,)@!(doesAuthorityExist(uri,)) -> update.setString(2,uri,)@!(!(doesAuthorityExist(uri,))) -> update.executeUpdate()@!(doesAuthorityExist(uri,)) } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in updating the priority for the authority, "+uri+".",e,)@!(!(doesAuthorityExist(uri,))) -> fault=FaultHelper.createFaultException(GTSInternalException.class,"Unexpected error occurred in updating the priority for the authority, "+uri+".",)@!(!(doesAuthorityExist(uri,))) -> throw fault@!(!(doesAuthorityExist(uri,))) } } CATCH(GTSInternalException,InvalidAuthorityException) {}
results[https://github.com/victortey/geotool/blob/6d3e20e6437abc466eed30e965d014219ac0d55f/modules/unsupported/postgis/src/main/java/org/geotools/data/postgis/attributeio/EWKTAttributeIO.java][write][12] = -> TRY {  -> TRY { -> IF { -> ps.setNull(position,Types.VARCHAR,)@ } ELSE { -> ewkt="SRID="+g.getSRID()+";"+wkt@ -> ps.setString(position,ewkt,)@ } } CATCH(Exception) { -> throw new DataSourceException("Sql writing problem",e,)@ } } CATCH(IOException) {}
results[https://github.com/val100/webchick-server/blob/6cd2594b0670b8d566e7c81826b1d38de16d4c87/webchick-server-main/src/main/java/com/agrologic/app/dao/mysql/impl/SchemaDaoImpl.java][dropSchema][2] = -> TRY {  -> TRY { -> prepstmt=con.prepareStatement(sqlQuery,)@ -> prepstmt.setString(1,schema,)@ -> prepstmt.execute(sqlQuery,)@ } CATCH(Exception) { -> throw new SQLException("Cannot drop schema "+schema,e,)@ } FINALLY { -> prepstmt.close()@ -> dao.closeConnection(con,)@ } } CATCH(SQLException) {}
results[https://github.com/mensonge/mensonge/blob/1f34e313fc38384a0ab6eb0f5e5c805ae45e59cb/src/core/BaseDeDonnees/BaseDeDonnees.java][getSujet][4] = -> TRY {  -> IF { -> return -1@connexion==null } -> TRY { -> ps=connexion.prepareStatement("SELECT idSuj FROM sujet WHERE nomSuj=?;",)@!(connexion==null) -> ps.setString(1,nomSuj,)@!(connexion==null) -> rs=ps.executeQuery()@!(connexion==null) -> ps.close()@!(connexion==null) } CATCH(Exception) { -> throw new DBException("Erreur lors de la recuperation du sujet: "+e.getMessage(),3,)@!(connexion==null) } } CATCH(DBException) {}
results[https://github.com/AsherBond/opentaps/blob/76cd549a335abf53711b13c2f9e1a2c9e2f4171d/hot-deploy/opentaps-common/webapp/js/dojo_0.90/dojox/off/demos/editor/server/org/dojo/moxie/Documents.java][findByFileName][3] = -> TRY {  -> TRY { -> IF { -> findByFileNameSQL=con.prepareStatement("SELECT * FROM DOCUMENTS WHERE file_name=?",)@findByFileNameSQL==null } -> findByFileNameSQL.setString(1,fileName,)@ -> results=findByFileNameSQL.executeQuery()@ -> IF { -> return null@results.next()==false } } CATCH(Exception) { -> throw new MoxieException(e,)@ } } CATCH(MoxieException) {}
results[https://github.com/danilogr/RepSys/blob/4336c62f0574fda8016af1f86a44d6da695d072e/src/dao/impl/jdbc/EmprestimoJDBCDAO.java][delete][1] = -> TRY {  -> TRY { -> stmt=this.getConnection().prepareStatement(sql,)@ -> date=df.format(emprestimo.getDataHora().getTime(),)@ -> stmt.setString(1,date,)@ -> stmt.executeUpdate()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/stas-bob/Projektmanager/blob/942e1ff64d10c86befbb645501e7fe8c55f05971/src/java/util/ValidateProjectServlet.java][processRequest][2] = -> TRY {  -> projectName=request.getParameter("projectname",)@ -> TRY { -> ps=c.prepareStatement("SELECT * FROM project WHERE name = ?",)@ -> ps.setString(1,projectName,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) { -> Logger.getLogger(ValidateProjectServlet.class.getName(),).log(Level.SEVERE,null,ex,)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/NCIP/lexevs/blob/96e5b5fa98e843fc9e745f6a55bac5d631c1f0f1/lgValueDomain/src/org/lexgrid/valuedomain/persistence/PickListServices.java][findByValueDomainURI][2] = -> TRY {  -> TRY { -> valueDomainURI=(URI) key@ -> selectFromPickList=checkOutPreparedStatement(" SELECT * "+" FROM "+VDConstants.TBL_PICK_LIST+" WHERE "+SQLTableConstants.TBLCOL_REPRESENTSVALUEDOMAIN+" = ?",)@ -> selectFromPickList.setString(1,valueDomainURI.toString(),)@ -> results=selectFromPickList.executeQuery()@ } CATCH(Exception) { -> throw new FindException("Problem",e,)@ } FINALLY { -> checkInPreparedStatement(selectFromPickList,)@ } } CATCH(FindException) {}
results[https://github.com/foxerfly/yfassist/blob/d8cf61b1ee641b3d80e8dfa4b515c90a2c24890b/QueryOrder/src/com/edwin/sql/QueryErp.java][updateCRMsingleton][1] = -> TRY {  -> TRY { -> pstmt=conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY,)@ -> LOOP { -> pstmt.setString(j,s,)@ } -> pstmt.executeUpdate()@ } CATCH(Exception) { -> TRY { -> conn.rollback()@ } } } CATCH(SQLException) {}
results[https://github.com/stas-bob/Projektmanager/blob/db2b5798e193948db459cdbba1b677ed10ef1b7f/src/java/ValideProjectServlet.java][processRequest][1] = -> TRY {  -> projektName=request.getParameter("projectname",)@ -> System.out.println(projektName,)@ -> TRY { -> ps=c.prepareStatement("select * from `Projekt` where `Name`=?",)@ -> ps.setString(1,projektName,)@ -> rs=ps.executeQuery()@ } CATCH(Exception) { -> Logger.getLogger(ValideProjectServlet.class.getName(),).log(Level.SEVERE,null,ex,)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/dotCMS/dotCMS/blob/62de35072ceb7253be229c2a04b8df6d2e31dd83/src/com/liferay/util/dao/CounterDAO.java][reset][1] = -> TRY {  -> TRY { -> ps=con.prepareStatement(update.toString(),)@ -> ps.setString(1,rowName,)@ -> ps.executeUpdate()@ } CATCH(Exception) { -> throw new DataAccessException(e,)@ } FINALLY { -> DataAccess.cleanUp(con,ps,rs,)@ } } CATCH(DataAccessException) {}
results[https://github.com/ashantelle/thesis/blob/8df2e2814f8cf59bcf804b838d43c284ef2b6d28/radiotest/api/src/main/java/org/openmrs/module/radiotest/utils/EncryptValue.java][nullSafeSet][1] = -> TRY {  -> IF { -> pPreparedStatement.setNull(i,Types.VARCHAR,)@ } ELSE { -> TRY { -> pPreparedStatement.setString(i,RadioSecurity.encrypt((String) o,),)@!(o==null) } CATCH(Exception) { -> e.printStackTrace()@ } } } CATCH(HibernateException,SQLException) {}
results[https://github.com/mensonge/mensonge/blob/c691059c51e13b26bb83ef5cac0f172ac177a8bc/src/mensonge/core/BaseDeDonnees/BaseDeDonnees.java][ajouterSujet][2] = -> TRY {  -> IF { -> throw new DBException("Nom de sujet déjà utilisé.",3,)@!(connexion==null) && this.sujetExiste(nom,) } -> TRY { -> ps=connexion.prepareStatement("INSERT INTO sujet (nomsuj) VALUES (?)",)@!(this.sujetExiste(nom,)) && !(connexion==null) -> ps.setString(1,nom,)@!(this.sujetExiste(nom,)) && !(connexion==null) -> ps.close()@!(this.sujetExiste(nom,)) && !(connexion==null) } CATCH(Exception) { -> throw new DBException("Erreur lors de l'ajout du sujet : "+e.getMessage(),3,)@!(this.sujetExiste(nom,)) && !(connexion==null) } } CATCH(DBException) {}
results[https://github.com/dotCMS/dotCMS/blob/62de35072ceb7253be229c2a04b8df6d2e31dd83/src/com/liferay/portal/ejb/ImageFinder.java][findByImageId][2] = -> TRY {  -> TRY { -> ps=con.prepareStatement(query.toString(),)@ -> ps.setString(1,imageId,)@ -> rs=ps.executeQuery()@ } CATCH(Exception) { -> throw new SystemException(e,)@ } FINALLY { -> DataAccess.cleanUp(con,ps,rs,)@ } } CATCH(SystemException) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/gts/src/gov/nih/nci/cagrid/gts/service/TrustLevelManager.java][getTrustLevels][1] = -> TRY {  -> TRY { -> s=c.prepareStatement("select * from "+TrustLevelTable.TABLE_NAME+" WHERE "+TrustLevelTable.SOURCE_GTS+"= ?",)@ -> s.setString(1,gtsSourceURI,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in getting trust levels, the following statement generated the error: \n"+sql.toString()+"\n",e,)@ -> fault=new GTSInternalFault()@ -> fault.setFaultString("Unexpected error occurred in getting trust levels.",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalFault) {}
results[https://github.com/c391Awesome/project/blob/298e2cb261599040cd4c45c01077a64ada5612d6/src/GetOnePic.java][doGet][1] = -> TRY {  -> TRY { -> statement=conn.prepareStatement("select "+size+" from pacs_images where image_id=?",)@ -> statement.setString(1,imageID,)@ -> results=statement.executeQuery()@ } CATCH(Exception) { -> throw new RuntimeException("failed to display image",ex,)@ } FINALLY { -> conn.close()@ -> out.close()@ } } CATCH(ServletException,IOException) {}
results[https://github.com/jdeolive/geotools-old/blob/3e16685c3d31be7be6204964eda023972a5b9a47/modules/unsupported/postgis/src/main/java/org/geotools/data/jdbc/attributeio/WKTAttributeIO.java][write][13] = -> TRY {  -> TRY { -> IF { -> ps.setNull(position,Types.VARCHAR,)@ } ELSE { -> wkt=getWKTWriter().write(g,)@ -> ps.setString(position,wkt,)@ } } CATCH(Exception) { -> throw new DataSourceException("Sql writing problem",e,)@ } } CATCH(IOException) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-dorian/cagrid-dorian-service/ref-src/org/cagrid/gaards/dorian/federation/TrustedIdPManager.java][determineTrustedIdPExistsByName][6] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+TRUST_MANAGER_TABLE+" where "+NAME_FIELD+"= ?",)@ -> s.setString(1,name,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> fault=new DorianInternalFault()@ -> fault.setFaultString("Unexpected Database Error",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/flotpk/geoserver/blob/44bacafcf1352bfe0b1836262df686fd58036585/src/community/dbconfig/src/main/java/org/geoserver/catalog/hib/types/FilterType.java][nullSafeSet][6] = -> TRY {  -> IF { -> st.setString(index,null,)@!(filter==null) -> return @filter==null } -> output=new ByteArrayOutputStream()@!(filter==null) -> TRY { -> encoder.encode(filter,OGC.Filter,output,)@!(filter==null) -> st.setString(index,new String(output.toByteArray(),),)@!(filter==null) } CATCH(Exception) { -> throw new HibernateException(msg,e,)@!(filter==null) } } CATCH(HibernateException,SQLException) {}
results[https://github.com/vyloy/lnvc/blob/38625c0c7f2c0e5c562bcd3cea11043a281b6a54/lvmc/openfire_src/src/plugins/fastpath/src/java/org/jivesoftware/openfire/fastpath/providers/ChatNotes.java][appendNote][3] = -> TRY { -> TRY { -> pstmt=con.prepareStatement(SET_NOTES,)@ -> DbConnectionManager.setLargeTextField(pstmt,1,note,)@ -> pstmt.setString(2,sessionID,)@ -> pstmt.executeUpdate()@ } CATCH(Exception) { -> Log.error(ex.getMessage(),ex,)@ } FINALLY { -> DbConnectionManager.closeConnection(pstmt,con,)@ } -> Log.error(ex.getMessage(),ex,)@ }
results[https://github.com/Silverpeas/Silverpeas-Core/blob/f00ddcf8d30a673f7ad615904e5c704e0c424383/lib-core/src/main/java/com/stratelia/silverpeas/contentManager/ContentManager.java][getSilverContentIdByInstanceId][1] = -> TRY {  -> TRY { -> SilverTrace.info("contentManager","ContentManager.getSilverContentIdByInstanceId","root.MSG_GEN_PARAM_VALUE","sSQLStatement= "+sSQLStatement+" instranceId="+instanceId,)@ -> prepStmt=con.prepareStatement(sSQLStatement,)@ -> prepStmt.setString(1,instanceId,)@ -> resSet=prepStmt.executeQuery()@ } CATCH(Exception) { -> throw new ContentManagerException("ContentManager.getSilverContentIdByInstanceId",SilverpeasException.ERROR,"contentManager.EX_CANT_GET_INSTANCEID","",e,)@ } FINALLY { -> DBUtil.close(resSet,prepStmt,)@ -> closeConnection(con,)@ } } CATCH(ContentManagerException) {}
results[https://github.com/ekirkilevics/TestSSQL/blob/2762a8f5da758f695861b458c8db6d9f1a485e58/sql12/plugins/postgres/src/main/java/net/sourceforge/squirrel_sql/plugins/postgres/types/PostgreSqlXmlTypeDataTypeComponent.java][setPreparedStatementValue][7] = -> TRY {  -> IF { -> pstmt.setNull(position,java.sql.Types.OTHER,"xml",)@ } ELSE { -> TRY { -> pstmt.setString(position,value.toString(),)@!(value==null||"".equals(value,)) } CATCH(Exception) { -> s_log.error("setPreparedStatementValue: Unexpected exception - "+e.getMessage(),e,)@ } } } CATCH(SQLException) {}
results[https://github.com/f1ori/yacy/blob/035ebfbf3bd271e27527006da7ff4f5c6f6fc2e6/source/net/yacy/kelondro/table/SQLTable.java][get][1] = -> TRY {  -> TRY { -> sqlStatement=this.theDBConnection.prepareStatement(sqlQuery,)@ -> sqlStatement.setString(1,ASCII.String(key,),)@ -> result=sqlStatement.executeQuery()@ -> sqlStatement.close()@ -> IF { -> return null@value==null } } CATCH(Exception) { -> throw new IOException(e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/NCIP/lexevs/blob/96e5b5fa98e843fc9e745f6a55bac5d631c1f0f1/lgValueDomain/src/org/lexgrid/valuedomain/persistence/VDServices.java][findByValueDomainName][2] = -> TRY {  -> TRY { -> name=(String) key@ -> selectFromValueDomain=checkOutPreparedStatement(sql,)@ -> IF { -> selectFromValueDomain.setString(1,name,)@name!=null } -> results=selectFromValueDomain.executeQuery()@ } CATCH(Exception) { -> throw new FindException("Problem",e,)@ } FINALLY { -> checkInPreparedStatement(selectFromValueDomain,)@ } } CATCH(FindException) {}
results[https://github.com/f1ori/yacy/blob/7ee494fde59945427a533efe10d293d02cc6c353/source/de/anomic/kelondro/kelondroSQLTable.java][get][2] = -> TRY {  -> TRY { -> sqlStatement=this.theDBConnection.prepareStatement(sqlQuery,)@ -> sqlStatement.setString(1,new String(key,),)@ -> result=sqlStatement.executeQuery()@ -> sqlStatement.close()@ -> IF { -> return null@value==null } } CATCH(Exception) { -> throw new IOException(e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/jdeolive/geoserver-old/blob/066a654a718229c49aaf68951e695f2e68c673aa/community/dbconfig/src/main/java/org/geoserver/catalog/hib/types/CRSType.java][nullSafeSet][3] = -> TRY {  -> IF { -> st.setNull(index,Types.VARCHAR,)@value==null } ELSE { -> crs=(CoordinateReferenceSystem) value@!(value==null) -> TRY { -> st.setString(index,(storeAsWKT)?crs.toWKT():"EPSG:"+CRS.lookupEpsgCode(crs,true,),)@value==null } CATCH(Exception) { -> throw new RuntimeException(e,)@!(value==null) } } } CATCH(HibernateException,SQLException) {}
results[https://github.com/okjsp/okjsp-html5/blob/fc03aaeb48c571f7dcdc673a3878bb3d71eddbde/src/kr/pe/okjsp/jersey/legacy/MemoHandler.java][getCount][2] = -> TRY {  -> TRY { -> pstmt=pconn.prepareStatement(MEMO_COUNT,)@ -> pstmt.setString(1,"%"+keyword+"%",)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> System.out.println(e.toString(),)@ } FINALLY { -> dbCon.close(pconn,pstmt,rs,)@ } } CATCH(SQLException) {}
results[https://github.com/NCIP/cagrid2/blob/20d61f015b88897b216c1a5151cca9696216568a/cagrid-gts/cagrid-gts-service/src/main/java/org/cagrid/gts/service/impl/TrustedAuthorityManager.java][removeTrustedAuthoritysTrustLevels][1] = -> TRY {  -> TRY { -> s=c.prepareStatement("delete FROM "+TrustedAuthorityTrustLevelsTable.TABLE_NAME+" where "+TrustedAuthorityTrustLevelsTable.NAME+"= ?",)@ -> s.setString(1,name,)@ -> s.execute()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in removing the trust levels for the Trusted Authority, "+name+", the following statement generated the error: \n",e,)@ -> fault=FaultHelper.createFaultException(GTSInternalException.class,"Unexpected error removing the TrustedAuthority "+name,)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalException,InvalidTrustedAuthorityException) {}
results[https://github.com/NCIP/cagrid2/blob/20d61f015b88897b216c1a5151cca9696216568a/cagrid-gts/cagrid-gts-service/src/main/java/org/cagrid/gts/service/impl/PermissionManager.java][revokePermissions][2] = -> TRY {  -> TRY { -> s=c.prepareStatement(sql,)@ -> s.setString(1,trustedAuthorityName,)@ -> s.execute()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in removing the permissions for the trusted authority "+trustedAuthorityName+".",e,)@ -> fault=FaultHelper.createFaultException(GTSInternalException.class,"Unexpected database error incurred in removing the permissions for the trusted authority "+trustedAuthorityName+".",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalException) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/gts/src/gov/nih/nci/cagrid/gts/service/PermissionManager.java][isUserTrustServiceAdmin][2] = -> TRY {  -> TRY { -> s=c.prepareStatement(sql.toString(),)@ -> s.setString(1,gridIdentity,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in determining whether or not the user "+gridIdentity+"  is a trust service administrator, the following statement generated the error: \n"+sql.toString()+"\n",e,)@ -> fault=new GTSInternalFault()@ -> fault.setFaultString("Unexpected error occurred in determining whether or not the user "+gridIdentity+"  is a trust service administrator.",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalFault) {}
results[https://github.com/danilogr/RepSys/blob/473ff8fbf493ded7cc1b5901aa4080c19fdd209e/src/dao/impl/jdbc/ItemFaturaTelefonicaJDBCDAO.java][selectByNumeroDataHora][1] = -> TRY {  -> TRY { -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setString(1,numero,)@ -> stmt.setTimestamp(2,new Timestamp(dataHora.getTime().getTime(),),)@ -> rs=stmt.executeQuery()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/service-tools/src/org/cagrid/tools/database/MetadataManager.java][remove][1] = -> TRY {  -> TRY { -> s=c.prepareStatement("DELETE FROM "+table+" WHERE NAME= ?",)@ -> s.setString(1,name,)@ -> s.execute()@ } CATCH(Exception) { -> log.error(e.getMessage(),e,)@ -> fault=new DatabaseException("Unexpected Database Error, could remove metadata!!!",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DatabaseException) {}
results[https://github.com/f1ori/yacy/blob/035ebfbf3bd271e27527006da7ff4f5c6f6fc2e6/source/net/yacy/kelondro/table/SQLTable.java][put][1] = -> TRY {  -> TRY { -> sqlStatement=this.theDBConnection.prepareStatement(sqlQuery,)@ -> sqlStatement.setString(1,row.getColString(0,),)@ -> sqlStatement.setBytes(2,row.bytes(),)@ -> sqlStatement.execute()@ -> sqlStatement.close()@ } CATCH(Exception) { -> throw new IOException(e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/NCIP/cagrid2/blob/20d61f015b88897b216c1a5151cca9696216568a/cagrid-gts/cagrid-gts-service/src/main/java/org/cagrid/gts/service/impl/GTSAuthorityManager.java][doesAuthorityExist][3] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+AuthorityTable.TABLE_NAME+" where "+AuthorityTable.GTS_URI+"= ?",)@ -> s.setString(1,gtsURI,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in determining if the Authority GTS "+gtsURI+" exists, the following statement generated the error: \n",e,)@ -> fault=FaultHelper.createFaultException(GTSInternalException.class,"Unexpected error in determining if the Authority GTS "+gtsURI+" exists.",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalException) {}
results[https://github.com/f1ori/yacy/blob/194da25a2f905a3636212a1d2731d00aaf84eefc/source/de/anomic/kelondro/table/SQLTable.java][put][1] = -> TRY {  -> TRY { -> sqlStatement=this.theDBConnection.prepareStatement(sqlQuery,)@ -> sqlStatement.setString(1,row.getColString(0,null,),)@ -> sqlStatement.setBytes(2,row.bytes(),)@ -> sqlStatement.execute()@ -> sqlStatement.close()@ } CATCH(Exception) { -> throw new IOException(e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/infoScoop/infoscoop/blob/bac7780c8ab3555b1e40fee298a50234fff1433d/src/migration/java/org/infoscoop/batch/migration/v1300to1400/GadgetConvertTask.java][execute][1] = -> TRY {  -> type=bean.getType()@ -> TRY { -> pstat.setString(1,"upload__"+type,)@ -> rs=pstat.executeQuery()@ -> LOOP { -> System.out.println(type+","+"/"+","+fileType,)@ -> gadget.setType(type,)@ } } CATCH(Exception) { -> finish(project,)@ -> throw new BuildException(ex,)@ } } CATCH(BuildException) {}
results[https://github.com/NCIP/cagrid2/blob/20d61f015b88897b216c1a5151cca9696216568a/cagrid-gts/cagrid-gts-service/src/main/java/org/cagrid/gts/service/impl/TrustedAuthorityManager.java][getTrustLevels][1] = -> TRY {  -> TRY { -> s=c.prepareStatement("select * from "+TrustedAuthorityTrustLevelsTable.TABLE_NAME+" where "+TrustedAuthorityTrustLevelsTable.NAME+"= ?",)@ -> s.setString(1,name,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in getting the trust levels for the Trusted Authority, "+name+":\n",e,)@ -> fault=FaultHelper.createFaultException(GTSInternalException.class,"Unexpected database error incurred in getting the trust levels for the Trusted Authority, "+name+"!!!",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalException,InvalidTrustedAuthorityException) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-core/src/main/java/org/cagrid/tools/groups/GroupManager.java][groupExists][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+GROUPS_TABLE+" where "+GROUP_NAME_FIELD+"= ?",)@ -> s.setString(1,name,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> log.error(e.getMessage(),e,)@ -> fault=new GroupException("Unexpected Database Error",e,)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GroupException) {}
results[https://github.com/kiniry/KOA/blob/8ffba747ca390471b2b1f4a26d831a7f3fd663bf/branches/maven-built/koa/src/main/ie/ucd/srg/koa/koaschema/EJSJDBCPersisterCMPKieslijstenBean.java][findKieslijstenByFk_kkr_1][14] = -> TRY {  -> TRY { -> pstmt=getPreparedStatement("SELECT T1.KIESLIJSTNUMMER, T1.LIJSTNAAM, T1.KIESKRINGNUMMER FROM KOA01.KIESLIJSTEN  T1 WHERE T1.KIESKRINGNUMMER = ?",)@ -> IF { -> pstmt.setNull(1,java.sql.Types.VARCHAR,)@ } ELSE { -> pstmt.setString(1,inKey.kieskringnummer,)@ } -> resultSet=pstmt.executeQuery()@ -> return new EJSJDBCFinder(resultSet,this,pstmt,)@ } CATCH(Exception) { -> throw new EJSPersistenceException("find failed:",ex,)@ } } CATCH(javax.ejb.FinderException,java.rmi.RemoteException) {}
results[https://github.com/exoplatform/jcr/blob/8cb5f954d2d92c4de7fc072f824a5f9b5d668233/component/core/src/main/java/org/exoplatform/services/jcr/impl/storage/jdbc/update/StorageUpdateManager.java][update][1] = -> TRY {  -> TRY { -> insertVersion=connection.prepareStatement(SQL_UPDATE_VERSION,)@ -> insertVersion.setString(1,REQUIRED_STORAGE_VERSION,)@ -> insertVersion.executeUpdate()@ } CATCH(Exception) { -> TRY { -> connection.rollback()@ } CATCH(SQLException) { -> log.warn("Error of update rollback: "+sqle.getMessage(),sqle,)@ } } } CATCH(SQLException) {}
results[https://github.com/mensonge/mensonge/blob/c691059c51e13b26bb83ef5cac0f172ac177a8bc/src/mensonge/core/BaseDeDonnees/BaseDeDonnees.java][ajouterCategorie][2] = -> TRY {  -> IF { -> return @connexion==null } -> IF { -> throw new DBException("Nom de catégorie déjà utilisé.",3,)@!(connexion==null) && this.categorieExiste(nom,) } -> TRY { -> ps=connexion.prepareStatement("INSERT INTO categorie (nomcat) VALUES (?)",)@!(connexion==null) && !(this.categorieExiste(nom,)) -> ps.setString(1,nom,)@!(connexion==null) && !(this.categorieExiste(nom,)) -> ps.close()@!(connexion==null) && !(this.categorieExiste(nom,)) } CATCH(Exception) { -> throw new DBException("Erreur lors de l'ajout de la categorie : "+e.getMessage(),3,)@!(connexion==null) && !(this.categorieExiste(nom,)) } } CATCH(DBException) {}
results[https://github.com/thmarx/AdServing/blob/447ff953c181789e49f4b20ca1451ee5371dcc3e/modules/utilities/embedded/src/main/java/net/mad/ads/base/utils/track/impl/local/h2/H2TrackingService.java][clear][8] = -> TRY {  -> TRY { -> statement=connection.prepareStatement(query,)@ -> IF { -> statement.setString(1,criterion.value,)@ } -> statement.execute()@ } CATCH(Exception) { -> throw new ServiceException(e.getMessage(),)@ } FINALLY { -> closeBoth(connection,statement,)@ } } CATCH(ServiceException) {}
results[https://github.com/x03570227/zztask/blob/6efeb7b6b77c6f459858b7fa28d2dbdc82f29d1b/zz91-mission-jx/src/main/java/com/zz91/mission/ep/TradeBuyDataUpdateTask.java][handleInsertUpdate][2] = -> TRY {  -> TRY { -> stat.setString(1,(map.get("details",)==null)?null:map.get("details",).toString(),)@ -> stat.setInt(2,Integer.parseInt(map.get("id",).toString(),),)@ -> stat.execute()@ } CATCH(Exception) { -> e.printStackTrace()@ } } CATCH(SQLException) {}
results[https://github.com/NCIP/cagrid2/blob/15fa6c80bd73ee0a53f82fab61076d6c4cf735cd/cagrid-dorian/cagrid-dorian-service/src/main/java/org/cagrid/dorian/federation/impl/TrustedIdPManager.java][determineTrustedIdPExistsByDN][6] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+TRUST_MANAGER_TABLE+" where "+IDP_SUBJECT_FIELD+"= ?",)@ -> s.setString(1,subject,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> fault=FaultHelper.createFaultException(DorianInternalException.class,"Unexpected Database Error",)@ -> FaultHelper.addMessage(fault,e.getMessage(),)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalException) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-dorian/cagrid-dorian-service/ref-src/org/cagrid/gaards/dorian/federation/UserCertificateManager.java][getCompromisedCertificates][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("select "+SERIAL+" from "+TABLE+" WHERE "+STATUS+"= ?",)@ -> s.setString(1,UserCertificateStatus.Compromised.getValue(),)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> fault=new DorianInternalFault()@ -> fault.setFaultString("Unexpected Database Error",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/NCIP/cagrid2/blob/20d61f015b88897b216c1a5151cca9696216568a/cagrid-gts/cagrid-gts-service/src/main/java/org/cagrid/gts/service/impl/TrustLevelManager.java][getTrustLevels][1] = -> TRY {  -> TRY { -> s=c.prepareStatement("select * from "+TrustLevelTable.TABLE_NAME+" WHERE "+TrustLevelTable.SOURCE_GTS+"= ?",)@ -> s.setString(1,gtsSourceURI,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in getting trust levels, the following statement generated the error: \n"+sql.toString()+"\n",e,)@ -> fault=FaultHelper.createFaultException(GTSInternalException.class,"Unexpected error occurred in getting trust levels.",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalException) {}
results[https://github.com/okjsp/okjsp-html5/blob/21ed692fb580c27ff2d09a479dadf1e70a0ce4ea/src/kr/pe/okjsp/DeleteServlet.java][doPost][1] = -> TRY {  -> confirmPassword=req.getParameter("password",)@ -> TRY { -> pstmt=conn.prepareStatement(QUERY_PASSWORD,)@ -> pstmt.setInt(1,seq,)@ -> pstmt.setString(2,confirmPassword,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> req.setAttribute("javax.servlet.jsp.jspException",e,)@ } FINALLY { -> dbCon.close(conn,pstmt,rs,)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/Silverpeas/Silverpeas-Core/blob/f00ddcf8d30a673f7ad615904e5c704e0c424383/lib-core/src/main/java/com/stratelia/silverpeas/domains/sqldriver/SQLUserTable.java][updateUserPassword][2] = -> TRY {  -> IF { -> TRY { -> statement=c.prepareStatement(theQuery,)@!(drvSettings.isUserPasswordAvailable()) -> statement.setString(1,value,)@!(drvSettings.isUserPasswordAvailable()) -> statement.setInt(2,userId,)@!(drvSettings.isUserPasswordAvailable()) -> statement.executeUpdate()@!(drvSettings.isUserPasswordAvailable()) } CATCH(Exception) { -> throw new AdminException("SQLUserTable.updateUserPassword",SilverpeasException.ERROR,"root.EX_SQL_QUERY_FAILED","Query = "+theQuery,e,)@drvSettings.isUserPasswordAvailable() } FINALLY { -> DBUtil.close(statement,)@!(drvSettings.isUserPasswordAvailable()) } } } CATCH(AdminException) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-dorian/cagrid-dorian-service/ref-src/org/cagrid/gaards/dorian/federation/UserManager.java][determineIfUserExists][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+USERS_TABLE+" WHERE "+IDP_FIELD+"= ? AND "+UID_FIELD+"= ?",)@ -> s.setLong(1,idpId,)@ -> s.setString(2,uid,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> fault=new DorianInternalFault()@ -> fault.setFaultString("Unexpected Database Error",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-dorian/cagrid-dorian-service/ref-src/org/cagrid/gaards/dorian/federation/UserManager.java][removeUser][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("delete from "+USERS_TABLE+" WHERE "+IDP_FIELD+"= ? AND "+UID_FIELD+"= ?",)@ -> s.setLong(1,idpId,)@ -> s.setString(2,uid,)@ -> s.execute()@ -> s.close()@ } CATCH(Exception) { -> fault=new DorianInternalFault()@ -> fault.setFaultString("Unexpected Database Error - Could not remove user!!!",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/dorian/src/org/cagrid/gaards/dorian/service/MetadataManager.java][remove][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("DELETE FROM "+table+" WHERE NAME= ?",)@ -> s.setString(1,name,)@ -> s.execute()@ } CATCH(Exception) { -> logError(e.getMessage(),e,)@ -> fault=new DorianInternalFault()@ -> fault.setFaultString("Unexpected Database Error, could remove metadata!!!",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/NCIP/cadsr-cdecurate/blob/7d5cfe9015f111b6cee5c9ae08998c050dfc2a0a/src/gov/nih/nci/cadsr/persist/concept/Component_Concepts_Ext_Mgr.java][getConceptsByCondrIdseq][1] = -> TRY {  -> TRY { -> statement=conn.prepareStatement(sql,)@ -> statement.setString(1,condrIdseq,)@ -> rs=statement.executeQuery()@ } CATCH(Exception) { -> logger.error("Error in getConceptsByCondrIdseq() in Component_Concepts_Ext_Mgr"+e,)@ -> throw new DBException(errorList,)@ } FINALLY { -> rs=SQLHelper.closeResultSet(rs,)@ -> statement=SQLHelper.closePreparedStatement(statement,)@ } } CATCH(DBException) {}
results[https://github.com/okjsp/okjsp-html5/blob/80676d3cde42a6f36c4914b84bf4dd47d4037f99/src/kr/pe/okjsp/ArticleDao.java][updateOKBOARD_FILE][2] = -> TRY {  -> TRY { -> pstmt=conn.prepareStatement(QUERY_UPDATE_MASKNAME,)@ -> LOOP { -> pstmt.setInt(1,seq,)@ -> pstmt.setString(2,masknamePrefix+i,)@i<=fileCount -> pstmt.executeUpdate()@ } } CATCH(Exception) { -> e.printStackTrace()@ } FINALLY { -> dbCon.close(null,pstmt,)@ } } CATCH(SQLException) {}
results[https://github.com/SITools2/core-v2/blob/ef8b7fec2dd27cca55fbb49bdd92262e574644bd/workspace/fr.cnes.sitools.core/src/fr/cnes/sitools/security/JDBCUsersAndGroupsStore.java][getGroupById][1] = -> TRY {  -> TRY { -> st=cx.prepareStatement(jdbcStoreResource.SELECT_GROUP_BY_ID,)@ -> st.setString(1,name,)@ -> rs=st.executeQuery()@ -> st.close()@ } CATCH(Exception) { -> throw new SitoolsException("getGroupById "+e.getMessage(),e,)@ } FINALLY { -> closeConnection(cx,)@ -> closeResultSet(rs,)@ } } CATCH(SitoolsException) {}
results[https://github.com/Silverpeas/Silverpeas-Core/blob/f00ddcf8d30a673f7ad615904e5c704e0c424383/ejb-core/tagcloud/src/main/java/com/silverpeas/tagcloud/TagCloudInstanciator.java][delete][1] = -> TRY {  -> SilverTrace.info("tagCloud","TagCloudInstanciator.delete()","root.MSG_GEN_PARAM_VALUE","componentId = "+componentId,)@ -> TRY { -> prepStmt=con.prepareStatement(query,)@ -> prepStmt.setString(1,componentId,)@ -> prepStmt.executeUpdate()@ } CATCH(Exception) { -> throw new InstanciationException("TagCloudInstanciator.delete()",InstanciationException.ERROR,"root.EX_RECORD_DELETION_FAILED",e,)@ } FINALLY { -> DBUtil.close(prepStmt,)@ } } CATCH(InstanciationException) {}
results[https://github.com/okjsp/okjsp-html5/blob/4bc88880a6359f875ceb28160f47185ea57a22ef/src/kr/pe/okjsp/member/MemberHandler.java][isMailing][1] = -> TRY {  -> IF { -> return true@email==null } -> TRY { -> pstmt=pconn.prepareStatement(QUERY_MAILING_STATUS,)@!(email==null) -> pstmt.setString(1,email,)@!(email==null) -> rs=pstmt.executeQuery()@!(email==null) -> pstmt.close()@!(email==null) } CATCH(Exception) { -> System.out.println("Member Handler isEmailExist err:"+e,)@!(email==null) } FINALLY { -> dbCon.close(pconn,pstmt,rs,)@!(email==null) } } CATCH(SQLException) {}
results[https://github.com/ECF/Newsreader/blob/ac761a35637c84e5b9c2ff2e3c1a0ccc599b7a87/bundles/org.eclipse.ecf.protocol.nntp.store.derby/src/org/eclipse/ecf/protocol/nntp/store/derby/internal/ArticleDAO.java][internalGetArticleByString][1] = -> TRY {  -> TRY { -> s.setString(1,URL,)@ -> s.execute()@ -> r=s.getResultSet()@ -> IF { -> throw new StoreException("Article with uri/messageID "+URL+" not in the database",)@r==null } -> IF { -> return article@r.next() && !(r==null) } } CATCH(Exception) { -> throw new StoreException(e.getMessage(),e,)@ } } CATCH(StoreException) {}
results[https://github.com/svn2github/sakai-kernel/blob/c36bf7abebc665ce98efb109df6d58980fb3d06c/branches/KNL-1158/kernel-impl/src/main/java/org/sakaiproject/content/impl/serialize/impl/conversion/Type1BlobCollectionConversionHandler.java][convertSource][73] = -> TRY {  -> CATCH(Exception) { -> log.warn("Failed to parse "+id+"["+xml+"]",e1,)@ } -> TRY { -> IF { -> System.out.println("convertSource("+id+") result is NULL",)@result==null } ELSE { -> updateRecord.setBinaryStream(1,stream,result.length,)@result==null -> updateRecord.setString(2,id,)@result==null -> return true@!(result==null) } } CATCH(Exception) { -> log.warn("Failed to process record "+id,e,)@ } } CATCH(SQLException) {}
results[https://github.com/lemmy/Openfire4OSGi/blob/f25fc03aaf5d96ce3f7e90a21fb8511ef6adca94/src/plugins/fastpath/src/java/org/jivesoftware/xmpp/workgroup/WorkgroupStats.java][getChatTranscripts][2] = -> TRY { -> transcripts.addAttribute("userID",uniqueUserID,)@ -> TRY { -> pstmt=con.prepareStatement(GET_SESSIONS_WITH_TRANSCRIPTS,)@ -> pstmt.setLong(1,workgroup.getID(),)@ -> pstmt.setString(2,uniqueUserID,)@ -> rs=pstmt.executeQuery()@ } CATCH(Exception) { -> Log.error("Error retrieving chat transcript(s)",ex,)@ } FINALLY { -> DbConnectionManager.closeConnection(rs,pstmt,con,)@ -> workgroup.send(replyPacket,)@ } -> Log.error(ex.getMessage(),ex,)@ }
results[https://github.com/NCIP/cagrid2/blob/c3222a438d584345c8333884c76e190f62d3c372/cagrid-dorian/cagrid-dorian-service/src/main/java/org/cagrid/dorian/service/federation/UserManager.java][removeUser][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("delete from "+USERS_TABLE+" WHERE "+IDP_FIELD+"= ? AND "+UID_FIELD+"= ?",)@ -> s.setLong(1,idpId,)@ -> s.setString(2,uid,)@ -> s.execute()@ -> s.close()@ } CATCH(Exception) { -> fault=FaultHelper.createFaultException(DorianInternalException.class,"Unexpected Database Error - Could not remove user!!!",)@ -> FaultHelper.addMessage(fault,e.getMessage(),)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalException) {}
results[https://github.com/mensonge/mensonge/blob/1f34e313fc38384a0ab6eb0f5e5c805ae45e59cb/src/core/BaseDeDonnees/BaseDeDonnees.java][categorieExiste][6] = -> TRY {  -> IF { -> return false@connexion==null } -> TRY { -> ps=connexion.prepareStatement("SELECT 1 FROM categorie WHERE nomcat=?",)@!(connexion==null) -> ps.setString(1,nomCat,)@!(connexion==null) -> rs=ps.executeQuery()@!(connexion==null) -> IF { -> ps.close()@!(connexion==null) && !(rs.next()) -> return true@!(connexion==null) && rs.next() } -> ps.close()@!(connexion==null) && !(rs.next()) } CATCH(Exception) { -> throw new DBException("Probleme lors de la verification de l'existance de la categorie: "+e.getMessage(),1,)@!(connexion==null) } } CATCH(DBException) {}
results[https://github.com/apache/openejb/blob/b9fc7cca8223847cf0f6bda4dd73e63a873bd5cf/openejb3/openejb-itests/src/main/java/org/apache/openejb/test/stateful/BeanTxStatefulBean.java][retreiveAccount][10] = -> TRY {  -> TRY { -> stmt=con.prepareStatement("select * from Account where SSN = ?",)@ -> stmt.setString(1,ssn,)@ -> rs=stmt.executeQuery()@ -> IF { -> return null@!(rs.next()) } -> stmt.close()@!(!(rs.next())) } CATCH(Exception) { -> e.printStackTrace()@ -> throw new RemoteException("[Bean] "+e.getClass().getName()+" : "+e.getMessage(),)@ } } CATCH(RemoteException) {}
results[https://github.com/NCIP/lexevs/blob/a51e3edd1d66bd0b42f2611c7737630bfb6bb8d6/lgValueDomain/src/org/lexgrid/valuesets/persistence/VSDServices.java][findByPrimaryKey][1] = -> TRY {  -> TRY { -> vdURI=(URI) key@ -> selectFromValueDomain=checkOutPreparedStatement(" SELECT * "+" FROM "+VSDConstants.TBL_VALUE_DOMAIN+" WHERE "+SQLTableConstants.TBLCOL_VALUEDOMAINURI+" = ?",)@ -> selectFromValueDomain.setString(1,vdURI.toString(),)@ -> results=selectFromValueDomain.executeQuery()@ } ELSE { -> throw new FindException("Could not find value domain for uri : "+vdURI,)@!(results.next()) } CATCH(Exception) { -> throw new FindException("Problem",e,)@ } FINALLY { -> checkInPreparedStatement(selectFromValueDomain,)@ } } CATCH(FindException) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-dorian/cagrid-dorian-service/ref-src/org/cagrid/gaards/dorian/ca/CredentialsManager.java][deleteCredentials][3] = -> TRY {  -> TRY { -> s=c.prepareStatement("delete from "+CREDENTIALS_TABLE+" where ALIAS= ? ",)@ -> s.setString(1,alias,)@ -> s.execute()@ -> s.close()@ } CATCH(Exception) { -> logError(e.getMessage(),e,)@ -> fault=new DorianInternalFault()@ -> fault.setFaultString("Unexpected Database Error, Error removing the credentials for the user "+alias+"!!!",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/danilogr/RepSys/blob/4336c62f0574fda8016af1f86a44d6da695d072e/src/dao/impl/jdbc/ContaValorVariavelJDBCDAO.java][update][1] = -> TRY {  -> TRY { -> cvf=(ContaValorVariavelVO) vo@ -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setTimestamp(1,new Timestamp(cvf.getDataVencimento().getTime().getTime(),),)@ -> stmt.setString(2,cvf.getNome(),)@ -> stmt.executeUpdate()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/mensonge/mensonge/blob/c691059c51e13b26bb83ef5cac0f172ac177a8bc/src/mensonge/core/BaseDeDonnees/BaseDeDonnees.java][modifierSujet][6] = -> TRY {  -> IF { -> return @connexion==null } -> IF { -> throw new DBException("Nom de sujet déjà utilisé.",3,)@!(connexion==null) && this.sujetExiste(nom,) } -> TRY { -> ps=connexion.prepareStatement("UPDATE sujet SET nomSuj=? WHERE idSuj=?",)@!(this.sujetExiste(nom,)) && !(connexion==null) -> ps.setString(1,nom,)@!(this.sujetExiste(nom,)) && !(connexion==null) -> ps.setInt(2,id,)@!(this.sujetExiste(nom,)) && !(connexion==null) -> ps.close()@!(this.sujetExiste(nom,)) && !(connexion==null) } CATCH(Exception) { -> throw new DBException("Erreur lors de la modification du sujet: "+e.getMessage(),3,)@!(this.sujetExiste(nom,)) && !(connexion==null) } } CATCH(DBException) {}
results[https://github.com/NCIP/cagrid2/blob/c3222a438d584345c8333884c76e190f62d3c372/cagrid-dorian/cagrid-dorian-service/src/main/java/org/cagrid/dorian/service/federation/UserManager.java][determineIfUserExists][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+USERS_TABLE+" WHERE "+IDP_FIELD+"= ? AND "+UID_FIELD+"= ?",)@ -> s.setLong(1,idpId,)@ -> s.setString(2,uid,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> fault=FaultHelper.createFaultException(DorianInternalException.class,"Unexpected Database Error",)@ -> FaultHelper.addMessage(fault,e.getMessage(),)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalException) {}
results[https://github.com/Flowdalic/openfire/blob/84d48c67685fffe95967ac0dd53e2beb9f6799cb/src/plugins/fastpath/src/java/org/jivesoftware/openfire/fastpath/settings/chat/ChatSettingsManager.java][workgroupDeleted][3] = -> workgroupNode=workgroup.getJID().getNode()@ -> cachedSettings.remove(workgroupNode,)@ -> TRY { -> TRY { -> pstmt=con.prepareStatement(DELETE_CHAT_SETTINGS,)@ -> pstmt.setString(1,workgroupNode,)@ -> pstmt.executeUpdate()@ } CATCH(Exception) { -> Log.error(ex.getMessage(),ex,)@ } FINALLY { -> DbConnectionManager.closeConnection(pstmt,con,)@ } -> Log.error(ex.getMessage(),ex,)@ }
results[https://github.com/ekirkilevics/TestSSQL/blob/9be4560096966948d84cdf8d636ad28aa401250e/sql12/plugins/db2/src/net/sourceforge/squirrel_sql/plugins/db2/types/DB2XmlTypeDataTypeComponent.java][setPreparedStatementValue][2] = -> TRY {  -> TRY { -> IF { -> pstmt.setNull(position,_colDef.getSqlType(),_colDef.getSqlTypeName(),)@ } ELSE { -> pstmt.setString(position,value.toString(),)@!(value==null) } } CATCH(Exception) { -> s_log.error("setPreparedStatementValue: Unexpected exception - "+e.getMessage(),e,)@ } } CATCH(SQLException) {}
results[https://github.com/danilogr/RepSys/blob/4336c62f0574fda8016af1f86a44d6da695d072e/src/dao/impl/jdbc/ContaValorVariavelJDBCDAO.java][insert][1] = -> TRY {  -> TRY { -> cvf=(ContaValorVariavelVO) vo@ -> stmt=this.getConnection().prepareStatement(sql,)@ -> stmt.setString(1,cvf.getNome(),)@ -> stmt.setTimestamp(2,new Timestamp(cvf.getDataVencimento().getTime().getTime(),),)@ -> stmt.executeUpdate()@ } CATCH(Exception) { -> throw new DAOException(e,)@ } } CATCH(DAOException) {}
results[https://github.com/f1ori/yacy/blob/035ebfbf3bd271e27527006da7ff4f5c6f6fc2e6/source/net/yacy/kelondro/table/SQLTable.java][replace][1] = -> TRY {  -> TRY { -> oldEntry=remove(row.getPrimaryKeyBytes(),)@ -> sqlStatement=this.theDBConnection.prepareStatement(sqlQuery,)@ -> sqlStatement.setString(1,row.getColString(0,),)@ -> sqlStatement.setBytes(2,row.bytes(),)@ -> sqlStatement.execute()@ -> sqlStatement.close()@ } CATCH(Exception) { -> throw new IOException(e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/jdmr/mateo/blob/04651fd779fb3990afd5fd69f7e18447f584e2d1/src/main/java/mx/edu/um/mateo/inscripciones/model/ccobro/InstitucionHObrero.java][getPorcentajeInstituciones][1] = -> TRY {  -> TRY { -> pstmt=conn.prepareStatement(str.toString(),)@ -> pstmt.setString(1,matricula,)@ -> rset=pstmt.executeQuery()@ -> IF { -> inst.setMatricula(matricula,)@ } -> IF { -> throw new SQLException("El alumno "+matricula+" aunque es hijo de obrero, no tiene ningun porcentaje de ayuda registrado",)@rset.wasNull() } } CATCH(Exception) { -> throw new SQLException(e,)@ } } CATCH(SQLException) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-dorian/cagrid-dorian-service/ref-src/org/cagrid/gaards/dorian/idp/PasswordSecurityManager.java][entryExists][9] = -> TRY {  -> TRY { -> s=c.prepareStatement("select count(*) from "+TABLE+" where UID= ?",)@ -> s.setString(1,uid,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> logError(e.getMessage(),e,)@ -> fault=new DorianInternalFault()@ -> fault.setFaultString("An unexpected database error occurred.",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/okjsp/okjsp-html5/blob/4bc88880a6359f875ceb28160f47185ea57a22ef/src/kr/pe/okjsp/member/MemberHandler.java][isEmailExist][2] = -> TRY {  -> IF { -> return true@email==null } -> TRY { -> pstmt=pconn.prepareStatement(QUERY_EMAIL_EXISTS,)@!(email==null) -> pstmt.setString(1,email,)@!(email==null) -> rs=pstmt.executeQuery()@!(email==null) -> pstmt.close()@!(email==null) } CATCH(Exception) { -> System.out.println("Member Handler isEmailExist err:"+e.getMessage(),)@!(email==null) } FINALLY { -> dbCon.close(pconn,pstmt,rs,)@!(email==null) } } CATCH(SQLException) {}
results[https://github.com/vyloy/lnvc/blob/38625c0c7f2c0e5c562bcd3cea11043a281b6a54/lvmc/openfire_src/src/plugins/monitoring/src/java/org/jivesoftware/openfire/reporting/stats/RrdSqlBackend.java][sync][2] = -> TRY {  -> id=super.getPath()@ -> TRY { -> pstmt=con.prepareStatement(JDBC_UPDATE,)@ -> pstmt.setBytes(1,buffer,)@ -> pstmt.setLong(2,System.currentTimeMillis(),)@ -> pstmt.setString(3,id,)@ -> pstmt.executeUpdate()@ } CATCH(Exception) { -> Log.error("Error while updating information in database: "+e,)@ } FINALLY { -> DbConnectionManager.closeConnection(rs,pstmt,con,)@ } } CATCH(IOException) {}
results[https://github.com/idega/com.idega.core/blob/646d22604f1ae47f1f6c681e890437e7905c44c3/src/java/com/idega/data/OracleDatastoreInterface.java][setStringForPreparedStatement][1] = -> TRY {  -> TRY { -> maxlength=entity.getMaxLength(columnName,)@ -> IF { -> statement.setString(index,entity.getStringColumnValue(columnName,),)@ } ELSE { -> stringValue=entity.getStringColumnValue(columnName,)@ -> statement.setCharacterStream(index,reader,stringValue.length(),)@ } } CATCH(Exception) { -> e.printStackTrace()@ } } CATCH(SQLException) {}
results[https://github.com/NCIP/cagrid2/blob/c3222a438d584345c8333884c76e190f62d3c372/cagrid-dorian/cagrid-dorian-service/src/main/java/org/cagrid/dorian/service/federation/UserCertificateManager.java][getCompromisedCertificates][2] = -> TRY {  -> TRY { -> s=c.prepareStatement("select "+SERIAL+" from "+TABLE+" WHERE "+STATUS+"= ?",)@ -> s.setString(1,UserCertificateStatus.COMPROMISED.value(),)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> fault=FaultHelper.createFaultException(DorianInternalException.class,"Unexpected Database Error",)@ -> FaultHelper.addMessage(fault,e.getMessage(),)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalException) {}
results[https://github.com/alibaba/mdrill/blob/c5212d75bf55ecc53fdb57f7b7bffce7baeeb215/trunk/adhoc-web/src/main/java/com/alimama/web/TableJoin.java][updateKb][1] = -> TRY {  -> m_fps=conn.prepareStatement(strSql,)@ -> TRY { -> m_fps.setInt(++index,(int) sz/1024,)@ -> m_fps.setString(++index,uuid,)@ -> m_fps.executeUpdate()@ -> fullstrSql=m_fps.toString()@ } CATCH(Exception) { -> TableJoin.LOG.error("updatePercent"+m_fps.toString(),e,)@ } FINALLY { -> m_fps.close()@ -> m_fpsql.close()@ } } CATCH(SQLException) {}
results[https://github.com/foxerfly/yfassist/blob/d8cf61b1ee641b3d80e8dfa4b515c90a2c24890b/QueryOrder/src/com/edwin/sql/QueryErp.java][updateCRM][1] = -> TRY {  -> TRY { -> pstmt=conn.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY,)@ -> LOOP { -> LOOP { -> pstmt.setString(j,s,)@ } -> pstmt.addBatch()@ } -> pstmt.executeBatch()@ } CATCH(Exception) { -> TRY { -> conn.rollback()@ } } } CATCH(SQLException) {}
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-dorian/cagrid-dorian-service/ref-src/org/cagrid/gaards/dorian/idp/PasswordSecurityManager.java][deleteEntry][1] = -> TRY {  -> TRY { -> ps=c.prepareStatement("DELETE FROM "+TABLE+" WHERE "+UID+" = ?",)@ -> ps.setString(1,uid,)@ -> ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) { -> logError(e.getMessage(),e,)@ -> fault=new DorianInternalFault()@ -> fault.setFaultString("An unexpected database error occurred.",)@ -> helper=new FaultHelper(fault,)@ -> helper.addFaultCause(e,)@ -> fault=(DorianInternalFault) helper.getFault()@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(DorianInternalFault) {}
results[https://github.com/f1ori/yacy/blob/194da25a2f905a3636212a1d2731d00aaf84eefc/source/de/anomic/kelondro/table/SQLTable.java][replace][1] = -> TRY {  -> TRY { -> oldEntry=remove(row.getColBytes(0,),)@ -> sqlStatement=this.theDBConnection.prepareStatement(sqlQuery,)@ -> sqlStatement.setString(1,row.getColString(0,null,),)@ -> sqlStatement.setBytes(2,row.bytes(),)@ -> sqlStatement.execute()@ -> sqlStatement.close()@ } CATCH(Exception) { -> throw new IOException(e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/NCIP/cagrid2/blob/20d61f015b88897b216c1a5151cca9696216568a/cagrid-gts/cagrid-gts-service/src/main/java/org/cagrid/gts/service/impl/PermissionManager.java][isUserTrustedAuthorityAdmin][1] = -> TRY {  -> TRY { -> s=c.prepareStatement(sql.toString(),)@ -> s.setString(1,gridIdentity,)@ -> rs=s.executeQuery()@ -> s.close()@ } CATCH(Exception) { -> this.log.error("Unexpected database error incurred in determining whether or not the user "+gridIdentity+"  is a trust service administrator, the following statement generated the error: \n"+sql.toString()+"\n",e,)@ -> fault=FaultHelper.createFaultException(GTSInternalException.class,"Unexpected error occurred in determining whether or not the user "+gridIdentity+"  is a trust service administrator.",)@ } FINALLY { -> db.releaseConnection(c,)@ } } CATCH(GTSInternalException) {}
results[https://github.com/idega/com.idega.core/blob/aa28fa49a1b96978008a3d49c5c2dc97949d5658/src/java/com/idega/data/InformixDatastoreInterface.java][setStringForPreparedStatement][1] = -> TRY {  -> TRY { -> maxlength=entity.getMaxLength(columnName,)@ -> IF { -> statement.setString(index,entity.getStringColumnValue(columnName,),)@ } ELSE { -> stringValue=entity.getStringColumnValue(columnName,)@ -> statement.setAsciiStream(index,stream,stringValue.length(),)@ } } CATCH(Exception) { -> e.printStackTrace()@ } } CATCH(SQLException) {}
