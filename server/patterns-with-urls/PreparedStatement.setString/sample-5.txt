results[https://github.com/apache/aries/blob/628add49463cd394c77ffa1b7c9e4b04d4f8f333/daytrader-sample/modules/daytrader-persist-jdbc/src/main/java/org/apache/geronimo/samples/daytrader/persist/jdbc/TradeJDBCDirect.java][getAccountProfileData][32] = -> TRY {  -> stmt=getStatement(conn,getAccountProfileSQL,)@ -> stmt.setString(1,userID,)@ -> rs=stmt.executeQuery()@ -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/apache/derby/blob/431cbeb5320ced59a4b24b4bfbaffd7b56d396d9/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RestrictedVTITest.java][routineExists][9] = -> TRY {  -> ps=chattyPrepare(conn,"select count (*) from sys.sysaliases where alias = ?",)@ -> ps.setString(1,functionName,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/sainthxd/cassandra-jdbc/blob/a23be0955f400e3cbc7e9b585c7eeb1d5118534b/src/test/java/org/apache/cassandra/cql/jdbc/PooledTests.java][preparedStatement][17] = -> TRY {  -> statement=connection.prepareStatement("SELECT someInt FROM pooled_test WHERE somekey = ?",)@ -> statement.setString(1,"world",)@ -> resultSet=statement.executeQuery()@ -> statement.close()@ } CATCH(Exception) {}
results[https://github.com/gh0stbust3rs/OnlineShop/blob/2a885ac9fff072f96c84561de084525d56e386cf/src/java/pkgOnlineShop/Database.java][deleteCategory][2] = -> TRY {  -> pstm=con.prepareStatement(sql,)@ -> pstm.setString(1,name,)@ -> pstm.execute()@ -> pstm.close()@ } CATCH(Exception) {}
results[https://github.com/apache/derby/blob/911d88c46edfdcd38c2f52d0f6a7ed514b1d704d/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XMLTypeAndOpsTest.java][testXMLParse][1] = -> TRY {  -> pSt=prepareStatement("insert into paramInsert values XMLPARSE(document "+"cast (? as CLOB) preserve whitespace)",)@ -> pSt.setString(1,"<ay>caramba</ay>",)@ -> assertUpdateCount(pSt,1,)@ -> pSt.close()@ } CATCH(Exception) {}
results[https://github.com/jkingdon/mayfly/blob/5a6a03852cf25ebdd4e72335a1596eed0b1d6ee4/test/net/sourceforge/mayfly/acceptance/StatementTest.java][testSetToNull][1] = -> TRY {  -> prepared=connection.prepareStatement("insert into foo (a) values (?)",)@ -> prepared.setString(1,null,)@ -> prepared.executeUpdate()@ -> prepared.close()@ } CATCH(Exception) {}
results[https://github.com/apache/derby/blob/e33b8d871ece038784769f3e95d16bc1b259eb09/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java][getConglomerateID][1] = -> TRY {  -> ps=conn.prepareStatement("select c.conglomeratenumber\n"+"from sys.sysconglomerates c, sys.systables t\n"+"where t.tablename = ? and t.tableid = c.tableid",)@ -> ps.setString(1,tableName,)@ -> result=getScalarLong(ps,)@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/jkingdon/mayfly/blob/5a6a03852cf25ebdd4e72335a1596eed0b1d6ee4/test/net/sourceforge/mayfly/acceptance/StatementTest.java][testStringJdbcParameter][2] = -> TRY {  -> prepared=connection.prepareStatement("insert into foo (s) values (?)",)@ -> prepared.setString(1,"can't",)@ -> assertEquals(1,prepared.executeUpdate(),)@ -> prepared.close()@ } CATCH(Exception) {}
results[https://github.com/NCIP/lexevs/blob/9f630d706a6fd62ab01ab2bfdb9f8bbae2a7743a/lgConverter/src/edu/mayo/informatics/lexgrid/convert/directConversions/SQLLiteToLdap.java][loadCodingSchemeSupportedAttributes][2] = -> TRY {  -> log.debug("loadCodingSchemeSupportedAttributes called - name:"+name+" codingSchemeName:"+codingSchemeName,)@ -> getCodingSchemeSupportedAttributesModifications=sqlConnection_.prepareStatement("SELECT * FROM codingSchemeSupportedAttributes"+" WHERE codingSchemeName = ? ORDER BY supportedAttributeTag",)@ -> getCodingSchemeSupportedAttributesModifications.setString(1,codingSchemeName,)@ -> results=getCodingSchemeSupportedAttributesModifications.executeQuery()@ -> getCodingSchemeSupportedAttributesModifications.close()@ } CATCH(Exception) {}
results[https://github.com/lusabo/sharecar/blob/bb21b66a43cd15967ee23608dfc398020d938dab/src/main/java/persistence/UserDAO.java][loadByUsername][2] = -> TRY {  -> pstmt=connection.prepareStatement(sql.toString(),)@ -> pstmt.setString(1,username,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) {}
results[https://github.com/Hidendra/LWC/blob/2b6653b024968174a8d1149a35a0ed9f71ae39fd/src/com/griefcraft/sql/MemDB.java][unregisterPlayer][8] = -> TRY { -> statement=connection.prepareStatement("DELETE FROM `sessions` WHERE `player` = ?",)@ -> statement.setString(1,player,)@ -> statement.executeUpdate()@ -> statement.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/codefollower/H2-Research/blob/2efda0eb90f9f0163dabacddca5456201e54407f/test/my/test/JDBCTest.java][testJdbcConnection][5] = -> TRY {  -> ps=conn.prepareStatement("insert into t values(?,?)",)@ -> ps.setInt(2,20,)@ -> ps.setString(1,"aaa",)@ -> ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/Hidendra/LWC/blob/18f2fe44bd85e9c0b501e57e4df4f76c12bdd050/src/com/griefcraft/sql/PhysicalDatabase.java][getChestCount][7] = -> TRY { -> statement=connection.prepareStatement("SELECT `id` FROM `chests` WHERE `owner` = ?",)@ -> statement.setString(1,user,)@ -> set=statement.executeQuery()@ -> statement.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ekirkilevics/Spring/blob/2c7d3673a81e9abe839e05e0981612b052d45551/org.springframework.testsuite/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java][testPreparedStatementSetterFails][7] = -> TRY {  -> mockPreparedStatement=(PreparedStatement) ctrlPreparedStatement.getMock()@ -> mockPreparedStatement.setString(1,name,)@ -> mockPreparedStatement.executeUpdate()@ -> mockPreparedStatement.close()@ -> ctrlConnection.setReturnValue(mockPreparedStatement,)@ } CATCH(Exception) {}
results[https://github.com/apache/derby/blob/d9b64a640c331bb964d7a33722dee972c40735e5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SequenceTest.java][goodSequence][1] = -> TRY {  -> ps=chattyPrepare(conn,"select sequencedatatype, startvalue, minimumvalue, maximumvalue, increment, cycleoption\n"+"from sys.syssequences\n"+"where sequencename = ?",)@ -> ps.setString(1,sequenceName.toUpperCase(),)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/adempiere/adempiere/blob/9c55fc4c044c9da0ebf5b5b0cd3fcf160af7f372/base/src/org/compiere/model/MTable.java][getTable_ID][1] = -> TRY { -> pstmt=DB.prepareStatement(SQL,null,)@ -> pstmt.setString(1,tableName,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> s_log.log(Level.SEVERE,SQL,e,)@ }
results[https://github.com/Azrielg13/innovative/blob/e2418dc635f390b847014a29c50a9a897748a544/eclipse/qee/war/WEB-INF/src/com/digitald4/pm/Client.java][refresh][8] = -> TRY {  -> ps=con.prepareStatement(SELECT+" FROM "+TABLE+" "+WHERE,)@ -> ps.setString(1,User.KEY,)@ -> ps.setInt(2,id,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/NCIP/lexevs/blob/9f630d706a6fd62ab01ab2bfdb9f8bbae2a7743a/lgConverter/src/edu/mayo/informatics/lexgrid/convert/directConversions/SQLLiteToLdap.java][loadConceptProperty][2] = -> TRY {  -> log.debug("loadConceptProperty called - ldapName:"+ldapName+" codingSchemeName:"+codingSchemeName,)@ -> getConceptPropertyChanges=sqlConnection_.prepareStatement(gsm_.modifySQL("SELECT * FROM  conceptProperty"+" WHERE codingSchemeName = ? AND (addEntry = {true} OR updateEntry = {true} OR deleteEntry = {true})",),)@ -> getConceptPropertyChanges.setString(1,codingSchemeName,)@ -> results=getConceptPropertyChanges.executeQuery()@ -> getConceptPropertyChanges.close()@ } CATCH(Exception) {}
results[https://github.com/apache/aries/blob/628add49463cd394c77ffa1b7c9e4b04d4f8f333/daytrader-sample/modules/daytrader-persist-jdbc/src/main/java/org/apache/geronimo/samples/daytrader/persist/jdbc/TradeJDBCDirect.java][updateQuoteVolume][6] = -> TRY {  -> stmt=getStatement(conn,updateQuoteVolumeSQL,)@ -> stmt.setDouble(1,quantity,)@ -> stmt.setString(2,quoteData.getSymbol(),)@ -> count=stmt.executeUpdate()@ -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/Hidendra/LWC/blob/2b6653b024968174a8d1149a35a0ed9f71ae39fd/src/com/griefcraft/sql/MemDB.java][registerPlayer][5] = -> TRY { -> statement=connection.prepareStatement("INSERT INTO `sessions` (player, chest) VALUES(?, ?)",)@ -> statement.setString(1,player,)@ -> statement.setInt(2,chestID,)@ -> statement.executeUpdate()@ -> statement.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jdeolive/geotools-old/blob/e19f25acdcb36f055bda27e90ece938ae8c84775/modules/plugin/jdbc/jdbc-postgis/src/test/java/org/geotools/data/postgis/PostgisLobTestSetup.java][createLobTable][23] = -> TRY {  -> ps=con.prepareStatement("INSERT INTO \"testlob\" (\"blob_field\",\"clob_field\",\"raw_field\")  VALUES (?,?,?)",)@ -> ps.setBytes(1, new byte[],)@ -> ps.setString(2,"small clob",)@ -> ps.setBytes(3, new byte[],)@ -> ps.execute()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/yukoff/concourse-connect/blob/2ac3fe97b16f7fee7d23cc4e1fc8230d07ff1a0e/src/main/java/com/concursive/connect/web/webdav/WebdavManager.java][validateUser][1] = -> TRY {  -> username=(String) params.get("username",)@ -> pst=db.prepareStatement("SELECT user_id, webdav_password "+"FROM users "+"WHERE username = ? "+"AND enabled = ? ",)@ -> pst.setString(1,username,)@ -> pst.setBoolean(2,true,)@ -> rs=pst.executeQuery()@ -> pst.close()@ } CATCH(Exception) {}
results[https://github.com/taroyabuki/webbook2/blob/eb978cb611f8fccfdf5023b6de805acea6174a2c/src/09/Model.java][execute][1] = -> TRY { -> stmt=conn.prepareStatement("SELECT * FROM zip WHERE code LIKE ? ORDER BY code",)@ -> stmt.setString(1,q+"%",)@ -> stmt.setMaxRows(20,)@ -> rs=stmt.executeQuery()@ -> stmt.close()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/apache/derby/blob/b61d634909fb6c5a45c11ff43b518e183604bea9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java][setUp][3] = -> TRY {  -> stmt2=prepareStatement("INSERT INTO testBlobX1(a, b, c) "+"VALUES (?, ?, ?)",)@ -> stmt2.setInt(1,1,)@ -> stmt2.setBytes(2,b2,)@ -> stmt2.setString(3,c2,)@ -> stmt2.execute()@ -> stmt2.close()@ } CATCH(Exception) {}
results[https://github.com/mrdon/jforum-cvs/blob/5a53b34b519c9aaba6e9dcea4f325e610659f762/src/net/jforum/drivers/generic/UserModel.java][getUsernameByEmail][14] = -> TRY {  -> p=JForum.getConnection().prepareStatement(SystemGlobals.getSql("UserModel.getUsernameByEmail",),)@ -> p.setString(1,email,)@ -> rs=p.executeQuery()@ -> p.close()@ } CATCH(Exception) {}
results[https://github.com/killme2008/Metamorphosis/blob/91e022ba65d9ecadb509ac4c7141e5677c52de07/metamorphosis-example/src/main/java/com/taobao/metamorphosis/example/XATransactionProducer.java][execute][1] = -> TRY {  -> pstmt=conn.prepareStatement("insert into orders(uid,address) values(?,?)",)@ -> pstmt.setInt(1,uid,)@ -> pstmt.setString(2,null,)@ -> IF { -> return null@pstmt.executeUpdate()<=0 } -> pstmt.close()@!(pstmt.executeUpdate()<=0) } CATCH(Exception) {}
results[https://github.com/lusabo/sharecar/blob/bb21b66a43cd15967ee23608dfc398020d938dab/src/main/java/persistence/RouteDAO.java][find][2] = -> TRY {  -> pstmt=connection.prepareStatement(sql.toString(),)@ -> pstmt.setString(1,user.getName(),)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) {}
results[https://github.com/nigel0913/se/blob/6747f3d874707386a6b76d1a95df8074a35422db/src/business/connectdb/db/RContainer.java][delContainer][1] = -> TRY { -> ps=conn.prepareStatement(sql,)@ -> ps.setString(1,container.getConid(),)@ -> row=ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/nigel0913/se/blob/6747f3d874707386a6b76d1a95df8074a35422db/src/business/connectdb/db/RCargo.java][delCargo][1] = -> TRY { -> ps=conn.prepareStatement(sql,)@ -> ps.setString(1,cargo.getCname(),)@ -> row=ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/auxgroup-sanxing/Sesame/blob/061175727614cfcbd9cd7ce5b0536d981b54aa64/sesame-transport/src/main/java/com/sanxing/sesame/transport/impl/FtpAcceptor.java][insertBatch][1] = -> TRY {  -> sm=conn.prepareStatement(sql,)@ -> sm.setString(1,fileName,)@ -> sm.setInt(2,1,)@ -> sm.setInt(3,3,)@ -> sm.execute()@ -> sm.close()@ } CATCH(Exception) {}
results[https://github.com/LeCheng09/LeChengCMS/blob/971a8e2bee4d5490ce69c29ffb8c41e36ebb31b3/src/com/lecheng/cms/dao/ShouYeDao.java][selectlm04][3] = -> TRY { -> ps=conn.prepareStatement(sql,)@ -> ps.setString(1,str,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) { -> System.out.println(e.getMessage(),)@ }
results[https://github.com/hbcit2010software/hbcitsports/blob/437c5fade56f63f743c3f4221eae8f8a84c98b43/src/cn/edu/hbcit/smms/dao/gameapplydao/SelGameApplyDAO.java][infoDelete][1] = -> TRY { -> pStatement=conn.prepareStatement(sql,)@ -> pStatement.setInt(1,sp2dpid,)@ -> pStatement.setString(2,playernum,)@ -> flag=pStatement.executeUpdate()@ -> pStatement.close()@ } CATCH(Exception) { -> e.getStackTrace()@ }
results[https://github.com/hbcit2010software/hbcitsports/blob/437c5fade56f63f743c3f4221eae8f8a84c98b43/src/cn/edu/hbcit/smms/dao/gamequerydao/GameQueryDAO.java][selectItemNameByType][1] = -> TRY { -> pstmt=conn.prepareStatement(sql,)@ -> pstmt.setInt(1,sportsid,)@ -> pstmt.setString(2,itemtype,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> e.getStackTrace()@ }
results[https://github.com/rverdon/CGAT/blob/e0722808de7b1f178473c190d2a5e9607969cea4/Assignment6/GenerateSQLData.java][createGeneNames][1] = -> TRY {  -> pstmt=conn.prepareStatement(insertQuery,)@ -> LOOP { -> pstmt.setString(1,"gene"+i+1,)@i<count -> pstmt.executeUpdate()@ } -> pstmt.close()@ } CATCH(Exception) {}
results[https://github.com/codefollower/H2-Research/blob/2efda0eb90f9f0163dabacddca5456201e54407f/test/my/test/JDBCTest.java][testBlob][2] = -> TRY {  -> ps=conn.prepareStatement("insert into my_lob(name, b, c) values(?,?,?)",)@ -> ps.setString(1,"abc",)@ -> ps.setBlob(2,b,)@ -> ps.setClob(3,c,)@ -> ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/apache/derby/blob/29966bcd0727eb6f31aea1149931e9ad06512fa4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ResultSetsFromPreparedStatementTest.java][testDeleteCascadeUpdateResultSet][1] = -> TRY {  -> delMgr=prepareStatement("delete from emp where mgrname = ?",)@ -> LOOP { -> delMgr.setString(1,mgrs[i],)@i<mgrs.length -> delMgr.execute()@ } -> delMgr.close()@ } CATCH(Exception) {}
results[https://github.com/nigel0913/se/blob/ae8059670ac3a9e086873b5c553c58792e232310/src/business/connectdb/db/RUser.java][delUser][1] = -> TRY { -> ps=conn.prepareStatement(sql,)@ -> ps.setString(1,user.getEmail(),)@ -> row=ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/thilinapiy/SRDBS/blob/e668575074d7efdd0c389afe9073a143774cc582/src/main/java/org/srdbs/core/DbConnect.java][deleteFile][1] = -> TRY { -> ps=connection.prepareStatement(sql,)@ -> ps.setLong(1,fid,)@ -> ps.setString(2,Fpath,)@ -> ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) { -> logger.error("Error on deleting file details from database : "+e,)@ }
results[https://github.com/geotools/geotools/blob/88d5c5ca53339556e18e00bd4e3566ea78e60c54/modules/plugin/jdbc/jdbc-db2/src/test/java/org/geotools/data/db2/DB2LobTestSetup.java][createLobTable][10] = -> TRY {  -> ps=con.prepareStatement("INSERT INTO "+DB2TestUtil.SCHEMA_QUOTED+".\"testlob\" (\"fid\",\"blob_field\",\"clob_field\",\"raw_field\")  VALUES (?,?,?,?)",)@ -> ps.setInt(1,0,)@ -> ps.setBytes(2, new byte[],)@ -> ps.setString(3,"small clob",)@ -> ps.setBytes(4, new byte[],)@ -> ps.execute()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/LafayetteCollegeLibraries/metadb-dss/blob/c97d0303961d0ffde9ade49ed53d2a37d0d6996f/webapp-src/src/edu/lafayette/metadb/model/commonops/MetaDbHelper.java][userExists][8] = -> IF { -> TRY { -> userExistsQuery=conn.prepareStatement(USER_EXISTS,)@conn!=null -> userExistsQuery.setString(1,userName,)@!(conn!=null) -> userExistsQueryResult=userExistsQuery.executeQuery()@!(conn!=null) -> userExistsQuery.close()@!(conn!=null) } CATCH(Exception) { -> logEvent(e,)@!(conn!=null) -> return false@conn!=null } }
results[https://github.com/NCIP/cadsr-cdecurate/blob/8d3d6ae0d8bacbee1c51db889c1fb865a1db49b4/test/gov/nih/nci/cadsr/cdecurate/test/TestSpreadsheetDownload.java][getType][4] = -> splitType=type.split("\\.",)@ -> TRY { -> ps=getConn().prepareStatement(sqlStmt,)@ -> ps.setString(1,type,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Hidendra/LWC/blob/18f2fe44bd85e9c0b501e57e4df4f76c12bdd050/src/com/griefcraft/sql/PhysicalDatabase.java][unregisterRights][2] = -> TRY { -> statement=connection.prepareStatement("DELETE FROM `rights` WHERE `chest` = ? AND `entity` = ?",)@ -> statement.setInt(1,chestID,)@ -> statement.setString(2,entity.toLowerCase(),)@ -> statement.executeUpdate()@ -> statement.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/apache/aries/blob/3be9855bd0a08b49212330bc5d25f4b3fc2a295d/ariestrader-sample/modules/ariestrader-persist-jdbc/src/main/java/org/apache/aries/samples/daytrader/persist/jdbc/TradeJDBCDirect.java][updateQuotePriceVolume][6] = -> TRY {  -> stmt=getStatement(conn,updateQuotePriceVolumeSQL,)@ -> stmt.setBigDecimal(1,newPrice,)@ -> stmt.setBigDecimal(2,newPrice,)@ -> stmt.setDouble(3,newVolume,)@ -> stmt.setString(4,symbol,)@ -> count=stmt.executeUpdate()@ -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/Azrielg13/innovative/blob/e2418dc635f390b847014a29c50a9a897748a544/eclipse/qee/war/WEB-INF/src/com/digitald4/pm/Client.java][setProp][19] = -> TRY {  -> IF { -> ps=con.prepareStatement("UPDATE "+TABLE+" SET "+col+"=? "+WHERE,)@ -> ps.setString(1,value,)@ -> ps.setInt(2,id,)@ -> ps.executeUpdate()@ -> ps.close()@ } } CATCH(Exception) {}
results[https://github.com/apache/aries/blob/92b2ae7e0bcf3dee8b1ea8644a08a430c3f70d26/ariestrader-sample/modules/ariestrader-persist-jdbc/src/main/java/org/apache/geronimo/samples/daytrader/persist/jdbc/TradeJDBCDirect.java][getQuoteData][8] = -> TRY {  -> stmt=getStatement(conn,getQuoteSQL,)@ -> stmt.setString(1,symbol,)@ -> rs=stmt.executeQuery()@ -> IF { -> Log.error("TradeJDBCDirect:getQuoteData -- could not find quote for symbol="+symbol,)@ } -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/mrdon/jforum-cvs/blob/3593b687d846528dae2284d8860eb2834219f33f/src/net/jforum/drivers/generic/security/GroupSecurityModel.java][deleteRole][8] = -> TRY {  -> p=JForum.getConnection().prepareStatement(SystemGlobals.getSql("PermissionControl.deleteGroupRole",),)@ -> p.setString(1,roleName,)@ -> p.setInt(2,id,)@ -> p.executeUpdate()@ -> p.close()@ } CATCH(Exception) {}
results[https://github.com/adempiere/adempiere/blob/7063ff6ddd9a2a135d2f8d93cfdd4b923975078a/dbPort/src/org/compiere/PackOut/IntPackInHandler.java][get_IDWithMasterAndColumn][1] = -> TRY { -> pstmt=DB.prepareStatement(sqlB.toString(),m_trxName,)@ -> pstmt.setString(1,name,)@ -> pstmt.setInt(2,masterID,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> log.info("get_IDWithMasterAndColumn:"+e,)@ }
results[https://github.com/mrdon/jforum-plugins/blob/5a53b34b519c9aaba6e9dcea4f325e610659f762/src/net/jforum/drivers/generic/UserModel.java][validateActivationKeyHash][4] = -> TRY {  -> p=JForum.getConnection().prepareStatement(SystemGlobals.getSql("UserModel.validateActivationKeyHash",),)@ -> p.setString(1,hash,)@ -> p.setInt(2,userId,)@ -> rs=p.executeQuery()@ -> p.close()@ } CATCH(Exception) {}
results[https://github.com/nickleus-j/StorySenseWeb/blob/4bc252ceb4d34c82b35b4a7dbb2280a457f52fc0/StorySense/src/mysqlDao/TemplateMySQL.java][changeStoryURL][3] = -> TRY { -> ps=con.prepareStatement("update * from template  SET StoryURL = ? where TemplateID = ?",)@ -> ps.setString(1,newURL,)@ -> ps.setInt(2,ID,)@ -> ps.close()@ } CATCH(Exception) { -> Logger.getLogger(TemplateMySQL.class.getName(),).log(Level.SEVERE,null,ex,)@ }
results[https://github.com/LafayetteCollegeLibraries/metadb-dss/blob/c97d0303961d0ffde9ade49ed53d2a37d0d6996f/webapp-src/src/edu/lafayette/metadb/model/syslog/SysLogDAO.java][clearLog][5] = -> IF { -> TRY { -> clearLog=conn.prepareStatement(CLEAR_LOG_BY_TYPE,)@conn!=null -> clearLog.setString(1,eventType,)@!(conn!=null) -> clearLog.executeUpdate()@!(conn!=null) -> clearLog.close()@!(conn!=null) -> return true@conn!=null } CATCH(Exception) { -> MetaDbHelper.logEvent(e,)@!(conn!=null) -> return false@conn!=null } }
results[https://github.com/nickleus-j/StorySenseWeb/blob/6beec7d2d974d292920f483003b1d5466ff6c10d/StorySense/src/mysqlDao/UserMySQL.java][findUserWithName][11] = -> TRY { -> ps=con.prepareStatement("SELECT * FROM account WHERE Name = ?",)@ -> ps.setString(1,name,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) { -> Logger.getLogger(UserMySQL.class.getName(),).log(Level.SEVERE,null,ex,)@ }
results[https://github.com/mixxit/npcx/blob/90ec89ff3922dd2f28a2ab4c4fcd1d70048edc2c/src/net/gamerservices/npcx/myPlayer.java][getNPCXBalance][1] = -> TRY { -> stmtNPC=this.parent.universe.conn.prepareStatement("SELECT coin FROM player WHERE name = ? LIMIT 1;",)@ -> stmtNPC.setString(1,this.player.getName(),)@ -> stmtNPC.executeQuery()@ -> rsNPC=stmtNPC.getResultSet()@ -> stmtNPC.close()@!(rsNPC.next()) } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/apache/cayenne/blob/17ac2f561cabf5788888240e94d4ab1c1a38f000/cayenne/cayenne-java/src/tests/java/org/objectstyle/cayenne/TestCaseDataFactory.java][createArtist][4] = -> TRY {  -> stmt=conn.prepareStatement(insertArtist,)@ -> stmt.setInt(1,1,)@ -> stmt.setString(2,artistName,)@ -> stmt.setDate(3,new java.sql.Date(dateBase-1000*60*60*24*365*30,),)@ -> stmt.executeUpdate()@ -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/apache/jena/blob/4cd29757f652624a1d377671e03d74d3184e479f/jena-sdb/src-dev/dbtest/TestLongText.java][runTextTest][4] = -> TRY {  -> ps=jdbc.prepareStatement($str:String,)@ -> ps.setString(1,testString,)@ -> TRY { -> ps.execute()@ } -> ps.close()@ -> assertEquals("Text different",testString,s,)@ } CATCH(Exception) {}
results[https://github.com/hbcit2010software/hbcitsports/blob/437c5fade56f63f743c3f4221eae8f8a84c98b43/src/cn/edu/hbcit/smms/dao/gamemanagedao/GetMessage.java][getFormatReg][3] = -> TRY { -> pstmt=conn.prepareStatement(sql,)@ -> pstmt.setString(1,finalitemname,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> e.printStackTrace()@ -> log.debug("getFormatReg"+e.getMessage(),)@ }
results[https://github.com/Hidendra/LWC/blob/18f2fe44bd85e9c0b501e57e4df4f76c12bdd050/src/com/griefcraft/sql/PhysicalDatabase.java][getLimit][1] = -> TRY { -> statement=connection.prepareStatement("SELECT `amount` FROM `limits` WHERE `type` = ? AND `entity` = ?",)@ -> statement.setInt(1,type,)@ -> statement.setString(2,entity.toLowerCase(),)@ -> set=statement.executeQuery()@ -> statement.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jonathancg90/Proyasistencia/blob/1116b4fde8013213da7ca8f760df5ab962850e92/Sis_Asistencia/src/Dao/CiudadDAO.java][save][1] = -> TRY { -> objCiudad=new Ciudad(0,name,)@ -> pt=qs.sqlRegister(Table,)@ -> pt.setString(1,objCiudad.getName(),)@ -> i=pt.executeUpdate()@ -> pt.close()@ } CATCH(Exception) { -> System.out.println(_error+"save: "+e,)@ }
results[https://github.com/hbcit2010software/hbcitsports/blob/2fa380293da0fcd008f8f5078b0147b55d065ab5/src/cn/edu/hbcit/smms/dao/logindao/LoginDAO.java][selectUserRights][2] = -> TRY { -> pStatement=conn.prepareStatement(sql,)@ -> pStatement.setString(1,username,)@ -> rs=pStatement.executeQuery()@ -> pStatement.close()@ } CATCH(Exception) { -> log.error("获取用户权限失败！",)@ -> log.error(e.getMessage(),)@ }
results[https://github.com/mixxit/npcx/blob/90ec89ff3922dd2f28a2ab4c4fcd1d70048edc2c/src/net/gamerservices/npcx/myUniverse.java][addZoneMember][1] = -> TRY { -> stmt=this.parent.universe.conn.prepareStatement("INSERT INTO zone_members (zoneid,playername) VALUES (?,?) ON DUPLICATE KEY UPDATE playername=VALUES(playername) ",Statement.RETURN_GENERATED_KEYS,)@ -> stmt.setInt(1,zoneid,)@ -> stmt.setString(2,name,)@ -> stmt.executeUpdate()@ -> keyset=stmt.getGeneratedKeys()@ -> stmt.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mrdon/jforum-cvs/blob/2c3463320b4295be56d6e918820e5e517ab9b1ce/src/net/jforum/drivers/generic/security/UserSecurityModel.java][deleteRole][2] = -> TRY {  -> p=JForum.getConnection().prepareStatement(SystemGlobals.getSql("PermissionControl.deleteUserRole",),)@ -> p.setInt(1,id,)@ -> p.setString(2,roleName,)@ -> p.executeUpdate()@ -> p.close()@ } CATCH(Exception) {}
results[https://github.com/feliperuppel/NewItens/blob/a9b89e6595f00241ffeddc98decac32ebd868bd5/src/br/com/newitens/dao/NiSaleDAO.java][findSaleByCode][1] = -> TRY {  -> ps=conn.prepareStatement(sql,)@ -> ps.setString(1,encryptedId,)@ -> rs=ps.executeQuery()@ -> IF { -> throw new NoResultException("Sale not found",)@saleVO==null } -> ps.close()@!(saleVO==null) } CATCH(Exception) {}
results[https://github.com/jonathancg90/Proyasistencia/blob/1116b4fde8013213da7ca8f760df5ab962850e92/Sis_Asistencia/src/Dao/RolesDAO.java][save][1] = -> TRY { -> objRoles=new Roles(0,name,)@ -> pt=qs.sqlRegister(Table,)@ -> pt.setString(1,objRoles.getName(),)@ -> i=pt.executeUpdate()@ -> pt.close()@ } CATCH(Exception) { -> System.out.println(_error+"save: "+e,)@ }
results[https://github.com/hbcit2010software/hbcitsports/blob/53090808cdadde13ac13a5a7707f3a795d0de4e2/src/cn/edu/hbcit/smms/dao/gamemanagedao/GameManageCheckTableDao.java][getPromotionnum][2] = -> TRY { -> pstmt=conn.prepareStatement(sql,)@ -> pstmt.setString(1,finalitemname,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> log.debug(e.getMessage(),)@ -> e.printStackTrace()@ }
results[https://github.com/stas-bob/Projektmanager/blob/65e014461a9d552070ba917401bb183b8f7ed149/src/java/main/MainServlet.java][getProjectName][2] = -> TRY { -> ps=c.prepareStatement("SELECT projectname FROM user WHERE email = ?",)@ -> ps.setString(1,user,)@ -> rs=ps.executeQuery()@ -> IF { -> ps.close()@!(rs.next()) -> return projectname@rs.next() } } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/feliperuppel/NewItens/blob/6a9d5800dc1da46800267a9261c8bd487acdd2a8/src/br/com/newitens/dao/NiInterestsAreaDAO.java][update][1] = -> TRY {  -> ps=conn.prepareStatement(sql,)@ -> ps.setString(1,area.getDescription(),)@ -> ps.setLong(2,area.getInterestsAreaId(),)@ -> ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/hbcit2010software/hbcitsports/blob/53090808cdadde13ac13a5a7707f3a795d0de4e2/src/cn/edu/hbcit/smms/dao/gamemanagedao/GameManageCheckTableDao.java][getFinalitemid][1] = -> TRY { -> pstmt=conn.prepareStatement(sql,)@ -> pstmt.setString(1,finalitemname,)@ -> pstmt.setInt(2,loginDAO.selectCurrentSportsId(),)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jonathancg90/Proyasistencia/blob/1116b4fde8013213da7ca8f760df5ab962850e92/Sis_Asistencia/src/Dao/EstadoEmpleadoDAO.java][save][1] = -> TRY { -> objEst=new EstadoEmp(0,name,)@ -> pt=qs.sqlRegister(Table,)@ -> pt.setString(1,objEst.getNombre(),)@ -> i=pt.executeUpdate()@ -> pt.close()@ } CATCH(Exception) { -> System.out.println(_error+"save: "+e,)@ }
results[https://github.com/jonathancg90/Proyasistencia/blob/1116b4fde8013213da7ca8f760df5ab962850e92/Sis_Asistencia/src/Dao/TipoJustificacionDAO.java][save][1] = -> TRY { -> objjus=new TipoJustificacion(0,name,)@ -> pt=qs.sqlRegister(Table,)@ -> pt.setString(1,objjus.getName(),)@ -> i=pt.executeUpdate()@ -> pt.close()@ } CATCH(Exception) { -> System.out.println(_error+"save: "+e,)@ }
results[https://github.com/feliperuppel/NewItens/blob/6a9d5800dc1da46800267a9261c8bd487acdd2a8/src/br/com/newitens/dao/NiInterestsAreaDAO.java][save][1] = -> TRY {  -> ps=conn.prepareStatement(sql,)@ -> ps.setLong(1,area.getInterestsAreaId(),)@ -> ps.setString(2,area.getDescription(),)@ -> ps.execute()@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/tashiscool/spring/blob/2c7d3673a81e9abe839e05e0981612b052d45551/org.springframework.testsuite/src/test/java/org/springframework/jdbc/core/JdbcTemplateTests.java][testPreparedStatementSetterSucceeds][7] = -> TRY {  -> mockPreparedStatement=(PreparedStatement) ctrlPreparedStatement.getMock()@ -> mockPreparedStatement.setString(1,name,)@ -> mockPreparedStatement.executeUpdate()@ -> IF { -> mockPreparedStatement.getWarnings()@ } -> mockPreparedStatement.close()@ -> ctrlConnection.setReturnValue(mockPreparedStatement,)@ } CATCH(Exception) {}
results[https://github.com/hbcit2010software/hbcitsports/blob/2b376cb5cef76e02338cfaa7e4365d763c3189f4/src/cn/edu/hbcit/smms/pojo/QueryRegistitemToItems.java][getItems][2] = -> TRY { -> pstmt=conn.prepareStatement(sql,)@ -> pstmt.setString(1,playernum,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(SQLException) { -> se.getStackTrace()@ } CATCH(Exception) { -> e.getStackTrace()@ }
results[https://github.com/okjsp/okjsp-html5/blob/76090a69fb5882ce7196a583213b97907c8e4f57/src/kr/pe/okjsp/DownloadServlet.java][countUp][1] = -> TRY { -> pstmt=conn.prepareStatement(query,)@ -> pstmt.setString(1,maskname,)@ -> pstmt.executeUpdate()@ -> pstmt.close()@ } CATCH(Exception) { -> e.printStackTrace()@ } FINALLY { -> dbCon.close(conn,pstmt,)@ }
results[https://github.com/hbcit2010software/hbcitsports/blob/492527419cfc68213be13b8583fe0233613529eb/src/cn/edu/hbcit/smms/dao/gamemanagedao/GetCondition.java][selectItemsByGroup][1] = -> TRY { -> pstmt=conn.prepareStatement(sql,)@ -> pstmt.setInt(1,sportsid,)@ -> pstmt.setString(2,groupname,)@ -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> e.printStackTrace()@ -> log.debug("selectItemsByGroup"+e.getMessage(),)@ }
results[https://github.com/feliperuppel/NewItens/blob/2caa84938bec978ef2d056810147dc54ac9d1399/src/br/com/newitens/dao/NiProductDAO.java][saveImage][2] = -> TRY {  -> ps=conn.prepareStatement(sql,)@ -> LOOP { -> ps.setLong(1,product.getProductId(),)@product.getImgs() -> ps.setString(2,img,)@ -> ps.execute()@ } -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/LafayetteCollegeLibraries/metadb-dss/blob/63625969f82082abaec56786d05375343692b8eb/webapp-src/src/edu/lafayette/metadb/model/items/ItemsDAO.java][getMasterPath][4] = -> IF { -> TRY { -> getFileName=conn.prepareStatement(GET_FILE_NAME,)@conn!=null -> getFileName.setString(1,projectName,)@ -> getFileName.setInt(2,itemNumber,)@ -> res=getFileName.executeQuery()@ -> getFileName.close()@ } CATCH(Exception) { -> MetaDbHelper.logEvent(e,)@ } }
results[https://github.com/jOOQ/jOOQ/blob/b0a498bde993c6caf892bc564c26b872f55ab986/jOOQ-test/src/org/jooq/test/_/testcases/BenchmarkTests.java][testBenchmarkReuseSQLString][1] = -> TRY {  -> pst=getConnection().prepareStatement(sql,)@ -> pst.setLong(1,1,)@ -> pst.setString(2,RANDOM,)@ -> LOOP { -> rs=pst.executeQuery()@ } -> pst.close()@ } CATCH(Exception) {}
results[https://github.com/fcrepo/fcrepo/blob/69108ac76c3a3f14a8bc36622e54483fdd55a6b5/fcrepo-server/src/main/java/org/fcrepo/utilities/DriverShim.java][main][2] = -> TRY {  -> IF { -> st=conn.prepareStatement("SELECT COUNT(*) FROM ?",)@ -> st.setString(1,tbl,)@ -> rs=st.executeQuery()@ -> System.out.println("The "+tbl+" table has "+rs.getInt(1,)+" rows.",)@ -> st.close()@ } } CATCH(Exception) {}
results[https://github.com/apache/aries/blob/92b2ae7e0bcf3dee8b1ea8644a08a430c3f70d26/ariestrader-sample/modules/ariestrader-persist-jdbc/src/main/java/org/apache/geronimo/samples/daytrader/persist/jdbc/TradeJDBCDirect.java][getQuote][8] = -> TRY {  -> stmt=getStatement(conn,getQuoteSQL,)@ -> stmt.setString(1,symbol,)@ -> rs=stmt.executeQuery()@ -> IF { -> Log.error("TradeJDBCDirect:getQuote -- failure no result.next() for symbol: "+symbol,)@ } -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/mattibickel/csql/blob/be829bdcd0f3d299fd5e03f9a098b5376ea2af3d/test/jdbc/Connection/ConnTest26.java][main][4] = -> TRY { -> stmt=con2.prepareStatement("INSERT INTO T1 VALUES (?,?);",)@ -> stmt.setInt(1,1,)@ -> stmt.setString(2,"test1",)@ -> ret=stmt.executeUpdate()@ -> stmt.close()@ } CATCH(Exception) { -> System.out.println("Exception in Test: "+e,)@ -> e.printStackTrace()@ -> System.exit(1,)@ }
results[https://github.com/hbcit2010software/hbcitsports/blob/f042f591e35b85e247089c6c9c71cbec657ec57c/src/cn/edu/hbcit/smms/dao/systemmanagedao/AccountDAO.java][initializeUserPassword][1] = -> TRY { -> pStatement=conn.prepareStatement(sql,)@ -> pStatement.setString(1,md_111111,)@ -> pStatement.setInt(2,userId,)@ -> rst=pStatement.executeUpdate()@ -> pStatement.close()@ } CATCH(Exception) { -> log.error("初始化用户密码失败！",)@ -> log.error(e.getMessage(),)@ }
results[https://github.com/Arguss/Nova_TM_CT0/blob/65c5eecd13a4c99cf5c0faeb9890479df304f04e/gameserver/head-src/com/l2jfrozen/gameserver/network/serverpackets/CharSelectInfo.java][loadCharacterSelectInfo][2] = -> TRY { -> statement=con.prepareStatement("SELECT account_name, obj_Id, char_name, level, maxHp, curHp, maxMp, curMp, acc, crit, evasion, mAtk, mDef, mSpd, pAtk, pDef, pSpd, runSpd, walkSpd, str, con, dex, _int, men, wit, face, hairStyle, hairColor, sex, heading, x, y, z, movement_multiplier, attack_speed_multiplier, colRad, colHeight, exp, sp, karma, pvpkills, pkkills, clanid, maxload, race, classid, deletetime, cancraft, title, rec_have, rec_left, accesslevel, online, char_slot, lastAccess, base_class FROM characters WHERE account_name=?",)@ -> statement.setString(1,_loginName,)@ -> charList=statement.executeQuery()@ -> statement.close()@ } CATCH(Exception) { -> e.printStackTrace()@ } FINALLY { -> CloseUtil.close(con,)@ }
results[https://github.com/demoiselle/laboratory/blob/6d4bc3d91fe1ef95d186824c186f87c51816d272/quickstarts/jdbc-sample/src/main/java/persistence/BookDAO.java][update][1] = -> TRY {  -> pstmt=connection.prepareStatement(sql.toString(),)@ -> pstmt.setString(1,book.getDescription(),)@ -> pstmt.setInt(2,book.getId(),)@ -> pstmt.execute()@ -> pstmt.close()@ } CATCH(Exception) {}
results[https://github.com/harvimt/Group9_CS300_Project/blob/ec8a0ea4ceef902090db883246e08a77a1a84bbc/src/entity/Member.java][getMembers][1] = -> TRY {  -> search_stmt=conn.prepareStatement(builder.toString(),)@ -> IF { -> partial_name=partial_name.replaceAll("[?_!]","!$0",)@partial_name!=null -> search_stmt.setString(1,partial_name,)@partial_name!=null } -> rs=search_stmt.executeQuery()@ -> search_stmt.close()@ } CATCH(Exception) {}
results[https://github.com/demoiselle/laboratory/blob/6d4bc3d91fe1ef95d186824c186f87c51816d272/quickstarts/jdbc-sample/src/main/java/persistence/BookDAO.java][insert][1] = -> TRY {  -> pstmt=connection.prepareStatement(sql.toString(),)@ -> pstmt.setInt(1,book.getId(),)@ -> pstmt.setString(2,book.getDescription(),)@ -> pstmt.execute()@ -> pstmt.close()@ } CATCH(Exception) {}
results[https://github.com/nickleus-j/StorySenseWeb/blob/ccb7331278b474015b4592f0209ac18390bd4d69/StorySense/src/mysqlDao/AcomplishmentMySQL.java][getStoriesWrittenOn][1] = -> TRY { -> ps=con.prepareStatement("SELECT * from storyaccomplishment "+"WHERE AccountID=? AND DATE(finishTime)=Date(?)"+" order by finishtime DESC",)@ -> ps.setInt(1,userID,)@ -> ps.setString(2,date,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) { -> Logger.getLogger(AcomplishmentMySQL.class.getName(),).log(Level.SEVERE,null,ex,)@ }
results[https://github.com/nickleus-j/StorySenseWeb/blob/fa2c45eba912ca84e4531f716dbca9f86036ea09/StorySense/src/mysqlDao/NotificationMySQL.java][updateNotificationView][1] = -> TRY { -> ps=con.prepareStatement("UPDATE Notification SET viewed=? WHERE NotificationId=?",)@ -> ps.setString(1,viewed,)@ -> ps.setInt(2,notificationID,)@ -> ps.executeUpdate()@ -> ps.close()@ } CATCH(Exception) { -> Logger.getLogger(NotificationMySQL.class.getName(),).log(Level.SEVERE,null,ex,)@ }
results[https://github.com/adempiere/adempiere/blob/7063ff6ddd9a2a135d2f8d93cfdd4b923975078a/dbPort/src/org/compiere/PackOut/IntPackInHandler.java][getIDbyName][1] = -> TRY { -> pstmt=DB.prepareStatement(sql,m_trxName,)@ -> pstmt.setString(1,name,)@ -> IF { -> pstmt.setInt(2,m_AD_Client_ID,)@ } -> rs=pstmt.executeQuery()@ -> pstmt.close()@ } CATCH(Exception) { -> log.log(Level.SEVERE,"getID:"+e,)@ }
results[https://github.com/nickleus-j/StorySenseWeb/blob/50cd14b601686faf5aa31b627d586dd793d15768/StorySense/src/mysqlDao/NotificationTypeMySQL.java][insertNotificationType][1] = -> TRY { -> ps=con.prepareStatement("INSERT INTO notificationType (typeName) VALUES (?)",)@ -> ps.setString(1,given.getTypeName(),)@ -> ps.execute()@ -> ps.close()@ } CATCH(Exception) { -> Logger.getLogger(NotificationTypeMySQL.class.getName(),).log(Level.SEVERE,null,ex,)@ }
results[https://github.com/nickleus-j/StorySenseWeb/blob/cb205a18b514a146444bc76f001be8e4625c2d5f/StorySense/src/mysqlDao/RelationMysql.java][getRelationsOfConcept][1] = -> TRY { -> ps=con.prepareStatement("SELECT Concept1,Sentence_pattern,Concept2 from Relation,relationship  "+"WHERE concept1=? AND  Relation.relationship=relationship.relationship "+"AND Confidence_percentage >=?",)@ -> ps.setString(1,concept,)@ -> ps.setFloat(2,minimumConfidence,)@ -> rs=ps.executeQuery()@ -> ps.close()@ } CATCH(Exception) { -> Logger.getLogger(RelationMysql.class.getName(),).log(Level.SEVERE,null,ex,)@ }
results[https://github.com/mixxit/npcx/blob/90ec89ff3922dd2f28a2ab4c4fcd1d70048edc2c/src/net/gamerservices/npcx/myPlayer.java][setNPCXBalance][1] = -> TRY { -> stmt=this.parent.universe.conn.prepareStatement("INSERT INTO player (coin,name) VALUES (?,?) ON DUPLICATE KEY UPDATE coin=VALUES(coin) ",Statement.RETURN_GENERATED_KEYS,)@ -> stmt.setInt(1,amount,)@ -> stmt.setString(2,this.player.getName(),)@ -> stmt.executeUpdate()@ -> keyset=stmt.getGeneratedKeys()@ -> stmt.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Azrielg13/innovative/blob/584526680c3e8b205d906bd336b5f9ca996529c4/qee/src/com/digitald4/pm/Exam.java][setProp][2] = -> TRY {  -> IF { -> ps=con.prepareStatement("UPDATE "+TABLE+" SET "+col+"=? "+WHERE,)@ -> ps.setString(1,value,)@ -> ps.setInt(2,client.getId(),)@id>0&&client!=null -> ps.setInt(3,id,)@ -> ps.executeUpdate()@ -> ps.close()@ } } CATCH(Exception) {}
results[https://github.com/apache/aries/blob/d24b46ef9aba9eea2942359a8e7c2b8b08d8697e/samples/ariestrader-sample/modules/ariestrader-persist-jdbc/src/main/java/org/apache/aries/samples/ariestrader/persist/jdbc/TradeJdbc.java][updateQuotePriceVolume][1] = -> TRY {  -> stmt=getStatement(conn,updateQuotePriceVolumeSQL,)@ -> stmt.setBigDecimal(1,newPrice,)@ -> stmt.setBigDecimal(2,newPrice,)@ -> stmt.setDouble(3,newVolume,)@ -> stmt.setBigDecimal(4,low,)@ -> stmt.setBigDecimal(5,high,)@ -> stmt.setString(6,symbol,)@ -> stmt.executeUpdate()@ -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/LafayetteCollegeLibraries/metadb-dss/blob/63625969f82082abaec56786d05375343692b8eb/webapp-src/src/edu/lafayette/metadb/model/items/ItemsDAO.java][getCustomDerivPath][1] = -> MetaDbHelper.note("Trying to get custom deriv path for "+projectName+", item "+itemNumber,)@ -> IF { -> TRY { -> getFileName=conn.prepareStatement(GET_CUSTOM_FILE_NAME,)@conn!=null -> getFileName.setString(1,projectName,)@ -> getFileName.setInt(2,itemNumber,)@ -> res=getFileName.executeQuery()@ -> getFileName.close()@ } CATCH(Exception) { -> MetaDbHelper.logEvent(e,)@ } }
results[https://github.com/dustin/snippets/blob/3098f6a5b24578d42f8f5b2772a04d7d91addb05/java/jdbc/GetBlob.java][main][1] = -> TRY {  -> Class.forName(args[0],)@ -> conn=DriverManager.getConnection(args[1],args[2],args[3],)@ -> pst=conn.prepareStatement("select fileoid from shit where name=?",)@ -> pst.setString(1,args[4],)@ -> rs=pst.executeQuery()@ -> LOOP { -> fos=new FileOutputStream(args[4],)@ } -> pst.close()@ } CATCH(Exception) {}
results[https://github.com/jonathancg90/Proyasistencia/blob/1116b4fde8013213da7ca8f760df5ab962850e92/Sis_Asistencia/src/Dao/TipoJustificacionDAO.java][update][1] = -> TRY { -> objjus=new TipoJustificacion(id,name,)@ -> pt=qs.sqlUpdate(Table,)@ -> pt.setInt(2,objjus.getIdjus(),)@ -> pt.setString(1,objjus.getName(),)@ -> i=pt.executeUpdate()@ -> pt.close()@ } CATCH(Exception) { -> System.out.println(_error+"update: "+e,)@ }
results[https://github.com/codehaus/btm-git/blob/c8f9d2e94e02a4a5acf7b73314d72bbd22494f0f/test/bitronix/tm/drivers/MysqlTest.java][singleHeuristicRollback][1] = -> TRY {  -> stmt=connection.prepareStatement("xa recover",)@ -> rs=stmt.executeQuery()@ -> xactname=rs.getString("data",)@ -> stmt.close()@ -> System.out.println("heuristically completing "+xactname,)@ -> stmt=connection.prepareStatement(sql,)@ -> stmt.setString(1,xactname,)@ -> stmt.executeUpdate()@ -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/LafayetteCollegeLibraries/metadb-dss/blob/c97d0303961d0ffde9ade49ed53d2a37d0d6996f/webapp-src/src/edu/lafayette/metadb/model/attributes/TechAttributesDAO.java][getTechAttributes][1] = -> IF { -> return null@!(MetaDbHelper.projectExists(projectName,)) } -> IF { -> TRY { -> getTechAttListQuery=conn.prepareStatement(GET_TECH_ATTRIBUTES,)@conn!=null && !(!(MetaDbHelper.projectExists(projectName,))) -> getTechAttListQuery.setString(1,projectName,)@!(!(MetaDbHelper.projectExists(projectName,))) -> getTechAttListQueryResult=getTechAttListQuery.executeQuery()@!(!(MetaDbHelper.projectExists(projectName,))) -> getTechAttListQuery.close()@!(!(MetaDbHelper.projectExists(projectName,))) } CATCH(Exception) { -> MetaDbHelper.logEvent(e,)@!(!(MetaDbHelper.projectExists(projectName,))) } }
results[https://github.com/apache/aries/blob/8ef753da5dad7c4cdd85a085d5333baa16e745a4/samples/ariestrader/modules/ariestrader-persist-jdbc/src/main/java/org/apache/aries/samples/ariestrader/persist/jdbc/TradeJdbc.java][updateOrderStatus][1] = -> TRY {  -> stmt=getStatement(conn,updateOrderStatusSQL,)@ -> stmt.setString(1,status,)@ -> stmt.setTimestamp(2,new Timestamp(System.currentTimeMillis(),),)@ -> stmt.setInt(3,orderID.intValue(),)@ -> stmt.executeUpdate()@ -> stmt.close()@ } CATCH(Exception) {}
results[https://github.com/LafayetteCollegeLibraries/metadb-dss/blob/63625969f82082abaec56786d05375343692b8eb/webapp-src/src/edu/lafayette/metadb/model/items/ItemsDAO.java][getThumbFilePath][1] = -> IF { -> TRY { -> getFileName=conn.prepareStatement(GET_THUMB_FILE_NAME,)@conn!=null -> getFileName.setString(1,projectName,)@ -> getFileName.setInt(2,itemNumber,)@ -> res=getFileName.executeQuery()@ -> MetaDbHelper.logEvent("ItemsDAO","getThumbFileName","File name entry not found for item "+itemNumber+" in project "+projectName,)@ -> getFileName.close()@ } CATCH(Exception) { -> MetaDbHelper.logEvent(e,)@ } }
results[https://github.com/SIB-Colombia/sib-dataportal/blob/90bf0799cc1a20941b0ff34d361ef3abd5ea04c8/portal-index/src/test/java/utils/PolygonTagLoader.java][process][1] = -> TRY {  -> IF { -> return @dataResourceId==1 } -> polygon=g.toString()@!(dataResourceId==1) -> System.out.println(polygon,)@!(dataResourceId==1) -> ps=conn.prepareStatement("INSERT INTO string_tag "+"(tag_id,entity_id,value,is_system_generated) "+"VALUES (4102, ?, ?, true)",)@!(!(polygon.startsWith("POLYGON",))) && !(dataResourceId==1) -> ps.setLong(1,dataResourceId,)@!(!(polygon.startsWith("POLYGON",))) && !(dataResourceId==1) -> ps.setString(2,polygon,)@!(!(polygon.startsWith("POLYGON",))) && !(dataResourceId==1) -> ps.execute()@!(!(polygon.startsWith("POLYGON",))) && !(dataResourceId==1) -> ps.close()@!(!(polygon.startsWith("POLYGON",))) && !(dataResourceId==1) } CATCH(Exception) {}
