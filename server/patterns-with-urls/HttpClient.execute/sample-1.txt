results[https://github.com/barchart/barchart-http/blob/f45bae667b13fc7518b66cbe56ff0625a52de9b1/barchart-http-server/src/test/java/com/barchart/http/server/TestHttpServer.java][testKill][3] = -> TRY {  -> get=new HttpGet("http://localhost:8888/client-disconnect",)@ -> client.execute(get,)@ } CATCH(Exception) {}
results[https://github.com/piusvelte/sonet-pro/blob/de3364cd26258fa35223fb06e8c92196bd253518/src/oauth/signpost/commonshttp/CommonsHttpOAuthProvider.java][sendRequest][11] = -> TRY {  -> response=httpClient.execute((HttpUriRequest) request.unwrap(),)@ -> return new HttpResponseAdapter(response,)@ } CATCH(Exception) {}
results[https://github.com/majikthys/jpa-dao-helloworld/blob/573981b70f1b58f461d1850094484ee12bb1ee2a/karyon-admin/src/test/java/com/netflix/adminresources/AdminResourceTest.java][testCustomPort][2] = -> TRY {  -> client=new DefaultHttpClient()@ -> healthGet=new HttpGet("http://localhost:"+AdminResourcesContainer.LISTEN_PORT_DEFAULT+"/healthcheck",)@ -> client.execute(healthGet,)@ } CATCH(Exception) {}
results[https://github.com/rosedu/wouso-extras/blob/b629e91a611962f90737937fa05e9cd0625143c9/android/AWoUSO/src/cdl/android/server/MyCommonsHttpOAuthProvider.java][sendRequest][1] = -> TRY {  -> response=httpClient.execute((HttpUriRequest) request.unwrap(),)@ -> return new HttpResponseAdapter(response,)@ } CATCH(Exception) {}
results[https://github.com/apache/tomee/blob/53e1147907868d40979946b3de6abecd0ea03388/arquillian/arquillian-tomee-tests/arquillian-tomee-jaxws-tests/src/test/java/org/apache/openejb/arquillian/tests/jaxws/wsrs/WsRsTest.java][invokeRest][2] = -> TRY {  -> get=new HttpGet(uri,)@ -> response=client.execute(get,)@ -> body=asString(response,)@ } CATCH(Exception) {}
results[https://github.com/europeana/contrib/blob/15934811e1930e93405735facf6b5c3989f9efdd/ntua/awareness/app/gr/ntua/ivml/awareness/search/SearchServiceAccess.java][searchEuropeana][2] = -> TRY {  -> httpGet=new HttpGet(uri,)@ -> httpRes=httpClient.execute(httpGet,)@ -> httpEntity=httpRes.getEntity()@ } CATCH(Exception) {}
results[https://github.com/craftercms/social/blob/e29c63734f8b4efdcb0004f110211c7597208434/server/src/test/java/org/craftercms/social/util/UGCHttpClient.java][getThread][1] = -> TRY {  -> httpget=new HttpGet(uri,)@ -> httpclient=new DefaultHttpClient()@ -> return httpclient.execute(httpget,)@ } CATCH(Exception) {}
results[https://github.com/barchart/barchart-netty4/blob/0144bd71d8779d2276e052591418a36dde4946ee/server/src/test/java/com/barchart/netty/server/http/TestHttpServer.java][testKill][1] = -> TRY {  -> get=new HttpGet("http://localhost:"+port+"/client-disconnect",)@ -> client.execute(get,).getEntity()@ } CATCH(Exception) {}
results[https://github.com/rodericj/TopDish/blob/92166044c839dbe81a3c95a5387aacea0c0bfdac/server/old/java/TopDishAndroid/src/com/topdish/comms/HTTPComms.java][doGet][1] = -> TRY {  -> httpget=new HttpGet(this.url,)@ -> httpResponse=(BasicHttpResponse) httpclient.execute(httpget,)@ -> return getResponse(httpResponse,)@ } CATCH(Exception) {}
results[https://github.com/MoSync/MoSync/blob/69cab3aefea6d208159ad411ea8bf770aa644eda/tests/Benchmarks/database_libs/android/BenchDB/src/mosync/benchmarks/BenchDB.java][publishLinpackResult][2] = -> TRY {  -> request.setURI(new URI(URL+"benchmark=linpack&revision="+revision+"&runtime=Android%20Dalvik&git_hash="+git_hash+"&phone="+Build.PRODUCT+"&mflops="+mflops+"&native_sdk_ver="+native_sdk_ver,),)@ -> response=client.execute(request,)@ -> System.out.println(response,)@ } CATCH(Exception) {}
results[https://github.com/griddynamics/GDLogTool/blob/c4613b5b841d388dc79115ec779b36716f02cc7f/logtool/selenium-tests/src/main/java/com/griddynamics/logtool/selenium/Utils.java][httpGet][2] = -> TRY {  -> httpget=new HttpGet(uri,)@ -> httpclient=new DefaultHttpClient()@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/apache/karaf-cave/blob/1a56729609f80e385297ae816953afac313118b8/server/backend/filesystem/src/main/java/org/apache/karaf/cave/server/backend/impl/CaveRepositoryImpl.java][proxyHttp][8] = -> TRY {  -> httpClient=new DefaultHttpClient()@ -> httpGet=new HttpGet(url,)@ -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/sugarcrm/candybean/blob/49aa83aa7b9e7de9399a2728f5ff098837130e5b/src/test/java/com/sugarcrm/candybean/automation/mobile/AppiumIosTest.java][testSessions][2] = -> TRY {  -> request=new HttpGet("http://localhost:4723/wd/hub/sessions",)@ -> httpClient=new DefaultHttpClient()@ -> response=httpClient.execute(request,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/Berico-Technologies/AMP/blob/35d718b17adf170f42812ccc13c513ed1f19fb01/java/services/global-topology-client/src/main/java/amp/topology/client/HttpRoutingInfoRetriever.java][retrieveRoutingInfo][3] = -> httpGet=new HttpGet(url,)@ -> TRY { -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> LOG.error("Failed to retrieve routing info: {}",e,)@ }
results[https://github.com/eltoraz/PUG/blob/65e672ede4e666f126d212445e60bfadbbe7d5b1/src/eltoraz/pug/android/PugNetworkInterface.java][joinGame][3] = -> httpClient=new DefaultHttpClient()@ -> TRY { -> httpGet=new HttpGet(page,)@ -> response=httpClient.execute(httpGet,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/imkevinxu/totoro/blob/61f0bb9c27c337d8eb7a8e324569289b2af26bf5/btchat-elm/src/com/example/android/BluetoothChat/BluetoothChatService.java][run][1] = -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(getURL,)@ -> responseGet=client.execute(get,)@ } CATCH(Exception) { -> Log.e(TAG,"FAILURE",)@ }
results[https://github.com/tomakehurst/wiremock/blob/761d35c2710263a9821e84d02b771bc79e879375/src/test/java/com/github/tomakehurst/wiremock/HttpsAcceptanceTest.java][contentFor][1] = -> TRY {  -> get=new HttpGet(url,)@ -> response=httpClient.execute(get,)@ -> content=EntityUtils.toString(response.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/uib/matterhorn/blob/2a682e583ead0c4d8b96bbf601b36380d783bad8/modules/opencast-test-harness/trunk/src/main/java/org/opencastproject/remotetest/EngageModuleTest.java][testJQuerySlider][106] = -> TRY {  -> get=new HttpGet(ENGAGE_BASE_URL+"/engage-hybrid-player/jquery/ui/ui.slider.js",)@ -> response=client.execute(get,)@ -> Assert.assertEquals(200,response.getStatusLine().getStatusCode(),)@ } CATCH(Exception) {}
results[https://github.com/SzaszZsigmondAttila/mol-liga/blob/dc8b5a1dda097dfdc51f11c41c0631c6cadaf0f9/server/content/src/main/java/ro/szzsa/molliga/content/client/impl/WebPageContentClient.java][getWebPageContent][2] = -> TRY { -> httpClient=new DefaultHttpClient()@ -> httpGet=new HttpGet(url,)@ -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> throw new ContentException(e,)@ }
results[https://github.com/soluvas/soluvas-framework/blob/a124d6d2f2e63bd1855c5586a2b02643bf999ad7/socmed/src/main/java/org/soluvas/facebook/FriendListDownloader.java][call][2] = -> TRY {  -> getReq=new HttpGet(uri,)@ -> friendsResp=httpClient.execute(getReq,)@ -> json=mapper.readTree(friendsResp.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/uib/matterhorn/blob/286c16891a03273e15ddb9c64dee0a5174ce7cc4/modules/opencast-test-harness/src/main/java/org/opencastproject/remotetest/CaptureRestEndpointTest.java][testStopCaptureGet][5] = -> TRY {  -> get=new HttpGet(BASE_URL+"/capture/rest/stopCapture",)@ -> getResponse=httpClient.execute(get,).getStatusLine().getStatusCode()@ -> Assert.assertTrue(getResponse==HttpStatus.SC_OK||getResponse==HttpStatus.SC_INTERNAL_SERVER_ERROR,)@ } CATCH(Exception) {}
results[https://github.com/imkevinxu/totoro/blob/97a52fa8566c34c594ad1d2f5006c722f5f7dfaf/btchat-elm/src/com/example/android/BluetoothChat/BluetoothChat.java][run][2] = -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(getURL,)@ -> responseGet=client.execute(get,)@ } CATCH(Exception) { -> Log.e(BluetoothChat.TAG,e.toString(),)@ }
results[https://github.com/Berico-Technologies/AMP/blob/09d1373e0c470c2d891f7969005dd22ec7e6fde1/java/amp-rabbit/src/main/java/amp/rabbit/connection/TokenConnectionFactory.java][getNamedToken][3] = -> TRY {  -> client=_httpClientFactory.getClient()@ -> getMethod=new HttpGet(_anubisUri,)@ -> response=client.execute(getMethod,)@ -> content=EntityUtils.toString(response.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/escidoc/escidoc-core/blob/bf1c1aa7a31de8241fc22d276621a3d04e135796/integration-tests/src/test/java/de/escidoc/core/test/om/item/ItemRetrieveContentIT.java][contentFilenameAndMimeType][3] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(baseUrl+hrefContent,)@ -> response=httpclient.execute(httpget,)@ -> headerCType=response.getHeaders("Content-Type",)@ -> headerDisp=response.getHeaders("Content-Disposition",)@ } CATCH(Exception) {}
results[https://github.com/eltoraz/PUG/blob/65e672ede4e666f126d212445e60bfadbbe7d5b1/src/eltoraz/pug/android/PugNetworkInterface.java][getPlayers][3] = -> httpClient=new DefaultHttpClient()@ -> TRY { -> httpGet=new HttpGet(page,)@ -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/youngsterxyf/Coder-s-code/blob/9742544fcec3564a7bbe6ed598d00189a7f4008e/Java/GUIDictionary/IcibaDict.java][run][2] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(searchstring,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jortizcs/sfs_applications/blob/a5ba5a7e97b502e6a38aebcc6c84dedfa88118d8/mobile_audit/src/mobile/SFS/Util.java][getJsonString][5] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(url,)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/waseemAtRice/glass-present/blob/2c00187ef850fdacc855cc92c3052df4f5cf75f5/android/src/com/clarity/glassviewer/FullscreenActivity.java][httpGet][1] = -> httpclient=new DefaultHttpClient()@ -> TRY { -> httpGet=new HttpGet(initURL,)@ -> response=httpclient.execute(httpGet,)@ } CATCH(Exception) { -> Log.d("Exception",e.toString(),)@ }
results[https://github.com/mdandy/Oftentimes2000/blob/df906fb97a99758839584c33da4cf954096835bc/app/src/edu/gatech/oftentimes2000/server/HTTPUtil.java][doGet][1] = -> TRY { -> client=new DefaultHttpClient(httpParams,)@ -> get=new HttpGet(url,)@ -> response=client.execute(get,)@ } CATCH(Exception) { -> Log.e(TAG,e.getMessage(),)@ }
results[https://github.com/marcb70/ideasofmarch/blob/593af22e447daeb1ddeab966128d5b9bbcfae0aa/main/src/edu/csumb/ideasofmarch/codecruncher/ScoresHelper.java][putGlobalHighScore][1] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(restUrl,)@ -> TRY { -> httpclient.execute(httpget,)@ } CATCH(Exception) { -> Log.v("error","Exception thrown! Check out calls to 'getGlobalHighScores().'",)@ }
results[https://github.com/TeamFauna/dumbo/blob/ce92e2c843ed1b5b3da3011a583c73c924ae4965/android/dumbo/src/com/fawna/dumbo/FingerprintListener.java][prepareForPickerActivity][1] = -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(urlstr,)@ -> response=client.execute(get,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/youfeng/healthyside/blob/fb59390e05a6eb846419f9dc9c163e7bd92c0017/client/healthyside-android/src/org/hiside/healthy/android/util/NetworkTool.java][getContent][2] = -> TRY {  -> client=new DefaultHttpClient()@ -> httpParams=client.getParams()@ -> response=client.execute(new HttpGet(url,),)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/evanchooly/javabot/blob/d68a3b520d639c81d8abe2affdd7d140185f1eab/core/src/main/java/javabot/operations/locator/JCPJSRLocator.java][locate][1] = -> TRY { -> httpclient=new DefaultHttpClient(params,)@ -> httpget=new HttpGet(urlString,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> retVal.put("title",null,)@ }
results[https://github.com/one-in-the-crowd/qpzm-woxn-eicn/blob/8c5a84636d18660fc0a3fa82ab5783425d46965d/src/ru/ifree/drugstore/server/util/HttpUtil.java][load][1] = -> TRY { -> getMethod=new HttpGet(url,)@ -> response=httpClient.execute(getMethod,)@ -> r_entity=response.getEntity()@ } CATCH(Exception) { -> Log.e(e.getMessage(),)@ }
results[https://github.com/RHIT/Mobile/blob/19f1e0813e29fec4151b06ab8b632df9c447f91b/android/src/BetaManager/src/edu/rosehulman/android/directory/beta/StartupActivity.java][downloadFile][2] = -> TRY {  -> client=new DefaultHttpClient()@ -> response=client.execute(new HttpGet(url,),)@ -> response.getEntity().writeTo(fout,)@ } CATCH(Exception) {}
results[https://github.com/parworks/PARWorks-Android-Java/blob/eee9c60231f9372dcab3ba6fa1b37004e855d764/ParWorksAndoidLibrary/src/com/parworks/androidlibrary/utils/AsyncHttpTask.java][doInBackground][1] = -> TRY { -> client=new DefaultHttpClient()@ -> resp=client.execute(rinfo.getRequest(),)@ -> rinfo.setResponse(resp,)@ } CATCH(Exception) { -> rinfo.setException(e,)@ }
results[https://github.com/se-SteveThePirate/CMPUT301W13T01/blob/7830f96bd0659c7c801bf1a8b078e5ac9031ff54/NewRecipeBook/src/ca/dreamteam/newrecipebook/Helpers/ElasticSearch/ESClient.java][getNextAvailableId][1] = -> getRequest=new HttpGet("http://cmput301.softwareprocess.es:8080/cmput301w13t01/recipelist/nextID",)@ -> getRequest.addHeader("Content-type","application/json",)@ -> TRY { -> response=httpClient.execute(getRequest,)@ -> json=getEntityContent(response,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sagioto/LipReading/blob/7ebcead7be91737750319bcf59f8eb0cd57d3292/src/main/java/edu/lipreading/Utils.java][textToSpeech][2] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(stringURL,)@ -> get=httpclient.execute(httpget,)@ -> in=get.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/AdoHe/AdsDeliver/blob/1767e9a09e7f5da3900b1c84c8098573ab551413/AdsDeliverSDK/src/edu/tongji/se/android/AdClient.java][RequestAd][1] = -> TRY {  -> request.setURI(uri,)@ -> response=httpClient.execute(request,)@ -> response.getStatusLine().getStatusCode()@ -> requestSuccess(response,)@ } CATCH(Exception) {}
results[https://github.com/maxwellE/OSUMobileApps/blob/3105b28dc9083d7e9398619596f4b25db9dd38c0/MobileIndia/src/com/example/mobileindia/GeoLocation.java][getGeoPointFromName][1] = -> httpGet=new HttpGet("http://maps.google.com/maps/api/geocode/json?address="+cleanLocationName+"&sensor=false",)@ -> client=new DefaultHttpClient()@ -> TRY { -> response=client.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cksystemsgroup/CPCC/blob/c047503e05879a0672b591106d6df65cb4bacfbe/progam/engine/src/main/java/at/uni_salzburg/cs/ckgroup/cscpp/engine/sensor/SensorProxy.java][getSensorValueAsStream][1] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(url,)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> LOG.error("Can not access "+url,e,)@ }
results[https://github.com/liuyijiang/spring-deep-study/blob/6e1432f03d1a5d39f845806f1d6adc0033b7e029/src/com/spring/restfull/client/RESTFullClient.java][test1][1] = -> TRY { -> httpget=new HttpGet("http://localhost:8080/springdeepstudy/getData",)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> httpget.abort()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/corestick/MateLauncher/blob/3b55b053e520b101e9f38d62b81d9dfeec2477bc/MateLauncher/src/mobi/intuitit/android/homepage/JSONfunctions.java][getJSONfromURL][1] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> httpGet=new HttpGet(url,)@ -> httpGet.setHeader("phone",PhoneNum,)@ -> response=httpclient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> Log.e("kim","1"+e,)@ }
results[https://github.com/ALRubinger/shrinkwrap/blob/5c1a78c09c4319174ca886d7809460a121f77a31/extension-jetty/src/test/java/org/jboss/shrinkwrap/jetty_6/test/JettyDeploymentIntegrationUnitTestCase.java][requestWebapp][2] = -> TRY {  -> client=new DefaultHttpClient()@ -> request=new HttpGet(uri,)@ -> log.info("Executing request to: "+request.getURI(),)@ -> response=client.execute(request,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/FunkyAndroid/platform_development-os_x/blob/7b2cacb4523bc564321d0726c8b53b72f6b1c562/apps/Development/src/com/android/development/Connectivity.java][onRoutedRequest][5] = -> get=new HttpGet("http://"+url,)@ -> client=new DefaultHttpClient()@ -> TRY { -> httpResponse=client.execute(get,)@ -> Log.d(TAG,"routed http request gives "+httpResponse.getStatusLine(),)@ } CATCH(Exception) { -> Log.e(TAG,"routed http request exception = "+e,)@ }
results[https://github.com/imkevinxu/totoro/blob/8949ed2e3a1f4e1fc4e676c333ccb3df77779eab/bounce/src/com/authorwjf/bounce/BluetoothChat.java][sendMessage][1] = -> IF { -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(getURL,)@ -> responseGet=client.execute(get,)@ } CATCH(Exception) { -> Log.e(TAG,"FAILURE",)@ } }
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/core/tests/coretests/src/android/net/http/AbstractProxyTest.java][testConnectViaProxy][18] = -> TRY {  -> httpProxyClient=newHttpClient()@ -> request=new HttpGet("http://android.com/foo",)@ -> proxyConfig.configure(server,httpProxyClient,request,)@ -> response=httpProxyClient.execute(request,)@ -> assertEquals("this response comes via a proxy",contentToString(response,),)@ } CATCH(Exception) {}
results[https://github.com/GoogleCloudPlatform/appengine-tck/blob/e85eb0232b29b1f1339ab5f74c9d6439322b6bbb/tests/appengine-tck-oauth/src/test/java/com/google/appengine/tck/oauth/ClientSideWebAppFlowTest.java][invokeMethodOnServerUnauthenticated][1] = -> g=new HttpGet(String.format("%s/oauth-service-helper?method=%s",baseUrl,methodName,),)@ -> TRY { -> responseContent=EntityUtils.toString(client.execute(g,).getEntity(),)@ } CATCH(Exception) { -> throw new IllegalStateException(e,)@ }
results[https://github.com/markkerzner/FreeEed/blob/6850819a46f60b64c4c7125fbf63b57b96af7a30/freeeed/src/main/java/org/freeeed/lotus/NSFParser.java][requestResults][3] = -> httpClient=new DefaultHttpClient()@ -> TRY { -> request=new HttpGet(url+"/check-processing.html?taskId="+taskId,)@ -> response=httpClient.execute(request,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> System.out.println("NSFParser -- Problem sending data: "+e.getMessage(),)@ }
results[https://github.com/markkerzner/FreeEed/blob/5dda7915d084b2ef2503d4ecb0af30b704b17015/freeeed-processing/src/main/java/org/freeeed/lotus/SolrConnector.java][sendGetCommand][3] = -> TRY {  -> httpClient=new DefaultHttpClient()@ -> request=new HttpGet(command,)@ -> response=httpClient.execute(request,)@ -> IF { -> throw new RuntimeException("Invalid response",)@response.getStatusLine().getStatusCode()!=200 } } CATCH(Exception) {}
results[https://github.com/roalex/android_development/blob/7b2cacb4523bc564321d0726c8b53b72f6b1c562/apps/Development/src/com/android/development/Connectivity.java][onDefaultRequest][5] = -> get=new HttpGet("http://www.cnn.com",)@ -> client=new DefaultHttpClient(params,)@ -> TRY { -> response=client.execute(get,)@ -> Log.e(TAG,"response code = "+response.getStatusLine(),)@ } CATCH(Exception) { -> Log.e(TAG,"Exception = "+e,)@ }
results[https://github.com/berialcheng/Nirvana/blob/3226e1d641a686c62c79f071ea955246556aa0f2/apache-commons/src/main/java/org/nirvana/commons/httpclient/HttpClientTest.java][main][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> method=new HttpGet("http://jagger:8080/manager/html",)@ -> response=client.execute(method,)@ -> entity=response.getEntity()@ -> System.out.println(response.getStatusLine(),)@ } CATCH(Exception) {}
results[https://github.com/FunkyAndroid/platform_development-os_x/blob/7b2cacb4523bc564321d0726c8b53b72f6b1c562/apps/Development/src/com/android/development/Connectivity.java][onBoundHttpRequest][5] = -> get=new HttpGet("http://www.bbc.com",)@ -> client=new DefaultHttpClient(httpParams,)@ -> TRY { -> response=client.execute(get,)@ -> Log.d(TAG,"response code = "+response.getStatusLine(),)@ } CATCH(Exception) { -> Log.e(TAG,"Exception = "+e,)@ }
results[https://github.com/kwliou/SmartNature/blob/db1ca8ec084100a8fcae3f4ed3cbe6ef96d6e72a/src/edu/berkeley/cs160/smartnature/FindGarden.java][writeBitmap][1] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet("http://s3.amazonaws.com/gardengnome/"+fileName,)@ -> response=httpclient.execute(httpget,)@ -> response.getEntity().writeTo(output,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/intel-cloud/cosbench/blob/e434a9a3fae8e394b881a774c8b503a97fc62b47/dev/cosbench-scality/src/com/scality/cosbench/client/SproxydClient.java][retryConnection][1] = -> get=HttpClientUtil.makeHttpGet(uri.toString()+".conf",)@ -> TRY { -> response=client.execute(get,)@ -> statusLine=response.getStatusLine()@ } CATCH(Exception) { -> exclude(e.getMessage(),)@ }
results[https://github.com/b3log/b3log-latke/blob/76871c0b5746b330d12935995d814826f245a788/latke-client/src/main/java/org/b3log/latke/client/LatkeClient.java][getRepositoryNames][1] = -> TRY {  -> httpClient=new DefaultHttpClient()@ -> request=new HttpGet()@ -> request.setURI(uri,)@ -> httpResponse=httpClient.execute(request,)@ -> contentStream=httpResponse.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/kwliou/SmartNature/blob/db1ca8ec084100a8fcae3f4ed3cbe6ef96d6e72a/src/edu/berkeley/cs160/smartnature/FindGarden.java][getGarden][1] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(getString(R.string.server_url,)+"gardens/"+serverId+".json",)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/delving/sip-creator/blob/1c75179c7e3b3508d4a9d0a4b907ac7a49a7a768/sip-app/src/main/java/eu/delving/sip/Application.java][get][1] = -> TRY { -> get=new HttpGet(url,)@ -> response=httpClient.execute(get,)@ -> line=response.getStatusLine()@ -> return EntityUtils.toString(response.getEntity(),)@!(line.getStatusCode()!=HttpStatus.SC_OK) } CATCH(Exception) { -> throw new RuntimeException("Fetching problem: "+url,e,)@ }
results[https://github.com/mousepotato/narcissus/blob/6b584fdd9706236c72fc789aea4b89258f293527/src/main/java/com/anotherbug/tools/VedioLecturesDownloader.java][downloader][1] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> httpGet=new HttpGet(source_json,)@ -> response=httpclient.execute(httpGet,)@ -> is=response.getEntity().getContent()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/tobster/advanced-internet-computing-WS10/blob/a60bac13a31906ef7498d77e655d30c061561c49/src/test/java/at/ac/tuwien/infosys/aic/it/CustomerRestServiceTest.java][testGetNonExistingCustomer][3] = -> TRY {  -> request=new HttpGet(uri,)@ -> response=httpclient.execute(request,)@ -> assertThat(response.getStatusLine().getStatusCode(),is(404,),)@ } CATCH(Exception) {}
results[https://github.com/CMPUT301W13T11/FoodBook/blob/bd876a73724369018254942a42cad87bd8dcc170/FooBook/src/ca/ualberta/cmput301w13t11/FoodBook/model/ServerClient.java][hasConnection][1] = -> TRY { -> get=new HttpGet(url,)@ -> response=httpclient.execute(get,)@ -> ret=response.getStatusLine().getStatusCode()@ } CATCH(Exception) { -> logger.log(Level.SEVERE,"Exception occured when testing connection:"+e.getMessage(),)@ }
results[https://github.com/delving/delving/blob/a8774e6dc0a9d22803deafcde977639f1d75a389/sip-creator/src/main/java/eu/europeana/sip/gui/RepositoryConnection.java][run][2] = -> TRY { -> get=new HttpGet(url,)@ -> response=httpClient.execute(get,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> periodicListFetchTimer.stop()@ -> SwingUtilities.invokeLater(new Runnable(),)@ }
results[https://github.com/eggnet/com2pgsql/blob/730e37d796a684903f1d07d7076ae2911468f633/src/jira/Jira.java][getNextIssues][1] = -> TRY { -> httpClient=new DefaultHttpClient()@ -> httpget=new HttpGet(uri.toString()+"&jql=project%3D"+ComResources.ISSUE_NUMBER_KEY,)@ -> resp=httpClient.execute(httpget,)@ -> entity=resp.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mlidge/tweak-the-tweet/blob/1b7c2256f1db92f79138aee498a10c627baf0d49/TweaktheTweet/src/uw/changecapstone/tweakthetweet/TestStringBuilderDisasterList.java][doInBackground][2] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet("http://homes.cs.washington.edu/~yaluen/main.php?id=*",)@ -> response=(HttpResponse) httpclient.execute(httpget,)@ -> entity=(org.apache.http.HttpResponse) response.getEntity()@ } CATCH(Exception) { -> Log.e("log_tag","Error in http connection "+e.toString(),)@ }
results[https://github.com/Norconex/collector-http/blob/bbcb09536b79913e14256ec128ed03c71f51222c/norconex-collector-http/src/main/java/com/norconex/collector/http/robot/impl/DefaultRobotsTxtProvider.java][getRobotsTxt][1] = -> method=new HttpGet(robotsURL,)@!(robotsTxt!=null) -> TRY { -> response=httpClient.execute(method,)@!(robotsTxt!=null) -> is=response.getEntity().getContent()@!(robotsTxt!=null) } CATCH(Exception) { -> LOG.warn("Not able to obtain robots.txt at: "+robotsURL,e,)@!(robotsTxt!=null) -> robotsTxt=new RobotsTxt( new IURLFilter[],)@!(robotsTxt!=null) }
results[https://github.com/OrangeTeam/FamilyLink/blob/ecf780853ff2d4d8318ba209d0c4fc73b23028b0/app/src/org/orange/familylink/util/ConvertUtil.java][call][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> httpGet=new HttpGet("http://maps.google.com/maps/"+"api/geocode/json?latlng="+latitude+","+longitude+"&sensor=false",)@ -> httpGet.addHeader("Accept-Charset","GBK;q=0.7,*;q=0.3",)@ -> httpGet.addHeader("Accept-Language","zh-CN,zh,;q=0.8",)@ -> response=client.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/hazelcast/hazelcast/blob/4a923f283aa641f947eed63633e1e584bf570090/hazelcast-wm/src/test/java/com/hazelcast/wm/test/AbstractWebfilterTestCase.java][executeRequest][1] = -> TRY {  -> client=HttpClientBuilder.create().setDefaultCookieStore(cookieStore,).build()@ -> request=new HttpGet("http://localhost:"+serverPort+"/"+context,)@ -> response=client.execute(request,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/wanglu0919/chianwuxi_android/blob/f816fb574f916acc4bec5c6c6557e5f68e15cc82/chinaw/src/com/wuxi/app/net/HttpUtils.java][executeGet_response][1] = -> TRY { -> httpGet=new HttpGet(url,)@ -> httpClient=new DefaultHttpClient()@ -> httpGet.setParams(httpParams,)@ -> setHeader(httpGet,url,)@ -> httpResponse=httpClient.execute(httpGet,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/rileyteige/MyHorseShow/blob/e8ef2267d2f824fac737957a4279b7708a7a3da2/MyHorseShow/src/edu/myhorseshow/utility/Utility.java][getJsonObject][1] = -> httpget=new HttpGet(url,)@ -> httpclient=getDefaultHttpClient()@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> Log.e(TAG,"Download failed.",)@ -> e.printStackTrace()@ }
results[https://github.com/Biljet/Biljet-Android/blob/91cc851bd8f81aa8982a12d558837fd2ce045906/BiljetApp/src/com/biljet/app/QRResultsActivity.java][checkQR][1] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> getRequest=new HttpGet("http://www.biljetapp.com/api/check-qr?qr="+qrData,)@ -> response=httpclient.execute(getRequest,)@ -> responseStatus=response.getStatusLine()@ } CATCH(Exception) { -> runOnUiThread(new Runnable(),)@ }
results[https://github.com/florent-andre/LinkedHeritage/blob/1bbd046fb661876adeeb1c2950676df0be435581/security/ldapclient/src/main/java/eu/lh/security/ldapClient/impl/NTUAClient.java][checkAuthentication][1] = -> TRY { -> httpget=new HttpGet(uri,)@ -> httpclient=new DefaultHttpClient()@ -> resp=httpclient.execute(httpget,)@ -> IF { -> return true@resp.getStatusLine().getStatusCode()==200 } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Netflix/karyon/blob/c9774825d5d77c742cefbe7c6bbec97434db48fa/karyon-admin/src/test/java/com/netflix/adminresources/AdminResourceTest.java][testBasic][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> healthGet=new HttpGet("http://localhost:"+AdminResourcesContainer.LISTEN_PORT_DEFAULT+"/healthcheck",)@ -> response=client.execute(healthGet,)@ -> Assert.assertEquals("admin resource health check failed.",200,response.getStatusLine().getStatusCode(),)@ } CATCH(Exception) {}
results[https://github.com/pennja01/NorseSquare/blob/9fa0a44015c682030cf9c82e3d14183fdd666f50/Android/src/com/sp/norsesquare/froyo/LoginDatabaseTask.java][doInBackground][1] = -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(postURL,)@ -> responseGet=client.execute(get,)@ -> resentity=responseGet.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ -> Log.i("msg","begone vile magicks",)@ }
results[https://github.com/appnexus/mobile-sdk-android/blob/38d906fdb1b27ed6be5c6520ce2763058f3ecf55/sdk/src/com/appnexus/opensdk/InstallTrackerPixel.java][doInBackground][1] = -> IF { -> return true@params==null||params.length<1||params[0]==null } -> TRY { -> client=new DefaultHttpClient(p,)@!(params==null||params.length<1||params[0]==null) -> get=new HttpGet(url,)@!(params==null||params.length<1||params[0]==null) -> client.execute(get,)@!(params==null||params.length<1||params[0]==null) } CATCH(Exception) { -> e.printStackTrace()@!(params==null||params.length<1||params[0]==null) }
results[https://github.com/smarek/Simple-Dilbert/blob/e232db992000e8b71c815dc1cd2ee6c6b0c99272/src/com/mareksebera/dilbert/DilbertActivity.java][doInBackground][1] = -> get=new HttpGet("http://dilbert.com/strips/comic/"+params[0]+"/",)@ -> TRY { -> client=new DefaultHttpClient()@ -> response=client.execute(get,)@ -> return DilbertActivity.toString(response.getEntity(),)@ } CATCH(Exception) { -> Log.e(TAG,"HttpGet failed",e,)@ }
results[https://github.com/tomakehurst/wiremock/blob/76e91bb04ec3cd5d194a680b529875a5f7d21ade/src/main/java/com/github/tomakehurst/wiremock/client/HttpAdminClient.java][getJsonAssertOkAndReturnBody][1] = -> get=new HttpGet(url,)@ -> TRY { -> response=httpClient.execute(get,)@ -> statusCode=response.getStatusLine().getStatusCode()@ -> return getEntityAsStringAndCloseStream(response,)@!(statusCode!=expectedStatus) } CATCH(Exception) { -> return throwUnchecked(e,String.class,)@ }
results[https://github.com/the-real-girum/uc-berkeley-internship/blob/caca548703fb09ab570510eb46569da15ffd9ebe/Android/src/edu/berkeley/eecs/ruzenafit/activity/WorkoutTrackerActivity.java][doInBackground][2] = -> httpClient=new DefaultHttpClient()@ -> request=new HttpGet(RETRIEVE_WORKOUTS_URL,)@ -> TRY { -> response=httpClient.execute(request,)@ -> responseString=EntityUtils.toString(response.getEntity(),)@ } CATCH(Exception) { -> Log.e(TAG,"HTTP ERROR: "+e.getMessage(),)@ }
results[https://github.com/JCERTIFLab/m-domotique/blob/b87a832f77f3b887c458313da0d039a93f26d09c/mdomotique-android/src/com/jcertif/mdomotique/com/parseurs/RoomsParseur.java][getRooms][4] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(Parametres.getAllRooms,)@ -> httpget.addHeader("Content-Type","application/xml",)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> responseStatus=response.getStatusLine()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/helloworld1/AnyMemo/blob/10cc3232e24249422013b30d21c30779b35e08e8/src/org/liberty/android/fantastischmemo/DownloaderAnyMemo.java][obtainCategories][3] = -> TRY {  -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(url,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } ELSE { -> throw new Exception("Http Entity is null",)@!(entity!=null) } CATCH(Exception) {}
results[https://github.com/OpenConext/OpenConext-test/blob/47aae94bcf4a56446fd822e3120956d1c4c4b648/src/test/java/nl/surfnet/coin/mock/MockSoapServerTest.java][testMockHappyFlow][1] = -> TRY {  -> client=new DefaultHttpClient()@ -> response=client.execute(new HttpGet("http://localhost:8088/testUrl",),)@ -> contentType=response.getHeaders("Content-Type",)[0].getValue()@ -> is=response.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/pankajc-optimus/android-lib/blob/a782a04fc81cd5bacef2a56121c9308747837e4f/TwitterIntegration/Code/TwitterModule/src/com/optimus/mobile/android/ShowTweets.java][doInBackground][1] = -> TRY { -> hc=new DefaultHttpClient()@ -> get=new HttpGet("http://api.twitter.com/1/statuses/user_timeline.json?screen_name="+mUsername+"&count=30",)@ -> rp=hc.execute(get,)@ -> IF { -> entity=rp.getEntity()@rp.getStatusLine().getStatusCode()==HttpStatus.SC_OK } } CATCH(Exception) { -> Log.e("TwitterFeedActivity","Error loading JSON",e,)@ }
results[https://github.com/ORGTecnologo/7b6581PT/blob/42b0bea7c061638cfecea37719ef1c84a0a59f9c/Implementacion/ModuloMovil/workspace/Proyecto/src/Services/ListaUsuariosWs.java][doInBackground][2] = -> httpClient=new DefaultHttpClient()@ -> put=new HttpGet("http://10.0.2.2:8080/SERVER-MODULE-SERVICES/restws/usuarios/listarUsuarios",)@ -> put.setHeader("content-type","application/json",)@ -> TRY { -> resp=httpClient.execute(put,)@ -> respStr=EntityUtils.toString(resp.getEntity(),)@ } CATCH(Exception) { -> Log.e("ServicioRest","Error!",ex,)@ }
results[https://github.com/evgeniyarbatov/dev-practice/blob/8aa6cbd5a79cac8b6d324f33014cf10db698aed4/javascript/char-drawing/android-client/Draw/src/com/evgeniy/arbatov/draw/utils/HttpGetTask.java][doInBackground][1] = -> httpclient=new DefaultHttpClient()@ -> TRY { -> httpGet=new HttpGet(url[0],)@ -> Log.i("HTTP","GET: "+httpGet.getURI(),)@ -> httpclient.execute(httpGet,)@ } CATCH(Exception) { -> Log.i("HTTP","HTTP GET failed: "+e.getMessage(),)@ }
results[https://github.com/rodolfoasantos/catch-the-pigeon/blob/516070832c05243a3cfa57f49171b84d2ebb2b58/android/CatchThePigeonAndroid/src/br/eng/mosaic/pigeon/communication/CommunicationUtil.java][getFileContent][1] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(url,)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> IF { -> return result@entity!=null } } CATCH(Exception) { -> Log.e("NGVL","Falha ao acessar service",e,)@ }
results[https://github.com/BladeRunnerJS/brjs/blob/922efb3a45f16a3e7a9927a58392d63a85410ffb/bladerunner-common-servlets/src/test/java/com/caplin/cutlass/filter/thirdpartyfilter/ThirdPartyResourceFilterTest.java][testNonThirdPartyLibraryResourceRequestIsUnchanged][2] = -> TRY {  -> httpget=new HttpGet(requestUrl,)@ -> response=httpclient.execute(httpget,)@ -> assertEquals(200,response.getStatusLine().getStatusCode(),)@ -> assertEquals("Content of index.html",getResponseBody(response,),)@ } CATCH(Exception) {}
results[https://github.com/kwliou/SmartNature/blob/db1ca8ec084100a8fcae3f4ed3cbe6ef96d6e72a/src/edu/berkeley/cs160/smartnature/FindGarden.java][getPlots][2] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(getString(R.string.server_url,)+"gardens/"+garden.getServerId()+"/plots.json",)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/fcrepo/fcrepo/blob/d37876973b783b99b74a74adad8bdf2fd564fbbf/fcrepo-integrationtest/fcrepo-integrationtest-core/src/main/java/org/fcrepo/test/integration/TestLargeDatastreams.java][exportAPIALite][1] = -> TRY {  -> httpMethod=new HttpGet(url,)@ -> httpMethod.setHeader(HttpHeaders.CONNECTION,"Keep-Alive",)@ -> client=fedoraClient.getHttpClient()@ -> response=client.execute(httpMethod,)@ -> dataStream=new BufferedInputStream(response.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/vipersaudio/viper4android_fx/blob/0544d6cbdd0e002129c760c9fb4be06e7ce3ad4f/android_4.x/src/com/vipercn/viper4android_v2/activity/ViPER4Android.java][submitInformation][1] = -> TRY { -> httpRequest=new HttpGet(mURL,)@ -> httpClient=new DefaultHttpClient()@ -> httpResponse=httpClient.execute(httpRequest,)@ -> return httpResponse.getStatusLine().getStatusCode()==HttpStatus.SC_OK@ } CATCH(Exception) { -> Log.i("ViPER4Android","Submit failed, error = "+e.getMessage(),)@ }
results[https://github.com/AKSW/FOX/blob/f50c23f188d0a82641b0fe6b778046fa1697c7a2/src/main/java/org/aksw/fox/ketools/Yahooapis.java][main][1] = -> TRY {  -> httpget=new HttpGet(builder.build(),)@ -> System.out.println(httpget.getURI(),)@ -> httpclient=new DefaultHttpClient()@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/tobster/advanced-internet-computing-WS10/blob/57958746aff9daaaf9b76425f4bd0d4d18268bb5/ass1/src/test/java/at/ac/tuwien/infosys/aic/it/CustomerManagementServiceTest.java][testGetExistingCustomer][2] = -> TRY {  -> request=new HttpGet(uri,)@ -> response=httpclient.execute(request,)@ -> assertThat(response.getStatusLine().getStatusCode(),is(200,),)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/socialize/socialize-sdk-android/blob/67734ee6e4aa4e0f06a705c50081ce022f94ec9d/test/src/com/socialize/test/integration/DefaultHttpClientFactoryTest.java][testClientFactoryCorrectlyConfiguresAClientForHttps][2] = -> TRY {  -> client=factory.getClient()@ -> get=new HttpGet("https://github.com/",)@ -> response=client.execute(get,)@ -> assertNotNull(response,)@ -> assertEquals(200,response.getStatusLine().getStatusCode(),)@ } CATCH(Exception) {}
results[https://github.com/barchart/barchart-netty4/blob/0144bd71d8779d2276e052591418a36dde4946ee/server/src/test/java/com/barchart/netty/server/http/TestHttpServer.java][testShutdown][2] = -> TRY {  -> get=new HttpGet("http://localhost:"+port+"/client-disconnect",)@ -> response=client.execute(get,)@ -> EntityUtils.consume(response.getEntity(),)@ -> assertEquals(200,response.getStatusLine().getStatusCode(),)@ } CATCH(Exception) {}
results[https://github.com/codahale/metrics/blob/0dfb06fff5613e22684cbae250873048fb2a8a80/metrics-httpclient/src/test/java/com/codahale/metrics/httpclient/InstrumentedHttpClientTest.java][registersExpectedMetricsGivenNameStrategy][1] = -> TRY {  -> get=new HttpGet("http://example.com?q=anything",)@ -> when(metricNameStrategy.getNameFor(anyString(),eq(get,),),).thenReturn(metricName,)@ -> client.execute(get,)@ } CATCH(Exception) {}
results[https://github.com/beerbong/com_beerbong_zipinst/blob/128f318b3c2321c5a08767ba3f0e94218625b806/src/com/beerbong/zipinst/http/HttpStringReader.java][doInBackground][1] = -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(urls[0],)@ -> r=client.execute(get,)@ -> status=r.getStatusLine().getStatusCode()@ -> e=r.getEntity()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/mwebi/runnersHigh/blob/7b781573c59fdd1733b64eb1e3ca4e8998899c7b/src/com/runnershigh/HighScoreActivity.java][showOnlineScore][1] = } ELSE { -> TRY { -> client=new DefaultHttpClient()@ -> get=new HttpGet(getURL,)@ -> responseGet=client.execute(get,)@ -> resEntityGet=responseGet.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cesarferreira/SmartRemote/blob/13fa461d147c272a3af4031ac2f601bfeb69e59c/SmartRemoteClient/src/com/smartremote/model/JSONRequest.java][<init>][1] = -> TRY { -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(url,)@ -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ -> Log.e("log_tag","Error in http connection "+e.toString(),)@ }
results[https://github.com/saetre/TABuss/blob/70d3e09a61a5a9f17324eb1786b8940aff796f17/src/test/BusTUC/Speech/HTTP.java][sendGetTTS][1] = -> client=new DefaultHttpClient()@ -> TRY { -> httpget=new HttpGet("http://vm-6114.idi.ntnu.no:1337/SpeechServer/tts?textInput="+URLEncoder.encode(input,"UTF-8",),)@ -> response=client.execute(httpget,)@ -> response.getEntity().writeTo(outstream,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cheeseinvert/geocamTalkForAndroid/blob/e3fee943a21375d9fd483cf3f6f0957d8fa366dd/android/src/gov/nasa/arc/geocam/memo/service/DjangoMemoImplementation.java][getMemos][1] = -> TRY { -> httpGet=new HttpGet(memoUrl+memoMessagesJson,)@ -> response=httpClient.execute(httpGet,)@ -> response.getEntity().writeTo(ostream,)@ } CATCH(Exception) { -> Toast.makeText(contextProvider.get(),"Cannot access Memo Web",Toast.LENGTH_SHORT,).show()@ }
results[https://github.com/kwliou/SmartNature/blob/db1ca8ec084100a8fcae3f4ed3cbe6ef96d6e72a/src/edu/berkeley/cs160/smartnature/FindGarden.java][run][1] = -> httpclient=new DefaultHttpClient()@ -> httpget=new HttpGet(getString(R.string.server_url,)+"find.json?"+query.substring(1,),)@ -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cksystemsgroup/CPCC/blob/a57cf4353853a9b745a4bbfb59d4f2e85cd13bbe/program/engine/src/main/java/at/uni_salzburg/cs/ckgroup/cscpp/engine/sensor/SensorProxy.java][getSensorValueAsStream][1] = -> IF { -> return null@pilotSensorUrl==null } -> httpclient=new DefaultHttpClient()@!(pilotSensorUrl==null) -> httpget=new HttpGet(url,)@!(pilotSensorUrl==null) -> TRY { -> response=httpclient.execute(httpget,)@!(pilotSensorUrl==null) -> entity=response.getEntity()@!(pilotSensorUrl==null) } CATCH(Exception) { -> LOG.error("Can not access "+url,e,)@!(pilotSensorUrl==null) }
