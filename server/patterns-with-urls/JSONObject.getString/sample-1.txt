results[https://github.com/johan/gridworks/blob/4749b47e3c80c70acbd75d98cb23deee1c7acb06/src/main/java/com/metaweb/gridworks/clustering/Clusterer.java][initializeFromJSON][19] = -> TRY {  -> colname=o.getString("column",)@ } CATCH(Exception) {}
results[https://github.com/apache/sling/blob/8589c62289dcd90b8d8b9867c6d5bd20b154de0f/testing/tools/src/main/java/org/apache/sling/testing/tools/osgi/WebconsoleClient.java][getBundleState][1] = -> TRY {  -> bundle=data.getJSONObject(0,)@ -> return bundle.getString(JSON_KEY_STATE,)@ } CATCH(Exception) {}
results[https://github.com/crissii/water-esb-new/blob/467d232fb747521fa36f7c0d6725de186700fad8/modules/messagecenter/src/main/java/com/sunsharing/msgcenter/consumeClient/ConsumerClient.java][handle][1] = -> TRY {  -> obj=JSONObject.parseObject(msg,)@ -> num=obj.getString("num",)@ } CATCH(Exception) {}
results[https://github.com/jrecursive/mecha/blob/f07e0da968c089f10c5dd25a8d9d3fe4257f6e47/src/mecha/vm/bifs/ClientModule.java][<init>][4] = -> TRY {  -> super(refId,ctx,config,)@ -> channel=config.getString("channel",)@ } CATCH(Exception) {}
results[https://github.com/sourcesense/modeshape-stone/blob/53f8a077db5e0241896d9f1528a32014c7d02fea/web/modeshape-web-jcr-rest-client/src/main/java/org/modeshape/web/jcr/rest/client/json/FileNode.java][getFileContents][2] = -> TRY {  -> props=(JSONObject) contentNode.get(IJsonConstants.PROPERTIES_KEY,)@ -> encodedContents=props.getString(IJcrConstants.DATA_PROPERTY,)@ } CATCH(Exception) {}
results[https://github.com/azavea/OpenTreeMap-Android/blob/6ef695afbb2336268488570fffc0d504636ff2d4/OpenTreeMap/src/org/azavea/otm/data/PendingEdit.java][getSubmittedTime][1] = -> TRY {  -> when=data.getString("submitted",)@ -> return format.parse(when,)@ } CATCH(Exception) {}
results[https://github.com/fuhaiq/wesker/blob/e83a87febe8a87038891da525323b4c7a54c43ae/wesker-mathematica/src/com/wesker/mathematica/rpc/MathematicaHandler.java][mathML][1] = -> TRY {  -> input=json.getString("input",)@ -> outPut=mma.evaluateToString("ExportString["+input+", \"MathML\"]",)@ } CATCH(Exception) {}
results[https://github.com/yungsters/rain-workload-toolkit/blob/1bb06553bf0bb859e970c5b20d82fa29de8f6151/src/radlab/rain/util/FileMetricWriter.java][<init>][1] = -> TRY {  -> super(config,)@ -> this._filename=config.getString(MetricWriter.CFG_FILENAME_KEY,)@ } CATCH(Exception) {}
results[https://github.com/apache/sling/blob/a7367eec0b28d89bb94ab28e34cce307110d7578/launchpad/testing/src/test/java/org/apache/sling/launchpad/webapp/integrationtest/servlets/post/TypeHintTest.java][getProperty][3] = -> TRY {  -> jo=new JSONObject(content,)@ -> return jo.getString(name,)@ } CATCH(Exception) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/92ecc0c0f5a00fe19784bbcec637a6217ffe3678/src/main/java/com/metaweb/gridworks/operations/ColumnRemovalOperation.java][reconstruct][20] = -> TRY {  -> return new ColumnRemovalOperation(obj.getString("columnName",),)@ } CATCH(Exception) {}
results[https://github.com/sandeepsundaram/Heroku/blob/af90a627713746c82aa47a4319ef3ec7c9a435b3/src/main/java/utils/JSONUtils.java][getValue][1] = -> TRY { -> value=jObj.getString(key,)@ } CATCH(Exception) { -> handlException(e,)@ }
results[https://github.com/zmLiu/JavaLibs/blob/99fa7c9f52386818df1de90abd0863d80abb347a/JavaLibs/src/lzm/netty/socket/handler/SocketServerHandler.java][channelRead0][1] = -> TRY {  -> jsonObject=(JSONObject) msgs@ -> cmd=jsonObject.getString("cmd",)@ -> command=CommandManager.getCommand(cmd,)@ } CATCH(Exception) {}
results[https://github.com/nicholasdelrio/VLC/blob/63c62be566ca15d66f7149e5160731b9bcc44484/vlc-visko-interface/src/main/java/edu/utep/cybershare/vlc/visko/HTMLQueryBatch.java][extractInputDataURL][4] = -> TRY { -> inputDataURL=aVisKoResult.getString("inputURL",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mnipper/AndroidSurvey/blob/dbf9482a6bacbf5817725d22ae01da48fd2d66e0/test/org/adaptlab/chpir/android/survey/Models/SurveyTest.java][shouldHaveJsonStringDeviceIdentifier][1] = -> TRY {  -> assertEquals(DEVICE_ID,json2.getString("device_uuid",),)@ } CATCH(Exception) {}
results[https://github.com/utwente-db/neogeo/blob/8683b99cad521d8bdc9521424fea3c4237ff5e5a/neogeo-twitter/src/main/java/nl/utwente/db/neogeo/twitter/harvest/JSONParser.java][getIDStr][1] = -> TRY {  -> json=getTOPJSONObject(jsonTxt,)@ -> return json.getString("id_str",)@ } CATCH(Exception) {}
results[https://github.com/azavea/OpenTreeMap-Android/blob/7236a1f7c1503807cb7befb61c7a5b342a73c6ae/OpenTreeMap/src/org/azavea/otm/data/PendingEditDescription.java][getLatestValue][1] = -> TRY { -> return data.getString("latest_value",)@ } CATCH(Exception) { -> Log.e(App.LOG_TAG,"Unable to parse latest value for "+key,e,)@ }
results[https://github.com/jrecursive/mecha/blob/a68398e165c672aa50086571a7ed1b0b81c611f8/src/java/mecha/vm/MVM.java][execute][2] = -> TRY {  -> dynamicInvoke(ctx,ast.getString("$",),ast,)@ } CATCH(Exception) {}
results[https://github.com/RHIT/Mobile/blob/68659e2dcbed8b1e86b805dec2a802a300d70996/android/src/BetaManager/src/edu/rosehulman/android/directory/beta/service/BetaService.java][register][2] = -> TRY {  -> root=client.execute()@ -> return root.getString("authToken",)@ } CATCH(Exception) {}
results[https://github.com/societies/SOCIETIES-SCE-Services/blob/ea2ed1f6a96e253e297dd64fd5db643a0268f193/3rdPartyServices/StudentServices/NearMe/Android/src/com/asocom/tools/Json.java][processfriendRequest][1] = -> TRY {  -> Manager.setStringValue(jSonObject.getString("senderId",),)@ } CATCH(Exception) {}
results[https://github.com/mnipper/AndroidSurvey/blob/dbf9482a6bacbf5817725d22ae01da48fd2d66e0/test/org/adaptlab/chpir/android/survey/Models/SurveyTest.java][shouldHaveJsonStringUuid][1] = -> TRY {  -> assertNotNull(json2.getString("uuid",),)@ } CATCH(Exception) {}
results[https://github.com/cycladessoa/cyclades/blob/06e83fb872d3f029bcefe79232591f53d933e5d0/engine/src/main/java/org/cyclades/engine/stroma/xstroma/STROMARequest.java][<init>][1] = -> TRY {  -> serviceName=stromaRequest.getString("service",)@ -> dataSection=stromaRequest.getJSONObject("data",)@ } CATCH(Exception) {}
results[https://github.com/jgzornoza/SistemaVotacion/blob/7b40650f315ed05d297b71c345c5c0a7b9a16fe0/SistemaVotacionAndroid/src/org/sistemavotacion/modelo/ReciboVoto.java][<init>][1] = -> TRY {  -> contenidoReciboJSON=new JSONObject(contenidoRecibo,)@ -> this.opcionSeleccionadaId=contenidoReciboJSON.getLong("opcionSeleccionadaId",)@ -> this.eventoURL=contenidoReciboJSON.getString("eventoURL",)@ } CATCH(Exception) {}
results[https://github.com/mmcardle/MServe/blob/7165c5222d66b9c2d4141952c1b2ab5c643cd610/examples/mserve-java/src/test/java/uk/ac/soton/itinnovation/mserve/MethodTest.java][testDoPostToURL_String_String][4] = -> TRY {  -> ob=new JSONObject(output,)@ -> containersToDelete.add(ob.getString("id",),)@ } CATCH(Exception) {}
results[https://github.com/onsip/jitsi/blob/c1adef71c1ebd1f1d6fb65633f601d53bf959831/src/net/java/sip/communicator/impl/replacement/youtube/ReplacementServiceYoutubeImpl.java][getReplacement][8] = -> TRY { -> wrapper=new JSONObject(holder,)@ -> thumbUrl=wrapper.getString("thumbnail_url",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitCommitTest.java][testCommitEmptyComment][2] = -> TRY {  -> gitSection=project.getJSONObject(GitConstants.KEY_GIT,)@ -> gitHeadUri=gitSection.getString(GitConstants.KEY_HEAD,)@ -> request=getPostGitCommitRequest(gitHeadUri,"",false,)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/b4772f1f04a36a378555ec4d8b334f7df2296a15/main/src/com/google/refine/operations/cell/FillDownOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new FillDownOperation(engineConfig,obj.getString("columnName",),)@ } CATCH(Exception) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/4117b5d048f10b9f4697ee494088ad10a53c4800/shoppingui/src/test/java/com/connecture/shopping/ui/security/ShoppingResultHandlerActionTest.java][testLogin][2] = -> TRY {  -> jsonObject=action.getJsonObject()@ -> Assert.assertEquals(Action.LOGIN,jsonObject.getString("type",),)@ } CATCH(Exception) {}
results[https://github.com/jri/deepamehta/blob/a569192a17ce692e156a4bdcba9da36af9c7540d/deepamehta3-core/src/main/java/de/deepamehta/core/model/AssociationRoleModel.java][<init>][4] = -> TRY { -> this.assocId=assocRoleModel.getLong("assoc_id",)@ -> this.roleTypeUri=assocRoleModel.getString("role_type_uri",)@ } CATCH(Exception) { -> throw new RuntimeException("Parsing AssociationRoleModel failed (JSONObject="+assocRoleModel+")",e,)@ }
results[https://github.com/photo/mobile-android/blob/8aeb16ceeb966a805f74e6c008582959984a7aa1/app/src/com/trovebox/android/app/FacebookFragment.java][doInBackground][2] = -> TRY { -> jsonObject=new JSONObject(response,)@ -> name=jsonObject.getString("name",)@ } CATCH(Exception) { -> GuiUtils.error(TAG,R.string.errorCouldNotRetrieveFacebookScreenName,ex,activity,)@ }
results[https://github.com/yungsters/rain-workload-toolkit/blob/9ad52ef38d09a6189633ae838609ecbdb4de41d9/src/radlab/rain/util/SocketMetricWriter.java][<init>][1] = -> TRY {  -> super(config,)@ -> this._ipAddress=config.getString(MetricWriter.CFG_IP_ADDRESS_KEY,)@ -> this._port=config.getInt(MetricWriter.CFG_PORT_KEY,)@ } CATCH(Exception) {}
results[https://github.com/russjohnson09/Tweet/blob/75ed3ca5bebdec2c40b1649619e3d49cbf89666f/lib/twitter4j-3.0.3/twitter4j-core/src/test/java/twitter4j/internal/json/HTMLEntityTest.java][testUnescapeAndSlideEntityIncdicesWithNullParameters][3] = -> TRY {  -> json=new JSONObject(rawJSON,)@ -> escaped=HTMLEntity.unescapeAndSlideEntityIncdices(json.getString("text",),null,null,null,null,)@ -> assertEquals("@null < #test > &ほげほげ @t4j_news %& http://t.co/HwbSpYFr http://t.co/d4G7MQ62",escaped,)@ } CATCH(Exception) {}
results[https://github.com/dfci-cccb/mev/blob/9b4ccf1f96a34439cee9804127bedbdf7a721715/annotation/server/src/main/java/com/google/refine/operations/recon/ReconMatchBestCandidatesOperation.java][reconstruct][18] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconMatchBestCandidatesOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/OpenRefine/OpenRefine/blob/1227c9dff41bdc87b56ed0b35cc8d1938d0db168/src/main/java/com/metaweb/gridworks/model/operations/ReconMarkNewTopicsOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconMarkNewTopicsOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/geoserver/geoserver-history/blob/dcb33fd3a8b4f9e6ed3e3cf477e2863970968a6f/geoserver/wfs/src/test/java/org/geoserver/wfs/response/GeoJSONTest.java][testGet][22] = -> TRY {  -> aFeature=featureCol.getJSONObject(0,)@ -> assertEquals(aFeature.getString("geometry_name",),"surfaceProperty",)@ } CATCH(Exception) {}
results[https://github.com/isenseDev/iSENSE-Hardware/blob/014f81a20ad9b37d27994d3cc53fe1bc1c5317dc/Hardware/Vernier/src/REST/RestAPI.java][getMyIp][7] = -> TRY { -> obj=o.getJSONObject("data",)@ -> return obj.getString("msg",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/kvite/astridclone/blob/e34e7d71e11a606b245fe33167ebf52bce1180e3/tests/src/com/todoroo/astrid/producteev/ProducteevSyncTest.java][getRemoteTitle][3] = -> TRY { -> result=ApiUtilities.decode(remoteTask.getString("title",),)@ } CATCH(Exception) { -> fail("Remote task object did not contain title field",)@ }
results[https://github.com/cc14514/pet-service/blob/7c0fa957427e91d4b30954c3ded854927c97db68/pet-service-states/src/main/java/com/momoplan/pet/framework/servicestate/service/impl/StateServiceSupport.java][get][1] = -> TRY { -> return json.getString(key,)@ } CATCH(Exception) { -> logger.debug(e.getMessage(),)@ }
results[https://github.com/webdetails/cda/blob/738155e56c696cc7bf6f69607eb77ae1c92deee2/cda-pentaho5/src/pt/webdetails/cda/cache/scheduler/CdaCacheWarmer.java][getCdaSettings][1] = -> TRY {  -> cdaFile=json.getString("cdaFile",)@ -> return engine.getSettingsManager().parseSettingsFile(cdaFile,)@ } CATCH(Exception) {}
results[https://github.com/tu-vu-duy/platform/blob/da0c9857c48d0df294ce3dd6da9ac521e6fcd786/eXoGadget/server/java/gadgets/src/test/java/org/apache/shindig/gadgets/ContainerConfigTest.java][testBasic][11] = -> TRY {  -> nested=config.getJsonObject(DEFAULT_CONTAINER,NESTED_KEY,)@ -> nestedValue=nested.getString(NESTED_NAME,)@ -> assertEquals(NESTED_VALUE,nestedValue,)@ } CATCH(Exception) {}
results[https://github.com/OpenRefine/OpenRefine/blob/7fd6e22af4686790b74e7b4be6474f5ca4a3a03b/main/src/com/google/refine/operations/cell/BlankDownOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new BlankDownOperation(engineConfig,obj.getString("columnName",),)@ } CATCH(Exception) {}
results[https://github.com/evilsocket/dsploit/blob/a7dbfa3eab1111e7ee31f26bc79afce460e67d8c/dSploit/src/it/evilsocket/dsploit/plugins/mitm/Hijacker.java][getUserName][2] = -> TRY { -> response=new JSONObject(data,)@ -> username=response.getString("name",)@ } CATCH(Exception) { -> System.errorLogging(e,)@ }
results[https://github.com/socialize/socialize-sdk-android/blob/122ce51f4454a8e4b8403ec678b42627e814d7da/test/src/com/socialize/test/integration/services/ShareUtilsTest.java][testGetShareExists][2] = -> TRY {  -> jsonObject=(JSONObject) jsonArray.get(0,)@ -> id=jsonObject.getString("id",)@ -> shareId=Long.parseLong(id,)@ } CATCH(Exception) {}
results[https://github.com/mcheung63/titan/blob/2eaf6d9bcfbd5d8d53acfa35457cb4adab491a0a/src/main/java/com/titan/vm/VMLogDetailTableModel.java][addValue][1] = -> TRY { -> v.add(value.getString(key,),)@ } CATCH(Exception) { -> v.add(null,)@ }
results[https://github.com/jdunck/google-refine/blob/9b335a552bcc01f120d86832e9322c5abb8106db/main/src/com/google/refine/operations/cell/TransposeRowsIntoColumnsOperation.java][reconstruct][4] = -> TRY {  -> return new TransposeRowsIntoColumnsOperation(obj.getString("columnName",),obj.getInt("rowCount",),)@ } CATCH(Exception) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/bfc7ef7739254e84248816cae5f92bf3d6cf6f9b/src/main/java/com/metaweb/gridworks/operations/recon/ReconDiscardJudgmentsOperation.java][reconstruct][14] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconDiscardJudgmentsOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/b3log/b3log-solo/blob/bbfe07ad74be366adc0e266fc943655b6434e47e/core/src/test/java/org/b3log/solo/service/PreferenceQueryServiceTestCase.java][getPreference][1] = -> TRY {  -> preference=preferenceQueryService.getPreference()@ -> Assert.assertEquals(preference.getString(Preference.BLOG_TITLE,),Preference.Default.DEFAULT_BLOG_TITLE,)@ } CATCH(Exception) {}
results[https://github.com/jrecursive/mecha/blob/a68398e165c672aa50086571a7ed1b0b81c611f8/src/java/mecha/vm/bifs/StreamModule.java][<init>][6] = -> TRY {  -> super(refId,ctx,config,)@ -> total=Integer.parseInt(config.getString("count",),)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitResetTest.java][testResetNull][1] = -> TRY {  -> gitSection=project.getJSONObject(GitConstants.KEY_GIT,)@ -> gitIndexUri=gitSection.getString(GitConstants.KEY_INDEX,)@ -> request=getPostGitIndexRequest(gitIndexUri,null,null,(String) null,)@ } CATCH(Exception) {}
results[https://github.com/GistLabs/mechanize/blob/a3ad9d196a9245f75601589d36f48cc4e67bd3d2/src/test/java/com/gistlabs/mechanize/json/JsonTest.java][testEmptyKey][6] = -> TRY {  -> json=new JSONObject("{ \"one\" : \"two\", \"\" : \"four\" }",)@ -> assertEquals("four",json.getString("",),)@ } CATCH(Exception) {}
results[https://github.com/todoroo/astrid/blob/e34e7d71e11a606b245fe33167ebf52bce1180e3/tests/src/com/todoroo/astrid/producteev/ProducteevSyncTest.java][getRemoteDueDate][3] = -> TRY { -> remoteDueDate=ApiUtilities.producteevToUnixTime(remoteTask.getString("deadline",),0,)@ } CATCH(Exception) { -> fail("Couldn't fetch time from remote task",)@ }
results[https://github.com/heldersantosmoreira/TheTrainProject/blob/b7013b9c4d3ad47a123b37c3a2841c9ec710580a/Android/src/pt/traincompany/account/CardManagement.java][run][2] = -> TRY { -> info=new JSONObject(response,)@ -> status=info.getString("status",)@ } CATCH(Exception) { -> communicationProblem()@ }
results[https://github.com/OpenRefine/OpenRefine/blob/12a61b6ec62719ac19098e2eb7fb52c85986051e/main/src/com/google/refine/operations/column/ColumnMoveOperation.java][reconstruct][4] = -> TRY {  -> return new ColumnMoveOperation(obj.getString("columnName",),obj.getInt("index",),)@ } CATCH(Exception) {}
results[https://github.com/jrecursive/mecha/blob/4185d625dba3d044a862d67ae747bc5abb42e3f5/src/mecha/vm/bifs/SolrModule.java][onDataMessage][2] = -> TRY {  -> term=msg.getString("value",)@ -> count=msg.getInt("count",)@ -> valueMap.put(term,count,)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitStatusTest.java][testStatusCleanLink][1] = -> TRY {  -> gitSection=project.getJSONObject(GitConstants.KEY_GIT,)@ -> gitStatusUri=gitSection.getString(GitConstants.KEY_STATUS,)@ -> assertStatus(StatusResult.CLEAN,gitStatusUri,)@ } CATCH(Exception) {}
results[https://github.com/dbstar/dbstar/blob/74120eaa088b8ba2107926f49a20fede128ccc73/DbstarLauncher/src/com/dbstar/guodian/parse/SetPowerTargetDataHandler.java][parseSetPowerTargetResult][1] = -> TRY { -> rootObject=(JSONObject) array.get(0,)@ -> resultData.Result=rootObject.getString(JsonTag.TAGResult,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/vaadin/atmosphere/blob/2c264046b67865e44fd5366619469c7fb9a98981/samples/twitter-search/src/main/java/org/atmosphere/samples/twitter/TwitterFeed.java][onCompleted][1] = -> TRY {  -> json=new JSONObject(s,)@ -> refreshUrl.set(json.getString("refresh_url",),)@ } CATCH(Exception) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/ccea626724deeff150c5806c499aae0f1d6465bb/shoppingprocess/src/main/java/com/connecture/shopping/process/service/data/converter/ConsumerDataConverterUtil.java][getPolicyEffectiveTime][1] = -> TRY {  -> eventJSON=jsonObject.getJSONObject("event",)@ -> dateStr=eventJSON.getString("Coverage_Effective_Date",)@ -> effectiveDate=ShoppingDateUtils.stringToDate(dateStr,)@ } CATCH(Exception) {}
results[https://github.com/aldaris/openam/blob/a7de8c9970d4c8b24c141edc24b363e14259b899/openam/openam-federation/OpenFM/src/test/java/com/sun/identity/rest/PrivilegeRestTest.java][getAndDeleteAndAdd][3] = -> TRY {  -> jbody=parseResult(result,)@ -> jsonStr=jbody.getString(PrivilegeResource.RESULT,)@ -> form.add("privilege.json",jsonStr,)@ } CATCH(Exception) {}
results[https://github.com/mnipper/AndroidSurvey/blob/dbf9482a6bacbf5817725d22ae01da48fd2d66e0/test/org/adaptlab/chpir/android/survey/Models/SurveyTest.java][shouldHaveJsonStringInstrumentVersionNumber][2] = -> TRY {  -> assertEquals(VERSION_NUMBER.toString(),json2.getString("instrument_version_number",),)@ } CATCH(Exception) {}
results[https://github.com/AdamBien/lightfish/blob/f4e46ca945b6e2bd280290edc48f2afbc0ef4e00/lightfish/src/main/java/org/lightfish/business/monitoring/control/collectors/authentication/SessionTokenCollector.java][collect][1] = -> TRY {  -> extraProps=result.getJSONObject("extrapProperties",)@ -> token=extraProps.getString("token",)@ -> return new DataPoint<>("token",token,)@ } CATCH(Exception) {}
results[https://github.com/b3log/b3log-solo/blob/5163832f9b0f48fdb5a165dc37ba690d31c7a952/core/src/test/java/org/b3log/solo/repository/impl/UserRepositoryImplTestCase.java][test][2] = -> TRY {  -> found=userRepository.getByEmail("test1@gmail.com",)@ -> Assert.assertNotNull(found,)@ -> Assert.assertEquals(found.getString(User.USER_PASSWORD,),"pass1",)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitIndexTest.java][testIndexModifiedByOrion][1] = -> TRY {  -> gitSection=testTxt.getJSONObject(GitConstants.KEY_GIT,)@ -> gitIndexUri=gitSection.getString(GitConstants.KEY_INDEX,)@ -> request=getGetGitIndexRequest(gitIndexUri,)@ } CATCH(Exception) {}
results[https://github.com/jdeolive/suite-old/blob/b7533701cf4a55ff5c1a192ad76d07bd1472b2fb/geoserver/importer/src/test/java/org/opengeo/data/importer/rest/RESTDataTest.java][testFilePut][6] = -> TRY {  -> task=getTask(i,t1,)@ -> assertEquals("READY",task.getString("state",),)@ } CATCH(Exception) {}
results[https://github.com/partakein/partake/blob/27e36ee3915f41aa2ee720fcf5ba7bffe01d2c0a/Partake/test/in/partake/controller/api/image/CreateImageAPITest.java][testToCreateWithPJpeg][1] = -> TRY {  -> json=getJSON(proxy,)@ -> imageId=json.getString("imageId",)@ -> imageData=loadImage(imageId,)@ } CATCH(Exception) {}
results[https://github.com/kogeva/Reactr/blob/35c698c9cd5a56ddc03dcc32d3326c78bff56904/Reactr/src/main/java/com/example/reactr/AnotherActivity.java][loadStInfo][3] = -> TRY { -> urls=json.getJSONObject("static_info",)@ -> toRet=urls.getString(tag,)@ } CATCH(Exception) { -> System.out.println("Exp="+e,)@ }
results[https://github.com/skrusche63/AMES-Web-Service/blob/d8eb81a2d35ee6b08e11c1d424eda86d479ffb92/ames-web-service/src/de/kp/ames/web/function/domain/model/PartyObject.java][createEmailAddress][1] = -> TRY {  -> email=(jEmailAddress.has(RIM_EMAIL,))?jEmailAddress.getString(RIM_EMAIL,):""@ -> return jaxrLCM.createEmailAddress(email,)@ } CATCH(Exception) {}
results[https://github.com/OpenAMEE/amee.platform.domain/blob/b6455753401380706c8b206e52f3007f7ec7c678/src/test/java/com/amee/domain/profile/builder/v1/ProfileItemBuilderTest.java][nan][2] = -> TRY {  -> obj=v1Builder.getJSONObject(false,)@ -> assertEquals("Default amount should be NaN.","NaN",obj.getString("amountPerMonth",),)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitResetTest.java][testResetPathsAndRef][1] = -> TRY {  -> gitSection=project.getJSONObject(GitConstants.KEY_GIT,)@ -> gitIndexUri=gitSection.getString(GitConstants.KEY_INDEX,)@ -> request=getPostGitIndexRequest(gitIndexUri, new String[],"origin/master",null,)@ } CATCH(Exception) {}
results[https://github.com/sourcesense/modeshape-stone/blob/0769bfa9ff6a329d6e11b1eeb022819ac6ad4f30/modeshape-stone/web/modeshape-web-jcr-rest-client/src/main/java/org/modeshape/web/jcr/rest/client/json/NodeTypeNode.java][valueFrom][2] = -> TRY {  -> IF { -> return defaultValue@!(properties.has(name,)) } -> return properties.getString(name,)@!(!(properties.has(name,))) } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitDiffTest.java][testNoDiff][3] = -> TRY {  -> gitSection=project.getJSONObject(GitConstants.KEY_GIT,)@ -> gitDiffUri=gitSection.getString(GitConstants.KEY_DIFF,)@ -> parts=getDiff(gitDiffUri,)@ } CATCH(Exception) {}
results[https://github.com/stephenfox/iceweasel-dev/blob/cdd8a076d28a6dc919f519243825a8f747f75d6b/embedding/android/GeckoAppShell.java][handleGeckoMessage][2] = -> TRY { -> geckoObject=json.getJSONObject("gecko",)@ -> type=geckoObject.getString("type",)@ } CATCH(Exception) { -> Log.i(LOG_FILE_NAME,"handleGeckoMessage throws "+e,)@ }
results[https://github.com/b3log/b3log-solo/blob/6fd339522201d7e000032aa7afbbc9f3dddd29b8/core/src/test/java/org/b3log/solo/service/ArticleMgmtServiceTestCase.java][updateArticlesRandomValue][1] = -> TRY {  -> article=articles.get(0,)@ -> articleId=article.getString(Keys.OBJECT_ID,)@ -> randomValue=article.getDouble(Article.ARTICLE_RANDOM_DOUBLE,)@ } CATCH(Exception) {}
results[https://github.com/jimzheng/Puzzling.com/blob/1d6ad163b35420a65807b0a0a44580cbaf788b94/SDKs/Java/src/com/Puzzling/SDK/API.java][getAuthTokenForUser][1] = -> userObj=Login.getUser(u,p,)@ -> TRY { -> return userObj.getString("authToken",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitInitTest.java][testInitAndCreateFolderByPath][1] = -> TRY {  -> repo=init(null,initPath,null,)@ -> contentLocation=repo.getString(ProtocolConstants.KEY_CONTENT_LOCATION,)@ -> request=getGetRequest(contentLocation,)@ } CATCH(Exception) {}
results[https://github.com/cycladessoa/cyclades/blob/dbac37ee07735b216f139b5eeabaaa089d2ef22e/engine/src/main/java/org/cyclades/engine/nyxlet/templates/xstroma/message/impl/ResponseProcessor.java][<init>][1] = -> TRY {  -> super(jsonObject,)@ -> requestInputParameterName=(jsonObject.has(REQUEST_INPUT_PARAMETER,))?jsonObject.getString(REQUEST_INPUT_PARAMETER,):null@ } CATCH(Exception) {}
results[https://github.com/qcadoo/qcadoo/blob/0e9225fffc57c09ffdb73dbad4736e5df32f4e66/qcadoo-view/src/test/java/com/qcadoo/view/internal/patterns/components/GridComponentPatternTest.java][shouldHaveScopeFieldName][1] = -> TRY {  -> options=getJsOptions(pattern,)@ -> assertEquals("joinName",options.getString("belongsToFieldName",),)@ } CATCH(Exception) {}
results[https://github.com/Sage-Bionetworks/workflow/blob/818d6d4c04f355aac585a0c4268798636880d5b4/tools/gePipeline/src/main/java/org/sagebionetworks/gepipeline/DataModifier.java][layerModifiedOn][1] = -> TRY {  -> o=synapse.getEntity("/layer/"+id,)@ -> modString=o.getString("modifiedOn",)@ -> System.out.println("Layer "+id+" modified on: "+modString,)@ } CATCH(Exception) {}
results[https://github.com/utwente-db/neogeo/blob/8683b99cad521d8bdc9521424fea3c4237ff5e5a/neogeo-twitter/src/main/java/nl/utwente/db/neogeo/twitter/harvest/JSONParser.java][getTweetText][1] = -> TRY { -> json=getTOPJSONObject(jsonTxt,)@ -> return json.getString("text",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/rjmarsan/PlasmaSound/blob/0793daf0094be1cfe04fb01deafb5fa8f950f044/src/com/rj/processing/plasmasoundhd/pd/instruments/JSONPresets.java][savePreset][1] = -> TRY { -> savePreset(c,e,currentsetting.getString("name",),)@ } CATCH(Exception) { -> ee.printStackTrace()@ }
results[https://github.com/rjmarsan/PlasmaSound/blob/0793daf0094be1cfe04fb01deafb5fa8f950f044/src/com/rj/processing/plasmasoundhd/sequencer/JSONSequencerPresets.java][savePreset][1] = -> TRY { -> savePreset(c,e,currentsetting.getString("name",),)@ } CATCH(Exception) { -> ee.printStackTrace()@ }
results[https://github.com/owncloud/android/blob/a20681b06320824a80f6da1e86c1c2d52a371636/src/eu/alefzero/owncloud/authenticator/ConnectionCheckerRunnable.java][tryConnection][2] = -> TRY { -> json=new JSONObject(response,)@ -> mOCVersion=new OwnCloudVersion(json.getString("version",),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/NUBIC/psc-mirror/blob/2bbcc97f72b769040027e3047e4868fcbf1d2546/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/MultipleAssignmentScheduleJsonRepresentationTest.java][testWithHiddenActivities][1] = -> TRY {  -> jsonScheduleActivities=outputAsObject()@ -> assertTrue("has no hidden activities",Boolean.valueOf(jsonScheduleActivities.getString("hidden_activities",),),)@ } CATCH(Exception) {}
results[https://github.com/itaiag/mobile-automation/blob/1f40820cc65fc114270fd79f1be4bb2f7945de6b/robotium-client/src/main/java/org/jsystemtest/mobile/robotium_client/impl/RobotiumClientImpl.java][pull][1] = -> TRY {  -> jsonObj=sendDataAndGetJSonObj("pull",fileName,)@ -> logger.info("command pull receved"+jsonObj,)@ -> return jsonObj.getString("file",).getBytes("UTF-16LE",)@ } CATCH(Exception) {}
results[https://github.com/aldaris/openam/blob/a7de8c9970d4c8b24c141edc24b363e14259b899/openam/openam-federation/OpenFM/src/test/java/com/sun/identity/rest/PrivilegeRestTest.java][getAndPut][1] = -> TRY {  -> jbody=parseResult(result,)@ -> jsonStr=jbody.getString(PrivilegeResource.RESULT,)@ -> privilege=Privilege.getNewInstance(new JSONObject(jsonStr,),)@ } CATCH(Exception) {}
results[https://github.com/maxpower47/DeliciousDroid/blob/fe7f73c4f57916703def55c731aa6e0eef40cf21/src/com/deliciousdroid/client/User.java][valueOf][1] = -> TRY { -> userName=user.getString("user",)@ -> return new User(userName,)@ } CATCH(Exception) { -> Log.i("User","Error parsing JSON user object"+ex.toString(),)@ }
results[https://github.com/jerrycable/Tasquid/blob/e34e7d71e11a606b245fe33167ebf52bce1180e3/tests/src/com/todoroo/astrid/producteev/ProducteevSyncTest.java][getColleagueEmail][1] = -> TRY { -> user=invoker.usersView(colleagueId,).getJSONObject("user",)@ -> email=user.getString("email",)@ } CATCH(Exception) { -> fail("Failed to extract colleague email",)@ }
results[https://github.com/b3log/b3log-solo/blob/5163832f9b0f48fdb5a165dc37ba690d31c7a952/core/src/test/java/org/b3log/solo/service/CommentQueryServiceTestCase.java][getCommentsOnId][1] = -> TRY {  -> article=result.getJSONArray(Article.ARTICLES,).getJSONObject(0,)@ -> articleId=article.getString(Keys.OBJECT_ID,)@ -> comments=commentQueryService.getComments(articleId,)@ } CATCH(Exception) {}
results[https://github.com/mozilla-b2g/android-development/blob/051c37a270e765791377fd6203e24d6e8a704778/samples/SampleSyncAdapter/src/com/example/android/samplesync/client/User.java][valueOf][3] = -> TRY { -> userId=userStatus.getInt("i",)@ -> status=userStatus.getString("s",)@ -> return new User.Status(userId,status,)@ } CATCH(Exception) { -> Log.i("User.Status","Error parsing JSON user object",)@ }
results[https://github.com/haha1903/document/blob/53112f162f8f0fb2aed9064aba86f3af6f836871/document-web/src/test/java/com/glodon/paas/document/api/ProjectRestAPITest.java][testGetRoles][1] = -> TRY {  } ELSE { -> role=createRandomRole()@ -> projectId=role.getString(KEY_PROJECT_ID,)@ } CATCH(Exception) {}
results[https://github.com/matburt/mobileorg-android/blob/054ca0b17e396b6607527456fcdce369178e88ff/src/com/matburt/mobileorg/Synchronizers/UbuntuOneSynchronizer.java][getRemoteFile][1] = -> TRY { -> fileData=responseToJson(response,)@ -> content_path=fileData.getString("content_path",)@ } CATCH(Exception) { -> Log.e("MobileOrg","Exception in Ubuntu One Fetch File: "+e.toString(),)@ }
results[https://github.com/exoplatform/aio-portal/blob/a3173a60bd9ef05a55a07fa92d33b965d23e54b4/eXoGadget/server/java/gadgets/src/test/java/org/apache/shindig/gadgets/ContainerConfigTest.java][testCascade][1] = -> TRY {  -> nested.put(NESTED_NAME,NESTED_ALT_VALUE,)@ -> nestedObj=config.getJsonObject(CHILD_CONTAINER,NESTED_KEY,)@ -> nestedValue=nestedObj.getString(NESTED_NAME,)@ -> assertEquals(NESTED_ALT_VALUE,nestedValue,)@ } CATCH(Exception) {}
results[https://github.com/wanbin/Undercover/blob/de53d8affdc2ddbbe1b2c8cda6c5edbc6dd2d22c/src/com/example/undercover/HttpCommand.java][onSuccess][1] = -> TRY { -> obj=new JSONObject(response,)@ -> cmd=obj.getString("cmd",)@ -> messagecall.MessageCallBack(obj,cmd,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/OpenRefine/OpenRefine/blob/365868564fb426d2aa3f3c84ec1ef52966067f02/main/java/com/metaweb/gridworks/clustering/knn/kNNClusterer.java][initializeFromJSON][7] = -> TRY {  -> super.initializeFromJSON(project,o,)@ -> _distance=_distances.get(o.getString("function",).toLowerCase(),)@ } CATCH(Exception) {}
results[https://github.com/RedHatQE/rhsm-qe/blob/d1782e7c6d7bcf21a7790da615eb7e328e0f6131/src/rhsm/cli/tests/EventTests.java][OwnerCreated_Test][1] = -> TRY {  -> testJSONOwner=servertasks.createOwnerUsingCPC(testOwnerKey,)@ -> assertTheNewOwnerFeed(testJSONOwner.getString("key",),null,newEventTitles,)@ -> assertTheNewFeed(oldFeed,newEventTitles,)@ } CATCH(Exception) {}
results[https://github.com/skrusche63/AMES-Web-Service/blob/c992917b1ccee6d3a8ce7ba31846a03fabc47407/ames-web-service/src/de/kp/ames/web/core/search/SearcherImpl.java][search][1] = -> TRY {  -> jQuery=new JSONObject(request,)@ -> term=(jQuery.has(JsonConstants.J_TERM,))?jQuery.getString(JsonConstants.J_TERM,):"*"@ -> fp=setFacets(jQuery,)@ } CATCH(Exception) {}
results[https://github.com/socialize/socialize-sdk-android/blob/d199154f65879a18bf011687567be116b64e9933/test/src/com/socialize/test/integration/services/ActionUtilsTest.java][testGetActionsByUser][1] = -> TRY {  -> userObject=jsonObject.getJSONObject("user",)@ -> userId=userObject.getString("id",)@ -> user.setId(Long.parseLong(userId,),)@ } CATCH(Exception) {}
results[https://github.com/fliuzzi/DataParser/blob/8cbb3d001b78d219564fa7395c05b83cf65a2fca/src/com/where/data/parsers/localeze/PaymentType.java][fromJSON][2] = -> TRY { -> id=new Long(json.getLong("id",),)@ -> name=json.getString("name",)@ } CATCH(Exception) { -> throw new IllegalStateException(ex,)@ }
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitUriTest.java][testGitUrisForFile][1] = -> TRY {  -> project=createProjectOrLink(workspaceLocation,projectName,dir.toString(),)@ -> location=project.getString(ProtocolConstants.KEY_CONTENT_LOCATION,)@ -> request=getGetRequest(location,)@ } CATCH(Exception) {}
results[https://github.com/skrusche63/AMES-Web-Service/blob/24a90f2522d1b267586638b52144c840165c6bb3/ames-web-service/src/de/kp/ames/web/function/role/RoleLCM.java][submitResponsibility][1] = -> TRY {  -> jForm=new JSONObject(data,)@ -> jNamespaces=new JSONArray(jForm.getString(RIM_NAMESPACE,),)@ -> responsibilities=setResponsibility(responsible,jNamespaces,)@ } CATCH(Exception) {}
results[https://github.com/aalmiray/Json-lib/blob/e6b1c5b7d5882ea1c2a7dd837169b8c061f093ca/src/test/java/net/sf/json/TestJSONObject.java][testFromObject_DynaBean][1] = -> TRY {  -> json=JSONObject.fromObject(createDynaBean(),)@ -> assertEquals("json",json.getString("name",),)@ } CATCH(Exception) {}
