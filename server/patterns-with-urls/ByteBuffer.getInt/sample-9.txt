results[https://github.com/aspotton/xonotic/blob/740a38b25a4637627123304d6355a355376a1979/misc/tools/NexuizDemoRecorder/main/src/main/java/com/nexuiz/demorecorder/application/democutter/DemoCutterUtils.java][convertLittleEndian] = -> bb=ByteBuffer.allocate(4,)@ -> bb.order(ByteOrder.LITTLE_ENDIAN,)@ -> bb.put(b,)@ -> bb.position(0,)@ -> return bb.getInt()@
results[https://github.com/rjm535/xonotic_mod/blob/740a38b25a4637627123304d6355a355376a1979/misc/tools/NexuizDemoRecorder/main/src/main/java/com/nexuiz/demorecorder/application/democutter/DemoCutterUtils.java][convertLittleEndian] = -> bb=ByteBuffer.allocate(4,)@ -> bb.order(ByteOrder.LITTLE_ENDIAN,)@ -> bb.put(b,)@ -> bb.position(0,)@ -> return bb.getInt()@
results[https://github.com/worldsproject/Fluxware-Game-Engine/blob/fa68114926541c56fefc50122c1105ff8d7304f7/src/sound/WaveLoader.java][turn_byte_buffer_into_int] = -> bb=ByteBuffer.allocate(4,)@ -> bb.order(ByteOrder.LITTLE_ENDIAN,)@ -> bb.put(buf,)@ -> bb.rewind()@ -> return bb.getInt()@
results[https://github.com/yashs360/dril-localrepo/blob/42287888bf022cfc17cc816d1e84e3f56b467768/sandbox/prototype/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/HashHelper.java][hash] = -> h=seed^buf.remaining()@ -> LOOP { -> k=buf.getInt()@buf.remaining()>=4 } -> IF { -> finish=ByteBuffer.allocate(4,).order(ByteOrder.LITTLE_ENDIAN,)@ -> finish.put(buf,).rewind()@buf.remaining()>0 -> h^=finish.getInt()@ }
results[https://github.com/yashs360/dril-localrepo/blob/479ddad71725bfbf40e025c116b6fe0c775225bc/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/HashHelper.java][hash] = -> h=seed^buf.remaining()@ -> LOOP { -> k=buf.getInt()@buf.remaining()>=4 } -> IF { -> finish=ByteBuffer.allocate(4,).order(ByteOrder.LITTLE_ENDIAN,)@ -> finish.put(buf,).rewind()@buf.remaining()>0 -> h^=finish.getInt()@ }
results[https://github.com/mehant/incubator-drill/blob/479ddad71725bfbf40e025c116b6fe0c775225bc/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/HashHelper.java][hash] = -> h=seed^buf.remaining()@ -> LOOP { -> k=buf.getInt()@buf.remaining()>=4 } -> IF { -> finish=ByteBuffer.allocate(4,).order(ByteOrder.LITTLE_ENDIAN,)@ -> finish.put(buf,).rewind()@buf.remaining()>0 -> h^=finish.getInt()@ }
results[https://github.com/sscdotopen/recsys-als/blob/5bb5866e78c5ddb4242814d2f1c55bf443ef8f55/math/src/main/java/org/apache/mahout/math/MurmurHash.java][hash] = -> byteOrder=buf.order()@ -> buf.order(ByteOrder.LITTLE_ENDIAN,)@ -> h=seed^buf.remaining()@ -> LOOP { -> k=buf.getInt()@buf.remaining()>=4 } -> IF { -> finish=ByteBuffer.allocate(4,).order(ByteOrder.LITTLE_ENDIAN,)@ -> finish.put(buf,).rewind()@buf.remaining()>0 -> h^=finish.getInt()@ } -> buf.order(byteOrder,)@
results[https://github.com/tcz001/SNSCrawlerOSGiFramework/blob/c65d338d9cd65d889a22c958cb48b5b110892f2b/JedisBundle/src/main/java/redis/clients/util/MurmurHash.java][hash] = -> byteOrder=buf.order()@ -> buf.order(ByteOrder.LITTLE_ENDIAN,)@ -> h=seed^buf.remaining()@ -> LOOP { -> k=buf.getInt()@buf.remaining()>=4 } -> IF { -> finish=ByteBuffer.allocate(4,).order(ByteOrder.LITTLE_ENDIAN,)@ -> finish.put(buf,).rewind()@buf.remaining()>0 -> h^=finish.getInt()@ } -> buf.order(byteOrder,)@
results[https://github.com/mehant/incubator-drill/blob/42287888bf022cfc17cc816d1e84e3f56b467768/sandbox/prototype/exec/java-exec/src/main/java/org/apache/drill/exec/expr/fn/impl/HashHelper.java][hash] = -> h=seed^buf.remaining()@ -> LOOP { -> k=buf.getInt()@buf.remaining()>=4 } -> IF { -> finish=ByteBuffer.allocate(4,).order(ByteOrder.LITTLE_ENDIAN,)@ -> finish.put(buf,).rewind()@buf.remaining()>0 -> h^=finish.getInt()@ }
results[https://github.com/apache/mahout/blob/ca5c1cef7a3d92c2106c66b3d433e61739b6ff06/core/src/main/java/org/apache/mahout/vectors/MurmurHash.java][hash] = -> byteOrder=buf.order()@ -> buf.order(ByteOrder.LITTLE_ENDIAN,)@ -> h=seed^buf.remaining()@ -> LOOP { -> k=buf.getInt()@buf.remaining()>=4 } -> IF { -> finish=ByteBuffer.allocate(4,).order(ByteOrder.LITTLE_ENDIAN,)@ -> finish.put(buf,).rewind()@buf.remaining()>0 -> h^=finish.getInt()@ } -> buf.order(byteOrder,)@
