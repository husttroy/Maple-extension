results[https://github.com/AbinashBishoyi/FreeRapid-Plugins/blob/e576758041bfb787673311549568c1db119d6ffd/src/saavn/cz/vity/freerapid/plugins/services/saavn/SaavnFileRunner.java][decryptPlay] = -> cipher=Cipher.getInstance("DES/ECB/PKCS5Padding",)@ -> cipher.init(Cipher.DECRYPT_MODE,new SecretKeySpec(SECRET_KEY,"DES",),)@ -> return new String(cipher.doFinal(Base64.decodeBase64(str,),),"UTF-8",)@
results[https://github.com/jakenjarvis/ChatLoggerPlus/blob/1340f488ef85bb4f7aab0f64f5928dbbbb2ac9b5/src/com/tojc/minecraft/mod/Crypto/SimpleEncryption.java][decrypt] = -> spec=new SecretKeySpec(key.getBytes("UTF-8",),"Blowfish",)@ -> cipher=Cipher.getInstance("Blowfish",)@ -> cipher.init(Cipher.DECRYPT_MODE,spec,)@ -> return new String(cipher.doFinal(bytes,),"UTF-8",)@
results[https://github.com/revetkn/restfb/blob/c7a321c0b3fb5d9082d3935985bcfc5a22086c70/source/library/com/restfb/util/EncodingUtils.java][encodeAppSecretProof] = -> key=appSecret.getBytes()@ -> signingKey=new SecretKeySpec(key,"HmacSHA256",)@ -> mac=Mac.getInstance("HmacSHA256",)@ -> mac.init(signingKey,)@ -> raw=mac.doFinal(accessToken.getBytes(),)@ -> hex=encodeHex(raw,)@ -> out=new String(hex,"UTF-8",)@
results[https://github.com/AbinashBishoyi/FreeRapid-Plugins/blob/856bb36cf0f28ebadefd3da3d1a549d780b704e9/src/mega/cz/vity/freerapid/plugins/services/mega/MegaApi.java][decryptData] = -> cipher=Cipher.getInstance("AES/CBC/NoPadding",)@ -> cipher.init(Cipher.DECRYPT_MODE,new SecretKeySpec(key,"AES",),new IvParameterSpec( new byte[],),)@ -> return new String(cipher.doFinal(Base64.decodeBase64(data,),),"UTF-8",)@
results[https://github.com/bricef/dotfiles/blob/5ce1060580d746fa1fad2017182ec43a492a9324/scripts/AES/AES.java][decrypt] = -> cipher=Cipher.getInstance("AES/CBC/NoPadding","SunJCE",)@ -> key=new SecretKeySpec(encryptionKey.getBytes("UTF-8",),"AES",)@ -> cipher.init(Cipher.DECRYPT_MODE,key,new IvParameterSpec(IV.getBytes("UTF-8",),),)@ -> return new String(cipher.doFinal(cipherText,),"UTF-8",)@
results[https://github.com/membrane/service-proxy/blob/4e95b0ff97346ff4ab565e443f2e79ce6747d4cb/core/src/test/java/com/predic8/membrane/core/interceptor/balancer/ClusterNotificationInterceptorTest.java][getEncryptedQueryString] = -> cipher=Cipher.getInstance("AES",)@ -> cipher.init(Cipher.ENCRYPT_MODE,new SecretKeySpec(Hex.decodeHex("6f488a642b740fb70c5250987a284dc0".toCharArray(),),"AES",),)@ -> return new String(Base64.encodeBase64(cipher.doFinal(qParams.getBytes("UTF-8",),),),"UTF-8",)@
results[https://github.com/membrane/service-proxy/blob/7ba64c5c6a8a90b14d516f91eb88bb1dfa93674f/com.predic8.membrane.core/src/test/java/com/predic8/membrane/core/interceptor/balancer/ClusterNotificationInterceptorTest.java][getEncryptedQueryString] = -> cipher=Cipher.getInstance("AES",)@ -> cipher.init(Cipher.ENCRYPT_MODE,new SecretKeySpec(Hex.decodeHex("6f488a642b740fb70c5250987a284dc0".toCharArray(),),"AES",),)@ -> return new String(Base64.encodeBase64(cipher.doFinal(qParams.getBytes("UTF-8",),),),"UTF-8",)@
results[https://github.com/membrane/service-proxy/blob/fcea87588cf39192c98599e405a67803094e13d0/membrane-esb/core/src/test/java/com/predic8/membrane/core/interceptor/balancer/ClusterNotificationInterceptorTest.java][getEncryptedQueryString] = -> cipher=Cipher.getInstance("AES",)@ -> cipher.init(Cipher.ENCRYPT_MODE,new SecretKeySpec(Hex.decodeHex("6f488a642b740fb70c5250987a284dc0".toCharArray(),),"AES",),)@ -> return new String(Base64.encodeBase64(cipher.doFinal(qParams.getBytes("UTF-8",),),),"UTF-8",)@
results[https://github.com/membrane/service-proxy/blob/1503c40d32a0b8e894dc2448cc6ae907d285c3e9/com.predic8.membrane.core/core/src/test/java/com/predic8/membrane/core/interceptor/balancer/ClusterNotificationInterceptorTest.java][getEncryptedQueryString] = -> cipher=Cipher.getInstance("AES",)@ -> cipher.init(Cipher.ENCRYPT_MODE,new SecretKeySpec(Hex.decodeHex("6f488a642b740fb70c5250987a284dc0".toCharArray(),),"AES",),)@ -> return new String(Base64.encodeBase64(cipher.doFinal(qParams.getBytes("UTF-8",),),),"UTF-8",)@
results[https://github.com/AbinashBishoyi/FreeRapid-Plugins/blob/762364d716bcf3e8dc7dbb7eaf84564a0595bf5a/src/container/cz/vity/freerapid/plugins/container/impl/Dlc.java][decryptContent] = -> cipher=Cipher.getInstance("AES/CBC/NoPadding",)@ -> cipher.init(Cipher.DECRYPT_MODE,new SecretKeySpec(key,"AES",),new IvParameterSpec(key,),)@ -> return new String(Base64.decodeBase64(cipher.doFinal(Base64.decodeBase64(input,),),),"UTF-8",)@
