results[https://github.com/suokko/HO_changes/blob/e665c8a3a423e5da23d2002d8b82d0ab8280f3b0/java/de/hattrickorganizer/prediction/HOEncrypter.java][decrypt] = -> TRY { -> inBytes=new BASE64Decoder().decodeBuffer(s,)@ -> outBytes=cipherDec.doFinal(inBytes,)@ -> return new String(outBytes,"UTF8",)@ } CATCH { }
results[https://github.com/deburnatshazem/sherlockholmessystems/blob/c541ebef8f4b798604c2d7e5ff0f3564dc31d375/entwicklung/workspace/Gui/src/src/SERVICE/Shscipher.java][crypt] = -> TRY { -> cipher=getCipher(type,cipherMODE,)@ -> crypted=cipher.doFinal(tocrypt.getBytes("UTF-8",),)@ -> toreturn=new String(crypted,"UTF-8",)@ } CATCH { }
results[https://github.com/jpaoletti/java-presentation-manager/blob/17e3a9080977ee38b1b4c010667769063ae35c5b/modules/jpm-core/src/main/java/jpaoletti/jpm/util/StringEncrypter.java][decrypt] = -> TRY { -> dec=codec.decode(URLDecoder.decode(str,charset,),)@ -> utf8=decryptCipher.doFinal(dec,)@ -> return new String(utf8,charset,)@ } CATCH { }
results[https://github.com/ixcode/platform/blob/1a70918fcd5f4f57b69de415ed1462c56c212de4/core/src/main/java/ixcode/platform/cryptography/AesEncryption.java][decrypt] = -> TRY { -> cipher.init(DECRYPT_MODE,key,)@ -> return new String(cipher.doFinal(base64Decode(source,),),"UTF8",)@ } CATCH { }
results[https://github.com/spontecorp/ferretotalweb/blob/c843b389cc311bf957390576270a04c26535e735/ferreasesorweb/src/java/com/spontecorp/ferreasesor/security/Cifrador.java][decrypt] = -> TRY { -> dcipher=Cipher.getInstance(CIPHER_INSTANCE,)@ -> dcipher.init(Cipher.DECRYPT_MODE,key,)@ -> dec=new sun.misc.BASE64Decoder().decodeBuffer(str,)@ -> utf8=dcipher.doFinal(dec,)@ -> result=new String(utf8,"UTF8",)@ } CATCH { }
results[https://github.com/Amab/SWADroid/blob/0fb374a71da453b232a9b54363e772535b3daba1/SWADroid/src/es/ugr/swad/swadroid/utils/Crypto.java][decrypt] = -> TRY { -> dec=toByte(str,)@ -> utf8=dcipher.doFinal(dec,)@ -> rVal=new String(utf8,"UTF8",)@ } CATCH { -> rVal="Error encrypting: "+e.getMessage()@ }
results[https://github.com/spontecorp/serviceport/blob/c843b389cc311bf957390576270a04c26535e735/ferreasesorweb/src/java/com/spontecorp/ferreasesor/security/Cifrador.java][decrypt] = -> TRY { -> dcipher=Cipher.getInstance(CIPHER_INSTANCE,)@ -> dcipher.init(Cipher.DECRYPT_MODE,key,)@ -> dec=new sun.misc.BASE64Decoder().decodeBuffer(str,)@ -> utf8=dcipher.doFinal(dec,)@ -> result=new String(utf8,"UTF8",)@ } CATCH { }
results[https://github.com/spontecorp/ferretotalserver/blob/6ff5b0a7916a3fd19833d984d101a9521768e496/src/java/com/spontecorp/ferretotalserver/security/Cifrador.java][decrypt] = -> TRY { -> dcipher=Cipher.getInstance(CIPHER_INSTANCE,)@ -> dcipher.init(Cipher.DECRYPT_MODE,key,)@ -> dec=new sun.misc.BASE64Decoder().decodeBuffer(str,)@ -> utf8=dcipher.doFinal(dec,)@ -> result=new String(utf8,"UTF8",)@ } CATCH { }
results[https://github.com/DMDirc/DMDirc/blob/e296c134966fb91e3d6f09c46470ffc47db0d365/src/com/dmdirc/CipherUtils.java][decrypt] = -> TRY { -> return new String(dcipher.doFinal(str.getBytes(),),Charset.forName("UTF-8",),)@ } CATCH { } CATCH { }
results[https://github.com/spontecorp/ferretotalserver/blob/755b75a208d17902ec196cb7e4ada088d82a3575/ferreasesorweb/src/java/com/spontecorp/ferreasesor/security/Cifrador.java][decrypt] = -> TRY { -> dcipher=Cipher.getInstance(CIPHER_INSTANCE,)@ -> dcipher.init(Cipher.DECRYPT_MODE,key,)@ -> dec=new sun.misc.BASE64Decoder().decodeBuffer(str,)@ -> utf8=dcipher.doFinal(dec,)@ -> result=new String(utf8,"UTF8",)@ } CATCH { }
