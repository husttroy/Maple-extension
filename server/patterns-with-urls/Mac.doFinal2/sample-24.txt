results[https://github.com/AndrewChanChina/cmsserver/blob/fa4fa4341cd4ec52d6ccac646aadd0fd71087eab/src/com/smit/util/TripleDESHelper.java][ebcDecode] = -> TRY { -> keySpec=new SecretKeySpec(key.getBytes(),"TripleDES",)@ -> ci.init(Cipher.DECRYPT_MODE,keySpec,)@ -> s=dbs64.decodeBuffer(encodeText,)@ -> b=ci.doFinal(s,)@ -> str=new String(b,)@ } CATCH { }
results[https://github.com/INightmare/apache-isis/blob/38a411e4b7f554ea69bad911c33ccad42a96b987/framework/runtimes/dflt/objectstores/nosql/src/main/java/org/apache/isis/runtimes/dflt/objectstores/nosql/encryption/blowfish/DataEncryptionBlowfishAbstract.java][encrypt] = -> TRY { -> key=new SecretKeySpec(specKey,BLOWFISH,)@ -> cipher=Cipher.getInstance(BLOWFISH,)@ -> cipher.init(Cipher.ENCRYPT_MODE,key,)@ -> return new String(cipher.doFinal(plainText.getBytes(),),)@ } CATCH { }
results[https://github.com/blueantelope/-Antelope.CI/blob/a0ad0c7bc93173746684904d52ba303f00c75f63/com.antelope.ci.bus/com.antelope.ci.bus.common/src/main/java/com/antelope/ci/bus/common/EncryptUtil.java][decrypt3DES] = -> TRY { -> _3deskey=new SecretKeySpec(build3DesKey(seed,),ALGORITHM_3DES,)@ -> cipher=Cipher.getInstance(ALGORITHM_3DES,)@ -> cipher.init(Cipher.DECRYPT_MODE,_3deskey,)@ -> return new String(cipher.doFinal(decoder,),)@ } CATCH { }
results[https://github.com/qyb/sohu/blob/38215b2966d993ea41ab85a099fa783c92e14230/src/StorageWorkspace/StorageAPI/src/com/scss/utility/CommonUtilities.java][calculateRFC2104HMAC] = -> TRY { -> signingKey=new SecretKeySpec(key,algo,)@ -> mac=Mac.getInstance(algo,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data,)@ -> b64=Base64.encodeBase64(rawHmac,)@ -> result=new String(b64,)@ } CATCH { }
results[https://github.com/zendtech/zendserver-sdk-java/blob/3b20cad3003d1e7a14d29e6b2208bb4b2b3a6e44/zendserver-sdk-java/org.zend.sdk/sdklib/org/zend/sdklib/internal/target/ZendTarget.java][decrypt] = -> TRY { -> c=Cipher.getInstance("AES",)@ -> k=new SecretKeySpec(getSeq(),"AES",)@ -> c.init(Cipher.DECRYPT_MODE,k,)@ -> return new String(c.doFinal(secretKey,),)@ } CATCH { }
results[https://github.com/INightmare/apache-isis/blob/38a411e4b7f554ea69bad911c33ccad42a96b987/framework/runtimes/dflt/objectstores/nosql/src/main/java/org/apache/isis/runtimes/dflt/objectstores/nosql/encryption/aes/DataEncryptionAes.java][encrypt] = -> TRY { -> key=new SecretKeySpec(specKey,AES,)@ -> cipher=Cipher.getInstance("AES/ECB/PKCS7Padding",)@ -> cipher.init(Cipher.ENCRYPT_MODE,key,)@ -> return new String(cipher.doFinal(plainText.getBytes(),),)@ } CATCH { }
results[https://github.com/AndrewChanChina/cmsserver/blob/fa4fa4341cd4ec52d6ccac646aadd0fd71087eab/src/com/smit/util/TripleDESHelper.java][decode] = -> TRY { -> keySpec=new SecretKeySpec(key.getBytes(),"AES",)@ -> ci.init(Cipher.DECRYPT_MODE,keySpec,ips,)@ -> d=dbs64.decodeBuffer(encodeText,)@ -> dStr=ci.doFinal(d,)@ -> str=new String(dStr,)@ } CATCH { }
results[https://github.com/playframework/play1/blob/fd24bab5eecee77edfd19d84919c2d5cd4c03cf9/framework/src/play/libs/Crypto.java][decryptAES] = -> TRY { -> raw=privateKey.getBytes()@ -> skeySpec=new SecretKeySpec(raw,"AES",)@ -> cipher=Cipher.getInstance("AES",)@ -> cipher.init(Cipher.DECRYPT_MODE,skeySpec,)@ -> return new String(cipher.doFinal(Codec.hexStringToByte(value,),),)@ } CATCH { }
results[https://github.com/AndrewChanChina/cmsserver/blob/d5cf03a2841f823cd8a8d4c4313e55e88438097c/test/com/smit/productcontrol/testServcie/TripleDESHelper.java][decode] = -> TRY { -> keySpec=new SecretKeySpec(key.getBytes(),"AES",)@ -> ci.init(Cipher.DECRYPT_MODE,keySpec,ips,)@ -> d=dbs64.decodeBuffer(encodeText,)@ -> dStr=ci.doFinal(d,)@ -> str=new String(dStr,)@ } CATCH { }
results[https://github.com/LSTS/neptus/blob/4d58343c2f0b754328d5bc72f465001d443238c5/src/pt/lsts/neptus/test/TestBlowfish.java][encryptBlowfish] = -> TRY { -> key=new SecretKeySpec(strkey.getBytes(),"Blowfish",)@ -> cipher=Cipher.getInstance("Blowfish",)@ -> cipher.init(Cipher.ENCRYPT_MODE,key,)@ -> return new String(cipher.doFinal(to_encrypt.getBytes(),),)@ } CATCH { }
