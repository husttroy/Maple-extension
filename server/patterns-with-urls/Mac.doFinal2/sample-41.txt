results[https://github.com/spring-projects/spring-social-facebook/blob/e98c81ef2d0bd91d4c76b38e6af72379de4aebf4/spring-social-facebook-web/src/main/java/org/springframework/social/facebook/web/RealTimeUpdateController.java][verifySignature] = -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> signingKey=new SecretKeySpec(applicationSecret.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(payload.getBytes(),)@ -> actual=new String(Hex.encode(rawHmac,),)@
results[https://github.com/vincentjanv/groepI/blob/643bbc2aa06b98b4698ad8f2158d5d431a0a49cd/src/main/java/be/kdg/groepi/utils/VuforiaSignatureUtil.java][calculateRFC2104HMAC] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),"HmacSHA1",)@ -> mac=Mac.getInstance("HmacSHA1",)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,false,),)@ } CATCH { }
results[https://github.com/digipost/android/blob/39d7d4ad4c7e820d6e2de0189c6abdd9878c7902/src/no/digipost/android/authentication/OAuth2.java][encryptHmacSHA256] = -> secretKey=new SecretKeySpec(Secret.CLIENT_SECRET.getBytes(),ApplicationConstants.HMACSHA256,)@ -> TRY { -> mac=Mac.getInstance(ApplicationConstants.HMACSHA256,)@ -> mac.init(secretKey,)@ } CATCH { } -> hmacData=mac.doFinal(data.getBytes(),)@ -> return new String(hmacData,)@
results[https://github.com/oxhead/decoupled-hadoop/blob/fda683bf06f52e3c0999fec65d994f9f74fb3c50/hadoop-mapreduce/src/contrib/dynamic-scheduler/src/java/org/apache/hadoop/mapred/PriorityAuthorization.java][hmac] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,),)@ } CATCH { }
results[https://github.com/oxhead/decoupled-hadoop/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/mapreduce/src/contrib/dynamic-scheduler/src/java/org/apache/hadoop/mapred/PriorityAuthorization.java][hmac] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,),)@ } CATCH { }
results[https://github.com/cmccabe/hadoop/blob/2c56fe972bbc25111534ab1b3817234a3b4a981c/src/contrib/dynamic-scheduler/src/java/org/apache/hadoop/mapred/PriorityAuthorization.java][hmac] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,),)@ } CATCH { }
results[https://github.com/lalithsuresh/Scaling-HDFS-NameNode/blob/46702790df8d61c18ba8ace768cc7bc6b7318c0a/hadoop-mapreduce/src/contrib/dynamic-scheduler/src/java/org/apache/hadoop/mapred/PriorityAuthorization.java][hmac] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,),)@ } CATCH { }
results[https://github.com/nourlcn/yarn-comment/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/mapreduce/src/contrib/dynamic-scheduler/src/java/org/apache/hadoop/mapred/PriorityAuthorization.java][hmac] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,),)@ } CATCH { }
results[https://github.com/anteoc/hadoop-fork/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/mapreduce/src/contrib/dynamic-scheduler/src/java/org/apache/hadoop/mapred/PriorityAuthorization.java][hmac] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,),)@ } CATCH { }
results[https://github.com/cmccabe/hadoop/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/mapreduce/src/contrib/dynamic-scheduler/src/java/org/apache/hadoop/mapred/PriorityAuthorization.java][hmac] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),HMAC_SHA1_ALGORITHM,)@ -> mac=Mac.getInstance(HMAC_SHA1_ALGORITHM,)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ -> result=new String(Base64.encodeBase64(rawHmac,),)@ } CATCH { }
