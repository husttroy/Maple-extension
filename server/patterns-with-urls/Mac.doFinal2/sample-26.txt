results[https://github.com/abdulazeezsk/netvogue/blob/dd10a063f5b51b61c8989b620c63f5ec0b8d88df/Server/netvogue_database/src/main/java/org/netvogue/server/aws/core/FileManager.java][sign] = -> signBytes=mac.doFinal(data.getBytes("UTF8",),)@ -> signBytesString=new String(signBytes,)@ -> signature=Base64.encodeBase64(signBytes,)@ -> sig=new String(signature,)@
results[https://github.com/apache/archiva-sandbox/blob/024475645a1b1316b43ab706db76ce6eb8726028/commons-transfer/commons-transfer-api/src/main/java/org/apache/archiva/commons/transfer/defaults/Password.java][encrypt] = -> key=keyFactory.generateSecret(keySpec,)@ -> cipher.init(Cipher.ENCRYPT_MODE,key,)@ -> cleartext=new String(password,).getBytes(ENCODING,)@ -> ciphertext=cipher.doFinal(cleartext,)@ -> return new String(Base64.encodeBase64(ciphertext,),)@
results[https://github.com/twhume/NearMe/blob/704695fa25fe8b22d0fd6b0fc5578137cfbf1d8d/AddressBookRipper/src/org/tomhume/ase/ripper/AddressBookRipperActivity.java][sha1] = -> key=new SecretKeySpec(keyString.getBytes("UTF-8",),"HmacSHA1",)@ -> mac=Mac.getInstance("HmacSHA1",)@ -> mac.init(key,)@ -> bytes=mac.doFinal(s.getBytes("UTF-8",),)@ -> return new String(Base64.encode(bytes,0,),)@
results[https://github.com/yuyang226/FlickrjApi4Android/blob/3ba91acf4e631eafe012d867dfb6b01be8fe7e00/flickrj-android/src/main/java/com/gmail/yuyang226/flickr/oauth/OAuthUtils.java][hmacsha1] = -> mac=Mac.getInstance(HMAC_SHA1,)@ -> spec=new SecretKeySpec(key+PARAMETER_SEPARATOR+tokenSecret.getBytes(),HMAC_SHA1,)@ -> mac.init(spec,)@ -> byteHMAC=mac.doFinal(data.getBytes(ENC,),)@ -> return new String(Base64.encode(byteHMAC,),)@
results[https://github.com/abdulazeezsk/netvogue/blob/173084126b6abafa7686bf04e9cd93d5eebe7e2b/Server/netvogue-image-persistence/src/main/java/org/netvogue/server/aws/core/FileManager.java][sign] = -> signBytes=mac.doFinal(data.getBytes("UTF8",),)@ -> signBytesString=new String(signBytes,)@ -> signature=Base64.encodeBase64(signBytes,)@ -> sig=new String(signature,)@
results[https://github.com/pankajkainthla/phonegap-plugins-all/blob/ce1521b6e9fe3ff9d7e22d120e504f2b7146110b/Android/Hmac/HmacPlugin.java][hasher] = -> key=new SecretKeySpec(hashKey.getBytes("UTF-8",),keyGenerator,)@ -> hmac=Mac.getInstance(keyGenerator,)@ -> hmac.init(key,)@ -> bytes=hmac.doFinal(stringToHash.getBytes("UTF-8",),)@ -> return new String(Base64.encode(bytes,Base64.NO_WRAP,),)@
results[https://github.com/craigbooker/mdv-projects/blob/c972357aa0d13b091753c7d9d7ae8f669c25ce3b/pgplugins/Android/Hmac/HmacPlugin.java][hasher] = -> key=new SecretKeySpec(hashKey.getBytes("UTF-8",),keyGenerator,)@ -> hmac=Mac.getInstance(keyGenerator,)@ -> hmac.init(key,)@ -> bytes=hmac.doFinal(stringToHash.getBytes("UTF-8",),)@ -> return new String(Base64.encode(bytes,Base64.NO_WRAP,),)@
results[https://github.com/rafali/flickr-uploader/blob/39c15c4724802a071a7972115cf8999ce86def1b/FlickrUploader/src_shared/com/googlecode/flickrjandroid/oauth/OAuthUtils.java][hmacsha1] = -> mac=Mac.getInstance(HMAC_SHA1,)@ -> spec=new SecretKeySpec(key+PARAMETER_SEPARATOR+tokenSecret.getBytes(),HMAC_SHA1,)@ -> mac.init(spec,)@ -> byteHMAC=mac.doFinal(data.getBytes(ENC,),)@ -> return new String(Base64.encode(byteHMAC,),)@
results[https://github.com/jersey/jersey-1.x/blob/5eafe93d5b8e332e50efe278a038cbc40a085bdc/contribs/jersey-aws-client/src/main/java/com/sun/jersey/contribs/aws/client/AWSCommerceClientFilter.java][calculateSignature] = -> TRY { -> return new String(Base64.encode(mac.doFinal(toSign.getBytes("UTF-8",),),),)@ } CATCH { }
results[https://github.com/MyMalcom/malcom-lib-android/blob/a73e046d9b3c115ee21aaa078e5a96632af954ec/src/main/java/com/malcom/library/android/utils/encoding/DigestUtils.java][sha1] = -> key=new SecretKeySpec(keyString.getBytes("UTF-8",),"HmacSHA1",)@ -> mac=Mac.getInstance("HmacSHA1",)@ -> mac.init(key,)@ -> bytes=mac.doFinal(s.getBytes("UTF-8",),)@ -> return new String(Base64.encode(bytes,),)@
