results[https://github.com/eea/eea.eunis/blob/027e417c38a84aad3f8a5793fa47b3628a711272/src/main/java/ro/finsiel/eunis/auth/EncryptPassword.java][decryptString] = -> TRY { -> cipher=javax.crypto.Cipher.getInstance(this.algorithm,)@ -> cipher.init(javax.crypto.Cipher.DECRYPT_MODE,this.keySpec,)@ -> return new String(cipher.doFinal(b,),)@ } CATCH { }
results[https://github.com/eea/eea.eunis/blob/2445b5bda570a57e2a3f01ee100049256704109a/web/src/main/java/ro/finsiel/eunis/auth/EncryptPassword.java][decryptString] = -> TRY { -> cipher=javax.crypto.Cipher.getInstance(this.algorithm,)@ -> cipher.init(javax.crypto.Cipher.DECRYPT_MODE,this.keySpec,)@ -> return new String(cipher.doFinal(b,),)@ } CATCH { }
results[https://github.com/eea/eea.eunis/blob/2e1c60449a5b59e5c65c3e44802cc0ab335a33b6/src/classes/ro/finsiel/eunis/auth/EncryptPassword.java][decryptString] = -> TRY { -> cipher=javax.crypto.Cipher.getInstance(this.algorithm,)@ -> cipher.init(javax.crypto.Cipher.DECRYPT_MODE,this.keySpec,)@ -> return new String(cipher.doFinal(b,),)@ } CATCH { }
results[https://github.com/ccavanaugh/jgnash/blob/8ddff845e7758579eaf206d224eb8080ec5ad0a1/jgnash-core/src/main/java/jgnash/util/EncryptionManager.java][decrypt] = -> TRY { -> cipher=Cipher.getInstance(ENCRYPTION_ALGORITHM,)@ -> cipher.init(Cipher.DECRYPT_MODE,key,)@ -> return new String(cipher.doFinal(Base64.decodeBase64(encrypted,),),)@ } CATCH { }
results[https://github.com/xwic/etlgine/blob/4575892b85a2aa9e17b030e640946aeff49f714c/de.xwic.etlgine/src/de/xwic/etlgine/util/CryptHelper.java][decrypt] = -> TRY { -> cipher=Cipher.getInstance(algorithm,)@ -> cipher.init(Cipher.DECRYPT_MODE,getMyKey(),)@ -> return new String(cipher.doFinal(data,),)@ } CATCH { }
results[https://github.com/blueantelope/-Antelope.CI/blob/a0ad0c7bc93173746684904d52ba303f00c75f63/com.antelope.ci.bus/com.antelope.ci.bus.common/src/main/java/com/antelope/ci/bus/common/EncryptUtil.java][decryptDES] = -> TRY { -> key=buildDESKey(seed,)@ -> cipher=Cipher.getInstance(ALGORITHM_DES,)@ -> cipher.init(Cipher.DECRYPT_MODE,key,)@ -> return new String(cipher.doFinal(decoder,),)@ } CATCH { }
results[https://github.com/dzonekl/netxstudio/blob/f017ca6ed778572bbca6c0f42c0f8045a90f78a4/plugins/com.netxforge.base/src/com/netxforge/base/security/JCAService.java][decrypt] = -> TRY { -> encrypted=this.hexStringToByteArray(password,)@ -> cipher=Cipher.getInstance(CIPHER_TYPE,)@ -> cipher.init(Cipher.DECRYPT_MODE,key,)@ -> outputBytes=cipher.doFinal(encrypted,)@ -> ret=new String(outputBytes,)@ } CATCH { }
results[https://github.com/ccavanaugh/jgnash/blob/e6fa9b9324d85eb8168f2dd512d2eba1b7fcdf61/jgnash-core/src/main/java/jgnash/message/EncryptionFilter.java][decrypt] = -> TRY { -> cipher=Cipher.getInstance(ENCRYPTION_ALGORITHM,)@ -> cipher.init(Cipher.DECRYPT_MODE,key,)@ -> return new String(cipher.doFinal(Base64.decodeBase64(encrypted,),),)@ } CATCH { }
results[https://github.com/dzonekl/netxstudio/blob/546012d964295313177787d9bc8d255e412d38c3/Client/com.netxforge.netxstudio.common/src/com/netxforge/netxstudio/common/jca/JCAService.java][decrypt] = -> TRY { -> encrypted=this.hexStringToByteArray(password,)@ -> cipher=Cipher.getInstance(CIPHER_TYPE,)@ -> cipher.init(Cipher.DECRYPT_MODE,key,)@ -> outputBytes=cipher.doFinal(encrypted,)@ -> ret=new String(outputBytes,)@ } CATCH { }
results[https://github.com/ccavanaugh/jgnash/blob/278dded32d17afbd48e8a21de807bf42ba694ee1/jgnash-core/src/main/java/jgnash/engine/message/EncryptionFilter.java][decrypt] = -> TRY { -> cipher=Cipher.getInstance(ENCRYPTION_ALGORITHM,)@ -> cipher.init(Cipher.DECRYPT_MODE,key,)@ -> return new String(cipher.doFinal(Base64.decodeBase64(encrypted,),),)@ } CATCH { }
