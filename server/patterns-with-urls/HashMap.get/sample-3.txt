results[https://github.com/kef/hieos/blob/5769f2f7c196d421a07079b0a50612eedf9e65e0/src/xca/src/com/vangent/hieos/services/xca/gateway/controller/XCARequestController.java][getRequestCollection] = -> IF { -> requestCollection=(XCAAbstractRequestCollection) requests.get(uniqueId,)@requests.containsKey(uniqueId,) }
results[https://github.com/aptana/studio2/blob/0905925e7efa7e473e7c2b3d69a618e19056ed31/plugins/com.aptana.ide.scripting/src/com/aptana/ide/scripting/Global.java][getXrefId] = -> IF { -> result=(String) this._idXref.get(path,)@this._idXref.containsKey(path,) }
results[https://github.com/nakag/ddlutils/blob/fad3329d26d9e9b3d58e8832db7e8341042fef7e/src/java/org/apache/ddlutils/PlatformUtils.java][determineDatabaseType] = -> IF { -> return (String) jdbcDriverToPlatform.get(driverName,)@jdbcDriverToPlatform.containsKey(driverName,) }
results[https://github.com/PieceMaker/OpenJUMP/blob/3d64e9d3a7e9414b9fbe84632ac7d664789088fb/src/com/vividsolutions/jump/workbench/ui/renderer/RenderingManager.java][getRenderFactoryForLayerable] = -> IF { -> return (Renderer.ContentDependendFactory) layerableClassToRendererFactoryMap.get(clss,)@layerableClassToRendererFactoryMap.containsKey(clss,) }
results[https://github.com/robstryker/webtools.common/blob/44a17d7c2d82970f19f53c5861d25a6d6e8b9c65/plugins/org.eclipse.wst.common.modulecore/modulecore-src/org/eclipse/wst/common/componentcore/internal/builder/ComponentStructuralBuilderCache.java][getAvailableComponentStructuralBuilderForID] = -> IF { -> return (ComponentStructuralBuilderDataModel) extensionMap.get(componentID,)@extensionMap.containsKey(componentID,) }
results[https://github.com/joaoportela/RoboCup-strategy-adviser-coach/blob/b0b10a58645be673cca9cccf2cc424113d078513/statistics_calculator/SoccerScope2/soccerscope/util/ButtonManager.java][setEnabled] = -> IF { -> array=(ArrayList) map.get(group,)@map.containsKey(group,) }
results[https://github.com/zregvart/with-aes/blob/f22a3a6797eedf16f4178427e116c41b001583cd/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontManager.java][getAwtFont] = -> IF { -> return (java.awt.Font) envFonts.get(fontname,)@envFonts.containsKey(fontname,) }
results[https://github.com/eclipse/webtools.common/blob/dd08284df1e25dd39e7ce8c895270d811b4e6a1d/plugins/org.eclipse.wst.common.modulecore/modulecore-src/org/eclipse/wst/common/modulecore/internal/builder/ComponentStructuralBuilderCache.java][getAvailableComponentStructuralBuilderForID] = -> IF { -> return (ComponentStructuralBuilderDataModel) extensionMap.get(componentID,)@extensionMap.containsKey(componentID,) }
results[https://github.com/joaoportela/RoboCup-strategy-adviser-coach/blob/de238fb3680ba7d7391e0342a535b500fd5d224a/offline/statistics_calculator/SoccerScope2/soccerscope/util/ButtonManager.java][setSelected] = -> IF { -> array=(ArrayList) map.get(group,)@map.containsKey(group,) }
results[https://github.com/apache/pdfbox/blob/c7e43202e9d31df742a5e58021334cb3c0c99363/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FontManager.java][getAwtFont] = -> IF { -> return (java.awt.Font) envFonts.get(fontname,)@envFonts.containsKey(fontname,) }
