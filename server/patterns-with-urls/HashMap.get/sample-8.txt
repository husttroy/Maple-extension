results[https://github.com/thomasattic/castor/blob/b43151955573ed1a7c83b23e24eb0bd60d179b77/src/main/java/org/exolab/castor/persist/FieldMolder.java][getContextReflectService] = -> resultReflectService=(ReflectService) _reflectServices.get(loader,)@!(null==loader||this._defaultReflectService._loader==loader) -> IF { -> resultReflectService=new ReflectService(_defaultReflectService,loader,)@null==resultReflectService && !(null==loader||this._defaultReflectService._loader==loader) }
results[https://github.com/thomasattic/castor/blob/64d20ab2aa02442c691a7ac38b448616300234ab/src/main/org/exolab/castor/persist/FieldMolder.java][getContextReflectService] = -> resultReflectService=(ReflectService) _reflectServices.get(loader,)@!(null==loader||this._defaultReflectService._loader==loader) -> IF { -> resultReflectService=new ReflectService(_defaultReflectService,loader,)@null==resultReflectService && !(null==loader||this._defaultReflectService._loader==loader) }
results[https://github.com/YongJiang/org.eclipse.birt.engine/blob/1624ca41c0ac0b858a7e7135130546709c4d075e/plugins/org.eclipse.birt.report.engine/src/org/eclipse/birt/report/engine/executor/template/TemplateExecutor.java][saveToFile] = -> IF { -> file=(String) imageCaches.get(name,)@name!=null -> IF { -> return file@name!=null && file!=null } }
results[https://github.com/Teiid-Designer/teiid-designer/blob/715d84789e0ecd762401eac246ae0d636f14f343/plugins/org.teiid.designer.ui/src/org/teiid/designer/ui/editors/MultiPageModelEditor.java][editModelObject] = -> IF { -> objectEditor=(ModelObjectEditorPage) objectEditorMap.get(editorId,)@editorId!=null -> IF { -> return @objectEditor!=null&&objectEditor.canEdit(object,getActiveEditor(),) && editorId!=null } }
results[https://github.com/eduardodaluz/xfire/blob/0ca19517bde1f1e117fa082ef462ba65c232b835/xfire-core/src/main/org/codehaus/xfire/util/jdom/StaxBuilder.java][resolveAttrType] = -> IF { -> I=(Integer) attrTypes.get(typeStr,)@typeStr!=null&&typeStr.length()>0 -> IF { -> return I.intValue()@typeStr!=null&&typeStr.length()>0 && I!=null } }
results[https://github.com/apache/manifoldcf/blob/daf636a953ee07ff1f9a57e1f736dd4bcf09e2bc/modules/framework/crawler/pullagent/com/metacarta/crawler/system/WorkerThread.java][addData] = -> valueMap=(ArrayList) data.get(dataName,)@!(dataName==null) -> IF { -> valueMap=new ArrayList()@valueMap==null && !(dataName==null) -> data.put(dataName,valueMap,)@valueMap==null && !(dataName==null) } -> valueMap.add(dataValue,)@!(dataName==null)
results[https://github.com/axiomsoftware/axiom-stack/blob/5061593fae1659bc71409170c019dfa10c0ed9a0/src/java/axiom/framework/core/Session.java][isDraftIdOn] = -> IF { -> return true@server==null||layer<this.app.getLayer(server,) } -> idSet=(HashSet) this.draftIds.get(server,)@!(server==null||layer<this.app.getLayer(server,)) -> IF { -> return true@idSet==null && !(server==null||layer<this.app.getLayer(server,)) } -> return idSet.contains(id,)@!(idSet==null) && !(server==null||layer<this.app.getLayer(server,))
results[https://github.com/eea/geonetwork-eea/blob/e92d5c09f23df294ea921440361ab81d04b4f582/src/org/fao/geonet/kernel/schema/SchemaLoader.java][buildMetadataAttrib] = -> IF { -> ae=(AttributeEntry) hmAttribs.get(ref,)@ref!=null -> IF { -> throw new IllegalArgumentException("Reference '"+ref+"' not found for attrib : "+name,)@ref!=null && ae==null } }
results[https://github.com/Teiid-Designer/teiid-designer/blob/f96197227bc59c0466c0902392a6c5bacb35e0d4/org.teiid.designer.ui/src/com/metamatrix/modeler/internal/ui/editors/MultiPageModelEditor.java][editModelObject] = -> IF { -> objectEditor=(ModelObjectEditorPage) objectEditorMap.get(editorId,)@editorId!=null -> IF { -> return @objectEditor!=null&&objectEditor.canEdit(object,getActiveEditor(),) && editorId!=null } }
results[https://github.com/apache/manifoldcf/blob/658f97750ec75758d775a3a97bddf8a219491f60/framework/pull-agent/src/main/java/org/apache/manifoldcf/crawler/system/WorkerThread.java][addData] = -> valueMap=(ArrayList) data.get(dataName,)@!(dataName==null) -> IF { -> valueMap=new ArrayList()@valueMap==null && !(dataName==null) -> data.put(dataName,valueMap,)@valueMap==null && !(dataName==null) } -> valueMap.add(dataValue,)@!(dataName==null)
