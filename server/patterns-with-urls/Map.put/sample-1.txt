results[https://github.com/hjalmare/discobot/blob/5bac5dd08cef5eaded66cc668ab55aa126898285/src/main/org/codehaus/groovy/tools/groovydoc/MockOutputTool.java][writeToOutput][22] = -> TRY {  -> output.put(fileName,text,)@ } CATCH(Exception) {}
results[https://github.com/teiid/teiid/blob/ac4eac755f92428090427935c6b9e669c250c335/client-jdbc/src/test/java/com/metamatrix/jdbc/api/TestQueryPlanDisplayHelper.java][testGetDescriptionWNullType][4] = -> TRY {  -> nodeProps=plan.getProperties()@ -> nodeProps.put("type",null,)@ } CATCH(Exception) {}
results[https://github.com/suvajitgupta/Tasks/blob/e8b1afa8014fb1246ae8c5a831907ff1fd2292ea/persevere/WEB-INF/src/org/persvr/datasource/HttpJsonSource.java][recordProperty][1] = -> TRY {  -> object.put(name,recordValueAsJSON(value,),)@ } CATCH(Exception) {}
results[https://github.com/steinarb/mockrunner/blob/28aef767c66437e972f4a72de0ecff6415468f17/src/com/mockrunner/test/NestedTagTest.java][setUp][42] = -> TRY {  -> testMap=new HashMap()@ -> testMap.put("testString","test",)@ } CATCH(Exception) {}
results[https://github.com/bakotaco/spring-framework/blob/d355e75c9feda568e237754cb62a5e54828943fb/org.springframework.jdbc/src/test/java/org/springframework/jdbc/datasource/lookup/MapDataSourceLookupTests.java][testGetDataSourcesReturnsUnmodifiableMap][6] = -> TRY {  -> dataSources=lookup.getDataSources()@ -> dataSources.put("","",)@ } CATCH(Exception) {}
results[https://github.com/dongpd/ecms/blob/b0a3b5ab8034d8daeba95be3de32af1e697e38e9/exo-ecms-ext/exo-ecms-ext-workflow-bp-content-plugin/src/main/java/org/exoplatform/services/plugin/actions/impl/BPActionPlugin.java][executeAction][9] = -> TRY {  -> variables.put("repository",repository,)@ -> executeAction(userId,businessProcess,variables,repository,)@ } CATCH(Exception) {}
results[https://github.com/jdeolive/geotools-old/blob/7a6531ade31f4ad1f107819eae16c0922a69a1b4/modules/unsupported/postgis-versioned/src/test/java/org/geotools/data/postgis/VersiondPostgisDataStoreFactoryOnlineTest.java][testVersioned][10] = -> TRY {  -> remote.put("version enable all",Boolean.TRUE,)@ -> ds=(VersionedPostgisDataStore) DataStoreFinder.getDataStore(remote,)@ } CATCH(Exception) {}
results[https://github.com/kdvolder/org.eclipse.ajdt/blob/44c0f2d6859ff26872f700d9086d7205ea057b0a/org.eclipse.contribution.weaving.jdt.tests/src/org/eclipse/contribution/weaving/jdt/tests/sourceprovider/SourceTransformerTests.java][testFormatCleanUp][1] = -> TRY {  -> settings=new Hashtable()@ -> settings.put(CleanUpConstants.FORMAT_SOURCE_CODE,CleanUpOptions.TRUE,)@ } CATCH(Exception) {}
results[https://github.com/dCache/dcache/blob/3fb0c8edbe196cec5f107056948ff2f9c87b310f/modules/dCache/diskCacheV111/namespace/PnfsManagerBroker.java][<init>][2] = -> TRY {  -> _pnfsManagers.put("default",new WorkerInstance("default",),)@ } CATCH(Exception) {}
results[https://github.com/lbroman/struts2-old/blob/c770c6f38a7fcbe93007a4515a89225e55f498ca/src/test/org/apache/struts/action2/interceptor/WebWorkConversionErrorInterceptorTest.java][testFieldErrorAdded][8] = -> TRY {  -> conversionErrors.put("foo",new Long(123,),)@ } CATCH(Exception) {}
results[https://github.com/krosenvold/struts2/blob/899a074c856e1b6e9394005a9cbdcef63b9fd5c2/xwork-core/src/test/java/com/opensymphony/xwork2/interceptor/ConversionErrorInterceptorTest.java][testWithPreResultListener][1] = -> TRY {  -> conversionErrors.put("foo","Hello",)@ -> ac.setConversionErrors(conversionErrors,)@ } CATCH(Exception) {}
results[https://github.com/FullMetal210/milton-cloud/blob/00bc91955eb3d131949328f9cdd67a7e5cee1590/milton-cloud-server-api/src/test/java/io/milton/cloud/server/web/templating/DataBinderTest.java][testPopulate_String][3] = -> TRY {  -> map.put("s1","astring",)@ -> dataBinder.populate(bean,map,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-extension/src/test/java/org/seasar/teeda/extension/component/TSessionSaveTest.java][testDecode][1] = -> TRY {  -> values=sessionSave.getOrCreateSaveValues(context,)@ -> values.put("aaa","111",)@ } CATCH(Exception) {}
results[https://github.com/naur/research/blob/a590c4fe689d954fdf3f3d1199d10592a6f97fc6/naure-integrate/src/main/java/org/naure/services/SessionService.java][get][1] = -> TRY {  -> params.put("application",systemProperties.applicationName,)@ -> return sessionRepository.get(params,Session.class,)@ } CATCH(Exception) {}
results[https://github.com/naur/research/blob/5f0d6eb688481307e5b283d760ccc931884e5f6d/naure-web-integrate/src/main/java/org/naure/web/integrate/service/SessionService.java][get][1] = -> TRY {  -> params.put("application",systemProperties.applicationName,)@ -> return sessionRepository.get(params,)@ } CATCH(Exception) {}
results[https://github.com/ybrs/hazelcastforked/blob/6d494fa5ef514816a415adb7e2e13314d67bbf87/hazelcast/src/test/java/com/hazelcast/impl/ClusterTest.java][testHazelcastInstanceSerializationWhenUsingExecutorService][2] = -> TRY {  -> m1=h1.getMap("default",)@ -> m1.put("1","value1",)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-core/src/test/java/javax/faces/internal/WindowIdEncodeUrlCustomizerTest.java][testEncodeActionUrl][2] = -> TRY {  -> requestMap=externalContext.getRequestMap()@ -> requestMap.put(WindowIdUtil.WID,"123",)@ } CATCH(Exception) {}
results[https://github.com/apache/ftpserver/blob/b047c1ef804d9e6680aeb95180285e57359199ae/core/src/java/org/apache/ftpserver/DefaultFtpServerContext.java][createListeners][2] = -> TRY {  -> listeners.put("default",new MinaListener(),)@ } CATCH(Exception) {}
results[https://github.com/dongpd/ecms/blob/80af60862fc0ecc878cc30afc60b9e81a23c184b/ext/workflow/bp-content-plugin/src/main/java/org/exoplatform/services/plugin/actions/impl/BPActionPlugin.java][executeAction][1] = -> TRY {  -> variables.put("repository",repository,)@ -> executeAction(userId,businessProcess,variables,)@ } CATCH(Exception) {}
results[https://github.com/stefanofornari/cipeciop/blob/0307ca9f57bda5e5a629c0d512234dbe78a9fdaf/src/test/java/tests/ste/cipeciop/web/CipControllerTest.java][addCip][1] = -> TRY {  -> attributes=(Map) s.getAttribute(ATTRIBUTE_IDENTIFIER,)@ -> attributes.put(ALIAS_USER_ID,CipCiopTestUtil.TEST_USER2,)@ } CATCH(Exception) {}
results[https://github.com/RamesesDev/osiris2/blob/342f92a022c075bb30927f41149976aa298d0ff3/web/web-support/src/com/rameses/web/support/PollerServlet.java][poll][2] = -> TRY {  -> conf.put("readTimeout","-1",)@ -> ctx=new EJBServiceContext(conf,)@ } CATCH(Exception) {}
results[https://github.com/apache/geronimo-xbean/blob/de3da9b68793b7a2fb110e0788ac4a6c556eb448/xbean-naming/src/test/java/org/apache/xbean/naming/context/FederationTest.java][testCreateSubcontextWrapper][1] = -> TRY {  -> rootBindings.put("java:comp/unmodifible/context/foo","bar",)@ -> assertEq(rootBindings,rootContext,)@ } CATCH(Exception) {}
results[https://github.com/bogeblad/infoglue2/blob/9a30198833158cc89ebe75c373e75902819b197c/src/java/org/infoglue/cms/controllers/kernel/impl/simple/OptimizedImportController.java][copyRepository][18] = -> TRY {  -> args=new HashMap()@ -> args.put("globalKey","infoglue",)@ -> ps=PropertySetManager.getInstance("jdbc",args,)@ } CATCH(Exception) {}
results[https://github.com/jdbc-bare/spring-jdbc-bare/blob/2c7d3673a81e9abe839e05e0981612b052d45551/org.springframework.testsuite/src/test/java/org/springframework/web/servlet/view/RedirectViewTests.java][testSingleParamWithoutExposingModelAttributes][6] = -> TRY {  -> model=new HashMap()@ -> model.put(key,val,)@ -> doTest(model,url,false,false,expectedUrlForEncoding,)@ } CATCH(Exception) {}
results[https://github.com/resteasy/Resteasy/blob/9eda6fb4622057aed26174860e41198a9b9ca4d0/jaxrs/security/skeleton-keystone-idm/skeleton-key-core/src/test/java/org/jboss/resteasy/test/skeleton/key/TokenTest.java][testAuth][6] = -> TRY {  -> creds=new HashMap()@ -> creds.put("password","foobar",)@ -> newUser.setCredentials(creds,)@ } CATCH(Exception) {}
results[https://github.com/krosenvold/struts2/blob/99ad24f23483caeef3621555604dd319fa549a77/core/src/test/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptorTest.java][testValidationFails][20] = -> TRY {  -> parameters=new HashMap()@ -> parameters.put("struts.enableJSONValidation","true",)@ -> request.setParameterMap(parameters,)@ } CATCH(Exception) {}
results[https://github.com/aalmiray/Json-lib/blob/c785e4d630387c1e89b83bb6cc3c26420affe420/src/test/java/net/sf/json/TestJSONArrayCollections.java][createDynaBean][3] = -> TRY {  -> properties=new HashMap()@ -> properties.put("name",String.class,)@ -> dynaClass=new MorphDynaClass(properties,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-extension/src/test/java/org/seasar/teeda/extension/html/factory/MessageFactoryTest.java][testCreateFactory][40] = -> TRY {  -> properties=new HashMap()@ -> properties.put("id","aaaMessage",)@ -> elementNode=createElementNode("span",properties,)@ } CATCH(Exception) {}
results[https://github.com/mperdikeas/playground/blob/498ec4f41973e7d56608b58946005b5b5595c846/spring/spring-framework-2.5.6/test/org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsViewTests.java][testWithNonExistentSubReport][8] = -> TRY {  -> model=getModel()@ -> model.put("SubReportData",getProductData(),)@ } CATCH(Exception) {}
results[https://github.com/irbull/rt.eclipse.p2/blob/954f7795720659f00f2146fb1cf01d7114037a53/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/mirror/MetadataMirrorApplicationTest.java][runMirrorApplication][3] = -> TRY {  -> map=new HashMap()@ -> map.put("metadataOrArtifacts","metadata",)@ -> application.setInitializationData(null,null,map,)@ } CATCH(Exception) {}
results[https://github.com/wso2/commons/blob/0eb8ee0ef1e742c04b98150c4a9836657477cff1/openjpa-2.2.0/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java][setUp][3] = -> TRY {  -> propsMap=new HashMap()@ -> propsMap.put("openjpa.LockManager","pessimistic",)@ -> _factory=getEmf(propsMap,)@ } CATCH(Exception) {}
results[https://github.com/jacob-carlborg/descent/blob/4ba1f9a412449acd19ef595507a16a196e50f17b/descent.tests/descent/tests/format/FormatWhitespaceStatements_Test.java][testFORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_CASTS][50] = -> TRY {  -> options=new HashMap()@ -> options.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_OPENING_PAREN_IN_CASTS,DefaultCodeFormatterConstants.TRUE,)@ -> assertFormat("x = cast (int) y;","x = cast(int) y;",options,)@ } CATCH(Exception) {}
results[https://github.com/betterFORM/betterFORM/blob/ec674df9dc05f19ffd3783f345aa67ae33748373/core/src/test/java/de/betterform/xml/events/XMLEventInitializerTest.java][testInitXFormsLinkError][1] = -> TRY {  -> props=new HashMap(1,)@ -> props.put(XFormsEventNames.RESOURCE_URI_PROPERTY,"aURI",)@ -> this.xmlEventInitializer.initXMLEvent(this.xmlEvent,XFormsEventNames.LINK_ERROR,false,true,props,)@ } CATCH(Exception) {}
results[https://github.com/apache/cayenne/blob/45d1109df5617fbfa19c4d93d13f20e1f92a7de8/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ParametrizedExpressionTest.java][testNullOptionalParameter][24] = -> TRY {  -> params=new HashMap()@ -> params.put("a",null,)@ -> e2=e.expWithParameters(params,true,)@ } CATCH(Exception) {}
results[https://github.com/geoserver/geoserver-history/blob/3f27cc9cc0b6d6c0d87044d6dc669591e6837c6e/src/extension/restconfig/src/main/java/org/geoserver/catalog/rest/ResourceHTMLFormat.java][wrapInternal][3] = -> TRY { -> properties.put("boundingBox",object.boundingBox(),)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/apache/servicemix3/blob/b3b6855fcf4e842eeb938f824fa20950c0c7c687/servicemix-components/src/test/java/org/apache/servicemix/components/groovy/ServiceMixClientTest.java][testSendUsingMapAndPOJOsUsingContainerRouting][3] = -> TRY {  -> properties=new HashMap()@ -> properties.put("name","James",)@ -> clientNoRouting.send(null,null,properties,"<hello>world</hello>",)@ } CATCH(Exception) {}
results[https://github.com/betfair/cougar/blob/ee8e0abe7feca419b3d647f536354144a14b19bb/cougar-test/cougar-normal-code-tests/src/test/java/com/betfair/cougar/tests/updatedcomponenttests/standardvalidation/rest/RestPostMissingMandatoryListOfComplexJSONTest.java][doTest][33] = -> TRY {  -> map2=new HashMap()@ -> map2.put("RESTJSON","{\"inputList\": [{\"ComplexObject\":{}}]}",)@ -> getNewHttpCallBean1.setPostQueryObjects(map2,)@ } CATCH(Exception) {}
results[https://github.com/apache/servicemix3/blob/b3b6855fcf4e842eeb938f824fa20950c0c7c687/servicemix-components/src/test/java/org/apache/servicemix/components/groovy/ServiceMixClientTest.java][assertRequestUsingMapAndPOJOByServiceName][3] = -> TRY {  -> properties=new HashMap()@ -> properties.put("name","James",)@ -> response=client.request(resolver,null,properties,"<hello>world</hello>",)@ } CATCH(Exception) {}
results[https://github.com/betfair/cougar/blob/ee8e0abe7feca419b3d647f536354144a14b19bb/cougar-test/cougar-normal-code-tests/src/test/java/com/betfair/cougar/tests/updatedcomponenttests/property/VerifyOverrideCougarPropertyTest.java][verifyPropertyValue][28] = -> TRY {  -> map=new HashMap()@ -> map.put("propertyName",propertyname,)@ -> getNewHttpCallBean.setQueryParams(map,)@ } CATCH(Exception) {}
results[https://github.com/ekirkilevics/Spring/blob/03517871a63e8f8079a2b2c4904cf0525eba582e/spring-webmvc/src/test/java/org/springframework/web/servlet/view/jasperreports/ExporterParameterTests.java][testParameterParsing][4] = -> TRY {  -> params=new HashMap()@ -> params.put("net.sf.jasperreports.engine.export.JRHtmlExporterParameter.IMAGES_URI","/foo/bar",)@ -> view.setExporterParameters(params,)@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/test/java/security/PermissionCollection/Concurrent.java][testPerms][2] = -> TRY {  -> CATCH(Exception) { -> errors.put("java.security.Permissions",e,)@ } } CATCH(Exception) {}
results[https://github.com/FDVSolutions/DynamicJasper/blob/9a291551914be8a3b8d84964d9dfdfe8a0cf6a86/src/test/java/ar/com/fdvs/dj/test/subreport/SubReportBuilder3Test.java][buildReport][2] = -> TRY {  -> subreportParameterMap=new HashMap()@ -> subreportParameterMap.put("rightHeader","Sub report right header",)@ -> params.put("subreportParameterMap",subreportParameterMap,)@ } CATCH(Exception) {}
results[https://github.com/RamesesDev/osiris2/blob/ff9c99b31670cdb62b44ed6ecf5fadccf97146ff/tests/test-client (copy)/src/Main.java][main][2] = -> TRY {  -> m=new HashMap()@ -> m.put("default.host","10.0.0.104:8080",)@ -> OsirisTestPlatform.runTest(m,)@ } CATCH(Exception) {}
results[https://github.com/jmcc0nn3ll/jetty-project/blob/072e3e4a3492e70e6a7b1e3daedf63dc977b63c9/modules/server/jetty-xml/src/test/java/org/mortbay/xml/XmlConfigurationTest.java][testXmlConfiguration][19] = -> TRY {  -> properties=new HashMap()@ -> properties.put("whatever","xxx",)@ -> configuration.setProperties(properties,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/fb1ac4b5c453cf1056c7d5946496740bac72f923/teeda/teeda-extension/src/test/java/org/seasar/teeda/extension/html/factory/SelectOneListboxFactoryTest.java][testIsMatch][1] = -> TRY {  -> map=new HashMap()@ -> map.put("id","hogeItems",)@ -> elementNode=new ElementNodeImpl("select",map,)@ } CATCH(Exception) {}
results[https://github.com/RamesesDev/osiris2/blob/d0dcc3d9b620a54b011099c664b02d37a67bf6d6/common/rameses-common/test/session/NotifierTest.java][xtestGetInfo][1] = -> TRY {  -> conf=new HashMap()@ -> conf.put("app.context","gazeebu-classroom",)@ -> ctx=new EJBServiceContext(conf,)@ } CATCH(Exception) {}
results[https://github.com/tashiscool/spring/blob/2c7d3673a81e9abe839e05e0981612b052d45551/org.springframework.testsuite/src/test/java/org/springframework/web/servlet/view/RedirectViewTests.java][testParamWithAnchor][6] = -> TRY {  -> model=new HashMap()@ -> model.put(key,val,)@ -> doTest(model,url,false,expectedUrlForEncoding,)@ } CATCH(Exception) {}
results[https://github.com/steinarb/mockrunner/blob/a918027855d4c52ff2780374ece9d60721ffe1f3/src/com/mockrunner/example/tag/TableEnumTagTest.java][setUp][2] = -> TRY {  -> attributeMap=new HashMap()@ -> attributeMap.put("label","myLabel",)@ -> nestedTag=createNestedTag(TableEnumTag.class,attributeMap,)@ } CATCH(Exception) {}
results[https://github.com/betfair/cougar/blob/ee8e0abe7feca419b3d647f536354144a14b19bb/cougar-test/cougar-normal-code-tests/src/test/java/com/betfair/cougar/tests/updatedcomponenttests/standardvalidation/rest/RestIDLQueryParamSimpleTypeIntegerMandatoryNotSetTest.java][doTest][9] = -> TRY {  -> map3=new HashMap()@ -> map3.put("HeaderParam","354354",)@ -> getNewHttpCallBean2.setHeaderParams(map3,)@ } CATCH(Exception) {}
results[https://github.com/lsegal/jml4disco/blob/052f05be65704a4932ea56a44ec7a352809700a5/org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java][test045][10] = -> TRY {  -> options=this.getCompilerOptions()@ -> options.put(CompilerOptions.OPTION_PreserveUnusedLocal,CompilerOptions.PRESERVE,)@ -> this.runConformTest( new String[],"aaaa",null,true,null,options,null,)@ } CATCH(Exception) {}
results[https://github.com/mnip91/proactive-component-monitoring/blob/198c88dcff0402da0b531c20e71f38154b0b343c/src/nonregressiontest/component/descriptor/arguments/Test.java][action][3] = -> TRY {  -> context=new HashMap()@ -> context.put("message","hello world",)@ -> dummy=(Component) f.newComponent("nonregressiontest.component.descriptor.arguments.dummy",context,)@ } CATCH(Exception) {}
results[https://github.com/dana-i2cat/opennaas/blob/50ad76d85d1c45184565adc673d15541247d7697/itests/roadm/src/test/java/org/opennaas/itests/roadm/alarms/MonitoringCapabilityTest.java][checkHandleSessionAlarmTriggersCapabilityAlarmTest][4] = -> TRY {  -> serviceProperties=new HashMap<String, String>()@ -> serviceProperties.put(ProtocolSessionContext.PROTOCOL,"mock",)@ -> (ProtocolManager) protocolManager.sessionFactoryAdded(factory,serviceProperties,)@ } CATCH(Exception) {}
results[https://github.com/infinispan/infinispan/blob/729a170017fd568466ab6163827c8dd8931dcbb6/src/test/java/org/horizon/jmx/ActivationAndPassivationInterceptorMBeanTest.java][testActivationOnPutMap][3] = -> TRY {  -> toAdd=new HashMap()@ -> toAdd.put("key","value2",)@ -> cache.putAll(toAdd,)@ } CATCH(Exception) {}
results[https://github.com/flotpk/geoserver/blob/79e39ceffdd85d9da453c0f2b6c812ad9afecadc/src/wfs/src/test/java/org/geoserver/wfs/response/ShapeZipTest.java][testESRIFormat][4] = -> TRY {  -> options=new HashMap()@ -> options.put("PRJFILEFORMAT","ESRI",)@ -> gft.setFormatOptions(options,)@ } CATCH(Exception) {}
results[https://github.com/builddoctor/cruisecontrol/blob/466c4986c32c6104e57041266b92bd8a672590cb/cruisecontrol/reporting/dashboard/test/unit/net/sourceforge/cruisecontrol/dashboard/web/view/JsonViewTest.java][testShouldRenderMapWithSingleBlankKeyDirectly][1] = -> TRY {  -> map=new HashMap()@ -> map.put(" ","value",)@ -> output=view.renderJson(map,)@ } CATCH(Exception) {}
results[https://github.com/astubbs/spring-modules/blob/6b23d8f306fe55e96bdb245d6e3cc89aa928e7b8/projects/template/src/test/org/springmodules/template/engine/freemarker/FreemarkerTemplateEngineTests.java][testCreateConfiguration][2] = -> TRY {  -> vars=new HashMap()@ -> vars.put("name","value",)@ -> conf=FreemarkerTemplateEngine.createConfiguration(loader,settings,vars,null,)@ } CATCH(Exception) {}
results[https://github.com/boundlessgeo/geotools-2.7.x/blob/97dca30e4c611e742429aede2b20551e931c57d8/demo/example/src/main/java/org/geotools/demo/example/WFSExample.java][dataUpdate][8] = -> TRY {  -> connectionParameters=new HashMap()@ -> connectionParameters.put("WFSDataStoreFactory:GET_CAPABILITIES_URL",getCapabilities,)@ -> data=DataStoreFinder.getDataStore(connectionParameters,)@ } CATCH(Exception) {}
results[https://github.com/stefanofornari/cipeciop/blob/62b37985f4a0365e7c0d67ad6dfd7ac6801d63da/src/test/java/tests/ste/cipeciop/ajax/CipControllerTest.java][beanshellSetup][2] = -> TRY {  -> attributes=new HashMap()@ -> attributes.put(ALIAS_USER_ID,CipCiopTestUtil.TEST_USER1,)@ -> s.setAttribute(ATTRIBUTE_IDENTIFIER,attributes,)@ } CATCH(Exception) {}
results[https://github.com/lbroman/struts2-old/blob/974e051bc5e2541261c44cd6fc27717dfcb3267b/core/src/test/java/org/apache/struts2/interceptor/MessageStoreInterceptorTest.java][testRequestOperationMode1][2] = -> TRY {  -> paramMap=new LinkedHashMap()@ -> paramMap.put("operationMode", new String[],)@ -> actionContext.put(ActionContext.PARAMETERS,paramMap,)@ } CATCH(Exception) {}
results[https://github.com/ramesesinc/incubation/blob/54979e7dd643af7f828a82c1366918f8c6133b6e/rameses-osiris3-server/test/test2/SimpleTest.java][xxtestSimple][2] = -> TRY {  -> env=new HashMap()@ -> env.put("sessionid","ELMSKI",)@ -> m=svc.create("SimpleService",env,TestIntf.class,)@ } CATCH(Exception) {}
results[https://github.com/RamesesDev/osiris2/blob/342f92a022c075bb30927f41149976aa298d0ff3/server/rameses-server-common/test/TestRemoteServiceInvoker.java][testHello][1] = -> TRY {  -> conf=new HashMap()@ -> conf.put("app.context","gazeebu-classroom",)@ -> ri=new EJBServiceProxyRemote("localhost:8080",conf,)@ } CATCH(Exception) {}
results[https://github.com/Teiid-Designer/teiid-designer/blob/3eca17bbbd560fd2e43822b5e434610e8aa52b01/org.teiid.designer.vdb.edit.test/src/com/metamatrix/vdb/edit/modelgen/TestMaterializedViewModelGenerator.java][testMaterializationWithNestedTables][1] = -> TRY {  -> m=reg.getExtensionToFactoryMap()@ -> m.put("xmi",new XMIResourceFactoryImpl(),)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-core/src/test/java/javax/faces/internal/ConverterResourceTest.java][testGetConverter3][2] = -> TRY {  -> properties=new HashMap()@ -> properties.put("pattern","yyyy/MM/dd",)@ -> ConverterResource.addConverter("#{a.name}","hogeBigDecimalConverter",properties,)@ } CATCH(Exception) {}
results[https://github.com/droolsjbpm/drools/blob/45db516edbcb13f59bc8cafcd4ca4dd75d5fe19f/drools-compiler/src/test/java/org/drools/compiler/integrationtests/MiscTest.java][testMatchesMVEL2][4] = -> TRY {  -> map=new HashMap()@ -> map.put("content","String with . and (routine)",)@ -> ksession.insert(map,)@ } CATCH(Exception) {}
results[https://github.com/eclipse/eclipse.pde.build/blob/c676beae2ed65d88a96ac1484086fa3d8ba2b811/org.eclipse.pde.build.tests/src/org/eclipse/pde/build/internal/tests/ProductTests.java][test237922][1] = -> TRY {  -> alternateTasks=new HashMap()@ -> alternateTasks.put("eclipse.brand","org.eclipse.pde.build.internal.tests.ant.TestBrandTask",)@ -> antProject=assertValidAntScript(assembleScript,alternateTasks,)@ } CATCH(Exception) {}
results[https://github.com/eclipse/epf.plugins/blob/f61061d7cd1c8791d0c969947467fe697e01ddd7/org.eclipse.epf.export.xml/src/org/eclipse/epf/export/xml/services/XMLLibrary.java][save][3] = -> TRY {  -> options=new HashMap()@ -> options.put(XMLResource.OPTION_ENCODING,"UTF-8",)@ -> resource.save(options,)@ } CATCH(Exception) {}
results[https://github.com/apache/servicemix3/blob/b3b6855fcf4e842eeb938f824fa20950c0c7c687/servicemix-components/src/test/java/org/apache/servicemix/components/groovy/ServiceMixClientTest.java][testRequestUsingPOJOWithXStreamMarshaling][3] = -> TRY {  -> properties=new HashMap()@ -> properties.put("name","James",)@ -> response=client.request(resolver,null,properties,bean,)@ } CATCH(Exception) {}
results[https://github.com/astubbs/spring-modules/blob/fcba307f8427c8222b0b6ce1af6edbc9b1f98a21/projects/spring-modules-template/src/test/java/org/springmodules/template/engine/freemarker/FreemarkerTemplateTests.java][testGenerate][1] = -> TRY {  -> model=new HashMap()@ -> model.put("name","Daan",)@ -> name=ft.generate(model,)@ } CATCH(Exception) {}
results[https://github.com/service-oriented-science/Globus-Crux-Core/blob/325cc145657527658e53b80bafc52e432efd9bbf/wsn/src/test/java/org/globus/crux/messaging/FunctionalTest.java][main][1] = -> TRY {  -> requestContext=(BindingProvider) producer.getRequestContext()@ -> requestContext.put(WSNNotificationProducerImpl.RESOURCE_ID_KEY,new QName(FunctionalTest.TEST_CONSUMER_NS_URI,RESOURCE_KEY_NAME,),)@ } CATCH(Exception) {}
results[https://github.com/RamesesDev/osiris2/blob/342f92a022c075bb30927f41149976aa298d0ff3/server/rameses-cache/test/tests/SimpleCache.java][testPut][1] = -> TRY {  -> map=new HashMap()@ -> map.put("name","elmo",)@ -> mbean.put("test",map,60000,)@ } CATCH(Exception) {}
results[https://github.com/droolsjbpm/jbpm/blob/621963560bb52b2b5204e3cf8c4e14d1e472d3c1/jbpm-human-task/src/test/java/org/jbpm/task/ModelPersistenceTest.java][testfullHibernateRoundtripWithAdditionalMVELCheck][1] = -> TRY {  -> vars=fillVariables()@ -> vars.put("bytes1", new byte[],)@ -> task3=(Task) eval(reader,vars,)@ } CATCH(Exception) {}
results[https://github.com/apache/maven-surefire/blob/d02ac9559b3fe9620592cdbba11b24e4a06dcc61/surefire-providers/surefire-testng/src/test/java/org/apache/maven/surefire/testng/conf/TestNG652ConfiguratorTest.java][testGetConvertedOptions][1] = -> TRY {  -> raw=new HashMap()@ -> raw.put("objectfactory","java.lang.String",)@ -> convertedOptions=testNGMapConfigurator.getConvertedOptions(raw,)@ } CATCH(Exception) {}
results[https://github.com/impetus-opensource/Kundera/blob/4752fe821b0be9734ffa5e46a376da49edc7575e/src/kundera-cassandra/cassandra-core/src/test/java/com/impetus/client/cassandra/thrift/cql/CQLUserTest.java][setUp][8] = -> TRY {  -> propertyMap=new HashMap()@ -> propertyMap.put(CassandraConstants.CQL_VERSION,CassandraConstants.CQL_VERSION_3_0,)@ -> emf=Persistence.createEntityManagerFactory(persistenceUnit,propertyMap,)@ } CATCH(Exception) {}
results[https://github.com/eduardodaluz/xfire/blob/6fbc3803fa4d15cc8e2d64e6c5b66876fd03c25c/xfire-core/src/test/org/codehaus/xfire/wsdl11/WSDLConfiguratorTest.java][testVisitor][1] = -> TRY {  -> properties=new HashMap()@ -> properties.put(ObjectServiceFactory.PORT_TYPE,new QName("urn:Echo","EchoPortType",),)@ } CATCH(Exception) {}
results[https://github.com/apache/cayenne/blob/793866fc7072bee225de5d07c87fc636cd704e7c/cayenne/src/tests/java/org/objectstyle/cayenne/exp/ParsedExpQualifierCompatTst.java][testParameter][2] = -> TRY {  -> parameters=new HashMap()@ -> parameters.put("artistName","artist5",)@ -> parsed1=parsed1.expWithParameters(parameters,)@ } CATCH(Exception) {}
results[https://github.com/mperdikeas/playground/blob/498ec4f41973e7d56608b58946005b5b5595c846/spring/spring-framework-2.5.6/test/org/springframework/util/AssertTests.java][testAssertNotEmptyWithMapSunnyDay][1] = -> TRY {  -> map=new HashMap()@ -> map.put("","",)@ -> Assert.notEmpty(map,)@ } CATCH(Exception) {}
results[https://github.com/astubbs/spring-modules/blob/56adbb7f356ef3598c2a7667b8bb3dd02688aabf/sandbox/template/src/test/org/springmodules/template/engine/groovy/GroovyTemplateEngineTests.java][testCreateTemplate][1] = -> TRY {  -> model=new HashMap()@ -> model.put("name","Lian",)@ -> template.generate(writer,model,)@ } CATCH(Exception) {}
results[https://github.com/NowBaseline/nebula/blob/c3e5242b2fabea18003ccd8e19bededb817d1800/techtest/src/test/java/test/java/performance/TestGet__MVMGet.java][setup][1] = -> TRY {  -> vars=new HashMap()@ -> vars.put("foobar",new Integer(100,),)@ } CATCH(Exception) {}
results[https://github.com/astubbs/spring-modules/blob/56adbb7f356ef3598c2a7667b8bb3dd02688aabf/sandbox/template/src/test/org/springmodules/template/engine/freemarker/FreemarkerTemplateEngineTests.java][testCreateConfiguration][1] = -> TRY {  -> vars=new HashMap()@ -> vars.put("name","value",)@ -> conf=FreemarkerTemplateEngine.createConfiguration(loader,settings,vars,)@ } CATCH(Exception) {}
results[https://github.com/ramesesinc/incubation/blob/54979e7dd643af7f828a82c1366918f8c6133b6e/rameses-osiris3-server/test/test/RuleTest.java][setUp][1] = -> TRY {  -> conf=new HashMap()@ -> conf.put("cluster","osiris3",)@ -> svr=new CustomOsirisServer("file:///c:/osiris3_home",conf,)@ } CATCH(Exception) {}
results[https://github.com/betfair/cougar/blob/ee8e0abe7feca419b3d647f536354144a14b19bb/cougar-test/cougar-normal-code-tests/src/test/java/com/betfair/cougar/tests/updatedcomponenttests/acceptprotocols/rest/RestPostJSONRequestUnsupportedAcceptProtocolTest.java][doTest][1] = -> TRY {  -> map3=new HashMap()@ -> map3.put("application/pdf","q=70",)@ -> getNewHttpCallBean2.setAcceptProtocols(map3,)@ } CATCH(Exception) {}
results[https://github.com/apache/log4j/blob/54d827cdc933ed8195dc6580b9052d9e45c8b3a5/tests/src/java/org/apache/joran/InterpreterTest.java][testNewConversionWord][1] = -> TRY {  -> omap=ec.getObjectMap()@ -> omap.put(ActionConst.APPENDER_BAG,new HashMap(),)@ } CATCH(Exception) {}
results[https://github.com/emmanuelbernard/hibernate-core-ogm/blob/b7fb3fcdeecd8101dd893eab7ac22ae98ae0ce9c/entitymanager/src/test/org/hibernate/ejb/test/emops/FlushModeTest.java][testCreateEMFlushMode][1] = -> TRY {  -> properties=new HashMap()@ -> properties.put("org.hibernate.flushMode","manual",)@ -> em=createEntityManager(properties,)@ } CATCH(Exception) {}
results[https://github.com/enonic/cms-ce/blob/04f905b4ec315fb93c87000bea71026cf70c5ec9/modules/cms-core/src/test/java/com/enonic/cms/server/service/admin/mvc/controller/TranslationWriterTest.java][testTranslationMedNorskTegn][1] = -> TRY {  -> translationMap=new HashMap()@ -> translationMap.put("%norskeTegn%","Fullfør",)@ -> dest=new TranslationWriter(translationMap,result,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/s2struts/blob/88a18a02eab9fa81092383fb56afae47123bebe2/s2struts/src/test/java/org/seasar/struts/util/RequestUtilTest.java][testGetActionExpression][1] = -> TRY {  -> params=new HashMap()@ -> params.put(Constants.ACTION_EXPRESSION_KEY,"#{aaa.bbb}",)@ -> encoded=Base64ParameterUtil.encode(params,)@ } CATCH(Exception) {}
results[https://github.com/lenik/jazz/blob/94e3d95d203f42c5f6a1741aab85c936e3e96d5c/bas/layer-5/bas-bean/src/main/java/net/bodz/bas/bean/DynaBeansExampleV1.java][createMovieBean][2] = -> TRY {  -> genre=new HashMap()@ -> genre.put("THR","Thriller",)@ -> movieBean.set("genre",genre,)@ } CATCH(Exception) {}
results[https://github.com/eduardodaluz/xfire/blob/ac3f528af97f0772bc4cd4b6383b84394f100d0c/xfire-xmlbeans/src/test/org/codehaus/xfire/xmlbeans/XmlTypeTest.java][testNamespaces][1] = -> TRY {  -> nsmap=new HashMap()@ -> nsmap.put("xsd",SoapConstants.XSD,)@ -> context.setProperty(ReadHeadersHandler.DECLARED_NAMESPACES,nsmap,)@ } CATCH(Exception) {}
results[https://github.com/astubbs/spring-modules/blob/1f6564bf516fed99a0643d27017f2f4a64019d9a/projects/xt/src/test/org/springmodules/xt/ajax/action/RedirectActionTest.java][testRender][1] = -> TRY {  -> model=new HashMap()@ -> model.put("ex","ex",)@ -> action=new RedirectAction("/ajax/redirect.action",model,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-extension/src/test/java/org/seasar/teeda/extension/html/factory/GenericFactoryTest.java][testCreateFactory][1] = -> TRY {  -> properties=new HashMap()@ -> properties.put("value","#{fooPage.aaa}",)@ -> elementNode=createElementNode(JsfConstants.JSF_HTML_URI,"inputText",null,properties,)@ } CATCH(Exception) {}
results[https://github.com/danielabutano/biosources-test-subtree/blob/fc2a82e65602ded6b46365e1cd0c0d6ee1063a8a/mage/test/src/org/flymine/dataconversion/MageDataTranslatorTest.java][XtestTranslateTreatmentSampleLabels][1] = -> TRY {  -> expSampleToLabel=new HashMap()@ -> expSampleToLabel.put("8_1","cy3",)@ -> assertEquals(expSampleToLabel,translator.sampleToLabel,)@ } CATCH(Exception) {}
results[https://github.com/ldangelo/orangeleap-tangerine/blob/a1db4682ed8dcb9071d43b4d54473c0e56da9554/src/com/orangeleap/tangerine/controller/commitment/pledge/PledgeViewController.java][referenceData][1] = -> TRY {  -> refData=super.referenceData(request,command,errors,)@ -> refData.put(StringConstants.CAN_APPLY_PAYMENT,pledgeService.canApplyPayment((Pledge) command,),)@ } CATCH(Exception) {}
results[https://github.com/astubbs/spring-modules/blob/fcba307f8427c8222b0b6ce1af6edbc9b1f98a21/projects/spring-modules-validation/spring-modules-validation-base/src/test/java/org/springmodules/validation/commons/ConfigurableBeanValidatorTests.java][testValidate_WithMappedProperty_Success][1] = -> TRY {  -> attributes=new HashMap()@ -> attributes.put("name1","value1",)@ -> bean.setAttributes(attributes,)@ } CATCH(Exception) {}
results[https://github.com/betterFORM/betterFORM/blob/ec674df9dc05f19ffd3783f345aa67ae33748373/core/src/test/java/de/betterform/xml/events/XMLEventInitializerTest.java][testInitCustomMIPToggledEvent][1] = -> TRY {  -> context=new HashMap()@ -> context.put("diff","true",)@ -> this.xmlEventInitializer.initXMLEvent(this.xmlEvent,type,true,false,context,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/teeda/blob/1cb9d04bcf3a07fe8c5733c4d0956079da534f94/teeda/teeda-extension/src/test/java/org/seasar/teeda/extension/html/factory/SelectManyCheckboxFactoryTest.java][testIsMatch_ng6][2] = -> TRY {  -> map=new HashMap()@ -> map.put("id","hoge",)@ -> parent=new ElementNodeImpl(null,null,"span",map,)@ } CATCH(Exception) {}
results[https://github.com/tekul/spring-security/blob/2dd9faabc0a1d999d88bb0e8efab1652cae2443a/captcha/src/test/java/org/springframework/security/captcha/CaptchaEntryPointTests.java][testHttpsOperationFromOriginalHttpUrl][2] = -> TRY {  -> map=new HashMap()@ -> map.put("8888","9999",)@ -> portMapper.setPortMappings(map,)@ } CATCH(Exception) {}
results[https://github.com/johndemic/mule-transport-mongodb/blob/6ea92a7e58e00d497cd3f6b24dec6928f2d0ed15/src/test/java/org/mule/transport/mongodb/MongoDBFunctionalTestCase.java][testCanInsertByteArrayWithFileNameIntoGridFs][1] = -> TRY {  -> properties=new HashMap()@ -> properties.put(MongoDBConnector.PROPERTY_FILENAME,"foo.dat",)@ -> result=client.send("mongodb://bucket:somefiles",input,properties,)@ } CATCH(Exception) {}
results[https://github.com/willuhn/hibiscus.xmlrpc/blob/e674d900a16e574330318ef4ec1b5e95e9925ead/src/de/willuhn/jameica/hbci/xmlrpc/server/SepaUeberweisungServiceImpl.java][afterLoad][1] = -> TRY {  -> params.put(XmlRpcParameter.PARAM_ENDTOEND_ID,StringUtil.notNull(auftrag.getEndtoEndId(),),)@ } CATCH(Exception) {}
results[https://github.com/jdereg/json-io/blob/f49daef4a6003688092e0a82d188c43febaa891d/src/test/java/com/cedarsoftware/util/io/TestJsonReaderWriter.java][testPrettyPrint][1] = -> TRY {  -> args=new HashMap()@ -> args.put(JsonWriter.PRETTY_PRINT,"true",)@ -> json=JsonWriter.objectToJson(nice,args,)@ } CATCH(Exception) {}
results[https://github.com/steinarb/mockrunner/blob/abbea4ef0a8b1330effe9b125a103222ca250684/src/com/mockrunner/test/connector/MockInteractionTest.java][testExecuteReturnsRecord][1] = -> TRY {  -> expectedMap=new HashMap()@ -> expectedMap.put("1","1",)@ -> mappedInteraction.setExpectedRequest(expectedMap,)@ } CATCH(Exception) {}
results[https://github.com/bogeblad/infoglue2/blob/7d2c3a68a97c0c588fb713d3f7a5b24d002cf3bb/src/java/org/infoglue/cms/controllers/kernel/impl/simple/InfoGlueSettingsController.java][updateSetting][1] = -> TRY {  -> propertiesMap=new HashMap()@ -> propertiesMap.put(key,value,)@ -> settingsController.updateSettings(nameSpace,name,variationId,propertiesMap,database,)@ } CATCH(Exception) {}
