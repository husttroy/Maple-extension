results[https://github.com/bakotaco/spring-framework/blob/ca19f6fb40e729fc192f039d5b94c1820cdd2401/org.springframework.web.portlet/src/test/java/org/springframework/web/portlet/mvc/CommandControllerTests.java][testWithCustomDateEditorEmptyNotAllowed][116] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd-MM-yyyy",)@ } CATCH(Exception) {}
results[https://github.com/Yarl-IT-Hub/ySchool/blob/115e6f5b345b64c1edd43a9170769eb03863a229/yschool/src/test/java/org.yarlithub.yschool.test/integration/student/StudentNewTest.java][setUp][232] = -> TRY {  -> formatter=new SimpleDateFormat("d-MMM-yyyy,HH:mm:ss aaa",)@ -> date=formatter.parse(testDate,)@ } CATCH(Exception) {}
results[https://github.com/firefoxmmx2/jdy/blob/63b14c7b7d0a4058c39369d51e3b4aeabf3e1e5b/src/com/aisino2/basicsystem/action/XctbhfAction.java][initxctbhfAdd][95] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> hftime=sdf.format(today,)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-betwixt/blob/b2b239ca3f54db6a0e1746b86ae8c1e6f07301fd/src/test/org/apache/commons/betwixt/strategy/Testi18nObjectStringConversion.java][testFrenchDefaultLocale][6] = -> TRY {  -> format=new SimpleDateFormat("EEE MMM dd HH:mm:sss yyyy",)@ -> formatted=format.format(date,)@ } CATCH(Exception) {}
results[https://github.com/shantanusharma/weka/blob/9a2db79201b446436edbd1a062b8ae31564634ef/weka/filters/unsupervised/attribute/Add.java][setDateFormat][19] = -> TRY { -> new SimpleDateFormat(value,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/baron/weka/blob/cdb45adc27fb087fb8e773a95a1dd55435180862/src/main/java/weka/core/Debug.java][setFormat][21] = -> TRY { -> m_Formatter=new SimpleDateFormat(value,)@ } CATCH(Exception) { -> m_Formatter=new SimpleDateFormat(DEFAULT_FORMAT,)@ }
results[https://github.com/pangwu86/XBlink/blob/85cce93934b825ea2520c6ca068c2ec1ef969d94/test/org/xblink/core/convert/converters/MyDateConverter.java][obj2Text][3] = -> TRY {  -> dateFormat=new SimpleDateFormat(DATA_FORMAT_TEMPLATE,)@ -> return dateFormat.format(obj,)@ } CATCH(Exception) {}
results[https://github.com/harvimt/Group9_CS300_Project/blob/6aac5782090fa32a6455e769589fc5854ce69cb8/src/border/HomeScreen.java][jMenuItem1ActionPerformed][1] = -> TRY { -> df=new SimpleDateFormat("MMM dd, yyyy",)@ } CATCH(Exception) { -> JOptionPane.showMessageDialog(null,"Failed to add debug data","ERROR",JOptionPane.ERROR_MESSAGE,)@ }
results[https://github.com/DozerMapper/dozer/blob/cda3d6a8752bae71b5d4945f8c61dc072e15e42e/core/src/test/java/org/dozer/converters/XMLGregorianCalendarConverterTest.java][setUp][1] = -> TRY {  -> converter=new XMLGregorianCalendarConverter(new SimpleDateFormat("dd.MM.yyyy",),)@ } CATCH(Exception) {}
results[https://github.com/after-the-sunrise/commons-ats/blob/76e3507d4d3402a4fc025efdad2a4620a43bc4df/src/test/java/jp/gr/java_conf/afterthesunrise/commons/time/AdjustmentTypeTest.java][setUp][20] = -> TRY {  -> df=new SimpleDateFormat(pattern,)@ -> df.setTimeZone(tz,)@ } CATCH(Exception) {}
results[https://github.com/pangwu86/XBlink/blob/213c4c68093bcb22a5438c0d79defaeaa0021051/src/org/xblink/core/convert/converters/DateConverter.java][text2Obj][5] = -> TRY {  -> dateFormat=new SimpleDateFormat(DATA_FORMAT_TEMPLATE,)@ -> return dateFormat.parseObject(text,)@ } CATCH(Exception) {}
results[https://github.com/DozerMapper/dozer/blob/cda3d6a8752bae71b5d4945f8c61dc072e15e42e/core/src/test/java/org/dozer/converters/DateConverterTest.java][setUp][1] = -> TRY {  -> converter=new DateConverter(new SimpleDateFormat("dd.MM.yyyy",),)@ } CATCH(Exception) {}
results[https://github.com/rickyclarkson/katari/blob/c250c5108ea81206cf2958fb05c155377bf9f2ef/dev/katari-report/src/main/java/com/globant/katari/report/view/ParameterController.java][initBinder][4] = -> TRY {  -> df=new SimpleDateFormat("dd/MM/yyyy",)@ -> editor=new CustomDateEditor(df,true,)@ } CATCH(Exception) {}
results[https://github.com/AlibabaTech/fastjson/blob/8681d3974705dd8617c0ee61ba68c8c09be42b5d/src/test/java/com/alibaba/json/bvt/bug/Bug_for_lenolix_11.java][test_for_objectKey][2] = -> TRY {  -> simpleDateFormat=new SimpleDateFormat("MM-dd-yyyy",)@ -> simpleDateFormatJson=JSON.toJSONString(simpleDateFormat,SerializerFeature.WriteClassName,SerializerFeature.WriteMapNullValue,)@ } CATCH(Exception) {}
results[https://github.com/amegginson/jbpm-bpel-ftl/blob/934bd77e927be1b401048f1f86114e6e6f504c1f/modules/jpdl/core/src/test/java/org/jbpm/calendar/HolidayTest.java][testHolidayMulitDayParsing][4] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd/MM/yyyy",)@ -> holiday=new Holiday("1/7/2005 - 31/8/2005",dateFormat,null,)@ } CATCH(Exception) {}
results[https://github.com/camsys/onebusaway-nyc/blob/c2d065d180265d672aed96119e2929c65ed957ef/onebusaway-nyc-webapp/src/main/java/org/onebusaway/nyc/webapp/actions/api/siri/SiriJsonSerializer.java][getJson][2] = -> TRY {  -> isoDateFormatter=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ",)@ -> mapper.setDateFormat(isoDateFormatter,)@ } CATCH(Exception) {}
results[https://github.com/AsherBond/opentaps/blob/409fe38aadba87876670510c79d91e749b0241c7/framework/base/src/org/ofbiz/base/util/test/UtilIOTests.java][testReadWriteObject][2] = -> TRY {  -> checkBasicReadWriteObject(new SimpleDateFormat("MM/dd/yyyy hh:mm a",),"java.text.SimpleDateFormat:MM/dd/yyyy hh:mm a\n",)@ } CATCH(Exception) {}
results[https://github.com/igd-geo/hale/blob/11aef5d5e2750c83d62bafc01e1bca9d84151e4f/cst/plugins/eu.esdihumboldt.cst.functions.string/src/eu/esdihumboldt/cst/functions/string/DateExtractionFormatValidator.java][validate][1] = -> TRY { -> new SimpleDateFormat(value,)@ } CATCH(Exception) { -> return e.getLocalizedMessage()@ }
results[https://github.com/angusmacdonald/h2o/blob/bdef2c9ba1aa75f56016d98eacd684fae159b25c/src/test/org/h2o/test/fixture/TestManager.java][setUp][1] = -> TRY {  -> Diagnostic.setTimestampFormat(new SimpleDateFormat("HH:mm:ss:SSS ",),)@ } CATCH(Exception) {}
results[https://github.com/ObeoNetwork/InformationSystem/blob/aaca9ebeb00a90a7fe54140541c8dc7f6d5df641/reversers/database-synchroniser/plugins/org.obeonetwork.dsl.database.sqlgen.tests/src/org/obeonetwork/dsl/database/sqlgen/tests/sqlgen/DatabaseSQLGenTest.java][createAllDatabase][1] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy-MM-dd",)@ -> timestamp=formatter.format(timeStampDate,)@ } CATCH(Exception) {}
results[https://github.com/Silverpeas/Silverpeas-setup/blob/1922cce69407ff79c5b56eb63a2c11625b18af2a/src/main/java/com/silverpeas/file/UpgradeDateFiles.java][setUpgradeDate][1] = -> TRY {  -> formatDate=new SimpleDateFormat("dd/MM/yyyy/hh:mm",)@ -> dateMaj=formatDate.parse(pDate,pos,)@ } CATCH(Exception) {}
results[https://github.com/sfrink/Veritas/blob/4d933f9b032e1a00473c0682e8cbb14ed2e67950/src/Counter.java][main][1] = -> TRY { -> sdf=new SimpleDateFormat("MM/dd/yyyy h:mm:ss a",)@ } CATCH(Exception) { -> System.out.println(e,)@ }
results[https://github.com/oxhead/decoupled-hadoop/blob/392f9953b206efde4cb7b4d2ae5b560dc1dffa90/hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/state/StatePool.java][initialize][28] = -> TRY {  -> formatter=new SimpleDateFormat("dd-MMM-yyyy-hh'H'-mm'M'-ss'S'",)@ -> timeStamp=formatter.format(calendar.getTime(),)@ } CATCH(Exception) {}
results[https://github.com/SVMP/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/text/SimpleDateFormatTest.java][testDstZoneNameWithNonDstTimestamp][44] = -> TRY {  -> format=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm zzzz",)@ -> calendar.setTime(format.parse("2011-06-21T10:00 Pacific Standard Time",),)@ } CATCH(Exception) {}
results[https://github.com/YoshikiHigo/MPAnalyzer/blob/b8467fa8d6d35358aacea686d034d4d170122e34/MPAnalyzer/src/jp/ac/osaka_u/ist/sdl/mpanalyzer/StringUtility.java][getDateObject][10] = -> TRY { -> df=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss",)@ -> return df.parse(date,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/laarid/platform_libcore/blob/5aced732888f8737c9c30ddf6e2e16ee911c4a54/luni/src/test/java/libcore/java/security/cert/X509CRLTest.java][assertDateEquals][22] = -> TRY {  -> formatter=new SimpleDateFormat("dd MMM yyyy HH:mm:ss",)@ -> result1=formatter.format(date1,)@ -> result2=formatter.format(date2,)@ } CATCH(Exception) {}
results[https://github.com/clintmanning/new-empty/blob/105efbc91327b92b765f83591b3c50c635095e57/engine-rest/src/test/java/org/camunda/bpm/engine/rest/AbstractProcessInstanceRestServiceInteractionTest.java][testPutSingleVariableWithTypeDate][6] = -> TRY {  -> pattern=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss",)@ -> variableValue=pattern.format(now,)@ -> expectedValue=pattern.parse(variableValue,)@ } CATCH(Exception) {}
results[https://github.com/roman-himself/MyActiviti/blob/8647495999edfaa1b12f03580dd231eed3c48ccf/modules/activiti-engine/src/test/java/org/activiti/engine/test/bpmn/event/timer/StartTimerEventTest.java][testFixedDateStartTimerEvent][19] = -> TRY {  -> ClockUtil.setCurrentTime(new SimpleDateFormat("dd/MM/yyyy hh:mm:ss",).parse("15/11/2036 11:12:30",),)@ } CATCH(Exception) {}
results[https://github.com/Adobe-Consulting-Services/acs-aem-commons/blob/45742fd4d18aff8030ada84e82535c99f494661a/bundle/src/main/java/com/adobe/acs/commons/replicatepageversion/impl/ReplicatePageVersionServlet.java][getDate][3] = -> TRY { -> sdf=new SimpleDateFormat("yyyy-MM-dd,hh:mm:ss",)@ -> date=sdf.parse(datetime,)@ } CATCH(Exception) { -> log.error("exception occured",e,)@ }
results[https://github.com/Activiti/Activiti/blob/bdcbc9661e6d9efad9771f8c90b5217166596d27/modules/activiti-engine/src/test/java/org/activiti/standalone/calendar/CycleBusinessCalendarTest.java][testSimpleCron][141] = -> TRY {  -> simpleDateFormat=new SimpleDateFormat("yyyy MM dd - HH:mm",)@ -> now=simpleDateFormat.parse("2011 03 11 - 17:23",)@ -> expectedDuedate=simpleDateFormat.parse("2011 04 1 - 00:00",)@ } CATCH(Exception) {}
results[https://github.com/terraframe/Runway-SDK/blob/67d1c346f13932edbf5b8cded75c23d76da8d782/runwaysdk-test/src/main/java/com/runwaysdk/business/EntityGenTest.java][testSetDate][3] = -> TRY {  -> sdf=new SimpleDateFormat(Constants.DATE_FORMAT,)@ -> out=sdf.parse(businessDAO.getValue("aDate",),)@ } CATCH(Exception) {}
results[https://github.com/mwaddell/EverToDo/blob/65347d96509be1220ed95398d5fc1c3b126cedf4/tests/src/com/todotxt/todotxttouch/task/TaskTest.java][testMarkComplete][2] = -> TRY {  -> date=new SimpleDateFormat("yyyyMMdd",).parse("20110228",)@ -> task.markComplete(date,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/common-security-module/blob/82b9bb6c47464aee792e412282591f0fc5aeb9d5/software/upt/webapp/src/gov/nih/nci/security/upt/forms/PrivilegeForm.java][buildDisplayForm][11] = -> TRY {  -> simpleDateFormat=new SimpleDateFormat("MM/dd/yyyy",)@ -> this.privilegeUpdateDate=simpleDateFormat.format(privilege.getUpdateDate(),)@ } CATCH(Exception) {}
results[https://github.com/oleronning/fellesprosjekt/blob/15617b8b38845ca2475471daf2b0aea64f487a64/src/no/ntnu/fp/server_logic/SqlRequestImpl.java][convertStringDateToGregorianDate][1] = -> TRY { -> simpleDateFormat=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss",)@ -> date=simpleDateFormat.parse(dateToConvert,)@ } CATCH(Exception) { -> System.out.print(e,)@ }
results[https://github.com/alibaba/mdrill/blob/c5212d75bf55ecc53fdb57f7b7bffce7baeeb215/trunk/adhoc-web/src/main/java/com/alimama/web/TableJoin.java][update][41] = -> TRY {  -> fmt=new SimpleDateFormat("yyyyMMdd",)@ -> day=fmt.format(new Date(),)@ } CATCH(Exception) {}
results[https://github.com/jjedele/Multicast-Testing-Tool/blob/12c1b76d8e9bd3d74f065a350ce45e7ef3bca89b/src/main/java/com/spam/mctool/controller/Controller.java][saveProfileToFile][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss",)@ -> profileCreationTimeText=xmlDocument.createTextNode(dateFormat.format(date,),)@ } CATCH(Exception) {}
results[https://github.com/ginatrapani/todo.txt-android/blob/f48db60d8b80062fd69f04297e36220291cc9362/tests/src/com/todotxt/todotxttouch/task/TaskTest.java][testConstructor_simple_prependDate][3] = -> TRY {  -> date=new SimpleDateFormat("yyyyMMdd",).parse("20110228",)@ -> task=new Task(1,input,date,)@ } CATCH(Exception) {}
results[https://github.com/duckweed/fitnesse-verify-only/blob/2fa803c584b66926d5b201d2e016207f0e441986/src/fitnesse/responders/RssResponderTest.java][testBadDateFormat][3] = -> TRY {  -> oldFormat=new SimpleDateFormat("h:mm:ss a EEE MMM dd, yyyy",)@ -> inDate=oldFormat.format(Clock.currentDate(),)@ } CATCH(Exception) {}
results[https://github.com/sakai-mirror/sam/blob/2a47ef3fd2b4e34135ba44d1025c9b9a716a5ff6/tool/src/java/org/sakaiproject/tool/assessment/business/entity/SortableDate.java][toString][1] = -> TRY { -> dateFormatter=new SimpleDateFormat(SORT_FORMAT,)@ -> return dateFormatter.format(date,)@ } CATCH(Exception) { -> log.debug("Date Exception "+e,)@ }
results[https://github.com/OpenIAM/openiam-idm-ce/blob/4ab8f12bcdf5765972f08e2785d8faefb9cb2b58/idm/openiam-selfservice/src/main/java/org/openiam/selfsrvc/usradmin/UserChangeStatusController.java][initBinder][59] = -> TRY {  -> binder.registerCustomEditor(Date.class,new CustomDateEditor(new SimpleDateFormat("MM/dd/yyyy",),true,),)@ } CATCH(Exception) {}
results[https://github.com/xone-team/p0001/blob/05ab038ede994bda29575b183bf454457e0dfc7f/xone-model/src/main/java/com/xone/model/utils/MyDateUtils.java][format][16] = -> TRY { -> result=new SimpleDateFormat(format,).format(date,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/tgma/honeypot/blob/544242ba1bdfb01a116fbe3e412c6a36b7e507b5/src/com/advancednote/honeypot/core/BaseMusicXMLWriter.java][writeIdentification][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-M-d",)@ -> tag(Constants.ENCODING_DATE,sdf.format(d,),)@ } CATCH(Exception) {}
results[https://github.com/jdeolive/geotools-old/blob/1b8960aef981f0fd90cfa66f126475cd44a2cd08/docs/src/main/java/org/geotools/cql/DataExamples.java][createCity][2] = -> TRY {  -> dateFormatter=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'",)@ -> featureBuilder.add(dateFormatter.parse("1737-11-30T01:30:00Z",),)@ } CATCH(Exception) {}
results[https://github.com/vorburger/mifos-head/blob/ae913cbe7a61df45a5fa83ea3b888b2ecd9f4bb8/application/src/test/java/org/mifos/customers/center/struts/action/CenterActionStrutsTest.java][testLoad][3] = -> TRY {  -> retrievedFormat=new SimpleDateFormat(dateFormat,)@ -> retrievedDate=retrievedFormat.parse(actionForm.getMfiJoiningDate(),)@ } CATCH(Exception) {}
results[https://github.com/cmader/server/blob/887300d8fd1b8643b1976a0aa8c37e187fbcc2ec/test/at/ait/dme/yuma/server/controller/json/JSONFormatHandlerTest.java][setUp][7] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss'Z'",)@ -> dateFormat.setTimeZone(TimeZone.getTimeZone("GMT",),)@ } CATCH(Exception) {}
results[https://github.com/endosnipe/ENdoSnipe/blob/6883994676da0bb1c38d9e12f1ae9d9fa44eadd6/ENdoSnipePerfDoctor/src/test/java/jp/co/acroquest/endosnipe/perfdoctor/WarningUnitUtilTest.java][testCalculateStartTimeDaySingleDigit][5] = -> TRY {  -> formatter=new SimpleDateFormat(DATE_FORMAT,)@ -> assertEquals(startTimeStr,formatter.format(resultDate,),)@ } CATCH(Exception) {}
results[https://github.com/rdonasco/rdonasco-lib/blob/c798273c87ad087b273a40b833549709643fad5f/rdonasco-config/src/test/java/com/rdonasco/config/services/ConfigDataManagerTest.java][testGetDateValue][4] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ -> expected=(Date) sdf.parseObject(attrib.getValue(),)@ } CATCH(Exception) {}
results[https://github.com/Activiti/Activiti/blob/bdcbc9661e6d9efad9771f8c90b5217166596d27/modules/activiti-engine/src/test/java/org/activiti/engine/test/api/task/TaskQueryTest.java][testTaskWithoutDueDate][1] = -> TRY {  -> dueDate=new SimpleDateFormat("dd/MM/yyyy hh:mm:ss",).parse("01/02/2003 01:12:13",)@ -> task.setDueDate(dueDate,)@ } CATCH(Exception) {}
results[https://github.com/dianping/cat/blob/e7fd5d2b6afc7323884d8c8e112813b89d5ebb6b/cat-home/src/test/java/com/dianping/cat/report/analyzer/GraphBuilderTest.java][testEvent][4] = -> TRY {  -> period=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",).parse("2013-12-16 16:00:00",)@ -> builder.buildHourlyTask(EventAnalyzer.ID,"Cat",period,)@ } CATCH(Exception) {}
results[https://github.com/molgenis/systemsgenetics/blob/84aabf6aab62d740c08a6e5fae7feaa1eb264604/Genotype-Aligner2/src/test/java/nl/umcg/deelenp/genotypealigner/GenotypeAlignerNGTest.java][setUpMethod][3] = -> TRY {  -> dateFormat=new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss",)@ -> tmpOutputFolder=new File(tmpDir,"GenotyperAligerTest_"+dateFormat.format(date,),)@ } CATCH(Exception) {}
results[https://github.com/sebastian-claici/jpmorgan-cfg/blob/bf4cbc4ada3727e5e4613730e82a4963a4830097/src/parser/Parser.java][parse][3] = -> TRY { -> dateFormat=new SimpleDateFormat("yyyy-MM-dd",)@ } CATCH(Exception) { -> System.out.println("Something went wrong parsing",)@ -> e.printStackTrace()@ }
results[https://github.com/listersin/listersin/blob/0fb460c0705b0c6108d37546bd7f9b7dbbda5b51/ant/src/main/java/apicall/GetSellerList.java][parsenotifyxml][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss.SSS",)@ -> timestamp=sdf.format(now,).toString()@ } CATCH(Exception) {}
results[https://github.com/lyncode/jtwig/blob/00e0937b33b3cfb33aacbf6b24d063fe3830252a/jtwig-functions/src/test/java/com/lyncode/jtwig/functions/internal/string/DateFormatTest.java][testExecuteWithoutFormat][1] = -> TRY {  -> date=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",).parse("2011-01-01 00:00:00",)@ -> result=(String) underTest.execute(date,)@ } CATCH(Exception) {}
results[https://github.com/cheeseinvert/geocamTalkForAndroid/blob/49810961de16d85d91e2518effa65f680320db36/Test/tests/gov/nasa/arc/geocam/talk/service/test/DjangoGeoCamTalkJsonConverterImplementationTest.java][ensureSingularDeserializationWorks][4] = -> TRY {  -> sdf=new SimpleDateFormat("MM/dd/yy HH:mm:ss",)@ -> message.setContentTimestamp(sdf.parse("03/13/11 10:48:44",),)@ } CATCH(Exception) {}
results[https://github.com/AAATEAM/ea/blob/132f1af92c60efd0cc61aa25afeffd71f7b53c7a/ea-core/src/main/java/com/utils/time/TimeUtil.java][getHowManyYearToNow][1] = -> TRY {  -> date1=string2Date(var1,new SimpleDateFormat("yyyy-MM-dd",),)@ -> return yNow-date1.getYear()@ } CATCH(Exception) {}
results[https://github.com/GDI-Vlaanderen/geonetwork/blob/04da27a55d6954b0b6e9881b70e58c6a67335545/web/src/main/java/org/fao/geonet/kernel/harvest/harvester/fragment/FragmentHarvester.java][updateSubtemplate][3] = -> TRY {  -> df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss",)@ -> dataMan.updateMetadata(context,dbms,id,md,validate,ufo,index,language,df.format(date,),false,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/lexevs-remote/blob/a1ee9e63aace44872a9dc39082d2b07aee98a914/SDK4_1_1/junit/src/test/gov/nih/nci/cacoresdk/SDKXMLDataTestBase.java][validateDateAttribute][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd kk:mm:ss.S",)@ -> xmlDate=sdf.parse(attributeDate.substring(0,21,),)@ } CATCH(Exception) {}
results[https://github.com/lookfirst/ical4j/blob/f77ed17eb31ea46ca0f90324a144cdcd99af119a/src/test/java/net/fortuna/ical4j/model/CalendarDateFormatFactoryTest.java][testFallbackToSimpleDateFormat][2] = -> TRY {  -> f=new SimpleDateFormat("HH",)@ -> assertEquals(f,CalendarDateFormatFactory.getInstance("HH",),)@ } CATCH(Exception) {}
results[https://github.com/wangshukunwsk/Inspection/blob/752000092aedbbe55b11b161279b42e50b9c9d3b/SourceCode/src/com/bchd/inspection/dal/CommonDataAccess.java][GetShiftByCheckClassAndTicketNow][1] = -> TRY {  -> sdf=new SimpleDateFormat("HH:mm:ss",)@ -> datetime="9999-12-31 "+sdf.format(new java.util.Date(),)@ } CATCH(Exception) {}
results[https://github.com/lazydog-org/comic-parent/blob/7d2fb1fc7b091cacffe7d4c9ae9f0426c4672d07/comic-repository/src/main/java/comic/repository/jpa/JPAComicRepositoryTester.java][<init>][2] = -> TRY { -> sdf=new SimpleDateFormat("MM/DD/yyyy HH:mm:ss",)@ } CATCH(Exception) { -> System.err.println("Unable to get the comic repository.",)@ -> System.err.println(e,)@ }
results[https://github.com/objectledge/cyklotron/blob/45a705f2ccdbf0ee6ef25ff2cc1eef18d48b5171/cyklotron-core/src/main/java/net/cyklotron/cms/link/internal/LinkServiceImpl.java][checkLinkState][4] = -> TRY { -> df=new SimpleDateFormat(DateAttributeHandler.DATE_TIME_FORMAT,)@ -> now=df.format(nowDate,)@ } CATCH(Exception) { -> log.error("CheckLinkState exception ",e,)@ }
results[https://github.com/dewarim/cinnamon-db/blob/1668a549a76e90e892c2d3848d1dda19525efc55/src/java/cinnamon/index/indexer/DateTimeIndexer.java][convertNodeToString][1] = -> TRY { -> sdf=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss",)@ -> date=sdf.parse(val,)@ } CATCH(Exception) { -> log.debug("failed to parse date:",e,)@ }
results[https://github.com/lyncode/jtwig/blob/00e0937b33b3cfb33aacbf6b24d063fe3830252a/jtwig-functions/src/test/java/com/lyncode/jtwig/functions/internal/string/DateFormatTest.java][testExecuteWithFormat][1] = -> TRY {  -> date=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",).parse("2011-01-01 00:00:00",)@ -> result=(String) underTest.execute(date,"yyyy",)@ } CATCH(Exception) {}
results[https://github.com/OpenLMIS/open-lmis/blob/9799262ed0c1a11745cf16888efe950396814aee/modules/requisition/src/test/java/org/openlmis/rnr/dto/RequisitionStatusFeedDTOTest.java][shouldPopulateFeedFromRequisition][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd-MM-yyyy",)@ -> stringStartDate=dateFormat.format(startDate,)@ -> stringEndDate=dateFormat.format(endDate,)@ } CATCH(Exception) {}
results[https://github.com/blackwolf12333/GriefLog/blob/300ff31fa3a4a5ed90eb0e56b87d698a3baced20/src/tk/blackwolf12333/grieflog/utils/logging/Time.java][getDate][2] = -> TRY { -> format=new SimpleDateFormat(DATE_FORMAT,)@ -> date=format.parse(strDate,)@ } CATCH(Exception) { -> GriefLog.debug("Something went wrong with the date format parsing, tell this to blackwolf12333 please.",)@ }
results[https://github.com/bobmcwhirter/drools/blob/e569a48cfc4a639a54a51dd864406aa1e02e36b0/drools-core/src/test/java/org/drools/base/mvel/MVELCalendarCoercionTest.java][testString][2] = -> TRY {  -> df=new SimpleDateFormat("dd-MMM-yyyy",)@ -> dt=df.format(df.parse("10-Jul-1974",),)@ } CATCH(Exception) {}
results[https://github.com/terraframe/Runway-SDK/blob/67d1c346f13932edbf5b8cded75c23d76da8d782/runwaysdk-test/src/main/java/com/runwaysdk/business/EntityGenTest.java][testGetDateTime][3] = -> TRY {  -> sdf=new SimpleDateFormat(Constants.DATETIME_FORMAT,)@ -> businessDAO.setValue("aDateTime",sdf.format(in,),)@ } CATCH(Exception) {}
results[https://github.com/moravianlibrary/xcncip2toolkit/blob/c6796a927365c239bb7ce735e5463ef5e90e83b9/connectors/symphony/trunk/src/org/extensiblecatalog/ncip/v2/symphony/SymphonyRemoteServiceManager.java][acceptItem][1] = -> TRY { -> formatter=new SimpleDateFormat("MM/dd/yyyy",)@ -> dateHoldExpiresAsString=formatter.format(dateHoldExpires,)@ } CATCH(Exception) { -> acceptItemTransactionResults.setStatusCode(SymphonyConstants.SIRSI_FAILED,)@ }
results[https://github.com/ualerts-org/ualerts-server/blob/4c3e9d54d4b90e9fcf9e01253957886c25bb0ff6/org.ualerts.mobile/org.ualerts.mobile.subscribe/src/test/java/org/ualerts/mobile/subscribe/util/MemberMailComposerTest.java][testComposeMessage][2] = -> TRY {  -> df=new SimpleDateFormat("d MMMMM yyyyy",)@ -> member.setScheduledRemovalDate(df.parse("19 August 2010",),)@ } CATCH(Exception) {}
results[https://github.com/cstamas/sventon/blob/6260d11920e3c47cd70f3429797b4f3d7abb3205/sventon/dev/java/testsrc/de/berlios/sventon/web/ctrl/xml/XMLDocumentHelperTest.java][testCreateXML][1] = -> TRY {  -> sdf=new SimpleDateFormat(datePattern,)@ -> ref="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n"+"<latestcommitinfo>\r\n"+"  <revision>123</revision>\r\n"+"  <author>jesper</author>\r\n"+"  <date>"+sdf.format(now,)+"</date>\r\n"+"  <message>Message</message>\r\n"+"  <entries>\r\n"+"    <entry>\r\n"+"      <path>/file1.java</path>\r\n"+"      <type>M</type>\r\n"+"      <copypath />\r\n"+"      <copyrevision />\r\n"+"    </entry>\r\n"+"  </entries>\r\n"+"</latestcommitinfo>\r\n\r\n"@ -> doc=XMLDocumentHelper.createXML(logEntry,datePattern,)@ } CATCH(Exception) {}
results[https://github.com/economist239/BrandAnalytics/blob/4999d6bd3a0354ba36996f7c4c7bc83e953bb86e/tasker/src/test/ru/brandanalyst/miner/rss/RssTest.java][testDateParsing][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz",)@ -> System.out.print(dateFormat.parse(date,),)@ } CATCH(Exception) {}
results[https://github.com/harryzan/dsb-oa/blob/142d6fb0ad5bd86c4afae2258a46cde8c0f5711d/java/main/oa-web/src/main/java/gov/dsb/web/action/message/personarrange/PersonArrangeAction.java][save][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyy-MM-dd",)@ -> start=sdf.parse(entity.getStarttime(),)@ } CATCH(Exception) {}
results[https://github.com/eiNetwork/eiNetwork2/blob/ae5a90c3afe03a620c536a1a085c6667596f66c6/vufind/packaging_app/src/com/adobe/adept/client/XMLUtil.java][initialValue][2] = -> TRY { -> return new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ",)@ } CATCH(Exception) { -> throw new Error("Exception in static initializer: "+e.toString(),)@ }
results[https://github.com/OpenLMIS/open-lmis/blob/03338ff679a8d50c3d0b0942b637b8a78471bebf/modules/core/src/test/java/org/openlmis/core/transformer/BudgetLineItemTransformerTest.java][shouldTransformBudgetLineItemDTOIntoBudgetLineItem][1] = -> TRY {  -> dateFormat=new SimpleDateFormat(datePattern,)@ -> date=dateFormat.parse("10/12/2013",)@ -> budgetLineItem=budgetLineItemTransformer.transform(budgetLineItemDTO,datePattern,1,)@ } CATCH(Exception) {}
results[https://github.com/cybergarage/CyberLink4Java/blob/308d0068ff36437b5afcd5d9e4ad6edd9513e77f/std/src/main/java/org/cybergarage/upnp/std/av/server/object/item/ItemNode.java][setDate][2] = -> TRY { -> df=new SimpleDateFormat(DATE_FORMAT,)@ -> dateStr=df.format(date,)@ } CATCH(Exception) { -> Debug.warning(e,)@ }
results[https://github.com/infiniteautomation/ma-core-public/blob/89beb7df33f98428b2d2b53e7eea3f6195b6df63/Core/src/com/serotonin/m2m2/web/dwr/SystemSettingsDwr.java][getSettings][1] = -> TRY { -> sdf=new SimpleDateFormat("MMM-dd-yyyy HH:mm:ss",)@ -> lastRunString=sdf.format(lastRunDate,)@ } CATCH(Exception) { -> settings.put(SystemSettingsDao.BACKUP_LAST_RUN_SUCCESS,"unknown",)@ }
results[https://github.com/znerd/xins/blob/aeb889af2c8fc8486816f3460c32818914d51c43/src/tests/org/xins/tests/common/text/DateConverterTests.java][testToDateString3][1] = -> TRY {  -> formatter=new SimpleDateFormat("yyyy.MM.dd HH:mm:ss.SSS",)@ -> expected=formatter.format(new Date(now,),)@ } CATCH(Exception) {}
results[https://github.com/PieceMaker/OpenJUMP/blob/f40342e89d6b98a6f48358d1a8d484a09c0dd2d4/src/org/geotools/dbffile/DbfFile.java][main][1] = -> TRY {  -> System.out.println(new SimpleDateFormat("yyyymmdd",).parse("00010101",),)@ } CATCH(Exception) {}
results[https://github.com/dianping/cat/blob/6226926375b4acd18dcf4d94594ba3966617caf3/cat-core/src/test/java/com/dianping/cat/message/spi/core/DefaultMessagePathBuilderTest.java][testParseMessageIdFromPath][1] = -> TRY {  -> sdf=new SimpleDateFormat("yyyyMMddHH",)@ -> str=builder.getPath(sdf.parse("2013010101",),"transaction",)@ } CATCH(Exception) {}
results[https://github.com/vuamitom/openmrs/blob/249b80552f9057df5e4526a721bb20104f8a85a5/api/src/test/java/org/openmrs/api/FormServiceTest.java][purgeFormResource_shouldDeleteAFormResource][2] = -> TRY {  -> previous=new SimpleDateFormat("yyyy-MM-dd",).parse("2011-10-16",)@ -> resource.setValue(previous,)@ } CATCH(Exception) {}
results[https://github.com/apache/maven-wagon/blob/6e09858022e3dee0e5aea994a33f2dd89e287661/wagon-provider-api/src/test/java/org/apache/maven/wagon/StreamWagonTest.java][testGetToStream][2] = -> TRY {  -> comparisonTime=new SimpleDateFormat("yyyy-MM-dd",).parse("2008-01-01",).getTime()@ } CATCH(Exception) {}
results[https://github.com/jtalks-org/functional-tests/blob/47daa1de1f45f6d819c5dcdd0860f6d35046ccdd/jcommune-webdriver/src/main/java/org/jtalks/tests/jcommune/webdriver/SeleniumSessionListener.java][getTimeOnVideo][1] = -> TRY { -> sdf=new SimpleDateFormat("mm:ss",)@ -> return sdf.format(date,)@ } CATCH(Exception) { -> logger.error("TEST METHOD. fail on getting video time >>> >>>",)@ }
results[https://github.com/vyloy/lnvc/blob/38625c0c7f2c0e5c562bcd3cea11043a281b6a54/vovo/client/src/com/lorent/vovo/ui/MyTextPane.java][insertNotice][1] = -> TRY {  -> sdf=new SimpleDateFormat("HH:mm:ss",)@ -> insertText(sdf.format(date,)+"\n",style,)@ } CATCH(Exception) {}
results[https://github.com/ushahidi/SwiftRiver-API/blob/d883c568d5a2be9eab3d69aa19a86c596559192d/src/test/java/com/ushahidi/swiftriver/core/api/dao/impl/JpaBucketDaoTest.java][getDropsToDate][1] = -> TRY {  -> dateFormat=new SimpleDateFormat("dd/MM/yyyy",)@ -> filter.setDateTo(dateFormat.parse("01/01/2012",),)@ } CATCH(Exception) {}
results[https://github.com/benschi11/Alt_F4/blob/db8a036f89847dc74fc3f5737362cab51ad8b871/samples-and-tests/just-test-cases/app/controllers/Users.java][fresh][3] = -> TRY { -> u.birth=new SimpleDateFormat("dd/MM/yyyy",).parse("21/12/1980",)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/zhuxiaoming/ft/blob/1e486a2074dac8a192afdec0a61c162ce2670108/toprising/src/main/java/zxm/istock/ft/toprising/TopServerTester.java][runHistTop][1] = -> TRY {  -> df=new SimpleDateFormat("yyyy-MM-dd",)@ -> conf.set("date",df.format(date,),)@ } CATCH(Exception) {}
results[https://github.com/exoplatform/wiki/blob/06fd7e378f17681d3af9d7d89477ec811e1e51c5/wiki-webapp/src/main/java/org/exoplatform/wiki/webui/UIWikiPageEditForm.java][createDraftExistNotification][1] = -> TRY {  -> dateString=new SimpleDateFormat("MMM dd, yyyy HH:mm",).format(draftUpdatedDate,)@ -> messageMarkup=messageMarkup.replace("{0}",dateString,)@ } CATCH(Exception) {}
results[https://github.com/fcrepo/oaiprovider/blob/bb649ea201e0b1622c2bcf80d5b80d0dfd3d0315/src/test/junit/fedora/services/oaiprovider/TestFedoraOAIDriver.java][testLatestDate][1] = -> TRY {  -> df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'",)@ -> latestDate=df.format(m_impl.getLatestDate(),)@ } CATCH(Exception) {}
results[https://github.com/ukcrpb6/wmb-util/blob/c67ee978b3213239249834226a0ee0b4f968a71b/wmb-util/src/test/java/com/googlecode/wmbutil/DateTimeTest.java][testDateTime][1] = -> TRY {  -> f=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSSSSZ",)@ -> f.setLenient(true,)@ -> d=f.parse("2012-01-01T01:00:00.123333+0100",)@ } CATCH(Exception) {}
results[https://github.com/Top-Q/jsystem/blob/442f8e439d673acdeb4eb80494d9eec9bcff77c6/jsystem-core-projects/jsystemCore/src/main/java/jsystem/framework/scenario/UpgradeAndBackwardCompatibility.java][getBackupFileName][1] = -> TRY {  -> currentDate=DateUtils.getDate(System.currentTimeMillis(),new SimpleDateFormat("MM_dd_hh_mm_ss",),)@ } CATCH(Exception) {}
results[https://github.com/sbliven/biojava/blob/7f253dc3452fe68f75ab031b306bd00f9325d6cc/integrationtest/src/test/java/org/biojava/bio/structure/CathTest.java][setUp][1] = -> TRY {  -> format=new SimpleDateFormat("dd-MMM-yyyy",)@ -> knownDomain.setDate(format.parse("21-Sep-2011",),)@ } CATCH(Exception) {}
results[https://github.com/PeterisP/LVTagger/blob/1803a0ab73e6297aca65ffa3fd223257783c0dbc/src/lv/lumii/ner/analysis/ErrorAnalysis.java][main][1] = -> TRY {  -> timeFormat=new SimpleDateFormat("MM/dd/yyyy h:mm:ss a",)@ -> System.out.println(timeFormat.format(date,),)@ } CATCH(Exception) {}
results[https://github.com/openmrs/openmrs-module-calculation/blob/0ff7b5006c4de56a8bd3cb6a1bc79be7ed4e26da/api/src/test/java/org/openmrs/calculation/patient/PatientBehaviorTest.java][shouldCalculateTheAgesOfPatientsInACohortBasedOnContextualInfoAndParameterValues][1] = -> TRY {  -> date=new SimpleDateFormat(TEST_DATE_FORMAT,).parse("2000-01-01",)@ -> ctxt.setNow(date,)@ } CATCH(Exception) {}
results[https://github.com/GoogleCloudPlatform/appengine-tck/blob/e3b41de2f7d9a3b3a6d2a2c4138d88b052049f8e/site/teamcity/teamcity-server/src/main/java/com/google/appengine/tck/teamcity/ReportsMain.java][parse][1] = -> TRY { -> return new SimpleDateFormat("dd.MM.yyyy HH:mm",).parse(string,)@ } CATCH(Exception) { -> throw new IllegalArgumentException(e,)@ }
results[https://github.com/panbasten/BA/blob/6762ad4589ed2a6f4ffbd87d71b80a7196558364/ba/fly-core/src/main/java/com/flywet/platform/bi/core/utils/DateUtils.java][parseDate][1] = -> TRY { -> format=new SimpleDateFormat(pattern,)@ -> date=format.parse(strDate,)@ } CATCH(Exception) { -> logger.error("parseDate error:"+e,)@ }
results[https://github.com/apache/openejb/blob/395d3b9dfb899d56e7bce840a63e526397d1efe7/sandbox/release-tools/src/main/java/org/apache/openejb/tools/release/cmd/ReviewCommits.java][main][1] = -> TRY {  -> reviewed=new SimpleDateFormat("yyyy-MM-dd",).parse("2012-01-05",)@ -> commits=commits.greater("date",reviewed,)@ } CATCH(Exception) {}
results[https://github.com/economist239/BrandAnalytics/blob/5fb859cb9b1436ea9d7244fc79c6324b899af661/miner/src/java/ru/brandanalyst/miner/GrabberContainer.java][afterPropertiesSet][1] = -> TRY { -> dateFormat=new SimpleDateFormat("yyy-MM-dd HH:mm:ss",)@ -> timeLimit=dateFormat.parse(date,)@ } CATCH(Exception) { -> timeLimit=new Date()@ }
results[https://github.com/NCIP/stats-analysis/blob/6fde17b9d3d40b9c650179dee81bad1fc6ed69a0/cacoresdk3.2/src/gov/nih/nci/common/util/StringHelper.java][stringToDate][1] = -> TRY { -> sdf=new SimpleDateFormat("MM/dd/yyyy",)@ -> theDate=sdf.parse(aString,pos,)@ } CATCH(Exception) { -> log.error("Exception: ",e,)@ }
results[https://github.com/nodesagency-mobile/dk-nodes-ncore/blob/75b362e00a345568e283a34aae8be5ffa8141961/NCoreV2_33/src/dk/nodes/utils/date/NDateParser.java][getCurrentDateTimeAsFormattedString][1] = -> TRY { -> formatter=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> return formatter.format(date,)@ } CATCH(Exception) { -> NLog.e(TAG+" getCurrentDateTimeAsFormattedString",e,)@ }
results[https://github.com/wso2/commons/blob/6adfc623c63fd98791a12e57612156db7d00b67e/qa/web-test-framework/mashup/src/test/java/org/wso2/carbon/web/test/mashup/MSCommon.java][DateToGMT][1] = -> TRY {  -> format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss",)@ -> format.setCalendar(cal,)@ -> date1=format.parse(contdt,)@ } CATCH(Exception) {}
