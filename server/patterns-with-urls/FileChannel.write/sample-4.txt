results[https://github.com/kingargyle/exist-1.4.x/blob/09d678fd8a58728dd51005c63b942f1ab6541ebc/src/org/exist/storage/statistics/DataGuide.java][write] = -> nodeCount=root.getSize()@ -> buffer=ByteBuffer.allocate(nodeCount*BYTES_PER_NODE+4,)@ -> root.write(buffer,symbols,)@ -> buffer.flip()@ -> fc.write(buffer,)@
results[https://github.com/apache/synapse/blob/cf6e8e504db03b789be4167370f7692a7eaa873f/scratch/synapse-2.1-versioned/java/modules/transports/core/pipe/src/main/java/org/apache/synapse/transport/pipe/PipeEndpointListener.java][stop] = -> writeChannel.write(ByteBuffer.allocate(1,),)@ -> TRY { } CATCH { }
results[https://github.com/axDev-JDK/jdk/blob/d056abfe4943e70ad6eca1b61808089cb92cbe2a/test/sun/misc/IoTrace/IoTraceFileChannelReadWrite.java][testWrite] = -> TRY { -> bb=ByteBuffer.allocate(1,)@ -> bb.put((byte) 11,)@ -> bb.flip()@ -> fc.write(bb,)@ }
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/core/java/android/speech/tts/FileSynthesisCallback.java][start] = -> TRY { -> mFileChannel.write(ByteBuffer.allocate(WAV_HEADER_LENGTH,),)@ } CATCH { }
results[https://github.com/apache/synapse/blob/6f9d9b3d0fae90f8a9dd6c8c303bfd4c6b3b4f91/java/modules/transports/src/main/java/org/apache/synapse/transport/pipe/PipeEndpointListener.java][stop] = -> writeChannel.write(ByteBuffer.allocate(1,),)@ -> TRY { } CATCH { }
results[https://github.com/sdugit/libcore_7025/blob/e595037cf49109e9e20b47e6e191eda45e414008/luni/src/test/java/java/nio/channels/OldFileChannelTest.java][test_write$LByteBuffer_ReadOnly] = -> writeBuffers[0]=ByteBuffer.allocate(CAPACITY,)@ -> writeBuffers[1]=ByteBuffer.allocate(CAPACITY,)@ -> TRY { -> readOnlyFileChannel.write(writeBuffers,)@ } CATCH { }
results[https://github.com/TheCollective/android_frameworks_base/blob/13abfb2a4b9c7823672ed5a2053588c8da6ec3d7/core/java/android/speech/tts/FileSynthesisCallback.java][start] = -> TRY { -> mFileChannel.write(ByteBuffer.allocate(WAV_HEADER_LENGTH,),)@ } CATCH { }
results[https://github.com/apache/synapse/blob/8410e267d8cbf6381ee3877e0d3a813430bc0c8e/java/modules/transports/core/pipe/src/main/java/org/apache/synapse/transport/pipe/PipeEndpointListener.java][stop] = -> writeChannel.write(ByteBuffer.allocate(1,),)@ -> TRY { } CATCH { }
results[https://github.com/UnicornButter/libcore/blob/e595037cf49109e9e20b47e6e191eda45e414008/luni/src/test/java/java/nio/channels/OldFileChannelTest.java][test_write$LByteBuffer_ReadOnly] = -> writeBuffers[0]=ByteBuffer.allocate(CAPACITY,)@ -> writeBuffers[1]=ByteBuffer.allocate(CAPACITY,)@ -> TRY { -> readOnlyFileChannel.write(writeBuffers,)@ } CATCH { }
results[https://github.com/SamMobile/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/nio/channels/OldFileChannelTest.java][test_write$LByteBuffer_ReadOnly] = -> writeBuffers[0]=ByteBuffer.allocate(CAPACITY,)@ -> writeBuffers[1]=ByteBuffer.allocate(CAPACITY,)@ -> TRY { -> readOnlyFileChannel.write(writeBuffers,)@ } CATCH { }
