results[https://github.com/apache/directory-server/blob/08b785b726f0111fab897edcaa7bf2a18f361b81/kerberos-codec/src/main/java/org/apache/directory/server/kerberos/shared/keytab/Keytab.java][writeFile] = -> wChannel=new FileOutputStream(file,false,).getChannel()@ -> wChannel.write(buffer,)@ -> wChannel.close()@
results[https://github.com/davecheney/motown/blob/c66aa8518b024d51a523cb307791e7103c1066d2/motown-dav/src/main/java/net/cheney/motown/dav/resource/file/FileResource.java][put] = -> fc=new FileOutputStream(file(),).getChannel()@ -> fc.write(entity,)@ -> fc.close()@
results[https://github.com/davecheney/motown/blob/f06551a4921ff3dd57bfa3fd4b15a903f2d11561/motown-resource/src/main/java/net/cheney/motown/resource/file/FileResource.java][put] = -> fc=new FileOutputStream(file(),).getChannel()@ -> fc.write(entity,)@ -> fc.close()@
results[https://github.com/zhongl/iPage/blob/8dd2b26f9b33feb288938f9052554f70e92517a0/src/main/java/com/github/zhongl/journal/CRC32WritableByteChannel.java][close] = -> crc32Buffer=ByteBuffer.wrap(Longs.toByteArray(crc32.getValue(),),)@ -> channel.write(crc32Buffer,)@ -> channel.close()@
results[https://github.com/shiffman/shiffman.github.io/blob/50593000652328c8df6ffb2406d5fd4ba8d4c7ce/itp/classes/a2z/week04/simple/A2ZFileWriter.java][writeContent] = -> fos=new FileOutputStream(filename,)@ -> outfc=fos.getChannel()@ -> bb=ByteBuffer.wrap(content.getBytes(),)@ -> outfc.write(bb,)@ -> outfc.close()@
results[https://github.com/shiffman/shiffman.github.io/blob/50593000652328c8df6ffb2406d5fd4ba8d4c7ce/itp/classes/a2z/week04/a2z/A2ZFileWriter.java][writeContent] = -> fos=new FileOutputStream(filename,)@ -> outfc=fos.getChannel()@ -> bb=ByteBuffer.wrap(content.getBytes(),)@ -> outfc.write(bb,)@ -> outfc.close()@
results[https://github.com/safuus/MobX/blob/dda353da9eeeff8fabbee62fe03b6448cd1b7238/mobxserver/apache-mina-2.0.4/src/mina-core/src/test/java/org/apache/mina/transport/AbstractFileRegionTest.java][createLargeFile] = -> largeFile=File.createTempFile("mina-test","largefile",)@ -> largeFile.deleteOnExit()@ -> channel=new FileOutputStream(largeFile,).getChannel()@ -> buffer=createBuffer()@ -> channel.write(buffer,)@ -> channel.close()@
results[https://github.com/coderplay/h2-bitmap/blob/a6164db4e1ea39482dc45713e20b9bcf59c8ed42/h2/src/test/org/h2/test/db/TestOpenClose.java][testErrorMessageWrongSplit] = -> c=FileUtils.open(getBaseDir()+"/openClose2.h2.db.1.part","rw",)@ -> c.position(c.size()*2-1,)@ -> c.write(ByteBuffer.wrap( new byte[],),)@ -> c.close()@
results[https://github.com/Jules-/terraingis/blob/d7e0c36af856d850c63253fdd172423e04862d86/src/TerrainGIS/src/cz/kalcik/vojta/shapefilelib/files/ShapeFileReader.java][writeBytesToFile] = -> output=new FileOutputStream(file.getAbsolutePath(),).getChannel()@ -> buffer.position(0,)@ -> output.write(buffer,)@ -> output.close()@
results[https://github.com/chris-martin/h2/blob/642e6a954bdf61df97387f451ea50bc8a245a01c/h2/src/test/org/h2/test/db/TestOpenClose.java][testErrorMessageWrongSplit] = -> c=FileUtils.open(getBaseDir()+"/openClose2.h2.db.1.part","rw",)@ -> c.position(c.size()*2-1,)@ -> c.write(ByteBuffer.wrap( new byte[],),)@ -> c.close()@
