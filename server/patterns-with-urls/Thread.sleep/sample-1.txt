results[https://github.com/apache/servicemix3/blob/fd34986995b30267f6b7b8dc86d2edc32fcc76d1/common/servicemix-components/src/test/java/org/apache/servicemix/components/saaj/SaajSoapActionTest.java][testSoapAction][18645] = -> TRY {  -> Thread.sleep(50,)@!(me.getStatus()==ExchangeStatus.ERROR) } CATCH(Exception) {}
results[https://github.com/fhxalgo/fhx_java/blob/4f94304608ee82ace0bff9f0e1c3bd11697e0fc1/src/com/fhx/service/ib/order/IBOrderSender.java][run][352] = -> TRY { -> Thread.sleep(5000,)@ } CATCH(Exception) { -> e1.printStackTrace()@ }
results[https://github.com/square/okhttp/blob/2f1629d5930d8a9d647ed3c6c4b56b3df814f306/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java][idleConnectionNotReturned][4] = -> TRY {  -> pool=new ConnectionPool(2,KEEP_ALIVE_DURATION_MS,)@ -> Thread.sleep(KEEP_ALIVE_DURATION_MS*2,)@ } CATCH(Exception) {}
results[https://github.com/floodlight/floodlight/blob/2766b9850481178a1112fe5e825eab1b4f717ea8/src/test/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImplTest.java][testWriteToSyncStore][1] = -> TRY {  -> deviceManager.setSyncStoreWriteInterval(syncStoreIntervalMs,)@ -> Thread.sleep(syncStoreIntervalMs+5,)@ } CATCH(Exception) {}
results[https://github.com/chrismoos/smack/blob/afda9461e157be8f8c50850bb6bd47004aee0a53/test/org/jivesoftware/smackx/packet/MessageEventTest.java][testSendMessageEventRequest][81] = -> TRY { -> Thread.sleep(200,)@ } CATCH(Exception) { -> fail("An error occured sending the message",)@ }
results[https://github.com/AleksandrShulman/hbase/blob/d1a1eaecabe19f874484d0b22646e4df774932c7/src/test/java/org/apache/hadoop/hbase/client/TestScannerTimeout.java][test3686b][5] = -> TRY {  -> conf.setInt(HConstants.HBASE_REGIONSERVER_LEASE_PERIOD_KEY,SCANNER_TIMEOUT*100,)@ -> Thread.sleep(SCANNER_TIMEOUT+2000,)@ } CATCH(Exception) {}
results[https://github.com/dweiss/lucene_solr/blob/545ec38280adaf1775b12c35a9a582ed824d8d7b/solr/src/java/org/apache/solr/cloud/SolrZkServer.java][start][34] = -> TRY { -> Thread.sleep(500,)@ } CATCH(Exception) { -> log.error("STARTING ZOOKEEPER",e,)@ }
results[https://github.com/oxhead/decoupled-hadoop/blob/9e2b9e98c59c9eb85de9cc4f80c2eedbabc67b5e/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBlockRecovery.java][run][8] = -> TRY { -> Thread.sleep(2000,)@ } CATCH(Exception) { -> recoveryInitResult.set(false,)@ }
results[https://github.com/cts2/cts2-framework/blob/21cf7b22a55248eb966bac093e46b4ad59ebd7f6/cts2-framework/webapp-rest/src/test/java/edu/mayo/cts2/framework/webapp/rest/controller/QueryControlTestBean.java][testWithQueryControlOverTime][2] = -> TRY {  -> Thread.sleep((long) queryControl.getTimelimit()*1000*2,)@ } CATCH(Exception) {}
results[https://github.com/LeeMinWoo/android_dalvik/blob/0c9612f9d7ff9fc0a61cc9eeb37acaabb7b28700/libcore/concurrent/src/test/java/tests/api/java/util/concurrent/ReentrantLockTest.java][testAwaitUntil_Interrupt][393] = -> TRY { -> Thread.sleep(SHORT_DELAY_MS,)@ } CATCH(Exception) { -> unexpectedException()@ }
results[https://github.com/cnfree/sanguo/blob/a8e928ed232f99d1d81f8242f2a4e5f012978064/com.actuate.tool.development.installer/src/com/actuate/tool/development/tool/task/SyncIPortalWorkspace.java][checkP4ConnectionSettings][2] = -> TRY { -> Thread.sleep(100,)@ } CATCH(Exception) { -> errorMessage[0]=e.getMessage()@ }
results[https://github.com/geesun/android_packages_apps_Mms/blob/2d51bcf4c1c06cc803907a8041922cce90739833/tests/src/com/android/mms/MmsStability.java][testLaunchMMS][30] = -> TRY { -> Thread.sleep(WAIT_TIME,)@ } CATCH(Exception) { -> assertTrue("MMS do nothing",false,)@ }
results[https://github.com/floodlight/floodlight/blob/2766b9850481178a1112fe5e825eab1b4f717ea8/src/test/java/net/floodlightcontroller/devicemanager/internal/DeviceManagerImplTest.java][testToMaster][1] = -> TRY {  -> deviceManager.setInitialSyncStoreConsolidateMs(initialSyncStoreConsolidateIntervalMs,)@ -> Thread.sleep(initialSyncStoreConsolidateIntervalMs+5,)@ } CATCH(Exception) {}
results[https://github.com/srinath4ever/JavaTest/blob/7db2bf5aa4c9fd9b18a4853c865d2930b5219917/JavaTest/src/com/core/threads/ADeadLock.java][foo][24] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> System.out.println("ADeadLock interrupted",)@ }
results[https://github.com/Jasig/java-cas-client/blob/7e5b8426a4f41812e4b8db60bcb71c5d309180d1/cas-client-core/src/test/java/org/jasig/cas/client/validation/Cas20ProxyReceivingTicketValidationFilterTests.java][testDelaysFirstCleanAll][3] = -> TRY {  -> filter.setMillisBetweenCleanUps(millisBetweenCleanUps,)@ -> Thread.sleep(millisBetweenCleanUps*2,)@ } CATCH(Exception) {}
results[https://github.com/koa/RAoA/blob/f7d3893e176e21662f6a411ff18397835fe7c0cb/image-client/src/ch/bergturbenthal/image/client/resolver/Resolver.java][doInBackground][3] = -> TRY { -> Thread.sleep(2*1000,)@ } CATCH(Exception) { -> Log.e(TAG,"Cannot stop mdns",e,)@ }
results[https://github.com/davros-/platform_frameworks_base/blob/4b50cc39b0518a04b16eb0f0b6286859b32373a3/media/tests/MediaFrameworkTest/src/com/android/mediaframeworktest/unit/MediaRecorderStopStateUnitTest.java][invokeMethodUnderTest][2] = -> TRY { -> Thread.sleep(SLEEP_TIME_BEFORE_STOP,)@ } CATCH(Exception) { -> Log.v(TAG,"sleep was interrupted and terminated prematurely",)@ }
results[https://github.com/retornaz/contiki-cc253x/blob/a0f581c7a487711249bf1533966cea709c786db5/tools/cooja/examples/userplatform_debug/java/MoteDebugger.java][actionPerformed][25] = -> TRY { -> Thread.sleep(2500,)@!(!(sourceFile.exists())) && !(pid<=0) } CATCH(Exception) { -> logger.fatal("Exception while starting gdb, aborting",)@!(!(sourceFile.exists())) && !(pid<=0) }
results[https://github.com/AleksandrShulman/hbase/blob/8a3f074ab08da96c41148bbba22371c5e9de7af7/src/test/org/apache/hadoop/hbase/HBaseTestingUtility.java][expireSession][4] = -> TRY {  -> zk=new ZooKeeper(quorumServers,sessionTimeout,EmptyWatcher.instance,sessionID,password,)@ -> Thread.sleep(sessionTimeout*5L,)@ } CATCH(Exception) {}
results[https://github.com/cstamas/nexus-core/blob/e3ecc240f772ddca4678185fef675759cb267887/nexus/nexus-proxy/src/test/java/org/sonatype/nexus/proxy/mirror/DefaultDownloadMirrorsTest.java][testBlacklistDecay][2] = -> TRY {  -> dMirrors.setBlacklistExpiration(blacklistTTL,)@ -> Thread.sleep(blacklistTTL*2,)@ } CATCH(Exception) {}
results[https://github.com/apache/openejb/blob/3f1ca6cba564f02453ba4eb4e432308257689dda/openejb3/examples/schedule-methods/src/test/java/org/superbiz/corn/FarmerBrownTest.java][test][15] = -> TRY {  -> Thread.sleep(SECONDS.toMillis(5,),)@ } CATCH(Exception) {}
results[https://github.com/sgroschupf/katta/blob/1fb76412b87e9285a418b9b4e3d73b5956c48c5e/src/test/integration/net/sf/katta/integrationTest/lib/lucene/LuceneSearchIntegrationTest.java][testMultithreadedSearchWithMultipleClients][5] = -> TRY {  -> Thread.sleep(QUERY_TIME,)@ -> checkResults(startTime,QUERY_TIME,firedQueries,unexpectedResultCount,exceptions,)@ } CATCH(Exception) {}
results[https://github.com/GenetICS/packages_apps_CMFileManager/blob/6be595d8eeba247a9fb9614a2c314d1e1a184f3d/src/com/cyanogenmod/filemanager/ui/policy/ExecutionActionPolicy.java][run][3] = -> TRY { -> Thread.sleep(250L,)@ } CATCH(Exception) { -> listener.onException(e,)@ }
results[https://github.com/uvalbbu/dalvik_test/blob/7fd25e8506fbe2962323d757f54628c40c1b2c46/luni/src/test/java/libcore/java/net/OldDatagramSocketTest.java][run][105] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/synthetos/tgFX/blob/fa596a14d6837e78104547b03f0daf7faf26089b/src/tgfx/ui/gcode/GcodeTabController.java][changed][19] = -> TRY { -> Thread.sleep(400,)@ } CATCH(Exception) { -> logger.error("Error querying tg model state on gcode unit change.  Main.java binding section.",)@ }
results[https://github.com/bigbrother82/android-test/blob/0c9612f9d7ff9fc0a61cc9eeb37acaabb7b28700/libcore/concurrent/src/test/java/tests/api/java/util/concurrent/AbstractQueuedSynchronizerTest.java][run][16] = -> TRY { -> Thread.sleep(SMALL_DELAY_MS,)@ } CATCH(Exception) { -> threadUnexpectedException()@ }
results[https://github.com/apache/bookkeeper/blob/2d0cd0d1b9d41f3b600f6dac308c6d34317ae676/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookKeeperPersistenceManager.java][inconsistentSubscriptionStateAndLedgerRanges][2] = -> TRY {  -> Thread.sleep(conf.getMessagesConsumedThreadRunInterval()*2,)@ } CATCH(Exception) {}
results[https://github.com/societies/SOCIETIES-Platform/blob/2944059dfe9784e8b0a9b39d9970710df66c69eb/integration-tests/BIT/privacy-trust-test-suite/local-trust-eventing-1962/src/main/java/org/societies/integration/test/bit/privacytrust/TestByTrustorTrustee.java][setUp][4] = -> TRY {  -> Thread.sleep(TestCase1962.getTimeout(),)@ } CATCH(Exception) {}
results[https://github.com/repshak/BeeQueue/blob/1624f7f5134f2bf5f2dcc0aacf21fcab9a2a2c92/src/org/beequeue/run/RunHelper.java][start][1] = -> TRY { -> Thread.sleep(300L,)@ } CATCH(Exception) { -> throw BeeException.cast(e,)@ }
results[https://github.com/basho/riak-java-client/blob/95c964678401a2bb5e3b1bd7aebe925ed11d902e/src/test/java/com/basho/riak/pbc/itest/ITestRiakConnectionPoolTest.java][getConnection_reaped][1] = -> TRY {  -> pool=new RiakConnectionPool(1,1,host,PORT,1000,16,reapTime,)@ -> Thread.sleep(reapTime+1000,)@ } CATCH(Exception) {}
results[https://github.com/dancres/blitzjavaspaces/blob/70a347c8bac6a232bf7dfd867d1e273553a72508/test/org/dancres/blitz/test/TxnResolve.java][run][5] = -> TRY { -> Thread.sleep(5000,)@ } CATCH(Exception) { -> anE.printStackTrace(System.err,)@ }
results[https://github.com/codefireXperiment/libcore/blob/977792f458a5aca38582be9b7eaba02db2215c70/luni/src/test/java/libcore/java/nio/channels/SelectorTest.java][run][18] = -> TRY { -> Thread.sleep(2000,)@ } CATCH(Exception) { -> fail()@ }
results[https://github.com/sudarshang/lucene-solr/blob/b32cbce38fcd9e9e773259037ee286c32575f355/solr/core/src/test/org/apache/solr/cloud/ChaosMonkeySafeLeaderTest.java][doTest][1] = -> TRY {  -> Thread.sleep(atLeast(8000,),)@ } CATCH(Exception) {}
results[https://github.com/yoda31217/betty/blob/13c5c5a61231d7ac02d1c42ec73fbecf28dae97e/test/data/fetcher/MarathonFetcherTest.java][waitIfNeededNoSleep][1] = -> TRY {  -> Thread.sleep(anyLong(),)@ } CATCH(Exception) {}
results[https://github.com/paniclater/SCJP/blob/3293a2fe38374ac641e7748b0dded79e669b2d60/source/com/paniclater/threads/DMV.java][do2][2] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> System.out.print("e ",)@ }
results[https://github.com/Selenium2/Selenium2/blob/8710fbc32cc8eaf2b5894faa0b87d08cc94cfcaf/java/server/src/org/openqa/jetty/servlet/AdminServlet.java][run][3] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> LogSupport.ignore(log,e,)@ }
results[https://github.com/ebollens/ccnmp/blob/af5dd1c5b9a633139880ca1c15d2aafda37b0ffd/javasrc/src/org/ccnx/ccn/test/impl/NetworkTest.java][testInterestReexpression][3] = -> TRY {  -> Thread.sleep(WAIT_MILLIS,)@ -> sema.tryAcquire(WAIT_MILLIS,TimeUnit.MILLISECONDS,)@ } CATCH(Exception) {}
results[https://github.com/cipango/cipango/blob/ee1ca51865f39bb92fb84ac09bd1803d448fb810/cipango-tests/src/test/java/org/cipango/sipunit/UaTestCase.java][checkForFailure][4] = -> TRY { -> Thread.sleep(50,)@ } CATCH(Exception) { -> throw new IllegalStateException(e,)@ }
results[https://github.com/CamelCookbook/camel-cookbook-examples/blob/c2db628687f13bae665dacc3c3e852ce0f51dc9a/camel-cookbook-structuring-routes/src/test/java/org/camelcookbook/structuringroutes/seda/SedaTimerSpringTest.java][testLoadBalancing][1] = -> TRY {  -> out.setMinimumExpectedMessageCount(pingCount,)@ -> Thread.sleep(pingCount*SedaTimerRouteBuilder.TIMER_PERIOD+LongRunningProcessor.DELAY_TIME,)@ } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-batch/blob/557515df45c0f596588418d53c3f2bae3781c1c3/spring-batch-core-tests/src/test/java/org/springframework/batch/core/test/repository/JdbcJobRepositoryTests.java][run][3] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> list.add(e,)@ }
results[https://github.com/bobmcwhirter/jboss-messaging/blob/ee3a2cae8213cea407dcaad2cf9d0a457e549cb0/tests/src/org/jboss/messaging/tests/timing/jms/bridge/impl/BridgeImplTest.java][testSendMessagesWhenMaxBatchTimeExpires][2] = -> TRY {  -> bridge.setMaxBatchTime(maxBatchTime,)@ -> Thread.sleep(3*maxBatchTime,)@ } CATCH(Exception) {}
results[https://github.com/dworkin/reddwarf/blob/b9f6ca48a8edcea0ebcf9718650301792f30c659/sgs-server/src/test/java/com/sun/sgs/test/impl/service/data/store/cache/TestRequestQueueListener.java][testAcceptAlternatingFailures][1] = -> TRY {  -> listener=new RequestQueueListener(serverSocket,serverDispatcher,failureReporter,MAX_RETRY,RETRY_WAIT,)@ -> Thread.sleep(MAX_RETRY+extraWait,)@ } CATCH(Exception) {}
results[https://github.com/haizi-zh/micromanager/blob/c11d53e4e3cc9c9d7ca6265ac505df24bc460c38/plugins/Projector/src/org/micromanager/projector/ProjectorController.java][measureSpot][1] = -> TRY { -> Thread.sleep(300,)@ } CATCH(Exception) { -> ReportingUtils.showError(e,)@ }
results[https://github.com/kvite/astridclone/blob/2b70c8f7553c4b43e37bf653482d2d5682083877/actionbarsherlock/samples/roboguice/src/com/actionbarsherlock/sample/roboguice/activity/FightForcesOfEvilActivity.java][call][32] = -> TRY {  -> Thread.sleep(random.nextInt(5*1000,),)@ } CATCH(Exception) {}
results[https://github.com/adempiere/adempiere/blob/0e1c23efa173cae3a9c9779adf8a94850f5212c4/serverRoot/src/main/server/org/compiere/server/AdempiereServerMgr.java][stop][1] = -> TRY { -> Thread.sleep(10,)@ } CATCH(Exception) { -> log.log(Level.SEVERE,"stop",e,)@ }
results[https://github.com/stuartwdouglas/jacorb/blob/61d6ad209bb9d1b8b54a239075553f07b1e2cad4/test/regression/src/org/jacorb/test/bugs/bugjac200/AcceptorExceptionListenerTest.java][testListener][5] = -> TRY {  -> Thread.sleep(TestUtils.getMediumTimeout(),)@ } CATCH(Exception) {}
results[https://github.com/IanDarwin/darwinsys-api/blob/8bad7f042fe4fa16073e54e1228bf42cdd9af4c5/regress/com/darwinsys/locks/PessimisticLockManagerImplTest.java][testTimeoutReclaimsLock][5] = -> TRY {  -> System.out.println("Timeout Test sleeping "+SECONDS_TO_ENSURE_RECLAIM+" seconds to simulate user activity",)@ -> Thread.sleep(SECONDS_TO_ENSURE_RECLAIM*1000,)@ } CATCH(Exception) {}
results[https://github.com/chenatu/ccnx-underlay/blob/493267acc2ebbcfbacf50aff2f8657c39fce8ac0/javasrc/src/org/ccnx/ccn/test/io/CCNInputStreamTest.java][testBlocking][2] = -> TRY {  -> Thread.sleep(SystemConfiguration.getDefaultTimeout()*2,)@ } CATCH(Exception) {}
results[https://github.com/Droid-Concepts/packages_apps_DCFileManager/blob/d355d2b55bca68dbbbb6fdef334e316311ac45fd/src/com/cyanogenmod/filemanager/activities/EditorActivity.java][syncWrite][4] = -> TRY { -> Thread.sleep(150L,)@ } CATCH(Exception) { -> DialogHelper.showToast(this,R.string.msgs_operation_failure,Toast.LENGTH_SHORT,)@ }
results[https://github.com/apache/activemq-apollo/blob/b86a20e0b92815b2e205cf61190193305c50c70e/activemq-client/src/test/java/org/apache/activemq/legacy/test2/JmsSendReceiveWithMessageExpirationTest.java][testConsumeExpiredQueue][5] = -> TRY {  -> producer=createProducer(timeToLive,)@ -> Thread.sleep(timeToLive+1000,)@ } CATCH(Exception) {}
results[https://github.com/callista-software/phk-patientdata-pump/blob/1c4ca51fffe4a9c51ce360dee9df086ee6bc6989/pump-service/src/main/java/se/skl/phk/subscription/transfer/camel/UploadFlow.java][process][5] = -> TRY {  -> sleepTime=minSleep+(int) Math.random()*maxSleep-minSleep+1@ -> Thread.sleep(sleepTime,)@ } CATCH(Exception) {}
results[https://github.com/jpcaruana/jsynthlib/blob/772349b2324c57154b59a42bd2e68a2cdf5e10fc/src/main/java/org/jsynthlib/drivers/roland/mt32/RolandMT32SystemDriver.java][sendPatch][7] = -> TRY { -> Thread.sleep(100,)@ } CATCH(Exception) { -> ErrorMsg.reportStatus(e,)@ }
results[https://github.com/ottomata/flume-ng/blob/abc3468f53db38648f8978965719be5d528ff032/flume-ng-channels/flume-jdbc-channel/src/test/java/org/apache/flume/channel/jdbc/BaseJdbcChannelProviderTest.java][testEventWithSimulatedSourceAndSinks][2] = -> TRY {  -> Thread.sleep(MockEventUtils.generateSleepInterval(3000,),)@ } CATCH(Exception) {}
results[https://github.com/wuzbin/opentsdb/blob/eb36647e3f11484499c7cac8bb7d63286539253f/src/uid/TestUniqueId.java][getOrCreateIdUnableToAcquireRowLock][1] = -> TRY {  -> Thread.sleep(anyInt(),)@ } CATCH(Exception) {}
results[https://github.com/deanhiller/databus/blob/fc807cb1e7218caf2b8959baa287597943ec1357/webapp/play1.3.x/samples-and-tests/just-test-cases/app/controllers/SlowResponseTestController.java][slowResponse][1] = -> TRY {  -> Logger.info("Sleeping "+seconds+" before sending response",)@ -> Thread.sleep(seconds*1000,)@ } CATCH(Exception) {}
results[https://github.com/jpatanooga/Metronome/blob/d3b2adcb7c6ee364ecaa4a59285f9bd475ef1d1b/src/main/java/tv/floe/metronome/deeplearning/rbm/visualization/NeuralNetworkVisualizer.java][plotActivations][1] = -> TRY { -> Thread.sleep(10000,)@ } CATCH(Exception) { -> log.warn("Image closed",)@ }
results[https://github.com/apache/river/blob/e150abdd925f848d0d43a0b92438ed29c8dea61e/integrationtests/source/vob/qa/src/com/sun/jini/test/impl/mahalo/PrepareAndCommitExceptionTest2.java][run][4] = -> TRY { -> Thread.sleep(10000,)@ } CATCH(Exception) { -> logger.log(Level.INFO,"Caught sleep exception -- ignoring: "+e,)@ }
results[https://github.com/jetty-project/jetty-plugin-support/blob/fa4668ce5c3e5b68ac08d99cbb60dac97d7f869c/jetty-client/src/test/java/org/eclipse/jetty/client/HttpDestinationQueueTest.java][testExchangeTimeoutIncludesQueuingExchangeExpiresDuringResponse][1] = -> TRY {  -> exchange1.setTimeout(timeout,)@ -> Thread.sleep(timeout*2,)@ } CATCH(Exception) {}
results[https://github.com/openGDA/gda-epics/blob/86479c62d9b0b02d4b445491a0f5ef8abd6bcfbd/uk.ac.gda.epics/src/gda/device/detector/addetector/triggering/SingleExposurePcoSoftwareTrigger.java][collectData][1] = -> TRY {  -> Thread.sleep((long) getAcquirePeriod()*1000+delay,)@ } CATCH(Exception) {}
results[https://github.com/ssmehov/Jivko/blob/08f48c20a4fef3a18f268c23267dca7e5e0fb9d2/src/jivko/brain/movement/Command.java][execute][1] = -> TRY {  -> Thread.sleep(getDuration(),)@ } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/0a475d034b73886824cacfea49d29a699312dcc5/jetty-spdy/spdy-jetty-http/src/test/java/org/eclipse/jetty/spdy/http/ReferrerPushStrategyTest.java][testReferrerPushPeriod][1] = -> TRY {  -> pushStrategy.setReferrerPushPeriod(referrerPushPeriod,)@ -> Thread.sleep(referrerPushPeriod+1,)@ } CATCH(Exception) {}
results[https://github.com/yudis/h2database/blob/9a57a53cd47292e0a1705293876f8d06ee9c870f/h2/src/test/org/h2/test/db/TestMultiThread.java][testConcurrentInsertUpdateSelect][7] = -> TRY {  -> sleep=getSize(400,10000,)@ -> Thread.sleep(sleep,)@ } CATCH(Exception) {}
results[https://github.com/floodlight/floodlight/blob/2766b9850481178a1112fe5e825eab1b4f717ea8/src/test/java/net/floodlightcontroller/core/internal/OFChannelHandlerTest.java][testInitialMoveToSlaveTimeout][1] = -> TRY {  -> handler.useRoleChangerWithOtherTimeoutForTesting(timeout,)@ -> Thread.sleep(timeout+5,)@ } CATCH(Exception) {}
results[https://github.com/maihde/org.eclipse.rap/blob/0c3c55a6798c2c91b021d29d2e6aed4083868fc4/tests/org.eclipse.rap.rwt.test/src/org/eclipse/rwt/internal/uicallback/UICallBackManager_Test.java][testDispatchingTimerExecRunnableDeactivatesUICallback][4] = -> TRY {  -> display.timerExec(TIMER_EXEC_DELAY,runnable,)@ -> Thread.sleep(TIMER_EXEC_DELAY+50,)@ } CATCH(Exception) {}
results[https://github.com/Mobicents/sip-servlets/blob/8324808d0589797762dc8ba882c1f3a83ae0146d/sip-servlets-test-suite/testsuite/src/test/java/org/mobicents/servlet/sip/testsuite/callcontroller/CallForwardingB2BUAJunitTest.java][testCallForwardingCallerUseSipFactory][2] = -> TRY {  -> sender.setTimeToWaitBeforeBye(TIMEOUT*2,)@ -> Thread.sleep(TIMEOUT*4,)@ } CATCH(Exception) {}
results[https://github.com/apache/river/blob/e150abdd925f848d0d43a0b92438ed29c8dea61e/integrationtests/source/vob/qa/src/com/sun/jini/test/impl/outrigger/transaction/AbortToReadTest.java][run][2] = -> TRY {  -> timeLog("sleeping "+SLEEP_TIME+" seconds",)@ -> Thread.sleep(SLEEP_TIME*SECONDS,)@ } CATCH(Exception) {}
results[https://github.com/jpcaruana/jsynthlib/blob/7cfff7e4dab38ddd619c271ac810471e6f31e177/src/main/java/synthdrivers/YamahaTG100/YamahaTG100BankDriver.java][doSendPatch][3] = -> TRY { -> Thread.sleep(30,)@ } CATCH(Exception) { -> ErrorMsg.reportError("Error","Error requesting the internal bank.",ex,)@ }
results[https://github.com/makkus/jglobus-nz/blob/0ad41eff5dddf9e85e9f6b558af9d53f726de903/src/org/globus/gsi/gssapi/test/GlobusGSSContextTest.java][testContextExpiration][1] = -> TRY {  -> clientContext.requestLifetime(time,)@ -> Thread.sleep((int) time*1.3*1000,)@ } CATCH(Exception) {}
results[https://github.com/HallwayTech/follow/blob/94febcc78acf40a6cf8ad41691264be52ac4e27e/testsrc/ghm/follow/test/BaseTestCase.java][writeToFollowedFileAndWait][3] = -> TRY {  -> Thread.sleep(follower_.getLatency()+100,)@ } CATCH(Exception) {}
results[https://github.com/nesl/splt/blob/6aaaad49317f26ae706682aec5a9bc00eb5249bb/prototype/RFID/libJAVA/SkyeTekDemo1.java][<init>][2] = -> TRY { -> Thread.sleep(20,)@ } CATCH(Exception) { -> jOptionPane1.showMessageDialog(this,"Reader Not Detected: "+ex,"Stop",jOptionPane1.ERROR_MESSAGE,)@ }
results[https://github.com/matthieu/apache-ode/blob/4fe31e412b9e79daeb4fd1aa90f42ad3150730a8/scheduler-simple/src/test/java/org/apache/ode/scheduler/simple/SchedulerThreadTest.java][testStartStop][5] = -> TRY {  -> Thread.sleep(600,)@ -> Thread.sleep(SCHED_TOLERANCE,)@ } CATCH(Exception) {}
results[https://github.com/Andromadus/android_packages_apps_FM/blob/1f171145a8036f67e5cae8629798c0eaf6bc90f7/src/com/quicinc/fmradio/FMTransmitterService.java][searchWeakStationList][4] = -> TRY { -> Thread.sleep(100,)@ } CATCH(Exception) { -> Log.d(LOGTAG,"RunningThread InterruptedException",)@ }
results[https://github.com/bonitasoft/bonita-engine/blob/6cfb5f1e27e89d8cd0e38aa23b1e1a9bf342703d/bpm/bonita-bpm-integration-tests/bonita-integration-client-tests/src/main/java/org/bonitasoft/engine/event/AbstractTimerBoundaryEventTest.java][executeTimerBoundaryEventNotTriggeredOnCallActivity][1] = -> TRY {  -> processDefinition=deployAndEnbleProcessWithTimerBoundaryEventOnCallActivity(timerDuration,interrupting,simpleProcessName,parentUserTaskName,exceptionFlowTaskName,)@ -> Thread.sleep(timerDuration+500,)@ } CATCH(Exception) {}
results[https://github.com/tonit/karafonexam2/blob/d759272a2f3bc0caf4f7b6937cb294bcbe058445/admin/core/src/test/java/org/apache/karaf/jpm/MainTest.java][main][5] = -> TRY {  -> Thread.sleep(Long.parseLong(args[0],),)@ } CATCH(Exception) {}
results[https://github.com/jonatas/mktc-platform/blob/52be4ccaac18c61200e115b46711f38a02c73343/source/util/src/test/java/org/marketcetera/util/ws/stateful/SessionManagerTest.java][termination][2] = -> TRY {  -> Thread.sleep(TEST_LIFESPAN,)@ -> Thread.sleep(TEST_LIFESPAN*2,)@ } CATCH(Exception) {}
results[https://github.com/droolsjbpm/droolsjbpm-integration/blob/2bc21f56ea4d02f72926e14baacf0a4d20a8800f/kie-spring/src/test/java/org/kie/spring/timer/MyDroolsBean.java][initStartDisposeAndLoadSession][1] = -> TRY { -> Thread.sleep(4000,)@ } CATCH(Exception) { -> throw new IllegalStateException("The endTheProcess method has been interrupted",ex,)@ }
results[https://github.com/Metaswitch/jsip/blob/6f83cba5af6fb503e5952f2796cb43eed72c26ac/src/gov/nist/javax/sip/SipStackImpl.java][run][2] = -> TRY { -> Thread.sleep(100,)@ } CATCH(Exception) { -> logger.logError("Error intializing SIPEventInterceptor",e,)@ }
results[https://github.com/openGDA/gda-diamond/blob/f9b2423452868341eefc7b16d6b8f0a8c6c38e2a/uk.ac.gda.dls.test/src/gda/device/detectorfilemonitor/SimpleHighestExistingFileMonitorTest.java][testSetRunBeforePropertiesSet][1] = -> TRY {  -> simpleDetectorFileMonitor.setDelayInMS(delay,)@ -> Thread.sleep(2*delay,)@ } CATCH(Exception) {}
results[https://github.com/Cr4ckX/WBA2_Phase2/blob/636ba58a5d341ae18f581f8b0e9f33637112dd51/GrizzlyTest/JaxRsTest/src/minirestwebservice/HalloWeltTestServer.java][main][3] = -> TRY {  -> sec=(args.length>1)?args[1]:"10"@ -> Thread.sleep(1000*Integer.parseInt(sec,),)@ } CATCH(Exception) {}
results[https://github.com/jbosstm/narayana/blob/e341e1dc49c84a3718f9347cbdf284fe52f6a568/ArjunaJTA/spi/src/test/java/io/narayana/spi/SPIUnitTest.java][testTimeout][2] = -> TRY {  -> txn.setTransactionTimeout(timeout,)@ -> Thread.sleep(timeout*1000+1000,)@ } CATCH(Exception) {}
results[https://github.com/nuxeo/nuxeo-core/blob/fb8e088ab8fba5e27c0071582fc7ea9c4ed03fdf/nuxeo-core-event/src/test/java/org/nuxeo/ecm/core/work/WorkManagerTXTest.java][testWorkManagerRollback][1] = -> TRY {  -> work=new SleepWork(duration,false,)@ -> Thread.sleep(duration+1000,)@ } CATCH(Exception) {}
results[https://github.com/gf-metro/jaxws/blob/3c981bcf41a11f02a49a65d04c59c940f9a68e56/jaxws-ri/tests/unit-rearch/src/server/misc/client/LifeCycleTest.java][run][1] = -> TRY { -> Thread.sleep(10,)@ } CATCH(Exception) { -> assertTrue(false,)@ }
results[https://github.com/bonitasoft/bonita-engine/blob/6cfb5f1e27e89d8cd0e38aa23b1e1a9bf342703d/bpm/bonita-bpm-integration-tests/bonita-integration-client-tests/src/main/java/org/bonitasoft/engine/event/AbstractTimerBoundaryEventTest.java][timerBoundaryEventNotTriggeredOnParallelMultiInstance][1] = -> TRY {  -> processDefinition=deployProcessMultiInstanceWithBoundaryEvent(timerDuration,interrupting,"step1",loopCardinality,isSequential,"step2","exceptionStep",)@ -> Thread.sleep(timerDuration+1000,)@ } CATCH(Exception) {}
results[https://github.com/bonitasoft/bonita-engine/blob/0c44fb4b2b4baf24bc52d80ceda1ed2237eb3f51/bpm/bonita-bpm-integration-tests/bonita-integration-client-tests/src/main/java/org/bonitasoft/engine/event/TimerEventSubProcessTest.java][timerEventSubProcessNotTriggered][1] = -> TRY {  -> process=deployAndEnableProcessWithTimerEventSubProcess(timerDuration,)@ -> Thread.sleep(timerDuration,)@ } CATCH(Exception) {}
results[https://github.com/cnfree/sanguo/blob/de65fcd9e8424e95a901df7322bf3ce3f0771ac5/com.actuate.tool.development.installer/src/com/actuate/tool/development/tool/wizard/IPortalViewerProjectPage.java][widgetSelected][1] = -> TRY { -> Thread.sleep(100,)@ } CATCH(Exception) { -> LogUtil.recordErrorMsg(e,false,)@ }
results[https://github.com/rhusar/HornetQ-oldmigration/blob/81a201fc1e1193c28fcabc4a25297b807330248e/tests/src/org/jboss/test/messaging/tools/jmx/rmi/RMIServer.java][run][1] = -> TRY { -> Thread.sleep(250,)@ } CATCH(Exception) { -> log.warn("interrupted while sleeping",e,)@ }
results[https://github.com/michaelleiser/Battleship/blob/ade5d7c7d33041dbc6faa0d87454e918b177d396/test/org/sound/Sound.java][playSound][1] = -> TRY {  -> l=clip.getMicrosecondLength()@ -> Thread.sleep(l/1000,)@ } CATCH(Exception) {}
results[https://github.com/apache/activemq/blob/57ca31fbd379f55d16ac18a57b6764dc5f33fd0d/assembly/src/test/org/activemq/usecases/DeadLetterTest.java][doTest][2] = -> TRY {  -> producer.setTimeToLive(TIME_TO_LIVE,)@ -> Thread.sleep(TIME_TO_LIVE*2,)@ } CATCH(Exception) {}
results[https://github.com/Collabinate/Collabinate/blob/89ce4c31a8b718ce9c74f8e38c716f382259be55/collabinate-server/src/main/java/com/collabinate/server/adminresources/ResetRequestResource.java][run][1] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> throw new RuntimeException("Error resetting service",e,)@ }
results[https://github.com/nasasync/mission-control-technologies/blob/334210729f8ef75d180fb7fdf1c10c7de9d8e5d0/fastPlotViews/src/test/java/gov/nasa/arc/mct/fastplot/bridge/TestPlotDataManager.java][testCalculationOfCompressionRatioAndDataBufferSize][1] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> Assert.assertFalse(true,)@ }
results[https://github.com/gf-metro/jaxws/blob/1d018a9fa91523c93f1975491c36c38fd63d3f0d/jaxws-ri/tests/unit/testcases/async/executor_821/server/HelloService.java][hello][1] = -> TRY { -> Thread.sleep(10000,)@ } CATCH(Exception) { -> throw new WebServiceException(e,)@ }
results[https://github.com/apache/bookkeeper/blob/694568b0ff0d048c284c8d5db0c9455d30dfa3ce/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java][testLedgerDeleteWithExistingEntryLogs][1] = -> TRY {  -> Thread.sleep(2*baseConf.getGcWaitTime(),)@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/870e396e26062f620133059b4e23d66e5874d682/nexus-oss/components/nexus-core/src/test/java/org/sonatype/nexus/scheduling/DummyWaitingNexusRepositoriesTask.java][doRun][2] = -> TRY {  -> Thread.sleep(getSleepTime(),)@ } CATCH(Exception) {}
results[https://github.com/thomasbecker/jetty-7/blob/050cb83b35fefa42e7bd88670c5f567648bcc789/jetty-client/src/test/java/org/eclipse/jetty/client/HttpDestinationQueueTest.java][testDefaultTimeoutIncludesQueuingExchangeExpiresInQueue][1] = -> TRY {  -> exchange1.setTimeout(_timeout*3,)@ -> Thread.sleep(_timeout*2,)@ } CATCH(Exception) {}
results[https://github.com/sgroschupf/zkclient/blob/67592ad39ae6f09e68fc94cbf90d8138911c706f/src/test/java/org/I0Itec/zkclient/ServerZkClientTest.java][testChildListenerAfterSessionExpiredException][1] = -> TRY {  -> disconnectedZkClient=new ZkClient("localhost:4712",sessionTimeout,5000,)@ -> Thread.sleep(sessionTimeout*3,)@ } CATCH(Exception) {}
results[https://github.com/brooklyncentral/brooklyn/blob/5ea243eedf50bf9ab4d925ff7b830bbf5d10f260/usage/dist/src/test/java/brooklyn/cli/BaseCliIntegrationTest.java][call][1] = -> TRY {  -> Thread.sleep(TimeUnit.SECONDS.toMillis(DELAY,),)@ } CATCH(Exception) {}
results[https://github.com/tomekc/morphium/blob/2b4287bb61909fd68a9c584b5b18705331ceb47b/src/de/caluga/morphium/Morphium.java][close][1] = -> TRY { -> Thread.sleep(1000,)@ } CATCH(Exception) { -> logger.debug("Ignoring interrupted-exception",)@ }
results[https://github.com/thomasbecker/jetty-spdy/blob/fa4668ce5c3e5b68ac08d99cbb60dac97d7f869c/jetty-client/src/test/java/org/eclipse/jetty/client/AbstractHttpExchangeCancelTest.java][testHttpExchangeCancelReturnsConnection][1] = -> TRY {  -> exchange.setRequestURI("/?action=wait"+delay,)@ -> Thread.sleep(delay/2,)@ } CATCH(Exception) {}
results[https://github.com/apache/bookkeeper/blob/7b2b91579000bc99d6fdded3aefb349975058c6f/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/IndexCorruptionTest.java][testNoSuchLedger][1] = -> TRY {  -> Thread.sleep(2*baseConf.getFlushInterval(),)@ } CATCH(Exception) {}
results[https://github.com/lisarythenlarsson/TensionCamApp/blob/95ace9be98abf7a856e85cc225e78b96d9aaf663/TensionCamApp/src/com/example/tensioncamapp/activity/CameraActivity.java][delay][1] = -> TRY { -> Thread.sleep(STD_DELAY,)@ } CATCH(Exception) { -> e.getStackTrace()@ }
