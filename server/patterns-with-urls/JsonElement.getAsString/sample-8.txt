results[https://github.com/wso2/enterprise-store/blob/ea75cb299e37f4e5fed3daf33bd5904e4ca800ff/modules/components/social/src/main/java/org/wso2/carbon/social/Activity.java][getObjectType] = -> object=body.getAsJsonObject("object",)@ -> IF { -> type=object.get("objectType",)@object!=null -> IF { -> return type.getAsString()@type!=null && object!=null } }
results[https://github.com/Spoutcraft/Spoutcraft/blob/5cbbc2b07edaf4194a36130a7e74321e5b30ace0/src/main/java/com/prupe/mcpatcher/Config.java][getSelectedLauncherProfile] = -> path=new File(minecraftDir,"launcher_profiles.json",)@ -> json=JsonUtils.parseJson(path,)@ -> IF { -> element=json.get("selectedProfile",)@json!=null -> IF { -> return element.getAsString()@element!=null&&element.isJsonPrimitive() && json!=null } }
results[https://github.com/WinToosa/mobilelogger/blob/85a014004eaf679991ee614512fe010911bcd6bd/MobileLoggerServer/src/main/java/cs/wintoosa/controller/interceptor/ValidationInterceptor.java][isValid] = -> IF { -> return false@json==null } -> unspoiledJson=json.toString()@!(json==null) -> checksumJson=json.get("checksum",)@!(json==null) -> IF { -> return false@!(json==null) && checksumJson==null } -> checksum=checksumJson.getAsString()@!(json==null) && !(checksumJson==null) -> json.remove("checksum",)@!(json==null) && !(checksumJson==null) -> calculatedChecksum=ChecksumChecker.calcSHA1(json.toString(),)@!(json==null) && !(checksumJson==null) -> IF { -> logger.log(Level.WARNING,"Checksum validation failed\n"+"\tjson:    \t {0}"+"\n"+"\toriginal:\t {1}"+"\n"+"\texpected:\t {2}\n"+"\tcalculated:\t {3}", new String[],)@!(json==null) && !(checksum.equalsIgnoreCase(calculatedChecksum,)) && !(checksumJson==null) -> return false@!(json==null) && !(checksum.equalsIgnoreCase(calculatedChecksum,)) && !(checksumJson==null) }
results[https://github.com/ezterry/TTRSS_android_ezterry/blob/a1cb776a785a6c06817142cb49a607543d515b4d/src/name/devnull/ttrss/FeedsFragment.java][onPostExecute] = -> IF { -> TRY { -> iconsUrl=result.getAsJsonObject().get("icons_dir",)@result!=null -> IF { -> iconsStr=iconsUrl.getAsString()@result!=null && iconsUrl!=null -> IF { -> baseUrl=m_prefs.getString("ttrss_url","",)+"/"+iconsStr@result!=null && !(iconsStr.contains("://",)) && iconsUrl!=null } ELSE { -> baseUrl=iconsStr@result!=null && !(!(iconsStr.contains("://",))) && iconsUrl!=null } -> git=new GetIconsTask(baseUrl,)@result!=null && iconsUrl!=null -> git.execute(m_feeds,)@result!=null && iconsUrl!=null } } CATCH { } }
results[https://github.com/ezterry/TTRSS_android_ezterry/blob/807add7244a98101276ff5b415c699f2ea3c677f/src/org/fox/ttrss/FeedsFragment.java][onPostExecute] = -> IF { -> TRY { -> iconsUrl=result.getAsJsonObject().get("icons_dir",)@result!=null -> IF { -> iconsStr=iconsUrl.getAsString()@result!=null && iconsUrl!=null -> IF { -> baseUrl=m_prefs.getString("ttrss_url","",)+"/"+iconsStr@result!=null && !(iconsStr.contains("://",)) && iconsUrl!=null } ELSE { -> baseUrl=iconsStr@result!=null && !(!(iconsStr.contains("://",))) && iconsUrl!=null } -> git=new GetIconsTask(baseUrl,)@result!=null && iconsUrl!=null -> git.execute(m_feeds,)@result!=null && iconsUrl!=null } } CATCH { } }
results[https://github.com/gothfox/Tiny-Tiny-RSS-for-Honeycomb/blob/f0a29f9bcba46c09a750f19b715a730fcc74eb02/src/org/fox/ttrss/FeedsFragment.java][onPostExecute] = -> IF { -> TRY { -> iconsUrl=result.getAsJsonObject().get("icons_dir",)@result!=null -> IF { -> iconsStr=iconsUrl.getAsString()@result!=null && iconsUrl!=null -> IF { -> baseUrl=m_prefs.getString("ttrss_url","",).trim()+"/"+iconsStr@result!=null && !(iconsStr.contains("://",)) && iconsUrl!=null } ELSE { -> baseUrl=iconsStr@result!=null && !(!(iconsStr.contains("://",))) && iconsUrl!=null } -> git=new GetIconsTask(baseUrl,)@result!=null && iconsUrl!=null -> IF { -> git.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,m_feeds,)@result!=null && iconsUrl!=null } ELSE { -> git.execute(m_feeds,)@result!=null && iconsUrl!=null } } } CATCH { } }
results[https://github.com/Collabinate/Collabinate/blob/677e577b6942686e0f2c542886e2a1221e955796/collabinate-server/src/main/java/com/collabinate/server/activitystreams/ActivityStreamsObject.java][getStringValue] = -> IF { -> return null@null==key||null==container } -> element=container.get(key,)@!(null==key||null==container) -> IF { -> TRY { -> value=element.getAsString()@!(null==key||null==container) && null!=element } CATCH { } }
results[https://github.com/dgowpers/glowing-meme/blob/1f33642d68cb2b7c1a7ead8d463795d8c5df0f3b/stuffsystem/web/src/main/java/com/stuffsystem/rest/MongoInventoryDAL.java][convertIdToObjectId] = -> IF { -> IF { -> TRY { -> idStr=idElement.getAsString()@null!=idElement && idElement.isJsonPrimitive() } CATCH { } } -> IF { -> TRY { -> idElementObj=idElement.getAsJsonObject()@null!=idElement && null==idStr } CATCH { } -> IF { -> idObj=idElementObj.get("$oid",)@null!=idElement && null==idStr && null!=idElementObj -> IF { -> TRY { -> idStr=idObj.getAsString()@null!=idObj && null!=idElement && null==idStr && null!=idElementObj } CATCH { } } } } -> IF { -> oid=new ObjectId(idStr,)@null!=idStr && null!=idElement } }
results[https://github.com/commoncrawl/commoncrawl-crawler/blob/798d0f12dfa9ce2dafcbcb253ba036a3d58a53e0/src/org/commoncrawl/mapred/ec2/postprocess/crawldb/CrawlDBWriter.java][populateDateHeadersFromJSONObject] = -> headers=jsonObject.getAsJsonObject("http_headers",)@ -> IF { -> httpDate=headers.get("date",)@headers!=null -> age=headers.get("age",)@headers!=null -> lastModified=headers.get("last-modified",)@headers!=null -> expires=headers.get("expires",)@headers!=null -> cacheControl=headers.get("cache-control",)@headers!=null -> pragma=headers.get("pragma",)@headers!=null -> etag=headers.get("etag",)@headers!=null -> IF { -> crawlStatsJSON.addProperty(CRAWLDETAIL_HTTP_DATE_PROPERTY,HttpHeaderInfoExtractor.getTime(httpDate.getAsString(),),)@httpDate!=null && headers!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_AGE_PROPERTY,age,)@headers!=null && age!=null } -> IF { -> crawlStatsJSON.addProperty(CRAWLDETAIL_HTTP_LAST_MODIFIED_PROPERTY,HttpHeaderInfoExtractor.getTime(lastModified.getAsString(),),)@headers!=null && lastModified!=null } -> IF { -> crawlStatsJSON.addProperty(CRAWLDETAIL_HTTP_EXPIRES_PROPERTY,HttpHeaderInfoExtractor.getTime(expires.getAsString(),),)@headers!=null && expires!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_CACHE_CONTROL_PROPERTY,cacheControl,)@cacheControl!=null && headers!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_PRAGMA_PROPERTY,pragma,)@pragma!=null && headers!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_ETAG_PROPERTY,etag,)@headers!=null && etag!=null } }
results[https://github.com/commoncrawl/commoncrawl-crawler/blob/97f44177c2cb1c59f373177552ac43f1dcd7e670/src/org/commoncrawl/mapred/ec2/postprocess/crawldb/CrawlDBMergingReducer.java][populateDateHeadersFromJSONObject] = -> headers=jsonObject.getAsJsonObject("http_headers",)@ -> IF { -> httpDate=headers.get("date",)@headers!=null -> age=headers.get("age",)@headers!=null -> lastModified=headers.get("last-modified",)@headers!=null -> expires=headers.get("expires",)@headers!=null -> cacheControl=headers.get("cache-control",)@headers!=null -> pragma=headers.get("pragma",)@headers!=null -> etag=headers.get("etag",)@headers!=null -> IF { -> crawlStatsJSON.addProperty(CRAWLDETAIL_HTTP_DATE_PROPERTY,HttpHeaderInfoExtractor.getTime(httpDate.getAsString(),),)@httpDate!=null && headers!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_AGE_PROPERTY,age,)@headers!=null && age!=null } -> IF { -> crawlStatsJSON.addProperty(CRAWLDETAIL_HTTP_LAST_MODIFIED_PROPERTY,HttpHeaderInfoExtractor.getTime(lastModified.getAsString(),),)@headers!=null && lastModified!=null } -> IF { -> crawlStatsJSON.addProperty(CRAWLDETAIL_HTTP_EXPIRES_PROPERTY,HttpHeaderInfoExtractor.getTime(expires.getAsString(),),)@headers!=null && expires!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_CACHE_CONTROL_PROPERTY,cacheControl,)@cacheControl!=null && headers!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_PRAGMA_PROPERTY,pragma,)@pragma!=null && headers!=null } -> IF { -> crawlStatsJSON.add(CRAWLDETAIL_HTTP_ETAG_PROPERTY,etag,)@headers!=null && etag!=null } }
