results[https://github.com/Brueggus/linafm/blob/cd0a0fe484e92305d215863be0407096bd73b0a9/src/com/ctc/android/widget/ImageMap.java][loadAttributes] = -> a=getContext().obtainStyledAttributes(attrs,R.styleable.ImageMap,)@ -> map=a.getString(R.styleable.ImageMap_map,)@ -> IF { -> loadMap(map,)@map!=null }
results[https://github.com/abarisain/dmix/blob/713453444d1d96738de29424ef416d6719ddc9bb/MPDroid/src/com/namelessdev/mpdroid/views/FixedRatioRelativeLayout.java][readAttrs] = -> a=context.obtainStyledAttributes(attrs,R.styleable.FixedRatioRelativeLayout,)@ -> s=a.getString(R.styleable.FixedRatioRelativeLayout_fixedSide,)@ -> IF { -> fixString=s.toString()@s!=null } -> a.recycle()@
results[https://github.com/scruffyfox/X-Library/blob/ce9e45959d2aa111dfc204f93df4b5041cdb9f1e/src/x/ui/XUIButtonList.java][<init>] = -> super(context,attrs,)@ -> a=context.obtainStyledAttributes(attrs,R.styleable.XUIButtonList,)@ -> onClickStr=a.getString(R.styleable.XUIButtonList_onButtonClick,)@ -> IF { -> Debug.out(onClickStr,)@onClickStr!=null&&onClickStr.length()>0 }
results[https://github.com/slidese/SGU/blob/816dfe3e40d821261563046b954560fefbc87ffc/src/se/slide/sgu/TypefacedButton.java][<init>] = -> super(context,attrs,)@ -> styledAttrs=context.obtainStyledAttributes(attrs,R.styleable.TypefacedTextView,)@ -> fontName=styledAttrs.getString(R.styleable.TypefacedTextView_typeface,)@ -> styledAttrs.recycle()@ -> IF { -> typeface=Typeface.createFromAsset(context.getAssets(),fontName,)@fontName!=null -> setTypeface(typeface,)@ }
results[https://github.com/slidese/SGU/blob/816dfe3e40d821261563046b954560fefbc87ffc/src/se/slide/sgu/TypefacedTextView.java][<init>] = -> super(context,attrs,)@ -> styledAttrs=context.obtainStyledAttributes(attrs,R.styleable.TypefacedTextView,)@ -> fontName=styledAttrs.getString(R.styleable.TypefacedTextView_typeface,)@ -> styledAttrs.recycle()@ -> IF { -> typeface=Typeface.createFromAsset(context.getAssets(),fontName,)@fontName!=null -> setTypeface(typeface,)@ }
results[https://github.com/geeksville/Gaggle/blob/23b2475d6bc070fbc418c2c8a190356f1b725dc4/src/com/geeksville/info/InfoDock.java][<init>] = -> super(context,attrs,)@ -> arr=context.obtainStyledAttributes(attrs,R.styleable.InfoDock,)@ -> fieldName=arr.getString(R.styleable.InfoDock_info_field,)@ -> layoutId=arr.getResourceId(R.styleable.InfoDock_layout_id,R.layout.info_dock_wide,)@ -> arr.recycle()@ -> IF { -> setInfoField(fieldName,)@fieldName!=null }
results[https://github.com/jmkl/test/blob/5311e1ad44f9a87acc444478b9d0e677ec513123/Watch Aids/src/org/hermit/watchaids/FlagWidget.java][<init>] = -> super(context,attrs,)@ -> a=context.obtainStyledAttributes(attrs,R.styleable.FlagWidget,)@ -> name=a.getString(R.styleable.FlagWidget_name,)@ -> IF { -> throw new IllegalArgumentException("FlagWidget requires a \"name\" parameter",)@name==null } -> flag=Flag.valueOf(name.toString(),)@!(name==null) -> IF { -> throw new IllegalArgumentException("FlagWidget parameter \""+name+"\" is not a valid flag name",)@flag==null && !(name==null) } -> init(context,flag,)@!(flag==null) && !(name==null)
results[https://github.com/CruGlobal/MissionHub-Android/blob/15af3a543149458d73355c42deac286824c23d21/src/com/missionhub/ui/widget/FragmentLoadingView.java][inflateView] = -> IF { -> a=context.obtainStyledAttributes(attrs,R.styleable.widget_loading_fragment,)@attrs!=null -> loadingText=a.getString(R.styleable.widget_loading_fragment_loading_text,)@ -> layout=a.getResourceId(R.styleable.widget_loading_fragment_layout,R.layout.widget_fragment_loading,)@ } -> View.inflate(context,layout,this,)@ -> mLoadingText=(TextView) findViewById(R.id.text,)@ -> IF { -> mLoadingText.setText(loadingText,)@!(U.isNullEmpty(loadingText,))&&mLoadingText!=null }
results[https://github.com/TeamHorizon/packages_apps_ROMSettings/blob/2e19c8250df2eb1efb9e6302e4449fdf097d7a07/src/com/aokp/romcontrol/settings/UrlSetting.java][<init>] = -> super(context,attrs,defStyle,)@ -> IF { -> TRY { -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.UrlSetting,)@attrs!=null -> mUrl=typedArray.getString(R.styleable.UrlSetting_url,)@ } FINALLY { -> IF { -> typedArray.recycle()@typedArray!=null } } }
results[https://github.com/AOKP/packages_apps_ROMControl/blob/d523c2660ceec3e795238a20f67868ef3ccd5fa7/src/com/aokp/romcontrol/settings/UrlSetting.java][<init>] = -> super(context,attrs,defStyle,)@ -> IF { -> TRY { -> typedArray=context.obtainStyledAttributes(attrs,R.styleable.UrlSetting,)@attrs!=null -> mUrl=typedArray.getString(R.styleable.UrlSetting_url,)@ } FINALLY { -> IF { -> typedArray.recycle()@typedArray!=null } } }
