results[https://github.com/rhusar/HornetQ-oldmigration/blob/67265f21857fc57930c20c928bb5db75b49b136a/src/main/org/jboss/messaging/newcore/impl/bdbje/integration/RealBDBJEDatabase.java][close][9] = -> TRY {  -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/photo/mobile-android/blob/8aeb16ceeb966a805f74e6c008582959984a7aa1/common/src/com/trovebox/android/common/provider/UploadsProviderAccessor.java][closeCursor][2] = -> TRY { -> cursor.close()@ } CATCH(Exception) { -> GuiUtils.noAlertError(TAG,null,ex,)@ }
results[https://github.com/mkedwards/android_cts/blob/6a2dedee137f39f732898de28e1e0ef20550dcca/tests/tests/content/src/android/content/cts/ContentQueryMapTest.java][tearDown][11] = -> TRY {  -> IF { -> mCursor.close()@mCursor!=null } } CATCH(Exception) {}
results[https://github.com/dmargo/blueprints-seas/blob/c8927be6798dfa847c35d34134e9681d26390594/blueprints-dup-graph/src/main/java/com/tinkerpop/blueprints/pgm/impls/dup/util/DupEdgeVertexLabelSequence.java][close][5] = -> TRY { -> this.cursor.close()@ } CATCH(Exception) { -> throw new RuntimeException(e.getMessage(),e,)@ }
results[https://github.com/qyb/sohu/blob/3a1749b7331deda573edf190122c1f668d01fdff/src/Client/Android/sohukan/src/com/sohu/database/DBHelper.java][addCategory][1] = -> cur=checkCategoryUnique(category_name,userid,)@ -> TRY { -> cur.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/freenet/contrib-official/blob/ffdc0d106578fd7070c60ffcb9b0396b5f1ae551/bdb/test/com/sleepycat/je/GetSearchBothRangeTest.java][testSearchKeyRangeWithDupTree][1] = -> TRY {  -> cursor=db.openCursor(null,null,)@ -> status=cursor.getSearchKeyRange(key,data,null,)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/qyb/sohu/blob/3a1749b7331deda573edf190122c1f668d01fdff/src/Client/Android/sohukan/src/com/sohu/database/DBHelper.java][saveAccessToken][1] = -> cur=getSettings(userid,)@ -> TRY { -> cur.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/apache/directory-server/blob/a00d78575e5f25105722007da8c615e8222e28ba/xdbm-partition/src/test/java/org/apache/directory/server/xdbm/SingletonIndexCursorTest.java][testConstructor][1] = -> TRY {  -> cursor=new SingletonIndexCursor<String>(indexEntry,)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/core/tests/coretests/src/android/database/DatabaseGeneralTest.java][xxtestMem2][12] = -> TRY {  -> LOOP { -> cursor=mDatabase.query("test",null,null,null,null,null,null,)@ -> cursor.close()@ } } CATCH(Exception) {}
results[https://github.com/elenabratanova/vlc-ports-android-fork/blob/b3fe64d8cc69b2c03840b42782ffa3b883445925/vlc-android/src/org/videolan/vlc/MediaDatabase.java][mediaItemExists][10] = -> TRY { -> cursor=mDb.query(MEDIA_TABLE_NAME, new String[],MEDIA_LOCATION+"=?", new String[],null,null,null,)@ -> exists=cursor.moveToFirst()@ -> cursor.close()@ } CATCH(Exception) { -> Log.e(TAG,"Query failed",)@ }
results[https://github.com/XYAOSP/packages_providers_ContactsProvider/blob/a465c9d58227dabd2f59a875bba0c3d02842c573/tests/src/com/android/providers/contacts/ContactDirectoryManagerTest.java][testProjectionPopulated][24] = -> TRY {  -> cursor=mResolver.query(Directory.CONTENT_URI, new String[],null,null,null,)@ -> cursor.moveToPosition(2,)@ -> directoryId=cursor.getLong(0,)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/codefireXperiment/packages_providers_contactsprovider/blob/a465c9d58227dabd2f59a875bba0c3d02842c573/tests/src/com/android/providers/contacts/GlobalSearchSupportTest.java][testSearchSuggestionsNotInDefaultDirectory][39] = -> TRY {  -> c=mResolver.query(searchUri,null,null,null,null,)@ -> assertEquals(0,c.getCount(),)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/TheCollective/android_frameworks_base/blob/13abfb2a4b9c7823672ed5a2053588c8da6ec3d7/core/tests/hosttests/test-apps/DownloadManagerTestApp/src/com/android/frameworks/downloadmanagertests/DownloadManagerTestApp.java][runLargeDownloadOverWiFi][10] = -> TRY {  -> cursor=getCursor(dlRequest,)@ -> FINALLY { -> cursor.close()@ } } CATCH(Exception) {}
results[https://github.com/anisimovdenis2009/AntRepo/blob/1748aece4ae1516bf393d0b055eeda12d9b168ff/src/com/app/ant/app/Activities/RequestsListForm.java][onBackPressed][2] = -> TRY { -> IF { -> requestHeadersCursor.close()@requestHeadersCursor!=null&&!(requestHeadersCursor.isClosed()) } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/bazaarvoice/bv-android-sdk/blob/b3c06733e3164b7f71cc37c5596c07319d53dac1/Sample Apps/ChutePhotoPicker+/src/com/chute/android/photopickerplus/dao/MediaDAO.java][safelyCloseCursor][3] = -> TRY { -> IF { -> c.close()@c!=null } } CATCH(Exception) { -> Log.d(TAG,"",e,)@ }
results[https://github.com/chute/photo-picker-plus-android/blob/dbd7a8db687adea2aac5e6ca1645c92b48d6d306/ChutePhotoPicker+/src/com/chute/android/photopickerplus/dao/MediaDAO.java][safelyCloseCursor][1] = -> TRY { -> IF { -> c.close()@c!=null } } CATCH(Exception) { -> ALog.d("",e,)@ }
results[https://github.com/niosus/LearnIt/blob/9dc81cbf68ed3cb963fb98e56db3400ee0c79265/src/com/learnit/LearnIt/DBHelper.java][updateWordWeight][2] = -> TRY { -> c=db.rawQuery("UPDATE "+currentDBName+" SET "+WEIGHT_COLUMN_NAME+"="+newWeight+" WHERE "+WORD_COLUMN_NAME+"='"+word+"'",null,)@ -> c.moveToFirst()@ -> c.close()@ } CATCH(Exception) { -> Log.e(LOG_TAG,"error in update weight in DbHelper class",)@ }
results[https://github.com/jrecursive/mecha/blob/9c996b53a271e43a42b703fc8033f4c2ba3a1e3a/src/mecha/db/drivers/BDBJEBucketDriver.java][foreach][1] = -> TRY {  -> cursor=db.openCursor(null,null,)@ -> FINALLY { -> cursor.close()@ } } CATCH(Exception) {}
results[https://github.com/cgeo/cgeo/blob/e0d2a7ff191024c39b3b65fd7f0d52d6340bebbe/main/src/cgeo/geocaching/cgData.java][getLists][1] = -> TRY { -> cursor=database.rawQuery(query,null,)@ -> storedLists=getListsFromCursor(cursor,)@ -> cursor.close()@ } CATCH(Exception) { -> Log.e("cgData.readLists",e,)@ }
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/frameworks/base/core/tests/coretests/src/android/database/DatabaseGeneralTest.java][xxtestMem1][12] = -> TRY {  -> LOOP { -> cursor=mDatabase.query("test",null,null,null,null,null,null,)@ -> cursor.moveToFirst()@ -> cursor.close()@ } } CATCH(Exception) {}
results[https://github.com/CyanMobile/android_frameworks_base_cyanmobile/blob/04958af4a6c5a2a5399594690e12eed1429b9fd5/core/tests/coretests/src/android/database/DatabaseStatementTest.java][testStatementConstraint][14] = -> TRY {  -> c=mDatabase.query("test",null,null,null,null,null,null,)@ -> numCol=c.getColumnIndexOrThrow("num",)@ -> c.moveToFirst()@ -> num=c.getLong(numCol,)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/NEXUS-EVO/frameworks_base/blob/6849ad8fbb03c21d6aa61e1bd53fe7b449cd6adb/core/tests/coretests/src/android/database/DatabaseGeneralTest.java][testSchemaChange2][8] = -> TRY {  -> cursor=mDatabase.query("db1",null,null,null,null,null,null,)@ -> assertNotNull(cursor,)@ -> assertEquals(0,cursor.getCount(),)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/OMFGB/packages_providers_ContactsProvider/blob/47fd3881dfd2a21de29e917b6114974ff0a67b1b/tests/src/com/android/providers/contacts/RestrictionExceptionsTest.java][testExportVCard][4] = -> TRY {  -> cursor=mRed.resolver.query(aggUri, new String[],null,null,null,)@ -> assertTrue(cursor.moveToFirst(),)@ -> lookupKey=cursor.getString(0,)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/tpruvot/android_packages_apps_SQLiteManager/blob/36aedb0feb0f49fe959320de3051166db1a73f46/src/dk/andsen/asqlitemanager/Database.java][historyExists][1] = -> TRY { -> res=_db.rawQuery(sql,null,)@ -> res.close()@ } CATCH(Exception) { -> Utils.logE(e.getMessage(),logging,)@ -> Utils.printStackTrace(e,logging,)@ }
results[https://github.com/AGETO/carbonado/blob/a5b2b6181782fe5941c883d82a6764b227ad9247/CarbonadoSleepycatDB/src/main/java/com/amazon/carbonado/repo/sleepycat/DB4_4_Storage.java][db_isEmpty][4] = -> TRY {  -> cursor=(Database) database.openCursor(txn,null,)@ -> status=cursor.getFirst(new DatabaseEntry(),new DatabaseEntry(),(rmw)?LockMode.RMW:null,)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/thomasbley/tum-campus/blob/61cfcc769f9da654f79ebd1ddb064d47cd97a234/src/de/tum/in/tumcampus/models/LinkManager.java][downloadMissingIcons][1] = -> TRY {  -> c=db.rawQuery("SELECT DISTINCT url FROM links WHERE icon=''",null,)@ -> LOOP { -> url=c.getString(0,)@c.moveToNext() } -> c.close()@ } CATCH(Exception) {}
results[https://github.com/0-kaladin/dalvik/blob/0c9612f9d7ff9fc0a61cc9eeb37acaabb7b28700/tests/078-polymorphic-virtual/src/Derived3.java][commandSequences][1] = -> TRY {  -> cursor=mResolver.query(mEventsUri,null,null,null,null,)@ -> dumpCursor(cursor,)@ -> assertEquals(0,cursor.getCount(),)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/peterringset/ProgArk/blob/7d30544aa52d84e1b5a0d47fb5c3644c0a315b49/Quarto/src/com/example/quarto/data/database/QuartoBoardsDataSource.java][createInvitedBoard][1] = -> TRY { -> cursor=database.query(QuartoBoardsSQL.TABLE_BOARDS,allBoardsColumns,QuartoBoardsSQL.TABLE_BOARDS_ID+" = "+boardID,null,null,null,null,)@ -> cursor.moveToFirst()@ -> newBoard=cursorToBoard(cursor,)@ -> cursor.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/qyb/sohu/blob/3a1749b7331deda573edf190122c1f668d01fdff/src/Client/Android/sohukan/src/com/sohu/database/DBHelper.java][syncResource][1] = -> cur=getResourceByKey(resource.getKey(),)@ -> cur.moveToFirst()@ -> TRY { -> cur.close()@ } CATCH(Exception) { -> System.out.println(e,)@ }
results[https://github.com/TeamBAKED/packages_providers_ContactsProvider/blob/033ea56aab826801392465a8b4f494101a4c3205/tests/src/com/android/providers/contacts/ContactDirectoryManagerTest.java][testAccountRemoval][48] = -> TRY {  -> cursor=mResolver.query(Directory.CONTENT_URI,null,null,null,null,)@ -> assertEquals(3,cursor.getCount(),)@ -> cursor.moveToPosition(2,)@ -> assertDirectoryRow(cursor,"test.package1","authority1","account-name1","account-type1","display-name1",1,Directory.EXPORT_SUPPORT_NONE,Directory.SHORTCUT_SUPPORT_NONE,Directory.PHOTO_SUPPORT_NONE,)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/TEAM-Gummy/platform_packages_providers_ContactsProvider/blob/e2688b18df75eceb4895fecaaf4f0ebd42f23ef7/tests/src/com/android/providers/contacts/aggregation/ContactAggregatorTest.java][testAggregationSuggestionsByName][40] = -> TRY {  -> cursor=mResolver.query(uri, new String[],null,null,null,)@ -> assertEquals(1,cursor.getCount(),)@ -> cursor.moveToFirst()@ -> assertCursorValues(cursor,values,)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/fsi-hska/hsDroid/blob/969356a81ec3257fdda2a7bb0fff02a7765b58f3/src/de/nware/app/hsDroid/ui/GradesList.java][doInBackground][1] = -> TRY { -> cursor=resolver.query(ExamsUpdateCol.CONTENT_URI,null,null,null,null,)@ -> startManagingCursor(cursor,)@ -> cursor.close()@ } CATCH(Exception) { -> mProgressHandle.sendMessage(mProgressHandle.obtainMessage(HANDLER_MSG_ERROR,),)@ -> e.printStackTrace()@ }
results[https://github.com/mkedwards/android_cts/blob/6a2dedee137f39f732898de28e1e0ef20550dcca/tests/tests/provider/src/android/provider/cts/MediaStoreTest.java][setUp][3] = -> TRY {  -> c=mContentResolver.query(mScannerUri,PROJECTION,null,null,null,)@ -> IF { -> c.moveToFirst()@c!=null -> mVolumnBackup=c.getString(0,)@c!=null -> c.close()@c!=null } } CATCH(Exception) {}
results[https://github.com/ande3577/MN-Mtb-Trail-Reports/blob/70e465561a534ca87aa674de0c9367e9e9e880d3/org.dsanderson.xctrailreport.core.android/src/org/dsanderson/xctrailreport/core/android/TrailReportPrinter.java][printTrailReports][1] = -> TRY {  -> IF { -> cursor.close()@cursor!=null&&!(cursor.isClosed()) } -> cursor=(TrailReportList) trailReports.getCursor()@ -> context.setListAdapter(new TrailReportAdapter(context,cursor,factory,decoratorFactory,trailReports,listEntryFactory,),)@ } CATCH(Exception) {}
results[https://github.com/akvo/akvo-flow-mobile/blob/080961c008e4118ffd1f270c1e13a43f2c8c3cfe/survey/src/com/gallatinsystems/survey/device/activity/AbstractListEditActivity.java][fillData][1] = -> IF { -> TRY { -> dataCursor.close()@dataCursor!=null } CATCH(Exception) { -> Log.w(TAG,"Could not close old cursor",e,)@ } } -> dataCursor=getData()@ -> notes=new SimpleCursorAdapter(this,R.layout.itemlistrow,dataCursor,from,to,)@
results[https://github.com/freenet/contrib-official/blob/ffdc0d106578fd7070c60ffcb9b0396b5f1ae551/bdb/test/com/sleepycat/je/cleaner/TruncateAndRemoveTest.java][testRemovePartialResident][1] = -> TRY {  -> c=db.openCursor(null,null,)@ -> assertEquals(OperationStatus.SUCCESS,c.getFirst(new DatabaseEntry(),new DatabaseEntry(),LockMode.DEFAULT,),)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/CyanMobile/android_frameworks_base_cyanmobile/blob/04958af4a6c5a2a5399594690e12eed1429b9fd5/core/tests/coretests/src/android/database/DatabaseCursorTest.java][testRealColumns][14] = -> TRY {  -> c=mDatabase.rawQuery("SELECT data FROM test",null,)@ -> assertNotNull(c,)@ -> assertTrue(c.moveToFirst(),)@ -> assertEquals(42.11,c.getDouble(0,),)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/todoroo/astrid/blob/b72975630654749860ac859316b0d271ec19ccc2/src-legacy/com/timsu/astrid/data/task/TaskController.java][cleanupTask][9] = -> IF { -> TRY { -> cursor=fetchTaskCursor(taskId, new String[],)@ -> cursor.moveToFirst()@ -> uri=cursor.getString(0,)@ -> cursor.close()@ } CATCH(Exception) { -> Log.e("astrid","Error deleting calendar event",e,)@ } }
results[https://github.com/herath/MAD_app/blob/1adb7fff1f3af9ffda1bfe5beb38e039c8ce61f0/app/src/org/coursework/ContactsSqliteDbHandler.java][getContactName][1] = -> cursor=db.rawQuery(sql,null,)@ -> IF { -> cursor.moveToFirst()@cursor!=null } -> TRY { -> name=cursor.getString(0,)@ -> cursor.close()@ } CATCH(Exception) { -> e.getMessage()@ }
results[https://github.com/ADoby/Project_Space_Pirate/blob/f7f3370b83e0835931647a6ca129ea1994a238a5/ProjectFiles/cocos2dx/platform/android/java/src/org/cocos2dx/lib/Cocos2dxLocalStorage.java][getItem][10] = -> TRY { -> c=mDatabase.rawQuery(sql, new String[],)@ -> LOOP { -> ret=c.getString(c.getColumnIndex("value",),)@c.moveToNext() } -> c.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/iGio90/android_frameworks_base/blob/c2c778533288efb45107521eee9fcab82892fc9e/core/tests/coretests/src/android/database/DatabaseStatementTest.java][testSimpleStringBinding][14] = -> TRY {  -> c=mDatabase.query("test",null,null,null,null,null,null,)@ -> numCol=c.getColumnIndexOrThrow("num",)@ -> valCol=c.getColumnIndexOrThrow("value",)@ -> c.moveToFirst()@ -> num=c.getString(numCol,)@ -> val=c.getString(valCol,)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/openintents/shoppinglist/blob/c88508f57dce0aafac7ddf982684d7609e81876f/ShoppingList/src/org/openintents/provider/Hardware.java][getPreference][3] = -> TRY { -> c=mContentResolver.query(Preferences.CONTENT_URI,mProjectionPreferencesFilter,Preferences.NAME+"= '"+name+"'",null,Preferences.DEFAULT_SORT_ORDER,)@ -> IF { -> c.moveToFirst()@c.getCount()>=1 -> return c.getString(mProjectionPreferencesVALUE,)@c.getCount()>=1 } -> c.close()@!(c.getCount()>=1) } CATCH(Exception) { -> Log.e(TAG,"insert into table 'contains' failed",e,)@ }
results[https://github.com/guess/pictureframe/blob/78e160b044a3f586d5c2c228fa25e97e6cc64759/InTouch/src/ca/taglab/PictureFrame/auth/AddPicture.java][onCreate][8] = -> cursor=getContentResolver().query(Contract.User.CONTENT_URI,Contract.User.PROJECTION,null,null,null,)@ -> TRY { -> filename=Integer.toString(cursor.getCount()+1,)+".jpg"@ -> cursor.close()@ } CATCH(Exception) { -> Log.e(TAG,e.getMessage(),)@ }
results[https://github.com/feelinglucky/Tracker/blob/64941143e2c04b475ae2513cfd79f81b94ad2db5/src/com/gracecode/tracker/dao/ArchiveMeta.java][isExists][1] = -> TRY { -> cursor=database.rawQuery("SELECT count(id) AS count"+" FROM "+TABLE_NAME+" WHERE "+Archiver.DATABASE_COLUMN.META_NAME+"='"+name+"'",null,)@ -> cursor.moveToFirst()@ -> count=cursor.getInt(cursor.getColumnIndex(Archiver.DATABASE_COLUMN.COUNT,),)@ -> cursor.close()@ } CATCH(Exception) { -> Helper.Logger.e(e.getMessage(),)@ }
results[https://github.com/lbaye/repo/blob/32bec6e618375dfc84c247edf5c4c370069da716/android/src/com/socmaps/util/Data.java][upload][1] = -> TRY { -> cursor=context.getContentResolver().query(imageUri,filePathColumn,null,null,null,)@ -> cursor.moveToFirst()@ -> columnIndex=cursor.getColumnIndex(filePathColumn[0],)@ -> filePath=cursor.getString(columnIndex,)@ -> cursor.close()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/shamansir/vimeoid/blob/7a0df1b17171f1b58983283bc7fa76ce301afe62/apk/src/org/vimeoid/activity/guest/ListApiTask.java][onPostExecute][2] = -> IF { -> TRY { -> cursor.moveToFirst()@cursor!=null -> onAnswerReceived(cursor,)@cursor!=null -> cursor.close()@cursor!=null } CATCH(Exception) { -> onAnyError(e,"Failed while receiving answer: "+e.getLocalizedMessage(),)@ } }
results[https://github.com/Crossbones/android_packages_apps_Gallery2/blob/4dd6c535cef6e9c05143cb5cf066a4c71c968da9/src/com/android/gallery3d/filtershow/tools/SaveCopyTask.java][copyExif][4] = -> TRY { -> c=context.getContentResolver().query(sourceUri,PROJECTION,null,null,null,)@!(ContentResolver.SCHEME_FILE.equals(sourceUri.getScheme(),)) -> IF { -> path=c.getString(0,)@c.moveToFirst() && !(ContentResolver.SCHEME_FILE.equals(sourceUri.getScheme(),)) } -> c.close()@!(ContentResolver.SCHEME_FILE.equals(sourceUri.getScheme(),)) } CATCH(Exception) { -> Log.w(LOGTAG,"Failed to copy exif",e,)@!(ContentResolver.SCHEME_FILE.equals(sourceUri.getScheme(),)) }
results[https://github.com/feelinglucky/Tracker/blob/64941143e2c04b475ae2513cfd79f81b94ad2db5/src/com/gracecode/tracker/dao/ArchiveMeta.java][getCount][1] = -> TRY { -> cursor=database.rawQuery("SELECT count(id) AS count FROM "+Archiver.TABLE_NAME+" LIMIT 1",null,)@ -> cursor.moveToFirst()@ -> count=cursor.getLong(cursor.getColumnIndex(Archiver.DATABASE_COLUMN.COUNT,),)@ -> cursor.close()@ } CATCH(Exception) { -> Helper.Logger.e(e.getMessage(),)@ }
results[https://github.com/feelinglucky/Tracker/blob/64941143e2c04b475ae2513cfd79f81b94ad2db5/src/com/gracecode/tracker/dao/ArchiveMeta.java][getSpeed][1] = -> TRY { -> cursor=database.rawQuery(sql,null,)@ -> cursor.moveToFirst()@ -> speed=cursor.getFloat(cursor.getColumnIndex(Archiver.DATABASE_COLUMN.SPEED,),)@ -> cursor.close()@ } CATCH(Exception) { -> Helper.Logger.e(e.getMessage(),)@ }
results[https://github.com/PaperAirplane-Dev-Team/Music-Share-Android/blob/78dc81d7f6d43cccc2f645decfb4477ffc830ea9/src/com/paperairplane/music/share/Main.java][handleIntent][1] = -> TRY { -> cursor=getContentResolver().query(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,Consts.MEDIA_INFO,MediaStore.Audio.Media.DATA+"=\""+uri.getPath()+"\"",null,MediaStore.Audio.Media.DEFAULT_SORT_ORDER,)@ -> cursor.moveToFirst()@ -> data=generateMusicData(cursor,)@ -> cursor.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/bfazen/AccessMRS/blob/0e0601ed7765c6747a5c84144ba83e551642fbd2/src/com/alphabetbloc/accessmrs/utilities/AccessMrsLauncher.java][isAccessFormsSetup][1] = -> TRY { -> c=App.getApp().getContentResolver().query(InstanceColumns.CONTENT_URI,null,null,null,null,)@ -> IF { -> c.close()@c!=null } } CATCH(Exception) { -> Log.w(TAG,"AccessForms db does not exist?!",)@ }
results[https://github.com/ejonny/ibrdtn/blob/b932c308b8c043a9dce430b616e2e63a4557ba23/android/ShareBox/src/de/tubs/ibr/dtn/sharebox/data/Database.java][getPending][1] = -> TRY { -> cur=mDatabase.query(Database.TABLE_NAMES[0], new String[],Download.STATE+" = ?", new String[],null,null,null,)@ -> IF { -> ret=cur.getInt(0,)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"getPending() failed",e,)@ }
results[https://github.com/todoroo/astrid/blob/b72975630654749860ac859316b0d271ec19ccc2/src-legacy/com/timsu/astrid/data/task/TaskController.java][onTaskSave][9] = -> IF { -> TRY { -> cursor=fetchTaskCursor(task.getTaskIdentifier(), new String[],)@ -> cursor.moveToFirst()@ -> uriAsString=cursor.getString(0,)@ -> cursor.close()@ } CATCH(Exception) { -> Log.e("astrid","Error moving calendar event",e,)@ } }
results[https://github.com/rowboat/cts/blob/bc5e7fd2270dff7cec5d7429210330066616a7ae/tests/tests/database/src/android/database/cts/DatabaseCursorTest.java][testRealColumns][3] = -> TRY {  -> testCursor=getTestCursor(mDatabase.rawQuery("SELECT data FROM test",null,),)@ -> assertNotNull(testCursor,)@ -> assertTrue(testCursor.moveToFirst(),)@ -> assertEquals(42.11,testCursor.getDouble(0,),)@ -> testCursor.close()@ } CATCH(Exception) {}
results[https://github.com/davros-/platform_frameworks_base/blob/4b50cc39b0518a04b16eb0f0b6286859b32373a3/core/tests/coretests/src/android/database/DatabaseStatementTest.java][testStatementStringBinding][14] = -> TRY {  -> c=mDatabase.query("test",null,null,null,null,null,null,)@ -> numCol=c.getColumnIndexOrThrow("num",)@ -> c.moveToFirst()@ -> LOOP { -> num=c.getString(numCol,)@ -> c.moveToNext()@ } -> c.close()@ } CATCH(Exception) {}
results[https://github.com/Senseg/Py4A/blob/fbe0fa350798981bae05ccea7382ad8dd695faa8/android/Common/src/com/googlecode/android_scripting/facade/PhoneFacade.java][phoneCall][2] = -> TRY {  -> IF { -> c=resolver.query(uri, new String[],selectWhere,null,null,)@uri.getScheme().equals("content",) -> IF { -> number=c.getString(c.getColumnIndexOrThrow(phoneNumberColumn,),)@c.moveToFirst() } -> c.close()@ } } CATCH(Exception) {}
results[https://github.com/arjunroy/cinder_base/blob/9066cfe9886ac131c34d59ed0e2d287b0e3c0087/tests/AndroidTests/src/com/android/unit_tests/DatabaseStatementTest.java][testStatementLongBinding][14] = -> TRY {  -> c=mDatabase.query("test",null,null,null,null,null,null,)@ -> numCol=c.getColumnIndexOrThrow("num",)@ -> c.moveToFirst()@ -> LOOP { -> num=c.getLong(numCol,)@ -> c.moveToNext()@ } -> c.close()@ } CATCH(Exception) {}
results[https://github.com/classicnerd/android_packages_providers_ContactsProvider/blob/35d4a02c6b0fbaa21b040bb2afc4c6c48d5d1697/tests/src/com/android/providers/contacts/GlobalSearchSupportTest.java][testSearchSuggestionsByPhoneNumberOnPhone][7] = -> TRY {  -> c=mResolver.query(searchUri,null,null,null,null,)@ -> assertEquals(2,c.getCount(),)@ -> c.moveToFirst()@ -> assertCursorValues(c,values,)@ -> c.moveToNext()@ -> assertCursorValues(c,values,)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/ejonny/ibrdtn/blob/3eda989fd87b28da868f39019ebf59c2b4e5622f/android/ibrdtn/src/de/tubs/ibr/dtn/stats/StatsDatabase.java][getClStats][1] = -> TRY { -> cur=mDatabase.query(StatsDatabase.TABLE_NAMES[1],ConvergenceLayerStatsEntry.PROJECTION,ConvergenceLayerStatsEntry.ID+" = ?", new String[],null,null,null,"0, 1",)@ -> IF { -> se=new ConvergenceLayerStatsEntry(mContext,cur,new ConvergenceLayerStatsEntry.ColumnsMap(),)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"get() failed",e,)@ }
results[https://github.com/dreeves/TagTime/blob/6a2d704dfb6a6c67010cc744d1bf755bd5b244e4/src/and/src/bsoule/tagtime/BeeminderDbAdapter.java][fetchPingsForPoint][1] = -> TRY {  -> c=fetchPointPings(point_id,KEY_POINTID,)@ -> c.moveToFirst()@ -> idx=c.getColumnIndex(KEY_PID,)@ -> LOOP { -> tid=c.getLong(idx,)@!(c.isAfterLast()) -> c.moveToNext()@!(c.isAfterLast()) } -> c.close()@ } CATCH(Exception) {}
results[https://github.com/obmarg/syncro/blob/6ebc2998f53f14bdd563ee481e87ab44d328a9f9/Syncro/src/uk/me/grambo/syncro/SyncroService.java][PerformDownloads][1] = -> TRY {  -> folders=m_db.rawQuery("SELECT IDOnServer,LocalPath "+"FROM folders WHERE ServerID=? "+"AND SyncToPhone=1 "+"AND Deleted=0",queryArgs,)@ -> folders.moveToFirst()@ -> LOOP { -> folderId=(int) folders.getLong(0,)@folders.isAfterLast()==false -> m_sCurrentLocalPath=folders.getString(1,)@folders.isAfterLast()==false -> folders.moveToNext()@folders.isAfterLast()==false } -> folders.close()@ } CATCH(Exception) {}
results[https://github.com/ejonny/ibrdtn/blob/b932c308b8c043a9dce430b616e2e63a4557ba23/android/ShareBox/src/de/tubs/ibr/dtn/sharebox/data/Database.java][getLatestPending][1] = -> TRY { -> cur=mDatabase.query(Database.TABLE_NAMES[0],DownloadAdapter.PROJECTION,Download.STATE+" = ?", new String[],null,null,Download.TIMESTAMP+" DESC","0, 1",)@ -> IF { -> ret=new Download(mContext,cur,new DownloadAdapter.ColumnsMap(),)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"get() failed",e,)@ }
results[https://github.com/mangachika/weReportRapidAndroid/blob/5476fa98e6d81002f1368e7b8189e5d74bb0a3c0/rapidandroid/org.rapidandroid/src/org/rapidandroid/receiver/SmsReceiver.java][DeleteSMSFromInbox][2] = -> TRY { -> c=context.getContentResolver().query(uriSms,null,sb.toString(),null,null,)@ -> c.moveToFirst()@ -> thread_id=c.getInt(1,)@ -> c.close()@ } CATCH(Exception) { -> Log.d("SmsReceiver","Error deleting sms from inbox: "+ex.getMessage(),)@ }
results[https://github.com/OMFGB/packages_providers_ContactsProvider/blob/47fd3881dfd2a21de29e917b6114974ff0a67b1b/tests/src/com/android/providers/contacts/ContactsProvider2Test.java][testProviderStatus][2] = -> TRY {  -> cursor=mResolver.query(ProviderStatus.CONTENT_URI, new String[],null,null,null,)@ -> assertTrue(cursor.moveToFirst(),)@ -> assertEquals(0,cursor.getLong(0,),)@ -> assertEquals(ProviderStatus.STATUS_NORMAL,cursor.getInt(1,),)@ -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/dmargo/blueprints-seas/blob/c8927be6798dfa847c35d34134e9681d26390594/blueprints-dup-graph/src/main/java/com/tinkerpop/blueprints/pgm/impls/dup/DupVertex.java][getPropertyKeys][2] = -> TRY { -> cursor=this.graph.vertexPropertyDb.openCursor(null,null,)@ -> status=cursor.getSearchKey(this.id,data,null,)@ -> LOOP { -> status=cursor.getNextDup(key,data,null,)@status==OperationStatus.SUCCESS } -> cursor.close()@ } CATCH(Exception) { -> throw new RuntimeException(e.getMessage(),e,)@ }
results[https://github.com/cgeo/cgeo/blob/e0d2a7ff191024c39b3b65fd7f0d52d6340bebbe/main/src/cgeo/geocaching/cgData.java][loadInViewport][2] = -> TRY { -> cursor=database.query(dbTableCaches, new String[],selection.toString(),selectionArgs,null,null,null,"500",)@ -> LOOP { -> geocodes.add(cursor.getString(0,),)@cursor.moveToNext() } -> cursor.close()@ } CATCH(Exception) { -> Log.e("cgData.loadInViewport",e,)@ }
results[https://github.com/bfazen/AccessMRS/blob/e529ac899c75f97e958e1e8673da8bdcb2300a81/src/com/alphabetbloc/accessmrs/services/WipeDataService.java][deleteAccessFormsInstancesDb][1] = -> TRY { -> c=App.getApp().getContentResolver().query(Uri.parse(InstanceColumns.CONTENT_URI+"/close",),null,null,null,null,)@ -> IF { -> c.close()@c!=null } } CATCH(Exception) { -> Log.w(TAG,"Could not close the AccessForms Db.  Key May be lost.",)@ }
results[https://github.com/ejonny/ibrdtn/blob/3eda989fd87b28da868f39019ebf59c2b4e5622f/android/ibrdtn/src/de/tubs/ibr/dtn/stats/StatsDatabase.java][getStats][1] = -> TRY { -> cur=mDatabase.query(StatsDatabase.TABLE_NAMES[0],StatsEntry.PROJECTION,StatsEntry.ID+" = ?", new String[],null,null,null,"0, 1",)@ -> IF { -> se=new StatsEntry(mContext,cur,new StatsEntry.ColumnsMap(),)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"get() failed",e,)@ }
results[https://github.com/qyb/sohu/blob/3a1749b7331deda573edf190122c1f668d01fdff/src/Client/Android/sohukan/src/com/sohu/database/DBHelper.java][syncBookmark][1] = -> TRY { -> IF { -> return true@bookmark.getTitle()==null } -> cur=getBookmarkById(bookmark.getId()+"",)@!(bookmark.getTitle()==null) -> cur.moveToFirst()@!(bookmark.getTitle()==null) -> cur.close()@!(bookmark.getTitle()==null) } CATCH(Exception) { -> System.out.println(e,)@ -> e.printStackTrace()@ }
results[https://github.com/jurka/words/blob/aa92cdf9970baac74902d0dd1e07448ca0d65a26/src/com/words/game/data/AndroidDBHelper.java][randomByLength][1] = -> TRY { -> c=db.query(AndroidConfiguration.DICTIONARY_TABLE_NAME, new String[],KEY_LENGTH+" = ?", new String[],null,null,null,String.valueOf(1,),)@ -> LOOP { -> word=c.getString(0,)@c.moveToNext() } -> c.close()@ } CATCH(Exception) { -> Log.d(TAG,"Will return word: "+word,)@ -> word=word.substring(0,length,)@ }
results[https://github.com/thomasbley/tum-campus/blob/61cfcc769f9da654f79ebd1ddb064d47cd97a234/src/de/tum/in/tumcampus/models/FeedItemManager.java][downloadFromExternal][1] = -> TRY {  -> feed=db.rawQuery("SELECT feedUrl FROM feeds WHERE id = ?", new String[],)@!(!(force)&&!(SyncManager.needSync(db,syncId,900,))) -> feed.moveToNext()@!(!(force)&&!(SyncManager.needSync(db,syncId,900,))) -> feedUrl=feed.getString(0,)@!(!(force)&&!(SyncManager.needSync(db,syncId,900,))) -> feed.close()@!(!(force)&&!(SyncManager.needSync(db,syncId,900,))) -> IF { -> IF { -> return @!(url.equals(feedUrl,)) && !(!(force)&&!(SyncManager.needSync(db,syncId,900,))) && jsonObj.isNull("results",)&&!(retry) } } } CATCH(Exception) {}
results[https://github.com/tpruvot/android_packages_apps_SQLiteManager/blob/36aedb0feb0f49fe959320de3051166db1a73f46/src/dk/andsen/asqlitemanager/Database.java][exportData][1] = -> res=_db.rawQuery(sql,null,)@ -> TRY { -> LOOP { -> tabName=res.getString(0,)@res.moveToNext() } -> res.close()@ } CATCH(Exception) { -> Utils.logE(e.getMessage(),logging,)@ -> Utils.printStackTrace(e,logging,)@ }
results[https://github.com/vseguip/Sweet/blob/7c4df007a4f7c78ff16b4d13b57180d154d86940/src/com/github/vseguip/sweet/contacts/ContactManager.java][findContactField][1] = -> c=resolver.query(ContactsContract.Data.CONTENT_URI,DATA_ID_PROJECTION,FIELD_ID_QUERY,params,null,)@ -> IF { -> dataId=c.getLong(0,)@c.moveToFirst() -> c.close()@c.moveToFirst() -> return dataId@c.moveToFirst() } -> TRY { -> c.close()@!(c.moveToFirst()) } CATCH(Exception) { -> Log.e(TAG,"Unexpected error closing cursor",)@!(c.moveToFirst()) -> ex.printStackTrace()@!(c.moveToFirst()) }
results[https://github.com/bfazen/AccessMRS/blob/e529ac899c75f97e958e1e8673da8bdcb2300a81/src/com/alphabetbloc/accessmrs/ui/admin/SetupPreferencesActivity.java][encryptAccessFormsDb][1] = -> TRY { -> c=App.getApp().getContentResolver().query(Uri.parse(InstanceColumns.CONTENT_URI+"/reset",),null,null,null,null,)@ -> IF { -> c.close()@c!=null } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ejonny/ibrdtn/blob/b932c308b8c043a9dce430b616e2e63a4557ba23/android/Talkie/src/de/tubs/ibr/dtn/dtalkie/db/MessageDatabase.java][getMarkedMessageCount][1] = -> TRY { -> cur=mDatabase.query(f.getTableName(), new String[],Message.MARKED+" = ?", new String[],null,null,null,)@ -> IF { -> ret=cur.getInt(0,)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"getMessage() failed",e,)@ }
results[https://github.com/davros-/frameworks_base/blob/da9165e10f476bc46f990e1d63a0f63dcbadbc26/core/tests/coretests/src/android/database/DatabaseCursorTest.java][testRequery][12] = -> TRY {  -> c=mDatabase.rawQuery("SELECT * FROM test",null,)@ -> assertNotNull(c,)@ -> assertEquals(3,c.getCount(),)@ -> c.deactivate()@ -> c.requery()@ -> assertEquals(3,c.getCount(),)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/Blakez/android_frameworks_base/blob/11714fcbb86c041579b3f2c64bc7e27ed7fc2705/core/tests/coretests/src/android/database/DatabaseCursorTest.java][testManyRowsLong][12] = -> TRY {  -> c=mDatabase.query("test", new String[],null,null,null,null,null,)@ -> assertNotNull(c,)@ -> LOOP { -> assertEquals(i,c.getInt(0,),)@c.moveToNext() } -> assertEquals(count,c.getCount(),)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/maxirosson/jdroid/blob/95fc03dede87a5e2d1b630e5d5ca7f14e6fba190/jdroid-android/src/main/java/com/facebook/Settings.java][getAttributionId][12] = -> TRY { -> c=contentResolver.query(ATTRIBUTION_ID_CONTENT_URI,projection,null,null,null,)@ -> IF { -> return null@c==null||!(c.moveToFirst()) } -> attributionId=c.getString(c.getColumnIndex(ATTRIBUTION_ID_COLUMN_NAME,),)@!(c==null||!(c.moveToFirst())) -> c.close()@!(c==null||!(c.moveToFirst())) } CATCH(Exception) { -> Log.d(TAG,"Caught unexpected exception in getAttributionId(): "+e.toString(),)@ }
results[https://github.com/vitkin/aptoide-client/blob/ee14e6784a086173f6f05da6f492667574a47f27/src/cm/aptoide/pt/DbStructure.java][onUpgrade][1] = -> TRY { -> c=db.query("repo", new String[],null,null,null,null,null,)@ -> c.moveToFirst()@ -> LOOP { -> server.name=c.getString(1,)@!(c.isAfterLast()) -> server.url=c.getString(0,)@!(c.isAfterLast()) -> c.moveToNext()@!(c.isAfterLast()) } -> c.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ejonny/ibrdtn/blob/b932c308b8c043a9dce430b616e2e63a4557ba23/android/Talkie/src/de/tubs/ibr/dtn/dtalkie/db/MessageDatabase.java][nextMarked][2] = -> TRY { -> cur=mDatabase.query(f.getTableName(),MessageAdapter.PROJECTION,Message.MARKED+" = ?", new String[],null,null,null,"0, 1",)@ -> IF { -> msg=new Message(mContext,cur,new MessageAdapter.ColumnsMap(),)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"getMessage() failed",e,)@ }
results[https://github.com/tpruvot/android_packages_apps_SQLiteManager/blob/36aedb0feb0f49fe959320de3051166db1a73f46/src/dk/andsen/asqlitemanager/Database.java][FKOn][1] = -> TRY { -> curs=_db.rawQuery("Pragma foreign_keys",null,)@ -> LOOP { -> res=curs.getInt(0,)@curs.moveToNext() } -> curs.close()@ } CATCH(Exception) { -> Utils.showMessage("Error",e.getLocalizedMessage(),_cont,)@ -> Utils.logE("FKOn",logging,)@ -> Utils.printStackTrace(e,logging,)@ }
results[https://github.com/peterringset/ProgArk/blob/7d30544aa52d84e1b5a0d47fb5c3644c0a315b49/Quarto/src/com/example/quarto/data/database/QuartoBoardsDataSource.java][createInitBoard][2] = -> IF { -> return null@id==-1 } ELSE { -> TRY { -> cursor=database.query(QuartoBoardsSQL.TABLE_BOARDS,allBoardsColumns,QuartoBoardsSQL.TABLE_BOARDS_ID+" = "+id,null,null,null,null,)@!(id==-1) -> cursor.moveToFirst()@id==-1 -> newBoard=cursorToBoard(cursor,)@id==-1 -> cursor.close()@id==-1 -> return newBoard@!(id==-1) } CATCH(Exception) { -> e.printStackTrace()@id==-1 } }
results[https://github.com/OMFGB/packages_providers_ContactsProvider/blob/338d92c74ea2b300c60d56a00be7cf465d74571f/tests/src/com/android/providers/contacts/GlobalSearchSupportTest.java][testSearchSuggestionsByPhoneNumber][4] = -> TRY {  -> c=mResolver.query(searchUri,null,null,null,null,)@ -> DatabaseUtils.dumpCursor(c,)@ -> assertEquals(2,c.getCount(),)@ -> c.moveToFirst()@ -> assertCursorValues(c,values,)@ -> c.moveToNext()@ -> assertCursorValues(c,values,)@ -> c.close()@ } CATCH(Exception) {}
results[https://github.com/rsavoye/k9-mail/blob/54c7d93f7877754854f6c341c3d6059573d5c0ee/src/com/android/email/activity/setup/AccountSetupBasics.java][getOwnerName][2] = -> TRY { -> c=getContentResolver().query(Uri.withAppendedPath(Contacts.People.CONTENT_URI,"owner",),projection,null,null,null,)@ -> IF { -> c.moveToFirst()@c.getCount()>0 -> name=c.getString(0,)@c.getCount()>0 -> c.close()@c.getCount()>0 } } CATCH(Exception) { -> Log.e(Email.LOG_TAG,"Could not get owner name, using default account name",e,)@ }
results[https://github.com/openintents/shoppinglist/blob/4dea7281a32a4802001751b7c86f52d2b4a10ae8/ShoppingListGlassExtension/GlassExtension/src/main/java/org/openintents/shopping/glass/OIShoppingListSender.java][refreshCursor][1] = -> TRY { -> IF { -> mExistingItems.close()@mExistingItems!=null } -> mExistingItems=context.getContentResolver().query(Shopping.ContainsFull.CONTENT_URI, new String[],Shopping.ContainsFull.LIST_ID+" = ?  AND  "+Shopping.ContainsFull.STATUS+"<= ?", new String[],null,)@ -> IF { -> Log.d(TAG,"mExistingItems="+mExistingItems,)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/vitkin/aptoide-client/blob/41dee96afbc8c120d80251be23ac82f721fb29ef/src/cm/aptoide/pt/MainActivity.java][generateXML][2] = -> TRY { -> c=db.getStores(false,)@ -> c.moveToFirst()@ -> LOOP { -> serializer.text(c.getString(1,),)@!(c.isAfterLast()) -> c.moveToNext()@!(c.isAfterLast()) } -> c.close()@ } CATCH(Exception) { -> Log.e("Exception","error occurred while creating xml file",)@ }
results[https://github.com/photon-infotech/android-native-shoppingcart/blob/50a832597b19336c32d388a1deb377cc56a2646b/source/src/com/photon/phresco/nativeapp/eshop/activity/CategoryListActivity.java][updateCategoryVersionNoInLocalDatabase][1] = -> TRY { -> searchCategoryVersionRow.moveToFirst()@ -> currentRowId=searchCategoryVersionRow.getLong(searchCategoryVersionRow.getColumnIndexOrThrow(AppConfiguration.KEY_ROWID,),)@ -> categoryVersionNo=searchCategoryVersionRow.getString(searchCategoryVersionRow.getColumnIndex(AppConfiguration.KEY_META_VALUE,),)@ -> searchCategoryVersionRow.close()@ } CATCH(Exception) { -> PhrescoLogger.info(TAG+"updateCategoryVersionNoInLocalDatabase - Exception : "+ex.toString(),)@ -> PhrescoLogger.warning(ex,)@ }
results[https://github.com/tpruvot/android_packages_apps_SQLiteManager/blob/36aedb0feb0f49fe959320de3051166db1a73f46/src/dk/andsen/asqlitemanager/Database.java][getListOfSQL][1] = -> TRY { -> res=_db.rawQuery(sql,null,)@ -> cols=res.getCount()@ -> LOOP { -> str=res.getString(1,)@res.moveToNext() } -> res.close()@ } CATCH(Exception) { -> Utils.logE(e.toString(),logging,)@ -> Utils.printStackTrace(e,logging,)@ }
results[https://github.com/ejonny/ibrdtn/blob/b932c308b8c043a9dce430b616e2e63a4557ba23/android/ShareBox/src/de/tubs/ibr/dtn/sharebox/data/Database.java][clear][1] = -> TRY { -> cur=mDatabase.query(Database.TABLE_NAMES[1],PackageFileAdapter.PROJECTION,null,null,null,null,null,)@ -> IF { -> file=new File(cur.getString(new PackageFileAdapter.ColumnsMap().mColumnFilename,),)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"clear() failed",e,)@ }
results[https://github.com/guardianproject/Gibberbot/blob/a3904076d40a25f3f572d2f42c8a9e484b98ccfd/src/info/guardianproject/otr/app/im/provider/Imps.java][isUnencrypted][2] = -> TRY { -> cursor=context.getContentResolver().query(uri,null,Imps.Provider.CATEGORY+"=?", new String[],null,)@ -> IF { -> cursor.close()@cursor!=null -> return true@cursor!=null } ELSE { -> return false@!(cursor!=null) } } CATCH(Exception) { -> Log.e(ImApp.LOG_TAG,e.getMessage(),e,)@ }
results[https://github.com/360/360-Engine-for-Android/blob/a95695dc7f9c8418d99588115f1d092555d38ecc/tests/src/com/vodafone360/people/tests/engine/contactsync/FetchNativeContactsTest.java][setUp][1] = -> TRY {  -> CATCH(IllegalArgumentException) { -> c=mCr.query(People.CONTENT_URI, new String[],null,null,null,)@ -> LOOP { -> uri=ContentUris.withAppendedId(Contacts.People.CONTENT_URI,c.getInt(0,),)@c.moveToNext() -> mCr.delete(uri,null,null,)@ } -> c.close()@ } } CATCH(Exception) {}
results[https://github.com/sefirot/androidStuff/blob/56b22a9a5b3a6ac2edcad7bf95c7d85c9958e578/Berichtsheft/BerichtsheftTest/src/com/applang/berichtsheft/test/ProviderTests.java][testMisc][1] = -> TRY {  -> cursor=contentResolver.query(uri,null,"select name from sqlite_master where type = 'table'",null,null,)@ -> IF { -> cursor.moveToNext()@cursor.moveToFirst() -> LOOP { -> list.add(cursor.getString(0,),)@cursor.moveToFirst() } } -> cursor.close()@ } CATCH(Exception) {}
results[https://github.com/tpruvot/android_packages_apps_SQLiteManager/blob/36aedb0feb0f49fe959320de3051166db1a73f46/src/dk/andsen/asqlitemanager/Database.java][getFKList][1] = -> TRY { -> cursor=_db.rawQuery(foreignKey,null,)@ -> LOOP { -> fk[++i]=cursor.getString(0,)@cursor.moveToNext() } -> cursor.close()@ } CATCH(Exception) { -> Utils.showMessage("Error",e.getLocalizedMessage(),_cont,)@ -> Utils.logE("getFKList",logging,)@ -> Utils.printStackTrace(e,logging,)@ }
results[https://github.com/domogik/domodroid/blob/36b1045435f07e16daa7b0e00423d17b67882811/src/database/DomodroidDB.java][requestFeatureState][1] = -> TRY { -> curs=context.managedQuery(DmdContentProvider.CONTENT_URI_REQUEST_FEATURE_STATE,projection,"device_id = ? AND key = ?", new String[],null,)@ -> curs.moveToPosition(0,)@ -> IF { -> state=curs.getString(0,)@curs!=null&&curs.getCount()!=0 -> curs.close()@curs!=null&&curs.getCount()!=0 } ELSE { -> return null@!(curs!=null&&curs.getCount()!=0) } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/dreeves/TagTime/blob/3d697337c5aa84600c12c3810ea6001a9e9dcd4d/src/and/src/bsoule/tagtime/PingsDbAdapter.java][fetchTagsForPing][1] = -> TRY {  -> c=fetchTaggings(pingid,KEY_PID,)@ -> c.moveToFirst()@ -> idx=c.getColumnIndex(KEY_TID,)@ -> LOOP { -> ret.add(c.getLong(idx,),)@!(c.isAfterLast()) -> c.moveToNext()@!(c.isAfterLast()) } -> c.close()@ } CATCH(Exception) {}
results[https://github.com/tgma/honeypot/blob/2de4399aff9856cf8fdb08b73d121e9ac87e4716/src/com/advancednote/honeypot/core/MusicAnalyzerService.java][getNoteDataForFile][1] = -> TRY {  -> res=getCursorForFile(filename,)@ -> IF { -> throw new Exception("No data available for given filename: "+filename,)@!(isNoteDataAvailableForCursor(res,false,)) } -> IF { -> throw new Exception("More than one set of results found for filename: "+filename,)@res.getCount()>1 && !(!(isNoteDataAvailableForCursor(res,false,))) } -> xml=getXmlFromCursor(res,)@!(!(isNoteDataAvailableForCursor(res,false,))) && !(res.getCount()>1) -> res.close()@!(!(isNoteDataAvailableForCursor(res,false,))) && !(res.getCount()>1) } CATCH(Exception) {}
results[https://github.com/wangjian2254/AMogu3/blob/7e228c80a2d92cf730860019394561303baadd12/src/com/mogu3/mainapp/db/UserInfoUtil.java][updateUserInfo][1] = -> TRY { -> cur=getReaddb(DBhelper.getDBHelper(context,),).rawQuery("select * from userinfo where username=?",w,)@ -> num=cur.getCount()@ -> cur.close()@ } CATCH(Exception) { -> writeErrorInfo(context,65,e,)@ } FINALLY { -> close()@ }
results[https://github.com/runrev/livecode/blob/6461cde1ffa8c6092bd425acfd756e1deec1c2a3/engine/src/java/com/runrev/android/NotificationModule.java][getEarliestNotificationTime][1] = -> TRY { -> t_cursor=t_db.rawQuery(String.format("SELECT min(%s) FROM %s WHERE NOT %s",NOTIFY_TIME,DB_TABLE,NOTIFY_SHOWN,),null,)@ -> t_cursor.moveToFirst()@ -> IF { -> t_earliest=t_cursor.getLong(0,)@!(t_cursor.isNull(0,)) } -> t_cursor.close()@ } CATCH(Exception) { -> Log.i(TAG,e.toString(),)@ }
results[https://github.com/bfazen/AccessMRS/blob/e529ac899c75f97e958e1e8673da8bdcb2300a81/src/com/alphabetbloc/accessmrs/utilities/LauncherUtil.java][isAccessFormsSetup][1] = -> TRY { -> c=App.getApp().getContentResolver().query(InstanceColumns.CONTENT_URI,null,null,null,null,)@ -> IF { -> c.close()@c!=null } } CATCH(Exception) { -> IF { -> Log.w(TAG,"AccessForms db key has been lost",)@ } }
results[https://github.com/ejonny/ibrdtn/blob/b932c308b8c043a9dce430b616e2e63a4557ba23/android/ShareBox/src/de/tubs/ibr/dtn/sharebox/data/Database.java][getFiles][1] = -> TRY { -> cur=mDatabase.query(Database.TABLE_NAMES[1],PackageFileAdapter.PROJECTION,PackageFile.DOWNLOAD+" = ?", new String[],null,null,null,)@ -> IF { -> files.add(new PackageFile(mContext,cur,new PackageFileAdapter.ColumnsMap(),),)@cur.moveToNext() } -> cur.close()@ } CATCH(Exception) { -> Log.e(TAG,"getFiles() failed",e,)@ }
