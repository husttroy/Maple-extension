results[https://github.com/jwill/algorithm-practice/blob/0c5c2474d1290655e8066d531cf2a7dc61179bd9/CodeForces/src/Main96A.java][doIt][12] = -> TRY {  -> in=new Scanner(System.in,)@ -> line=in.nextLine()@ } CATCH(Exception) {}
results[https://github.com/mkovatsc/Californium/blob/0c083806454824b3d74126a2b6e2aedaf6030ae6/cf-performance/src/main/java/perf/ClientMaster.java][ping][2] = -> TRY { -> in.nextLine()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/JavaLearner/xosimple/blob/21202afc08595b4bd0c793ac4ea87bcaf294350c/src/com/game/xo/input/InputDataString.java][getData][1] = -> TRY { -> message=in.nextLine()@ } CATCH(Exception) { -> message=e.getMessage()@ }
results[https://github.com/ajorgesantosp/EAPLI_PL_2DB/blob/12e43ed0ec671e6ba4043eed1045ab081d093fb8/eapli.expensemanager/src/Presentation/ExporImportUI.java][ImportCSV][1] = -> TRY {  -> file=in.nextLine()@ -> CSV_Import.ImportCSV(file,)@ } CATCH(Exception) {}
results[https://github.com/ajorgesantosp/EAPLI_PL_2DB/blob/12e43ed0ec671e6ba4043eed1045ab081d093fb8/eapli.expensemanager/src/Presentation/ExporImportUI.java][ImportXML][1] = -> TRY {  -> file=in.nextLine()@ -> XML_Import.leitura(file,)@ } CATCH(Exception) {}
results[https://github.com/mattgarkusha/HomeSync/blob/2df35f43a3a5e2f42880cd4675185c92ec0c89fa/Eclipse Workspace/Crypto Assignment 1/src/TestCipher.java][main][3] = -> TRY {  -> input=new Scanner(System.in,)@ -> userText=input.nextLine()@ -> userTextBytes=CryptoUtils.toByteArray(userText,)@ } CATCH(Exception) {}
results[https://github.com/jwill/algorithm-practice/blob/5ad3757cdc61c2eaa3e0ee850903193a8fae3b2f/CodeForces/src/Main4A.java][doIt][2] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> amount=new Integer(scanner.nextLine(),)@ } CATCH(Exception) {}
results[https://github.com/mattgarkusha/HomeSync/blob/8492277b57c9a2de1c847d081c0d7b54dd831629/IntelliJ Workspace/Crypto Assignment 5/src/EncryptFileRSA.java][encrypt][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> userInput=scanner.nextLine()@ -> pubKey=loadPublicKey(userInput,)@ } CATCH(Exception) {}
results[https://github.com/masterjc/ecosystemguard/blob/aefe504276636cd4bae444322277580343ebb7cd/client/pc/src/java/com/ecosystem/guard/pc/LoginManager.java][authn][1] = -> TRY {  -> username=scanner.nextLine()@ -> credentials=new Credentials(username,new String(password,),)@ } CATCH(Exception) {}
results[https://github.com/mattgarkusha/HomeSync/blob/aec87a3014b90ed0461c13f03c199e9d9a7fe8e9/IntelliJ Workspace/SSL Socket Client/src/SecureSocketClient.java][main][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> host=scanner.nextLine()@ -> connection=sf.createSocket(host,port,)@ } CATCH(Exception) {}
results[https://github.com/TheExplosiveSheep/02102/blob/5d39132570f273b550fb4313c78d0c3cb2adc523/assignment_3/src/RandomWalk.java][promptForInt][1] = -> TRY { -> return Integer.parseInt(scanner.nextLine(),)@ } CATCH(Exception) { -> System.out.println("This is not an integer, using default of: "+def,)@ }
results[https://github.com/ieugen/pwm-clone/blob/894020e61327b7880c882b43a00e1189342a8047/tags/v1.6.3/pwm/servlet/src/password/pwm/util/MainClass.java][handleImportPwmDB][14] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> input=scanner.nextLine()@ -> IF { -> return @!("continue".equalsIgnoreCase(input,)) } } CATCH(Exception) {}
results[https://github.com/locks/pprog-smt/blob/6e0ebdc5d905148c2f017fb2cbe44ea989111735/src/pprogsmt/InterfaceTexto.java][ecraInicial][3] = -> TRY { -> opcao=Integer.valueOf(input.nextLine().trim(),)@ } CATCH(Exception) { -> System.err.println("Erro: "+e,)@ }
results[https://github.com/apn-proxy/apn-proxy/blob/85ca32c6394e49adebc67c03784fbbc5c00df865/src/main/java/com/xx_dev/apn/proxy/test/HttpSnoopClient.java][main][16] = -> TRY {  -> in=new Scanner(System.in,)@ -> LOOP { -> in.nextLine()@ } } CATCH(Exception) {}
results[https://github.com/dukeboard/kevoree-genetic/blob/3c2a34a82f82fa7f49b23d8c8f964e159c063272/org.kevoree.modeling.optimization.engine.genetic/src/main/java/jmetal/problems/EBEs.java][EBEsReadProblems][1] = -> TRY { -> input=new java.util.Scanner(file,)@ -> txt=input.nextLine()@ -> input.close()@ } CATCH(Exception) { -> System.out.println("Error: data file EBEs not readed",)@ }
results[https://github.com/rptiwari/mwdb/blob/fa9f89bf335ee93ab74b4c0c7c59608adabc962b/Phase3/src/edu/mwdb/project/Task7.java][main][1] = -> TRY { -> sc=new Scanner(System.in,)@ -> command=sc.nextLine()@ -> tokens=command.split(" ",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/NeoLehtola/Tiralabra/blob/9263acbb289ee07112c8c3cc0b77ddfcad693bbb/Tiralabra/src/kayttoliittyma/Tekstikayttoliittyma.java][kaynnista][1] = -> TRY {  -> LOOP { -> valinta=Integer.parseInt(lukija.nextLine(),)@ } } CATCH(Exception) {}
results[https://github.com/masterjc/ecosystemguard/blob/354d3dfacd992e33448617dfbf6957536873cff5/hostmanager/src/java/com/ecosystem/guard/host/HostRegistryManager.java][unregisterHost][1] = -> TRY {  -> sure=scanner.nextLine()@ -> IF { -> throw new Exception("Unregister host operation cancelled",)@!(sure.toUpperCase().equals("Y",)) } } CATCH(Exception) {}
results[https://github.com/mattgarkusha/HomeSync/blob/3a5b7602e8deefb011c108f5d045bd3f67f702aa/Eclipse Workspace/RSA Ransom key/src/RandomRSAKey.java][main][2] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> userInput=CryptoUtils.toByteArray(scanner.nextLine(),)@ -> cipherText=cipher.doFinal(userInput,)@ } CATCH(Exception) {}
results[https://github.com/enasequence/cramtools/blob/ed07cb4ce821c7102f1742fe023f57d772f98a7c/src/main/java/net/sf/cram/CramProf.java][main][1] = -> TRY {  -> scanner=new Scanner(file,)@ -> paramLine=scanner.nextLine()@ -> scanner.close()@ -> params=paramLine.split("\\s+",)@ } CATCH(Exception) {}
results[https://github.com/Chrisbh/MyChamp/blob/1a0850cce864f6af0a8bd3113e5cac92372352e8/MyChamp/src/UI/ResetMenu.java][resetAll][1] = -> TRY { -> sc=new Scanner(System.in,"iso-8859-1",)@ -> further=sc.nextLine()@ } CATCH(Exception) { -> System.out.println("ERROR - "+e.getMessage(),)@ }
results[https://github.com/mattgarkusha/HomeSync/blob/7822ceba3c0f3d4f4d9f0f53760f9278712bb84b/Eclipse Workspace/Crypto Assignment 3/src/FileEncryptor.java][main][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> userPasswordinput=scanner.nextLine()@ -> createKey(userPasswordinput.toCharArray(),)@ } CATCH(Exception) {}
results[https://github.com/mattgarkusha/HomeSync/blob/aec87a3014b90ed0461c13f03c199e9d9a7fe8e9/IntelliJ Workspace/JDBCExample/src/JDBCexample.java][main][1] = -> TRY { -> scanner=new Scanner(System.in,)@ -> model=scanner.nextLine()@ -> rs=st.executeQuery("SELECT DISTINCT model, price "+"FROM Laptop "+"WHERE model = "+model+"",)@ } CATCH(Exception) { -> System.out.println(e,)@ }
results[https://github.com/bompo/civilwar/blob/b946fb35da7773b76b858a7938b9fb77f2508f3a/src/io/socket/IOConnection.java][handshake][5] = -> TRY { -> in=new Scanner(stream,)@ -> response=in.nextLine()@ -> data=response.split(":",)@ } CATCH(Exception) { -> error(new SocketIOException("Error while handshaking",e,),)@ }
results[https://github.com/srinath4ever/JavaTest/blob/7db2bf5aa4c9fd9b18a4853c865d2930b5219917/JavaTest/src/com/core/security/AESTest.java][main][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> clearText=scanner.nextLine()@ -> System.out.println("Before Encryption "+clearText,)@ -> encrypted=cipher.doFinal(clearText.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/ydirickson/Java-Study/blob/22fd10aab139eb64b265c364b17d3d3b6723eb86/k19/k12-jsf-jpa/src/main/java/br/com/k19/k12/jdbc/RemoveEditora.java][main][1] = -> TRY { -> id=Integer.valueOf(entrada.nextLine(),)@ -> System.out.println("Removendo a editora de id "+id,)@ -> comando.setInt(1,id,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/molgenis/molgenis_apps-legacy/blob/7375f94fb6fe2d300487c6ac03caba00d6795c84/apps/hemodb/org/molgenis/hemodb/plugins/CalculateMeanR.java][calculateMean][2] = -> TRY {  -> scanner=new Scanner(proberesults,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> probes.add(line,)@ } } CATCH(Exception) {}
results[https://github.com/mwdchang/VehicleVis/blob/12522f7f6e7dd494038926e55e46814f887f792d/src/exec/QLogger.java][run][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> LOOP { -> input=scanner.nextLine()@ -> bw.write(input,)@ } } CATCH(Exception) {}
results[https://github.com/monnetproject/bliss/blob/3b7b346494ec4e60831a4dea5a1328b7c72170b9/betalm/src/test/java/eu/monnetproject/bliss/betalm/CompileModelTest.java][testMain][1] = -> TRY {  -> in=new Scanner(tmpFile,)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() -> Assert.assertEquals(expLM[++i],line,)@ } } CATCH(Exception) {}
results[https://github.com/NigoroJr/java/blob/d495bc231ab75c52ef12f4fabd2c7924865a3d44/archive/CSE174/week_15/lab/mizunon_Lab10.java][save][3] = -> TRY {  -> input=new Scanner(System.in,)@ -> filename=input.nextLine().trim()@ -> bw=new BufferedWriter(new FileWriter(filename,append,),)@ } CATCH(Exception) {}
results[https://github.com/tomelm/scanner-generator/blob/2a88487805f4fc1a96a3a175d33a6afa2de9fc31/Scanner-Generator/src/ParserGeneratorTest.java][testSuperSimple][4] = -> TRY {  -> scan=new Scanner(new FileReader(grammarFile,),)@ -> line=scan.nextLine()@ -> first_rule=line.substring(0,line.indexOf(" ::= ",),)@ } CATCH(Exception) {}
results[https://github.com/Androxyde/Flashtool/blob/3441e264e9e77691810b273a300d021084dddbac/src/org/adb/AdbUtility.java][isMounted][1] = -> TRY {  -> sc=new Scanner(command.getStdOut(),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/KodeSeeker/GmailRcptScanv1/blob/70434e7498a58ce585a3ddd59e0a7a62db0459c1/src/test/java/org/scribe/examples/GoogleExample.java][main][1] = -> in=new Scanner(System.in,)@ -> TRY { -> verifier=new Verifier(in.nextLine(),)@ -> accessToken=service.getAccessToken(requestToken,verifier,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/AlexBarnes86/uva-java/blob/fc78d343541b4ccc4ae8d42bcc14fca19ba626d9/AOAPC/src/vol1/String/Problem10878.java][main][2] = -> TRY {  -> sc=new Scanner(System.in,)@ -> LOOP { -> convert(sc.nextLine(),)@sc.hasNext() } } CATCH(Exception) {}
results[https://github.com/eomjinyoung/Java41/blob/03cc7abbd37fc072513f05b8f5b45859c0667728/web12/src/main/java/net/bitacademy/java41/test/step1/AccAppStub.java][getSalary][1] = -> TRY {  -> in=new Scanner(socket.getInputStream(),)@ -> salary=Integer.parseInt(in.nextLine(),)@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/nglazyrin/chordest/blob/d631e390aa42bb6a2bd882cf02073b9a1bd6f930/chordest/src/main/java/chordest/util/VampTuningFrequencyFinder.java][<init>][1] = -> TRY { -> scanner=new Scanner(new File(tempFilePath,),)@ -> s=scanner.nextLine()@ -> strings=s.split(" ",)@ } CATCH(Exception) { -> LOG.warn("Error when detecting tuning frequency, default value 440 Hz will be used",e,)@ }
results[https://github.com/ganboing/COMP4321/blob/7dfd1137f0dae3debddf3bc3aa687635a45fbd34/src/Init.java][main][2] = -> TRY {  -> input_scan=new java.util.Scanner(System.in,)@ -> LOOP { -> query=input_scan.nextLine()@ } -> input_scan.close()@ } CATCH(Exception) {}
results[https://github.com/eomjinyoung/Java41/blob/03cc7abbd37fc072513f05b8f5b45859c0667728/web12/src/main/java/net/bitacademy/java41/test/step1/AccAppStub.java][addSalary][1] = -> TRY {  -> in=new Scanner(socket.getInputStream(),)@ -> System.out.println(in.nextLine(),)@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/aaujon/Inventirap/blob/a006582070cef89d56012a7f02b11db030480309/src/Inventirap-android/src/fr/upsilon/inventirap/WebServicesTools.java][getXML][1] = -> TRY {  -> inStream=new Scanner(conn.getInputStream(),)@ -> LOOP { -> response+=inStream.nextLine()@inStream.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/NigoroJr/java/blob/be23b842555ad4375d8547f3aafa174e96a28be4/CSE174/week_15/lab/mizunon_Lab10.java][load][3] = -> TRY {  -> input=new Scanner(System.in,)@ -> filename=input.nextLine().trim()@ -> br=new BufferedReader(new FileReader(filename,),)@ } CATCH(Exception) {}
results[https://github.com/iflux1990/MyChamp/blob/36f4f9181f6e67f2c3b784a3ce61356cc9512e5d/MyChamp/src/UI/TeamManagenment.java][removeTeam][1] = -> TRY { -> school=new Scanner(System.in,).nextLine()@ -> tmgr.removeTeam(school,)@ } CATCH(Exception) { -> ex.printStackTrace()@ -> pause()@ }
results[https://github.com/jwill/algorithm-practice/blob/d3744a91969e709b37479204677ed642671199a1/UVaOnlineJudge/src/org/onlinejudge/uva/solved/Main445.java][doIt][1] = -> TRY {  -> in=new Scanner(new FileReader("data/445.txt",),)@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/pftx/niolex-network-nio/blob/4c220a04803e356022153b72d9218ad81f1fb46a/network-config/config-admin/src/main/java/org/apache/niolex/config/admin/Main.java][main][1] = -> TRY {  -> scan=new Scanner(System.in,)@ -> LOOP { -> line=scan.nextLine()@ -> cmds=line.split(" +",5,)@ } } CATCH(Exception) {}
results[https://github.com/aismail/AndroAR/blob/79862c7c57d1dd57ab0a0579a12498aab2cd3c5f/AndroARServer/src/com/androar/MockClient.java][main][1] = -> TRY { -> new Scanner(System.in,).nextLine()@ } CATCH(Exception) { -> e.printStackTrace()@ -> System.out.println(e.getMessage(),)@ }
results[https://github.com/bcdata/bouncingdata/blob/e983f5ac32bd9e3640736eebf1af76244b54d151/src/main/java/com/bouncingdata/plfdemo/util/dataparsing/TextParser.java][parse][1] = -> TRY {  -> scanner=new Scanner(is,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> array=line.split("[\t,;]",)@ } } CATCH(Exception) {}
results[https://github.com/anhtrung93/Wifi-Locator/blob/b4f50d749cc12f02ae1b7418fde5ac8a6bcf7702/Wifi/src/com/example/server/ServerController.java][run][1] = -> inputKeyBoard=new Scanner(System.in,)@ -> TRY { -> LOOP { -> serverCommand=inputKeyBoard.nextLine()@ } } CATCH(Exception) { -> serverControllerException.printStackTrace()@ }
results[https://github.com/masterjc/ecosystemguard/blob/db6d2c65ac0b76fd1ffb208010401ae75a75850a/client/pc/src/java/com/ecosystem/guard/pc/VideoManager.java][requestResolution][9] = -> TRY {  -> selection=Integer.parseInt(scanner.nextLine(),)@ -> videoResolution=videoResolutionOptions.getSelection(selection,)@ -> IF { -> throw new Exception("Incorrect video resolution selected - "+selection,)@videoResolution==null } } CATCH(Exception) {}
results[https://github.com/SpaceManiac/Glowstone/blob/502c08922d2baef024a840b06d3dc60a29037a52/src/main/java/net/glowstone/util/bans/GlowBanList.java][load][1] = -> TRY { -> LOOP { -> line=scan.nextLine().trim()@scan.hasNextLine() -> split=line.split("\\|",)@ } } CATCH(Exception) { -> lineNumberText=(lineNumber<0)?"":" (line "+lineNumber+")"@ -> GlowServer.logger.log(Level.SEVERE,"Failed to read bans from "+file+lineNumberText,e,)@ }
results[https://github.com/locks/pprog-smt/blob/062023a13b56c8278234c7812e70a1a725c7d37b/src/cliente/ambiente/cli.java][editarPasswordUtilizador][1] = -> System.out.print("Password actual: "+utilizadorSessao.getPassword()+"\n",)@ -> TRY { -> utilizadorSessao.setPassword(input.nextLine().trim(),)@ } CATCH(Exception) { -> editarPasswordUtilizador()@ }
results[https://github.com/jweese/thrax/blob/5b0839503d875434b97e04efe8affa1124f8c110/src/edu/jhu/thrax/util/SequenceFileCreator.java][main][1] = -> TRY {  -> scanner=new Scanner(System.in,"UTF-8",)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> v.set(line,)@ } -> scanner.close()@ } CATCH(Exception) {}
results[https://github.com/yukuku/androidbible/blob/aa6efd5337e1dfcde4d8987dac40e78f91ebafd8/AlkitabConverterProcesses/src/yuku/alkitabconverter/thewordbatch/TheWordBatchConverter.java][processTextFile][2] = -> TRY {  -> sc=new Scanner(textFile,"utf-8",)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> line=line.trim()@ } -> sc.close()@ } CATCH(Exception) {}
results[https://github.com/yukuku/androidbible/blob/aa6efd5337e1dfcde4d8987dac40e78f91ebafd8/AlkitabConverterProcesses/src/yuku/alkitabconverter/hu_karoli/Proses1.java][u][4] = -> TRY {  -> sc=new Scanner(new File(INPUT_TEKS_1,),INPUT_TEKS_ENCODING,)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> line=line.trim()@ } } CATCH(Exception) {}
results[https://github.com/locks/pprog-smt/blob/c35bb3df729795a253071c449ff50c1181ce4f51/src/pprogsmt/ModoConsola.java][editarPasswordUtilizador][2] = -> System.out.println("Password Actual"+utilizadorSessao.getPassword(),)@ -> TRY { -> utilizadorSessao.setPassword(input.nextLine().trim(),)@ } CATCH(Exception) { -> editarPasswordUtilizador()@ }
results[https://github.com/devilry/devilry-prototype1/blob/1064a051b0918555cfdd0e484585f9928e0bbea4/cli/src/main/java/org/devilry/cli/RemoteClient.java][runDevilryShell][3] = -> TRY { -> scan=new Scanner(System.in,)@ -> LOOP { -> line=scan.nextLine()@ -> args=line.split("\\s",)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/tomelm/scanner-generator/blob/2148998305c9dc9b366818c4c925a89fd8489a00/Scanner-Generator/src/Project.java][main][1] = -> TRY {  -> scan=new Scanner(new FileReader(grammarFile,),)@ -> line=scan.nextLine()@ -> System.out.println(line,)@ -> first_rule=line.substring(0,line.indexOf(" ::= ",),)@ } CATCH(Exception) {}
results[https://github.com/kaitanie/waterfront/blob/1c1bdbe38fc6d56000ce4d38a90cbc47e2aad0f5/java/net/sourceforge/waterfront/ide/services/Main.java][go][1] = -> TRY {  -> sc=new Scanner(new File("src/net/sourceforge/waterfront/ide/services/Main.java",),)@ -> LOOP { -> s+=sc.nextLine()+"\n"@sc.hasNext() } -> tp.setText(s,)@ } CATCH(Exception) {}
results[https://github.com/Makja/Mytunes/blob/3e138c22246d45c4c9b2127f57a0ade763c19071/MyTunes/src/UI/SubAdminSong.java][removeSong][1] = -> TRY { -> title=new Scanner(System.in,).nextLine()@ -> smgr.RemoveSong(title,)@ } CATCH(Exception) { -> System.out.println(" ERROR - "+ex.getMessage(),)@ -> pause()@ }
results[https://github.com/spring-projects/spring-xd/blob/7e0038735fb54f115c7d2b789a590b644da7e431/spring-xd-dirt/src/test/java/org/springframework/xd/dirt/jms/AmqBrokerAndTest.java][main][1] = -> TRY {  -> scanner=new Scanner(System.in,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> template.convertAndSend(line,)@ } -> scanner.close()@ } CATCH(Exception) {}
results[https://github.com/UniLab/POO/blob/a3e73876fa4db79dede5f3d2f283d79d9b7c125f/poo/testo/GestoreTesto.java][avanza][1] = -> TRY { -> IF { -> linea=input.nextLine()@linea==null||!(scan.hasNext()) -> System.out.println(numeroLineaCorrente+": "+linea,)@linea==null||!(scan.hasNext()) -> scan=new Scanner(linea,)@linea==null||!(scan.hasNext()) } } CATCH(Exception) { -> input.close()@ }
results[https://github.com/jwill/algorithm-practice/blob/bebe2c51bea32034b96ac493c096e7a1712e3f3d/UVaOnlineJudge/src/org/onlinejudge/uva/solved/Main1124.java][doIt][1] = -> TRY {  -> in=new Scanner(new FileReader("data/1124.txt",),)@ -> LOOP { -> System.out.println(in.nextLine(),)@in.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/NCIP/common-biorepository-model/blob/3b1e9616462df2d808bfa59be2795c50782a5e32/CBMservice/test/src/org/cagrid/CBM/test/CbmObjectExistenceTests.java][getAttributeList][2] = -> TRY {  -> scanner=new Scanner(new FileInputStream(fileName,),)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> valuePair=line.split(";",)@ } } CATCH(Exception) {}
results[https://github.com/ipteipsi/power/blob/d7bc9e2dfd9d10470b0e2bfe8ecf4c53e0c0eb79/PowerMaster_Site/Conexao_normal/src/conexao_normal/Conexao_normal.java][paint][2] = -> TRY { -> in=new Scanner(socket.getInputStream(),)@ -> msg=in.nextLine()@ -> g.drawString("Received: "+msg,100,40,)@ -> in.close()@ } CATCH(Exception) { -> g.drawString("Impossivel estabelecer ligação com o servidor!"+e,0,20,)@ }
results[https://github.com/madananshul/ActiveRDMA/blob/aea92e7a45eb62a5a9d2727cd74940537e36adf5/src/playground/Utilities.java][execute][1] = -> TRY {  -> sc=new Scanner(new DFSInputStream(inode,dfs,),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() } -> sc.close()@ } CATCH(Exception) {}
results[https://github.com/lsampaioweb/PAA_2012_T1/blob/beab91db29a0bf611c3775e95122bedbd546bd48/PAA_2012_T1/src/questao01/pph/PPH_05.java][run][5] = -> TRY { -> scanner=new Scanner(new File(inputFile,),)@ -> quantityOfInputValues=scanner.nextInt()+1@ -> scanner.nextLine()@ -> listOriginalPair=Utils.getValuesFromInputFile(scanner,quantityOfInputValues,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/PorMMo/PorMMo/blob/173ff1305f562c5007ea2f284f2098f8f50ec997/src/main/java/project/senior/app/pormmo/SettingsSaver.java][LastUsed][1] = -> IF { -> TRY { -> scan=new Scanner(SavedDirectory,)@SavedDirectory.exists() -> fileDirectory=scan.nextLine()@ -> scan.close()@ } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/gecgooden/TetrisAI/blob/ef95ce75cabb672b774944b06f9c1282994d85c9/src/tetris/RunTetris.java][main][1] = -> TRY { -> sc=new Scanner(new File(args[0],),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNext() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jwill/algorithm-practice/blob/208e2825c3ddc5e718428902722de1255e92c7c3/UVaOnlineJudge/src/org/onlinejudge/uva/solved/Main621.java][doIt][1] = -> TRY {  -> in=new Scanner(new FileReader("data/621.txt",),)@ -> cases=in.nextInt()@ -> LOOP { -> line=in.nextLine()@in.hasNextLine() } } CATCH(Exception) {}
results[https://github.com/locks/pprog-smt/blob/6e0ebdc5d905148c2f017fb2cbe44ea989111735/src/pprogsmt/InterfaceTexto.java][editarNomeUtilizador][2] = -> System.out.println("Nome Actual"+utilizadorSessao.getNome(),)@ -> TRY { -> utilizadorSessao.setNome(input.nextLine().trim(),)@ } CATCH(Exception) { -> editarNomeUtilizador()@ }
results[https://github.com/locks/pprog-smt/blob/062023a13b56c8278234c7812e70a1a725c7d37b/src/cliente/ambiente/cli.java][editarNomeUtilizador][1] = -> System.out.print("Nome actual: "+utilizadorSessao.getNome()+"\n",)@ -> TRY { -> utilizadorSessao.setNome(input.nextLine().trim(),)@ } CATCH(Exception) { -> editarNomeUtilizador()@ }
results[https://github.com/levants/lightmare/blob/a988e8888668e1f53f542c8e0edba32a8685f3ef/src/test/java/org/lightmare/EarFileReaderTest.java][urlTests][2] = -> TRY { -> scanner=new Scanner(stream,)@ -> LOOP { -> System.out.println(scanner.nextLine(),)@scanner.hasNextLine() } } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/masterjc/ecosystemguard/blob/aefe504276636cd4bae444322277580343ebb7cd/client/pc/src/java/com/ecosystem/guard/pc/AccountManager.java][changePassword][1] = -> TRY {  -> username=scanner.nextLine()@ -> IF { -> throw new Exception("ERROR: New passwords do not match.",)@!(Arrays.equals(newPassword1,newPassword2,)) } -> credentials=new Credentials(username,new String(password,),)@!(!(Arrays.equals(newPassword1,newPassword2,))) } CATCH(Exception) {}
results[https://github.com/AlexBarnes86/uva-java/blob/48cb1ed3fd16c6114af461097f39b82b75e7a52e/AOAPC/vol1/NumberTheory/Problem568.java][main][2] = -> TRY {  -> sc=new Scanner(System.in,)@ -> LOOP { -> line=sc.nextLine().trim()@sc.hasNext() -> n=Integer.parseInt(line,)@ } } CATCH(Exception) {}
results[https://github.com/taylorkelly/BigBrother/blob/cd89d6dd51ea21ef9363f28ceb6a5bbf991129c5/src/main/java/me/taylorkelly/bigbrother/URLReader.java][<init>][1] = -> TRY { -> sc=new Scanner(uin,)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> versions.add(line,)@ } } CATCH(Exception) { -> BBLogging.severe("Error getting version information.",)@ }
results[https://github.com/AlexBarnes86/uva-java/blob/f49baf52031819b0afa7090afdce6449cb3b78a5/Unsolved/Problem107.java][main][1] = -> TRY {  -> sc=new Scanner(System.in,)@ -> LOOP { -> line=sc.nextLine()@ -> tokens=line.trim().split("\\s+",)@ } } CATCH(Exception) {}
results[https://github.com/propra12-orga/gruppe15/blob/58ccdeeeb91275aaed6e9e8525493d280e238f60/src/level/Validator.java][validate][1] = -> TRY { -> maps=new Scanner(Main.class.getResourceAsStream("/ressources/maps/"+filename,),)@ -> LOOP { -> text=maps.nextLine()@maps.hasNextLine() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/msjackso/DesperateHousePi/blob/0b6961add01485d71878119340c71f7aa63ccce5/DesperateHousePi/src/desperatehousepi/Crust.java][chat][1] = -> TRY { -> sc=new Scanner(System.in,)@ -> LOOP { -> statement=sc.nextLine()@ -> reply=chatBotSess.think(statement,)@ } } CATCH(Exception) { -> System.out.println("Chatting not available.",)@ }
results[https://github.com/johnmccutchan/tilebasedwordsearch/blob/3848f68be29d26cdd9250a86003777c1141cf582/bin/java/Solver.java][main][1] = -> TRY {  -> sc=new Scanner(new File(args[0],),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNextLine() -> words.set(line,line,)@ } } CATCH(Exception) {}
results[https://github.com/jico/ATCLP/blob/c30719d3de7be092ded622b4b6a4fc55bd648ab2/src/Console.java][main][1] = -> TRY {  -> LOOP { -> input=console.nextLine()@ } ELSE { -> line=input.split(":",)@!(input.equals("exit",)) } } CATCH(Exception) {}
results[https://github.com/biblex2013/biblex/blob/39c7fa6d1aca8629eec8a6a82aa0abc74dc6e5fc/biblex/src/main/java/fi/helsinki/biblex/Importer/Importer.java][importFromFile][1] = -> TRY { -> reader=new Scanner(new File(path,),)@ -> LOOP { -> line=reader.nextLine()@reader.hasNextLine() } } CATCH(Exception) { -> System.err.println("Failed to read the file. Exception "+e+".",)@ }
results[https://github.com/alevy/comet/blob/2a674482d42a13b3138d393127ea8b4c6e85f64f/expt/PutWorkload.java][main][1] = -> TRY {  -> scanner=new Scanner(input,)@ -> LOOP { -> line=scanner.nextLine()@ -> numBytes=(int) Double.parseDouble(line.trim(),)*1024@ } } CATCH(Exception) {}
results[https://github.com/einar90/fellesprosjekt/blob/e0a798c861d10abbb6938c6558087be65e273fbc/src/no/ntnu/gruppe47/CalendarSystem.java][readInt][1] = -> LOOP { -> TRY { -> i=input.nextInt()@ -> input.nextLine()@ } CATCH(Exception) { -> System.out.println("Prøv på nytt",)@ -> input.nextLine()@ } }
results[https://github.com/wakandan/FYP/blob/ebb7b1896bc2fb6af75b8cdb8d51e30349db79fb/src/main/java/marketbase/Marketplace_Simulation.java][importConfig][1] = -> TRY { -> input=new Scanner(file,)@ -> LOOP { -> key=input.nextLine()@input.hasNext() -> partKey=key.split("=",0,)@ } } CATCH(Exception) { -> System.out.println("File Not Found!!!",)@ }
results[https://github.com/TheSavior/NEL/blob/39e3e9aa92d81a93af18e27a0c99c0742ef0480f/src/com/cse454/nel/FullySupervisedHumanLearner.java][ReadDouble][2] = -> LOOP { -> TRY { -> return Double.parseDouble(scanner.nextLine(),)@ } CATCH(Exception) { -> System.out.println(e.getMessage(),)@ } }
results[https://github.com/ipteipsi/power/blob/d7bc9e2dfd9d10470b0e2bfe8ecf4c53e0c0eb79/PowerMaster_Site/conexao_html/src/conexao_html/Conexao.java][bt_ligarActionPerformed][1] = -> TRY { -> in=new Scanner(socket.getInputStream(),)@ -> msg=in.nextLine()@ -> txt_ligacoes.setText("Received: "+msg,)@ -> in.close()@ } CATCH(Exception) { -> txt_ligacoes.setText("Impossivel estabelecer ligação com o servidor!"+e,)@ }
results[https://github.com/mStellmann/HES_AIP/blob/fd18e8ae972da9972fd0fc76cd5d4dfcb23fca47/src/hapsar/hapsarConsole.java][main][1] = -> TRY {  -> sc=new Scanner(System.in,)@ -> LOOP { -> message=sc.nextLine()@!(message.toLowerCase().equals("exit",)) -> channel.basicPublish("",QUEUE_NAME,null,message.getBytes(),)@!(message.toLowerCase().equals("exit",)) -> System.out.println("[INFO] Message published '"+message+"'",)@!(message.toLowerCase().equals("exit",)) } } CATCH(Exception) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/bfc80eb74b06b37097db5b8153dd802d2c2b4237/src/ru/fizteh/fivt/students/ryabovaMaria/fileMap/TableProviderCommands.java][readSignature][1] = -> TRY { -> stringTypes=sign.nextLine().trim()@ -> temp=stringTypes.split("[ ]+",)@ -> LOOP { -> throw new IllegalArgumentException("Incorrect signature.tsv",)@i<temp.length } } CATCH(Exception) { -> throw new IllegalArgumentException("Illegal signature.tsv",e,)@ }
results[https://github.com/lsampaioweb/PAA_2012_T1/blob/b91cac81e4c1a1b6b4e6ade318a2591161e2de02/PAA_2012_T1/src/questao01/pph/PPH_SelectionSortExtend.java][run][2] = -> TRY { -> scanner=new Scanner(new File(inputFile,),)@ -> quantityOfInputValues=scanner.nextInt()+1@ -> scanner.nextLine()@ -> listOriginalPair=Utils.getValuesFromInputFile(scanner,quantityOfInputValues,)@ -> scanner.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/raharrison/MathEngine/blob/847be04e00d0bc596ea83e8ef317d614ac7ed134/src/uk/co/ryanharrison/mathengine/unitconversion/Converter.java][main][1] = -> input=new Scanner(System.in,)@ -> TRY { -> inputString=input.nextLine()@ -> result=engine.convertToString(inputString,)@ } CATCH(Exception) { -> e.printStackTrace()@ } FINALLY { -> input.close()@ }
results[https://github.com/yukuku/androidbible/blob/aa6efd5337e1dfcde4d8987dac40e78f91ebafd8/AlkitabConverterProcesses/src/yuku/alkitabconverter/en_kjv_thml/Proses.java][loadUpTheData][2] = -> TRY {  -> sc=new Scanner(p.getInputStream(),)@ -> LOOP { -> System.out.println(sc.nextLine(),)@sc.hasNextLine() } -> sc.close()@ } CATCH(Exception) {}
results[https://github.com/ESOS-Lab/Mobibench/blob/e561e452044876ff7f97502d6db69165285b5064/MobiBench/src/esos/MobiBench/StorageOptions.java][GetFileSystemName][1] = -> TRY { -> scanner=new Scanner(new File("/proc/mounts",),)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNext() -> lineElements=line.split(" ",)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/tanzwud/CERT803/blob/5888d0ea9adf30c2753369d4fa67785ce826a7fd/javaBegins/diferentExamples/Extra_1/Util.java][getNumber][1] = -> IF { -> sc=new Scanner(System.in,)@sc==null } -> TRY { -> count=Integer.parseInt(sc.nextLine(),)@ } CATCH(Exception) { -> System.out.println("Oooooooops.\nBye bye!",)@ -> e.printStackTrace()@ }
results[https://github.com/maandree/cnt/blob/592b761256cf81325ee44dc6c9f6a0dc164635f5/tests/nettest/NetInfo.java][main][2] = -> TRY {  -> in=new Scanner(is,)@ -> line=in.nextLine()@ -> line=line.substring(0,line.indexOf("</body>",),)@ -> line=line.substring(line.lastIndexOf(' ',)+1,)@ -> System.out.println("Public IP: "+publicip=line,)@ } CATCH(Exception) {}
results[https://github.com/EDACC/edacc_aac/blob/551f62a36352f186a93061088dbfa2a830f5ac0b/src/edacc/configurator/proar/PROAR.java][main][3] = -> TRY {  -> scanner=new Scanner(new File(args[0],),)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> keyval=line.split("=",)@ } -> scanner.close()@ } CATCH(Exception) {}
results[https://github.com/Klodin/OperationHotHammer/blob/783f8bc3df15f7eca2851f321caa3ea1b938ea25/Games/KickBall/src/kickball/Data/TextReader.java][get][1] = -> TRY { -> IF { -> getItem=scan.nextLine()@scan.hasNext() } ELSE { -> this.scan.close()@!(scan.hasNext()) } } CATCH(Exception) { -> System.out.println(e,)@ }
results[https://github.com/webbukkit/dynmap/blob/b5bd4bd965e0c8114c92890059663d7857a159b0/MapManager.java][startManager][3] = -> TRY { -> scanner=new Scanner(cfile,)@ -> LOOP { -> line=scanner.nextLine()@scanner.hasNextLine() -> split=line.split("\t",)@ } -> scanner.close()@ } CATCH(Exception) { -> log.log(Level.SEVERE,"Failed to load colorset: "+colorsetpath,e,)@ }
results[https://github.com/sfnelson/rprof/blob/03f2763affad4a99c95aedfa329f614cf816e6c5/server/src/test/java/nz/ac/vuw/ecs/rprofs/server/db/DatabaseIntegrationTest.java][createDatabase][1] = -> TRY {  -> in=new Scanner(pb.start().getInputStream(),)@ -> Assert.assertTrue(in.hasNextLine(),)@ -> path=in.nextLine()@ -> pb.command(path,"--dbpath","/tmp/rprof/mongo","--bind_ip","127.0.0.1","--port","27018","--logpath","/tmp/rprof/mongod.log",)@ } CATCH(Exception) {}
results[https://github.com/apavlo/h-store/blob/e1f70e244e03e6adc24af4950455535ee2119e5f/tests/frontend/org/voltdb/catalog/LoadCatalogToString.java][<clinit>][1] = -> TRY { -> scanner=new Scanner(new File(catPath,),)@ -> LOOP { -> value+=scanner.nextLine()+"\n"@scanner.hasNextLine() } } CATCH(Exception) { -> System.err.println("FAILED TO LOAD CATALOG!",)@ -> throw new RuntimeException(e,)@ }
results[https://github.com/studentkittens/webarchive/blob/a52b9688b2154fbaed51c9ef55e272fb64ea6784/test/java/webarchive/server/FileHandlerTest.java][testWrite][1] = -> TRY {  -> scan=new Scanner(new File(rootFolder,fd.getFile().toString(),),)@ -> assertEquals("BLAAAA",scan.nextLine(),)@ -> scan.close()@ } CATCH(Exception) {}
results[https://github.com/kohyatoh/contests/blob/399375631d07c4c14ed93a1240bf750050fcee93/pku/1131/Main.java][main][1] = -> sc=new Scanner(System.in,)@ -> TRY { -> LOOP { -> System.out.println(solve(sc.nextLine(),),)@sc.hasNext() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/gecgooden/TetrisAI/blob/e99f21481f9fe9d76a021fdf1e4e984e22790c12/src/RunTetris.java][main][1] = -> TRY { -> sc=new Scanner(new File(args[0],),)@ -> LOOP { -> line=sc.nextLine()@sc.hasNext() } -> sc.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
