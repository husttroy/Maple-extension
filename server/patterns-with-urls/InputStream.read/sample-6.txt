results[https://github.com/chalstrick/egit/blob/1ee9037bba7b6a53cb8b3e72298c0caf6f845dbf/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitResourceVariantTreeTest.java][getBytesAndCloseStream] = -> TRY {  -> TRY { -> stream.read(actualByte,)@ } FINALLY { -> stream.close()@ } } CATCH {}
results[https://github.com/alblue/EGit/blob/1ee9037bba7b6a53cb8b3e72298c0caf6f845dbf/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitResourceVariantTreeTest.java][getBytesAndCloseStream] = -> TRY {  -> TRY { -> stream.read(actualByte,)@ } FINALLY { -> stream.close()@ } } CATCH {}
results[https://github.com/jdcasey/EGit/blob/65c4dec95474f682b87587e2e736968e953a8fff/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitResourceVariantTreeTest.java][getBytesAndCloseStream] = -> TRY {  -> TRY { -> stream.read(actualByte,)@ } FINALLY { -> stream.close()@ } } CATCH {}
results[https://github.com/apache/accumulo/blob/a4e562602a4dbfff9611f292fd8369124279f83c/examples/simple/src/test/java/org/apache/accumulo/examples/simple/filedata/ChunkInputFormatTest.java][map] = -> TRY {  -> TRY { -> value.read(b,)@ } -> TRY { -> value.close()@ } } CATCH {}
results[https://github.com/blizzy78/egit/blob/1ee9037bba7b6a53cb8b3e72298c0caf6f845dbf/org.eclipse.egit.core.test/src/org/eclipse/egit/core/synchronize/GitResourceVariantTreeTest.java][getBytesAndCloseStream] = -> TRY {  -> TRY { -> stream.read(actualByte,)@ } FINALLY { -> stream.close()@ } } CATCH {}
results[https://github.com/svn2github/htmlunit-fork/blob/c231daa140d7dbc7adf9c76002be20beab8cae5e/flash/src/main/java/adobe/abc/AbcThunkGen.java][load] = -> TRY {  -> in=new FileInputStream(filename,)@ -> TRY { -> in.read(before,)@ } FINALLY { -> in.close()@ } } CATCH {}
results[https://github.com/svn2github/htmlunit-fork/blob/3e31c45036f6812dbcbdb70b3deb125f5762816a/flash/src/main/java/adobe/abc/GlobalOptimizer.java][load] = -> TRY {  -> in=new FileInputStream(filename,)@ -> TRY { -> in.read(before,)@ } FINALLY { -> in.close()@ } } CATCH {}
results[https://github.com/dataiku/dctc/blob/a972bf929ef6ef57ae3b3d99e1c17e51758e7393/src/core/java/com/dataiku/dip/utils/DKUtils.java][run] = -> TRY { -> LOOP { -> i=is.read(buf,)@ -> os.write(buf,0,i,)@ } -> is.close()@ }
results[https://github.com/LukeEvans/PageRank/blob/3fbfc91969ba7c8b4c4408d07ae004c61f7b6d12/src/cs555/crawler/communications/LinkReceiverThread.java][run] = -> LOOP { -> TRY { -> numRead=sin.read(bytesnum,)@ -> link.dataReceived(numRead,bytesnum,)@ } } -> link.close()@
results[https://github.com/brettwooldridge/NuProcess/blob/2ef6e3103cde9645e688b6dab7378b021dfd54ac/src/example/java/org/nuprocess/example/OldSchool.java][run] = -> TRY { -> LOOP { -> rc=inputStream.read(buf,)@ -> readAdler32.update(buf,0,rc,)@ } -> inputStream.close()@ }
