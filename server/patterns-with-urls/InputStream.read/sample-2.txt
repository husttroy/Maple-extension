results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/tests/DumpRenderTree/src/com/android/dumprendertree/forwarder/AdbUtils.java][sendAdbCmd] = -> TRY {  -> read=is.read(buf,)@ -> IF { -> return false@read!=ADB_RESPONSE_SIZE||!(ADB_OK.equals(new String(buf,),)) } } CATCH {}
results[https://github.com/spacecaker/android_frameworks_base_CSM9.1/blob/a4ee5974d66e944f3fa0466ea794deacb3f32975/tests/DumpRenderTree2/src/com/android/dumprendertree2/forwarder/AdbUtils.java][configureConnection] = -> TRY {  -> read=inputStream.read(buf,)@ -> IF { -> return false@read!=ADB_RESPONSE_SIZE||!(ADB_OK.equals(new String(buf,),)) } } CATCH {}
results[https://github.com/teamgummy/frameworks_base/blob/3e7a90f576deeccc9718b9d15889ecd60ce56772/tests/DumpRenderTree2/src/com/android/dumprendertree2/forwarder/AdbUtils.java][configureConnection] = -> TRY {  -> read=inputStream.read(buf,)@ -> IF { -> return false@read!=ADB_RESPONSE_SIZE||!(ADB_OK.equals(new String(buf,),)) } } CATCH {}
results[https://github.com/aadamowski/fi.java.net/blob/77a17f2d386ba23a202bab7576ed365879889228/FIME/src/com/sun/xml/fime/Decoder.java][isFastInfosetDocument] = -> TRY {  -> s.read(header,)@ -> IF { -> return false@header[0]!=EncodingConstants.BINARY_HEADER[0]||header[1]!=EncodingConstants.BINARY_HEADER[1]||header[2]!=EncodingConstants.BINARY_HEADER[2]||header[3]!=EncodingConstants.BINARY_HEADER[3] } } CATCH {}
results[https://github.com/svn2github/icefaces/blob/f4f5783de1ad570f9bcc58e96b309669930ca0cc/core/src/main/java/org/icefaces/impl/fastinfoset/com/sun/xml/fastinfoset/Decoder.java][isFastInfosetDocument] = -> TRY {  -> s.read(header,)@ -> IF { -> return false@header[0]!=EncodingConstants.BINARY_HEADER[0]||header[1]!=EncodingConstants.BINARY_HEADER[1]||header[2]!=EncodingConstants.BINARY_HEADER[2]||header[3]!=EncodingConstants.BINARY_HEADER[3] } } CATCH {}
results[https://github.com/iGio90/android_frameworks_base/blob/c2c778533288efb45107521eee9fcab82892fc9e/tests/DumpRenderTree/src/com/android/dumprendertree/forwarder/AdbUtils.java][sendAdbCmd] = -> TRY {  -> read=is.read(buf,)@ -> IF { -> return false@read!=ADB_RESPONSE_SIZE||!(ADB_OK.equals(new String(buf,),)) } } CATCH {}
results[https://github.com/davros-/frameworks_base/blob/da9165e10f476bc46f990e1d63a0f63dcbadbc26/tests/DumpRenderTree2/src/com/android/dumprendertree2/forwarder/AdbUtils.java][configureConnection] = -> TRY {  -> read=inputStream.read(buf,)@ -> IF { -> return false@read!=ADB_RESPONSE_SIZE||!(ADB_OK.equals(new String(buf,),)) } } CATCH {}
results[https://github.com/davros-/frameworks_base/blob/da9165e10f476bc46f990e1d63a0f63dcbadbc26/tests/DumpRenderTree/src/com/android/dumprendertree/forwarder/AdbUtils.java][sendAdbCmd] = -> TRY {  -> read=is.read(buf,)@ -> IF { -> return false@read!=ADB_RESPONSE_SIZE||!(ADB_OK.equals(new String(buf,),)) } } CATCH {}
results[https://github.com/FasterXML/aalto-xml/blob/0fde1ab676ae0553b719a2be50d6fecf9b9541a5/src/main/java/test/TestScannerPerf.java][loadMoreBytes] = -> TRY {  -> count=mIn.read(mInputBuffer,)@ -> IF { -> return false@count<0 } } CATCH {}
results[https://github.com/FasterXML/aalto-xml/blob/a567998bc8e169006652d5dd42588f10f26173f0/src/java/test/TestScannerPerf.java][loadMoreBytes] = -> TRY {  -> count=mIn.read(mInputBuffer,)@ -> IF { -> return false@count<0 } } CATCH {}
