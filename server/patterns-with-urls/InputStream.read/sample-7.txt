results[https://github.com/lenik/jazz/blob/d338258caad7e33ffb470d735d05fe4271095bd5/bas/basutils/src/main/java/net/bodz/bas/io/Files.java][fetch] = -> TRY { -> len=input.read(buffer,)@ -> IF { -> return fetch()@len==-1 } }
results[https://github.com/lenik/jazz/blob/05d009128441ea1493a4a96cb071ebd821947668/bas/layer-2/bas-utils/src/main/java/net/bodz/bas/io/Files.java][fetch] = -> TRY { -> len=input.read(buffer,)@ -> IF { -> return fetch()@len==-1 } }
results[https://github.com/lenik/jazz/blob/f2b7bec36b48c78f5969b7a8ff4a875adc534eab/bas/modules/bas-utils/src/main/java/net/bodz/bas/io/Files.java][fetch] = -> TRY { -> len=input.read(buffer,)@ -> IF { -> return fetch()@len==-1 } }
results[https://github.com/WhisperSystems/RedPhone/blob/a9060c032c57ad48fad6b3d1da9bdf3950f570a5/src/org/thoughtcrime/redphone/util/LineReader.java][waitForAvailable] = -> TRY {  -> TRY { -> read=in.read(buffer,)@ -> IF { -> return false@read<=0 } -> baos.write(buffer,0,read,)@!(read<=0) } } CATCH {}
results[https://github.com/lenik/jazz/blob/dfd11a7d56ee51c0f1fb7c62c36f7ac5a9c3a874/bas/mod/System Utilities/src/net/bodz/bas/io/Files.java][fetch] = -> TRY { -> len=input.read(buffer,)@ -> IF { -> return fetch()@len==-1 } }
results[https://github.com/motionbox/jmonkeyengine/blob/adc0ac712a6800def908dbacee7ebc82011234d3/engine/src/networking/com/jme3/network/kernel/tcp/SocketConnector.java][read] = -> TRY { -> count=in.read(buffer,)@ -> IF { -> return null@count<0 } -> return ByteBuffer.wrap(buffer,0,count,)@!(count<0) }
results[https://github.com/chototsu/MikuMikuStudio/blob/9bd848aa884de742980627a1e1ad455fb6c0344a/engine/src/networking/com/jme3/network/kernel/tcp/SocketConnector.java][read] = -> TRY { -> count=in.read(buffer,)@ -> IF { -> return null@count<0 } -> return ByteBuffer.wrap(buffer,0,count,)@!(count<0) }
results[https://github.com/kuykendall-benjamin/School-Project-KNKG/blob/b6d897ca381501f7088cf6e5e2351a83615719eb/JMonkeyEngine/source/com/jme3/network/kernel/tcp/SocketConnector.java][read] = -> TRY { -> count=in.read(buffer,)@ -> IF { -> return null@count<0 } -> return ByteBuffer.wrap(buffer,0,count,)@!(count<0) }
results[https://github.com/LukeEvans/PageRank/blob/4d40bcf233e80976e8dc51431bc6a82364cc15c9/src/cs555/crawler/communications/Link.java][waitForData] = -> sin=Tools.createInput(socket,)@ -> TRY { -> numRead=sin.read(bytesnum,)@ -> IF { -> return bytesnum@numRead>=0 } }
results[https://github.com/Mobicents/sip-servlets/blob/90826f5b68404a66a88be383a5fca540cf470042/containers/sip-servlets-catalina-7/src/main/java/org/mobicents/servlet/sip/catalina/annotations/SipApplicationAnnotationUtils.java][findSipApplicationAnnotation] = -> TRY { -> stream.read(rawClassBytes,)@ -> one=contains(rawClassBytes,SIP_APPLICATION_BYTES,)@ -> two=contains(rawClassBytes,ANNOTATION_BYTES,)@ -> IF { -> return true@one&&two } }
