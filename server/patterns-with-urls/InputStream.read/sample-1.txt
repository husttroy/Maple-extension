results[https://github.com/ybrs/hazelcastforked/blob/aa6068c648ec95c821ddae0d93a3d2a1fcc6cb4a/dist/TestApp.java][readCharacter][6] = -> TRY {  -> return in.read()@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/e29089cd2f1827672b8e1fd7d492d8de8a128937/test/sun/security/ssl/com/sun/net/ssl/internal/ssl/X509TrustManagerImpl/SelfIssuedCert.java][doServerSide][174] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> sslIS.read()@ } CATCH(Exception) {}
results[https://github.com/environmentalinformatics-marburg/magic/blob/bd5aa3e9673b76735fd11d435e855850b51ea18a/dfg_spp_exploratories/adml/commons-io-2.4-src/src/test/java/org/apache/commons/io/input/TeeInputStreamTest.java][testReadOneByte][3] = -> TRY {  -> assertEquals('a',tee.read(),)@ } CATCH(Exception) {}
results[https://github.com/jalop-tresys/jjnl/blob/e95564d3ab731dd0571ade9fe479f19eebedfcc6/jnl_lib/src/test/java/com/tresys/jalop/jnl/impl/SubscriberANSHandlerTest.java][testJalopDataStreamReadThrowsIOExceptionUponFailure][1] = -> TRY {  -> jds=(Dispatcher) dispatcher.getJalopDataStreamInstance(5,ds,md,)@ -> jds.read()@ } CATCH(Exception) {}
results[https://github.com/NowBaseline/nebula/blob/c3e5242b2fabea18003ccd8e19bededb817d1800/techtest/src/test/java/test/javabytecode/BlockStruct.java][readU1][3] = -> TRY { -> return (byte) in.read()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/svn2github/H2-Mirror/blob/550395b065b4d775feba22cd9c55946d2c3529b5/h2/src/test/org/h2/test/db/TestLob.java][testConcurrentRemoveRead][1] = -> TRY {  -> in=rs.getBinaryStream(1,)@ -> in.read()@ } CATCH(Exception) {}
results[https://github.com/jsampson/prevayler/blob/fd6715373fa4f07bbe2a8cf3fb24c3b278c1c437/tests/src/test/java/org/prevayler/foundation/DeepCopierTest.java][readObject][1] = -> TRY {  -> return new Byte((byte) stream.read(),)@ } CATCH(Exception) {}
results[https://github.com/maddoggin/platform_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/net/OldJarURLConnectionTest.java][test_setUseCaches][49] = -> TRY {  -> in=connection.getInputStream()@ -> in.read()@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/marstein/GosuJacoco/blob/bffa41b4eec5328cd34eaf8d9faa308d64a73ef3/org.jacoco.agent.rt.test/src/org/jacoco/agent/rt/controller/MockSocketConnectionTest.java][testCloseOtherSocket][7] = -> TRY {  -> in=a.getInputStream()@ -> assertEquals(-1,in.read(),)@ } CATCH(Exception) {}
results[https://github.com/apache/harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/io/FilterInputStreamTest.java][test_read][5] = -> TRY {  -> c=is.read()@ -> assertTrue("read returned incorrect char",c==fileString.charAt(0,),)@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/249ff22f64878a7eac7a4f62f92e7b706ed76c58/test/sun/security/ssl/com/sun/net/ssl/internal/ssl/SocketCreation/SocketCreation.java][doServerSide][15] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> System.out.println("Server read: "+sslIS.read(),)@ } CATCH(Exception) {}
results[https://github.com/apache/creadur-whisker/blob/5f23a72a6458cac32f957f7d93cde254989b51f4/apache-whisker-app/src/test/java/org/apache/creadur/whisker/app/load/TestStreamableResourceFactory.java][testWhenResourceExistsOnClasspathThisResourceShouldBeStreamed][1] = -> TRY {  -> in=streamableResource.open()@ -> assertFalse(in.read()==-1,)@ } CATCH(Exception) {}
results[https://github.com/syapse/bigdata/blob/21b2570083491b6f8bcb031e83e22062e93946e6/bigdata/src/java/com/bigdata/service/mapReduce/tasks/ReadOnlyMapTask.java][input][7] = -> TRY {  -> LOOP { -> ch=is.read()@ } } CATCH(Exception) {}
results[https://github.com/richfaces/richfaces-sandbox/blob/5f585505a5c193c547e6646984bc3eaf46020f55/bootstrap/demo/src/test/java/org/richfaces/bootstrap/demo/TaglibReaderTest.java][getStreamTest][1] = -> TRY {  -> stream=reader.getStream()@ -> Assert.assertNotNull(stream.read(),)@ } CATCH(Exception) {}
results[https://github.com/kframework/k/blob/20a882adeb885e878caedac7317c652c8563ae67/core/java/IOServer/src/resources/BufferedReader.java][peek][3] = -> TRY {  -> IF { -> integer=is.read()@integer==-2&&is.available()>0 } -> return (byte) integer@ } CATCH(Exception) {}
results[https://github.com/seasarorg/kijimuna/blob/bd3886df474d0682ca4350c94488de63f55e78ce/org.seasar.kijimuna.core/test/org/seasar/kijimuna/core/KijimunaTest.java][testGetEntry][1] = -> TRY {  -> in=url.openStream()@ -> i=in.read()@ -> assertEquals((char) i,'<',)@ } CATCH(Exception) {}
results[https://github.com/SecurisationSiteGVI/securisation-site-gvi/blob/67ff9667d9c70a350cc149285b6a77ffbd38ccf8/src/physique/io/SerialPortDriver.java][serialEvent][1] = -> TRY { -> singleData=(byte) _serialInput.read()@ } CATCH(Exception) { -> logText="Failed to read data. ("+e.toString()+")"@ -> System.out.print(logText+"\n",)@ }
results[https://github.com/ybrs/hazelcastforked/blob/6d494fa5ef514816a415adb7e2e13314d67bbf87/hazelcast/src/test/java/com/hazelcast/nio/IOUtilTest.java][shouldReturnMinusOneWhenEmptyByteBufferProvidedAndReadingOneByte][2] = -> TRY {  -> inputStream=IOUtil.newInputStream(empty,)@ -> read=inputStream.read()@ -> assertEquals(-1,read,)@ } CATCH(Exception) {}
results[https://github.com/modcluster/mod_cluster/blob/f163adb7695fede60fec2296245e4a0427cb5607/test/java/org/jboss/mod_cluster/Util.java][stopNode][1] = -> TRY { -> in=socket.getInputStream()@ -> in.read()@ } CATCH(Exception) { -> ex.printStackTrace(System.out,)@ }
results[https://github.com/rafalkrupinski/jetty/blob/727cf815a250f9a2305f3b377f8f0450b9820bd9/jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientStreamTest.java][testInputStreamResponseListenerClosedBeforeReading][1] = -> TRY {  -> stream=listener.getInputStream()@ -> stream.close()@ -> stream.read()@ } CATCH(Exception) {}
results[https://github.com/tstellar/cabs/blob/237f42dd2344479eb2c8d3d86e4aa1fcc43f999a/src/net/Message.java][recvOfferHelpResp][1] = -> TRY { -> in.read()@ -> dis=new DataInputStream(in,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/UnicornButter/libcore/blob/0b26c7b2263a591b135e230231a331e3c0f123b8/luni/src/test/java/tests/api/java/net/JarURLConnectionTest.java][test_setUseCaches][49] = -> TRY {  -> in=connection.getInputStream()@ -> in=connection.getInputStream()@ -> in.read()@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/apurtell/hadoop/blob/1293d252c21dd9463234c6b08dca5427640d3539/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAuditLogs.java][testAuditAllowed][17] = -> TRY {  -> istream=userfs.open(file,)@ -> val=istream.read()@ -> istream.close()@ -> assertTrue("failed to read from file",val>=0,)@ } CATCH(Exception) {}
results[https://github.com/anbangr/trusted-mr/blob/1a4e59153cf187d95f238f069f88ef1704d0e5d9/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/fs/http/client/BaseTestHttpFSWith.java][testCreate][17] = -> TRY {  -> is=fs.open(path,)@ -> Assert.assertEquals(is.read(),1,)@ -> is.close()@ } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/com/sun/crypto/provider/Cipher/DES/FlushBug.java][main][3] = -> TRY {  -> in=new CipherInputStream(consumer,decrypter,)@ -> LOOP { -> b=in.read()@ } } CATCH(Exception) {}
results[https://github.com/rackerlabs/repose/blob/211d02ea9f397fcf3f740a959e9bc9f0eff3447e/project-set/commons/utilities/src/test/java/com/rackspace/papi/commons/util/io/stream/LimitedReadInputStreamTest.java][standUp][2] = -> TRY {  -> mockedInputStream=mock(InputStream.class,)@ -> when(mockedInputStream.read(),).thenReturn(1,)@ } CATCH(Exception) {}
results[https://github.com/apache/river/blob/da0039ba2c4e6b7c88c36123ecab6c1d2bf17580/integrationtests/qa/src/com/sun/jini/qa/harness/SlaveHarness.java][handleRequests][3] = -> TRY { -> is=logSocket.getInputStream()@ -> pipeFlag=is.read()@ } CATCH(Exception) { -> logger.log(Level.SEVERE,"Unexpected exception",e,)@ -> System.exit(1,)@ }
results[https://github.com/xnio/xnio/blob/ca17c029c6e20130e35325cc69ecf12d3b21f2f2/api/src/test/java/org/xnio/streams/PipeTestCase.java][writeByteArrayBlocksUntilCloseInput][2] = -> TRY {  -> inputStream=pipe.getIn()@ -> close(inputStream,)@ -> assertEquals(-1,inputStream.read(),)@ } CATCH(Exception) {}
results[https://github.com/chalstrick/jgit/blob/767be14f34b07e5acb8f332032fd97dd3e19a059/org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PackParserTest.java][testDataAfterPackFooterSingleRead][9] = -> TRY {  -> in=new ByteArrayInputStream(streamData,)@ -> p=index(in,)@ -> assertEquals(0x7e,in.read(),)@ } CATCH(Exception) {}
results[https://github.com/electronic-arts/smack/blob/3503cef68f420058a5c832106c9bce4b4ee29f9c/smackx/src/test/java/org/jivesoftware/smackx/bytestreams/ibb/InBandBytestreamSessionTest.java][shouldNotCloseBothStreamsIfOutputStreamIsClosed][8] = -> TRY {  -> inputStream=session.getInputStream()@ -> listener=Whitebox.getInternalState(inputStream,PacketListener.class,)@ -> assertTrue(inputStream.read()!=0,)@ } CATCH(Exception) {}
results[https://github.com/openpnp/openpnp/blob/b936e0c2912a709f37836be423ad0b2eead92369/gui/src/org/openpnp/machine/generic/driver/GrblDriver.java][readChar][1] = -> TRY { -> LOOP { -> ch=input.read()@ch==-1&&!(disconnectRequested) } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/uditrugman/openjdk8-jdk/blob/5bed452ed673b87e35e8e8b736614179a3a649ba/test/sun/security/ssl/javax/net/ssl/NewAPIs/SessionTimeOutTests.java][doServerSide][6] = -> TRY {  -> LOOP { -> sslIS=sslSocket.getInputStream()@ -> read=sslIS.read()@ } } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/727cf815a250f9a2305f3b377f8f0450b9820bd9/jetty-server/src/test/java/org/eclipse/jetty/server/ConnectorTimeoutTest.java][testMaxIdleWithRequest10NoClientClose][16] = -> TRY {  -> is=client.getInputStream()@ -> result=IO.toString(is,)@ -> assertEquals(-1,is.read(),)@ } CATCH(Exception) {}
results[https://github.com/capedwarf/capedwarf-blue/blob/ae0f7404e3065976e042bcdde6df81f7187e3ef4/testsuite/src/test/java/org/jboss/test/capedwarf/testsuite/utils/test/IOUtilsTestCase.java][testSkipSkipsOverCorrectNumberOfBytes][3] = -> TRY {  -> stream=new ByteArrayInputStream( new byte[],)@ -> IOUtils.skipFully(stream,2,)@ -> Assert.assertEquals(2,stream.read(),)@ } CATCH(Exception) {}
results[https://github.com/tu-vu-duy/tools/blob/2dac3954b868dd8923e961c11c1fc54a5d937632/webunit/src/main/java/org/exoplatform/httpclient/webunit/HttpRequest.java][parse][1] = -> TRY {  -> LOOP { -> code=is.read()@ -> line.write(code,)@ } } CATCH(Exception) {}
results[https://github.com/jenkinsci/remoting/blob/82b4a2cd210eee524a73611017d23190ec8565e9/src/test/java/hudson/remoting/PipeTest.java][testReaderCloseWhileWriterIsStillWriting][1] = -> TRY {  -> in=p.getIn()@ -> assertEquals(in.read(),0,)@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/ept/selenium-rc/blob/03a6e0c9e714967cfa62408c05651139016bce43/non-generated/src/test/java/org/openqa/selenium/utils/TestReporter.java][report][3] = -> TRY { -> is=url.openStream()@ -> is.read()@ -> is.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/johnperry/CTP/blob/f93df5eae732d08b674a12ef1dc8288855f69129/source/java/org/rsna/ctp/stdstages/anonymizer/dicom/DICOMDecompressor.java][skip][2] = -> TRY {  -> in=parser.getInputStream()@ -> LOOP { -> in.read()@ } } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/727cf815a250f9a2305f3b377f8f0450b9820bd9/jetty-client/src/test/java/org/eclipse/jetty/client/HttpClientStreamTest.java][testDownloadWithCloseBeforeContent][1] = -> TRY {  -> input=listener.getInputStream()@ -> Assert.assertNotNull(input,)@ -> input.close()@ -> input.read()@ } CATCH(Exception) {}
results[https://github.com/eclipse/eclipse.platform.ua/blob/17d798dfc89ba85eea434860a000ace1d57b3817/org.eclipse.ua.tests/help/org/eclipse/ua/tests/help/util/LoadServletUtil.java][startServer][1] = -> TRY {  -> input=url.openStream()@ -> firstbyte=input.read()@ -> input.close()@ -> Assert.assertTrue(firstbyte>0,)@ } CATCH(Exception) {}
results[https://github.com/ybrs/hazelcastforked/blob/6d494fa5ef514816a415adb7e2e13314d67bbf87/hazelcast/src/test/java/com/hazelcast/nio/IOUtilTest.java][shouldReturnMinusOneWhenNothingRemainingInByteBuffer][2] = -> TRY {  -> inputStream=IOUtil.newInputStream(buffer,)@ -> inputStream.read( new byte[],)@ -> read=inputStream.read()@ -> assertEquals(-1,read,)@ } CATCH(Exception) {}
results[https://github.com/porty/mina-sshd/blob/58ae166ec18284eecf52d73bd452c636078c45f2/sshd-core/src/test/java/org/apache/sshd/SftpTest.java][testClient][1] = -> TRY {  -> is=sftp.read("target/sftp/client/test.txt",)@ -> is.read( new byte[],)@ -> i=is.read()@ -> is.close()@ } CATCH(Exception) {}
results[https://github.com/eclipse/riena/blob/91df45e67ec3b71a5991a663915c687b2412fbd7/org.eclipse.riena.tests/src/org/eclipse/riena/communication/core/attachment/AttachmentClientITest.java][testEmptyAttachment][1] = -> TRY {  -> input=attachment.readAsStream()@ -> assertTrue(input!=null,)@ -> assertTrue(input.read()==-1,)@ } CATCH(Exception) {}
results[https://github.com/concord-consortium/geogebra/blob/e2d3083fe6a11f11acae793b1ba5a7e5b40a9aef/geogebra/mathpiper/org/mathpiper/io/StandardFileInputStream.java][<init>][4] = -> TRY {  -> LOOP { -> c=aStream.read()@ -> iString.append((char) c,)@ } } CATCH(Exception) {}
results[https://github.com/jmchilton/TINT/blob/99ef3a7c11d12a8eccdfecc316f7fd380f78a42f/projects/TropixSshServer/src/test/edu/umn/msi/tropix/ssh/SshServerSpringTest.java][sendFile][1] = -> TRY {  -> IF { -> assertEquals(0,latestChannelInputStream.read(),)@ } } CATCH(Exception) {}
results[https://github.com/xnio/xnio/blob/ca17c029c6e20130e35325cc69ecf12d3b21f2f2/api/src/test/java/org/xnio/streams/PipeTestCase.java][readBytesBlocksUntilWriteAndCloseOutput][1] = -> TRY {  -> inputStream=pipe.getIn()@ -> readTask=new ReadByteTask(inputStream,)@ -> assertEquals(-1,inputStream.read(),)@ } CATCH(Exception) {}
results[https://github.com/bonitasoft/bonita-studio/blob/2bd5b75b18aeb1ab545055cd977e54f194f7936d/tests/org.bonitasoft.studio.repository.test/src/org/bonitasoft/studio/repository/test/TestImportRepository.java][testImportAttachments][1] = -> TRY {  -> is=(InputStream) fileStore.getContent()@ -> assertTrue(is.read()>0,)@ -> is.close()@ } CATCH(Exception) {}
results[https://github.com/makkus/jglobus-nz/blob/0ad41eff5dddf9e85e9f6b558af9d53f726de903/src/org/globus/ftp/test/InputStreamDataSinkTest.java][testCloseDataSourceStream][1] = -> TRY {  -> in=sr.getInputStream()@ -> t=new Thread2(in,)@ -> assertEquals(-1,in.read(),)@ } CATCH(Exception) {}
results[https://github.com/LeeMinWoo/android_dalvik/blob/0c9612f9d7ff9fc0a61cc9eeb37acaabb7b28700/libcore/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarEntryTest.java][test_getCertificates][12] = -> TRY {  -> in=jarFile.getInputStream(jarEntry1,)@ -> in.close()@ -> assertEquals("the file is fully read",-1,in.read(),)@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/thomasattic/castor/blob/7064a8aaee3fe0236e2278abb839fe73e75f6404/cpactf/src/test/java/ctf/jdo/bugs/soak/TestSoak.java][main][1] = -> TRY {  -> LOOP { } ELSE { -> ch=r.read()@!(r.available()>0) } } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/sun/security/ssl/com/sun/net/ssl/internal/ssl/SSLSocketImpl/ReverseNameLookup.java][doClientSide][3] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> sslIS.read()@ -> IF { -> throw new RuntimeException("we shouldn't do reverse name lookup",)@!(session.getPeerHost().equals("127.0.0.1",)) } } CATCH(Exception) {}
results[https://github.com/apache/harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/sql/src/test/java/org/apache/harmony/sql/tests/javax/sql/rowset/serial/SerialBlobTest.java][testGetBinaryStream][1] = -> TRY {  -> is=serialBlob.getBinaryStream()@ -> LOOP { -> b=is.read()@ -> assertEquals(buf[++i],b,)@ } } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/e29089cd2f1827672b8e1fd7d492d8de8a128937/test/sun/security/ssl/javax/net/ssl/FixingJavadocs/SSLSessionNulls.java][doClientSide][3] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> sslIS.read()@ -> IF { -> throw new IOException("getValueNames didn't return 0-length arrary",)@names==null||names.length!=0 } } CATCH(Exception) {}
results[https://github.com/wolfdancer/cotta/blob/f2c6604b06b2175e1bf6ad0b5ba8ce2e6e566271/core/behaviour/src/net/sf/cotta/memory/InMemoryFileSystemTestBase.java][testProvideInputStream][2] = -> TRY {  -> is=fileSystem.createInputStream(path,)@ -> registerResource(is,)@ -> ensure.that(is.read(),).eq(expected,)@ } CATCH(Exception) {}
results[https://github.com/nyholku/purejavacomm/blob/fbf3fe1a858313c414debf81d25b264a22c61776/src/purejavacomm/testsuite/TestBase.java][drain][1] = -> TRY {  -> LOOP { -> LOOP { -> ins.read()@(n=ins.available())>0 } } } CATCH(Exception) {}
results[https://github.com/Metaswitch/jsip/blob/12a025b1c1023508ad4dd11f8a2725d7ccae975c/src/tools/tracesviewer/TracesSocket.java][run][5] = -> TRY { -> LOOP { -> i=is.read()@ -> fw.write(i,)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/rtreffer/smack/blob/38b1acc8a1048de8ebb12498e9364ca6521f0120/test-unit/org/jivesoftware/smackx/bytestreams/socks5/Socks5ClientForInitiatorTest.java][shouldSuccessfullyConnectThroughLocalSocks5Proxy][7] = -> TRY {  -> in=socket.getInputStream()@ -> LOOP { -> assertEquals(data[i],in.read(),)@i<data.length } } CATCH(Exception) {}
results[https://github.com/brooklyncentral/brooklyn/blob/047f3392f4b2135c00bd5d207e8f2757726d1147/utils/common/src/test/java/brooklyn/util/maven/MavenArtifactTest.java][checkAvailableUrl][1] = -> TRY { -> stream=new URL(url,).openStream()@ -> stream.read()@ -> stream.close()@ } CATCH(Exception) { -> throw Exceptions.propagate(e,)@ }
results[https://github.com/JesseC112233/416YCSB/blob/5c93c3ebb3f72d4717ef99f1ad6ba5c4e3b9df2f/core/src/main/java/com/yahoo/ycsb/InputStreamByteIterator.java][nextByte][6] = -> TRY { -> ret=ins.read()@ } CATCH(Exception) { -> throw new IllegalStateException(e,)@ } -> IF { -> throw new IllegalStateException("Past EOF!",)@ret==-1 } -> return (byte) ret@!(ret==-1)
results[https://github.com/hzbarcea/cosmo/blob/c7edebda6671d7117bac507b4ec24f2aba2e9c0f/src/test/unit/java/org/osaf/cosmo/eim/eimml/EimmlTypeConverterTest.java][testToBlob][7] = -> TRY {  -> resultStream=EimmlTypeConverter.toBlob(testEncoded,)@ -> LOOP { -> rv=resultStream.read()@ -> assertEquals("Byte "+i+" does not match",testBytes[i],rv,)@i<testBytes.length } } CATCH(Exception) {}
results[https://github.com/openpnp/openpnp/blob/9a56cd5be4d00c40167fbcb42ca8df1af2992a21/gui/src/org/openpnp/machine/reference/driver/GrblDriver.java][readChar][5] = -> TRY { -> LOOP { -> ch=input.read()@ch==-1&&!(disconnectRequested) } } CATCH(Exception) { -> logger.error("readChar()",e,)@ }
results[https://github.com/maxpowa/tukmc/blob/ded39e36f5f221d4502db1481dc2636ca7f64380/maxpowa/tukmc/RunnableUpdateCheck.java][getData][2] = -> TRY {  -> html=url.openStream()@ -> LOOP { -> c=html.read()@c!=-1 -> buffer.append((char) c,)@c!=-1 } } CATCH(Exception) {}
results[https://github.com/madiator/HadoopUSC/blob/7e8c4514f948e14197b7d350966a38ed3b553efc/src/test/org/apache/hadoop/hdfs/TestZeroSizeFile.java][testRecoverZeroChecksumFile][1] = -> TRY {  -> in=dfs.open(new Path(filestr,),0,)@ -> TestCase.assertEquals(-1,in.read(),)@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/niklasb/pse-broadcast-encryption/blob/03e92ca434c53e784179c6c6addac585efe1d35b/src/cryptocast/server/programs/HttpStreamer.java][main][2] = -> TRY {  -> fis=new FileInputStream(opts.file,)@ -> LOOP { -> fis.read()@ } -> server=new SimpleHttpStreamServer(fis,addr,"audio/mpeg",0x10000,null,)@ } CATCH(Exception) {}
results[https://github.com/dkfellows/taverna-server/blob/8e70f0141ab63fb4668db5266c2cfa12fa4fde3a/server-unix-forker/src/main/java/org/taverna/server/unixforker/Forker.java][copyFromSudo][1] = -> TRY {  -> LOOP { -> b=sudoStream.read()@ -> out.write(b,)@ } -> sudoStream.close()@ } CATCH(Exception) {}
results[https://github.com/apache/commons-io/blob/8db1153cae40e4da341981522309f43028ec4623/src/test/org/apache/commons/io/input/BOMInputStreamTest.java][testSkipWithBOM][4] = -> TRY {  -> in=new BOMInputStream(createDataStream(data,true,),)@ -> in.skip(2L,)@ -> assertEquals('C',in.read(),)@ } CATCH(Exception) {}
results[https://github.com/markus1978/clickwatch/blob/702e872957a188d6f58bbee85f95691299c951cc/external/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java][decrypt][4] = -> TRY {  -> pbeIV=readBytes(PBE_IV_LENGTH,in,)@ -> encryptionIV=readBytes(ENCRYPTION_IV_LENGTH,in,)@ -> keyLength=in.read()@ -> encryptedKeyBytes=readBytes(keyLength,in,)@ -> return new CipherInputStream(in,cipher,)@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/249ff22f64878a7eac7a4f62f92e7b706ed76c58/test/sun/security/ssl/javax/net/ssl/NewAPIs/SSLCtxAccessToSessCtx.java][doClientSide][3] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> IF { -> throw new Exception("Test failed, session_cache != sslctx_cache",)@sessCache!=sslctxCache } -> read=sslIS.read()@!(sessCache!=sslctxCache) } CATCH(Exception) {}
results[https://github.com/apache/tika/blob/83ab9987a94d8895ce98d336b3c887821e1ef665/tika-core/src/test/java/org/apache/tika/parser/ParsingReaderTest.java][testXML][6] = -> TRY {  -> stream=new ByteArrayInputStream(data.getBytes("UTF-8",),)@ -> reader=new ParsingReader(stream,"test.xml",)@ -> assertEquals(-1,stream.read(),)@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/e29089cd2f1827672b8e1fd7d492d8de8a128937/test/sun/security/ssl/javax/net/ssl/NewAPIs/SSLCtxAccessToSessCtx.java][doServerSide][3] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> read=sslIS.read()@ -> IF { -> throw new Exception("Test failed, session_cache != sslctx_cache",)@sessCache!=sslctxCache } } CATCH(Exception) {}
results[https://github.com/tavlima/fosstrak-ale/blob/59a8e9bd03fe2a927dcb5d88f0225a502ca25f6c/fc-commons/src/main/java/org/fosstrak/ale/util/StreamUtil.java][inputStream2String][1] = -> TRY { -> LOOP { -> i=in.read()@in.available()>0 -> buf.append((char) i,)@ } } CATCH(Exception) { -> LOG.error("could not convert input stream to string - returning null.",e,)@ }
results[https://github.com/concord-consortium/geogebra/blob/e2d3083fe6a11f11acae793b1ba5a7e5b40a9aef/geogebra/mathpiper/org/mathpiper/io/JarFileInputStream.java][<init>][4] = -> TRY {  -> stream=con.getInputStream()@ -> LOOP { -> c=stream.read()@ -> iString.append((char) c,)@ } } CATCH(Exception) {}
results[https://github.com/photon-infotech/commons/blob/67f6832e9a87a372503b99f03169513557187cfd/src/test/java/com/photon/phresco/configuration/ConfigReaderTest.java][testCanDelete1][1] = -> TRY {  -> mock=org.mockito.Mockito.mock(InputStream.class,)@ -> when(mock.read(),).thenThrow(IOException.class,)@ -> configReader=new ConfigReader(mock,)@ } CATCH(Exception) {}
results[https://github.com/uib/matterhorn/blob/0b3a58b295d8c028f7e4b98390f43e8701902922/modules/matterhorn-common/src/test/java/org/opencastproject/util/IoSupportTest.java][testWithResource][1] = -> TRY {  -> r=this.getClass().getResourceAsStream("/cover.png",)@ -> s=withResource(r,new Function<InputStream, String>(),)@ -> r.read()@ } CATCH(Exception) {}
results[https://github.com/eclipse/eclipse.platform.ua/blob/7b0a5df13b287c981e82e97e41f6efc7844c2c40/org.eclipse.ua.tests/help/org/eclipse/ua/tests/help/webapp/ParallelServerAccessTest.java][readLoadServlet][2] = -> TRY {  -> input=url.openStream()@ -> LOOP { -> nextChar=input.read()@ } -> input.close()@ } CATCH(Exception) {}
results[https://github.com/apache/synapse/blob/c99d2a7c7753e2b4919484182c3ada6939321a9a/scratch/infravio/Mediators-SynapseObject/org/apache/synapse/synapseobject/Utils.java][xmlToSynapseObject][1] = -> TRY { -> LOOP { -> xml+=(char) inStream.read()@inStream.available()>0 } } CATCH(Exception) { -> ex.printStackTrace()@ } -> return xmlToSynapseObject(xml,)@
results[https://github.com/wolfdancer/cotta/blob/8b1f13a020bcc50d95fa2194cdd9bd9d88582fd3/core/behaviour/src/net/sf/cotta/acceptance/TfsTestCase.java][testProvideInputStream][1] = -> TRY {  -> stream=file.inputStream()@ -> registerResource(stream,)@ -> ensure.that(stream.read(),).eq(expected,)@ } CATCH(Exception) {}
results[https://github.com/exxcellent/wings3/blob/82f5cbee630db2d7e7f690a900cf8d4fc5111314/wings-cms/src/java/org/wings/DebugTagHandler.java][executeTag][1] = -> TRY {  -> sb=new StringBuilder()@ -> LOOP { -> sb.append((char) input.read(),)@ } } CATCH(Exception) {}
results[https://github.com/hamishmorgan/ERL/blob/7087dd48c3c3c550bcf8dce87a88f68a68533224/src/test/java/uk/ac/susx/mlcl/erl/tac/io/TestReplacingInputStream.java][testClose][2] = -> TRY {  -> ris=new ReplacingInputStream(delegate,find.getBytes("UTF-8",),replace.getBytes("UTF-8",),)@ -> ris.close()@ -> ris.read()@ } CATCH(Exception) {}
results[https://github.com/forcedotcom/aura/blob/773864385d527f36355c04acbfd032774e6ebd08/aura-util/src/test/java/org/auraframework/util/json/JsonStreamReaderTest.java][testJsonPlusBinary][1] = -> TRY {  -> in=new ByteArrayInputStream(baos.toByteArray(),)@ -> reader=new JsonStreamReader(in,)@ -> assertEquals(-1,in.read(),)@ } CATCH(Exception) {}
results[https://github.com/skrusche63/AMES-Web-Service/blob/002c8439a5cc682634ad17a229c8da0222658383/ames-web-service/src/de/kp/ames/web/test/transform/TransformTestImpl.java][setUp][1] = -> TRY {  -> is=loader.getResourceAsStream(fileName,)@ -> bos=new ByteArrayOutputStream()@ -> bos.write(is.read(),)@ -> bytes=bos.toByteArray()@ } CATCH(Exception) {}
results[https://github.com/rackerlabs/atom-hopper/blob/01be79d397cb824621eadcaded53b8bde7b6f657/hopper/src/test/java/org/atomhopper/util/config/resource/uri/URIConfigurationResourceTest.java][shouldGenerateInputStreamWithValidLocatableURIs][2] = -> TRY {  -> result=configurationResource.getInputStream()@ -> assertNotNull("InputStream returned by the static classpath URI, \""+VALID_CLASSPATH_URI+"\" must not be null",result,)@ -> assertTrue("InputStream should have at least one byte readable",result.read()>0,)@ -> result.close()@ } CATCH(Exception) {}
results[https://github.com/bonitasoft/bonita-studio/blob/2bd5b75b18aeb1ab545055cd977e54f194f7936d/tests/org.bonitasoft.studio.repository.test/src/org/bonitasoft/studio/repository/test/TestImportRepository.java][testImportGroovy][1] = -> TRY {  -> is=artifact.getResource().getContents()@ -> assertTrue(is.read()>0,)@ -> is.close()@ } CATCH(Exception) {}
results[https://github.com/SAP/cloud-odata-java/blob/0bf83efef091f9a9b4583cfff1643d8315423281/odata-core/src/test/java/com/sap/core/odata/core/ep/util/CircleStreamBufferTest.java][testSimpleWriteReadSignBySign][2] = -> TRY {  -> inStream=csb.getInputStream()@ -> LOOP { -> buffer[i]=(byte) inStream.read()@i<buffer.length } -> result=new String(buffer,)@ } CATCH(Exception) {}
results[https://github.com/os890/wink_patches/blob/d63bf5b4fcb9c368f0700d96139f9af98b32281b/wink-itests/wink-itest/wink-itest-targeting/src/test/java/org/apache/wink/itest/largeentity/WinkClientLargeEntityTest.java][testSendLargeString][1] = -> TRY {  -> respStream=response.getEntity(InputStream.class,)@ -> LOOP { -> respByte=respStream.read()@ -> assertEquals(entity[c]%256,(byte) respByte,)@c<entity.length } } CATCH(Exception) {}
results[https://github.com/tu-vu-duy/tools/blob/27a58e1a3e7d97f90f588921d36e900bd886e3b8/webunit/src/main/java/org/exoplatform/wsqa/httpclient/HttpRequestHeader.java][<init>][2] = -> TRY {  -> LOOP { -> code=is.read()@ -> rdata.write(code,)@ -> line.write(code,)@ } } CATCH(Exception) {}
results[https://github.com/calebegg/proof-pad/blob/3fc9ed65f194fe1e5e42d20bf171aad77c8f199f/src/org/proofpad/Acl2.java][run][1] = -> LOOP { -> TRY { -> c=in.read()@ -> logOutput.append((char) c,)@!(c==-1) -> spool.add((char) c,)@!(c==-1) } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/electronic-arts/smack/blob/45e265e41964351e3843d6757a42d8a80d9f00d6/test-unit/org/jivesoftware/smackx/bytestreams/socks5/Socks5ClientForInitiatorTest.java][shouldSuccessfullyEstablishConnectionAndActivateSocks5Proxy][3] = -> TRY {  -> in=initiatorSocket.getInputStream()@ -> LOOP { -> out.write(i,)@i<10 -> assertEquals(i,in.read(),)@i<10 } } CATCH(Exception) {}
results[https://github.com/kframework/k/blob/bf229ac6cc8d6a9adab96b8efece74c7aa646c3f/javasources/K3Java/src/org/kframework/krun/ioserver/resources/BufferedReader.java][readbyte][1] = -> TRY {  -> IF { -> tmp=is.read()@!(integer==-2) -> IF { -> throw new EOFException()@integer==-2 && tmp==-1 } } -> return (byte) tmp@!(integer==-2) } CATCH(Exception) {}
results[https://github.com/ZorgGemak/OpenhealthManager/blob/d7f38230733f88014a918a6e60ed74806dec76b6/src/org/bn/coders/per/PERAlignedDecoder.java][decodeIntegerValueAsBytes][2] = -> TRY {  -> LOOP { -> bt=stream.read()@!(i<intLen) -> IF { -> throw new IllegalArgumentException("Unexpected EOF when decoding!",)@i<intLen && bt==-1 } } } CATCH(Exception) {}
results[https://github.com/gurkerl83/millipede-xtreemfs/blob/5674c81fc02a40f443a7f796d0b7d4c95274bb25/servers/test/org/xtreemfs/test/foundation/oncrpc/server/SimpleRPCServerTest.java][testPingPong][1] = -> TRY {  -> in=sock.getInputStream()@ -> LOOP { -> dataByte=in.read()@ -> assertTrue(dataByte!=-1,)@ -> buf.put((byte) dataByte,)@ } } CATCH(Exception) {}
results[https://github.com/i2p/i2p.i2p/blob/2f7eb56790fd272df8c48f8d1c8c5f4d803c1131/apps/streaming/java/test/junit/net/i2p/client/streaming/impl/ConnectCloseTest.java][run][3] = -> TRY { -> in=socket.getInputStream()@ -> c=in.read()@ -> IF { -> throw new RuntimeException("hrm, we got data?  ["+c+"]",)@c!=-1 } } CATCH(Exception) { -> _log.error("error running",e,)@ }
results[https://github.com/vivo-project/Tools/blob/727d63b4d30a0c528f2bf744bf2276444fc2469f/Harvester/branches/Staging/src/main/java/org/vivoweb/ingest/translate/GlozeTranslator.java][translateFile][2] = -> TRY { -> LOOP { -> bytedata=this.inStream.read()@ -> tempWrite.write(bytedata,)@ } -> this.inStream.close()@ } CATCH(Exception) { -> log.error("",e,)@ }
results[https://github.com/wolfc/microcontainer/blob/db0f204d2bfa745ac2c8bee2e1f8cac4a71876e9/container/src/main/org/jboss/net/protocol/vfsfile/Handler.java][main][2] = -> TRY {  -> is=url.openStream()@ -> LOOP { -> System.out.print((char) is.read(),)@is.available()!=0 } -> is.close()@ } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/sun/security/ssl/com/sun/net/ssl/internal/ssl/ClientHandshaker/CipherSuiteOrder.java][doServerSide][1] = -> TRY {  -> sslIS=sslSocket.getInputStream()@ -> read=sslIS.read()@ -> System.out.println("Server read: "+read,)@ -> IF { -> throw new Exception("Test failed: Wrong cipher suite is chosen",)@!(cipherSuiteChosen.equals("SSL_RSA_WITH_RC4_128_MD5",)) } } CATCH(Exception) {}
results[https://github.com/sleuthkit/hadoop_framework/blob/9211b9aab66aafa0b601969f59a5a846772f3591/core/src/test/java/com/lightboxtechnologies/spectrum/FsEntryTest.java][testGetInputStream][1] = -> TRY {  -> stream=e.getInputStream()@ -> assertTrue(stream!=null,)@ -> assertEquals(6,stream.read(actual,),)@ -> assertEquals(-1,stream.read(),)@ } CATCH(Exception) {}
results[https://github.com/sefirot/androidStuff/blob/56b22a9a5b3a6ac2edcad7bf95c7d85c9958e578/Berichtsheft/src/com/applang/Util1.java][readAsset][1] = -> TRY { -> is=am.open(fileName,)@ -> LOOP { -> c=is.read()@ -> sb.append((char) c,)@ } } CATCH(Exception) { -> Log.e(TAG,"readAsset",e,)@ }
results[https://github.com/DealerDotCom/grinder/blob/28c4f60321da7b18cf658b50421ec61057c3b2a3/source/tests-src/net/grinder/console/client/TestConsoleClientFactory.java][testConnection][1] = -> TRY {  -> socketInput=socketAcceptor.getAcceptedSocket().getInputStream()@ -> assertEquals(2,socketInput.read(),)@ -> assertEquals(0,socketInput.available(),)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-io/blob/2a88004160437ba424e775c95160bef88b5db43d/src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java][testSkipWithoutBOM][1] = -> TRY {  -> in=new BOMInputStream(createUtf8DataStream(data,false,),)@ -> in.skip(2L,)@ -> assertEquals('C',in.read(),)@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/tomason/anadix/blob/30ee0c76c5e7faeb937ce65e931320c52a132eca/anadix-tests/src/test/java/org/analyzer/factories/AbstractSourceTest.java][testGetText1][1] = -> TRY {  -> e=new IOException("test exception",)@ -> when(is.read(),).thenThrow(e,)@ -> verify(is,).close()@ } CATCH(Exception) {}
