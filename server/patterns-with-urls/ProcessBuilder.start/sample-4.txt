results[https://github.com/kompiro/jamcircle/blob/f58f2960ea18cf070d891eeb9d4f57c3aa0bff2b/org.kompiro.jamcircle.kanban.ui.learning/src/learning/Learning.java][name][2] = -> TRY {  -> builder=new ProcessBuilder("/usr/local/git/bin/git",)@ -> process=builder.start()@ -> stream=process.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/avsm/signpost/blob/96aa31ab71dec038b87a509ca70622710d1baf70/android_tools/NetQoSDiversityMonitor/src/cl/cam/ac/uk/erdos/net/RttEvaluationService.java][readFile][1] = -> TRY { -> cmd=new ProcessBuilder(args,)@ -> process=cmd.start()@ -> in=process.getInputStream()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/BaseXdb/basex/blob/0a839ab7004007adae3d99862dade4a5005fccb2/src/org/basex/BaseXWebServer.java][eval][2] = -> TRY {  -> pb=new ProcessBuilder(exec,)@ -> pb.redirectErrorStream(true,)@ -> is=pb.start().getInputStream()@ } CATCH(Exception) {}
results[https://github.com/internetarchive/pig/blob/de24d5d8c50fc5e04ba649405ec8d27e03430a80/contrib/zebra/src/test/org/apache/hadoop/zebra/types/TestStorageGrammar.java][<clinit>][5] = -> TRY { -> process=new ProcessBuilder(command,).start()@ -> is=process.getInputStream()@ -> System.out.printf("Output of running %s is:",command,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/dstepanov/coffeescript-netbeans/blob/1af2eee5a4ad08b2db328274a001311732a46798/src/coffeescript/nb/CoffeeScriptNodeJSCompiler.java][execWindows][1] = -> TRY {  -> p=pb.start()@ -> errStream=p.getErrorStream()@ -> inputStream=p.getInputStream()@ -> p.waitFor()@ -> p.destroy()@ } CATCH(Exception) {}
results[https://github.com/redstar3894/android-gcc/blob/9282a3bf08b3c88046756e5b0814284634a23125/libjava/testsuite/libjava.lang/Process_7.java][main][2] = -> TRY { -> pb=new ProcessBuilder("env",)@ -> e=pb.environment()@ -> p=pb.start()@ -> is=p.getInputStream()@ } CATCH(Exception) { -> System.out.println(ex.toString(),)@ }
results[https://github.com/jbosstm/narayana/blob/2c1b6e7bb3aa24deeffcc81658e823b46a91b5f3/ArjunaJTS/integration/src/test/java/com/arjuna/ats/jta/distributed/SimpleIsolatedServers.java][testSimultaneousRecover][1] = -> TRY {  -> IF { -> processBuilder=new ProcessBuilder("/bin/sh","-c","kill -3 $PPID",)@ -> processBuilder.redirectErrorStream(true,)@ -> process=processBuilder.start()@ -> inputStream=process.getInputStream()@ } } CATCH(Exception) {}
results[https://github.com/sleepsort/lucene-solr/blob/98b6325a5b77a005fb62d546ba96aa906fcf544c/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash.java][forkTest][10] = -> TRY {  -> pb=new ProcessBuilder(cmd,)@ -> pb.directory(tempDir,)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> is=p.getInputStream()@ -> p.waitFor()@ } CATCH(Exception) {}
results[https://github.com/tentejswi/PersonalityExtraction/blob/f1df359c2fa57884b9f9dac7ce9cd636f130d558/src/senna/RunSenna.java][getSennaOutput][3] = -> TRY { -> pb=new ProcessBuilder("bash","-c",cmd,)@ -> pb.directory(sennaInstallationDir,)@ -> shell=pb.start()@ -> shellIn=shell.getInputStream()@ -> shellExitStatus=shell.waitFor()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jonosterman/cube/blob/bfdf69500a1b2d7e90f7799c1cf71c268b8ff6c1/cube-client-wm/src/main/java/ch/admin/vbs/cube/client/wm/xrandx/impl/AcpiListener.java][run][1] = -> TRY { -> pb=new ProcessBuilder("acpi_listen",)@ -> proc=pb.start()@ -> bufferedStdOutput=new BufferedReader(new InputStreamReader(proc.getInputStream(),),)@ } CATCH(Exception) { -> LOG.error("ACPI Listener exit abnormaly",e,)@ }
results[https://github.com/attdevsupport/ARO/blob/1a97a797b9aed36ed73ca2c95b6c7ab7c6a1bb4c/ARODataAnalyzer/src/com/att/aro/pcap/windows/WinPacketCapture.java][getListOfDevices][2] = -> TRY { -> pb2=new ProcessBuilder(windumpCommand,)@ -> p2=pb2.start()@ -> windumpReader=new BufferedReader(new InputStreamReader(p2.getInputStream(),),)@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/eclipse/cdo.infrastructure/blob/3895bef10287f1b527935cff543a3eca53868b31/org.eclipse.emf.cdo.releng.promotion/src/promoter/util/IO.java][executeProcess][1] = -> TRY { -> processBuilder=new ProcessBuilder(command,)@ -> processBuilder.redirectErrorStream(true,)@ -> process=processBuilder.start()@ -> stream=process.getInputStream()@ -> process.waitFor()@ } CATCH(Exception) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/dukeboard/kevoree-genetic/blob/77c7edf64964a205c33331e43e8baae1946972c0/MOEAFramework-1.18/src/main/java/org/moeaframework/algorithm/pisa/PISAAlgorithm.java][initialize][3] = -> TRY { -> process=selector.start()@ -> RedirectStream.redirect(process.getInputStream(),System.out,)@ -> RedirectStream.redirect(process.getErrorStream(),System.err,)@ } CATCH(Exception) { -> throw new AlgorithmException(this,e,)@ }
results[https://github.com/OurGrid/OurVirt/blob/3af7204918e31daf16a63831e8c80126a37cf64b/src/org/ourgrid/virt/strategies/HypervisorUtils.java][runProcess][1] = -> TRY {  -> startedProcess=processBuilder.start()@ -> stdOutCallable=createStreamCallable(startedProcess.getInputStream(),)@ -> stdErrCallable=createStreamCallable(startedProcess.getErrorStream(),)@ -> waitForCallable=createWaitForCallable(startedProcess,)@ } CATCH(Exception) {}
results[https://github.com/jonosterman/cube/blob/5655123f49ce88e491005570603c07ee6ca45e66/cube-client-wm/src/test/java/ch/admin/vbs/cube/client/wm/mock/AcpiListener.java][run][1] = -> TRY { -> pb=new ProcessBuilder("acpi_listen",)@ -> proc=pb.start()@ -> bufferedStdOutput=new BufferedReader(new InputStreamReader(proc.getInputStream(),),)@ } CATCH(Exception) { -> LOG.error("ACPI Listener exit abnormaly",)@ }
results[https://github.com/guardianproject/SecureSmartCam/blob/e6eef28c3b9f3126d15a70c2c0553e916812096f/src/org/witness/ssc/video/FFMPEGWrapper.java][execProcess][1] = -> TRY {  -> pb=new ProcessBuilder(cmds,)@ -> pb.redirectErrorStream(true,)@ -> process=pb.start()@ -> reader=new BufferedReader(new InputStreamReader(process.getInputStream(),),)@ } CATCH(Exception) {}
results[https://github.com/melexis/activiti/blob/e84b4a29581b981d51a83d1f6cf6730d67b53ece/modules/activiti-engine/src/main/java/org/activiti/impl/ant/LaunchThread.java][run][9] = -> processBuilder=new ProcessBuilder(cmd,).redirectErrorStream(true,).directory(dir,)@ -> TRY { -> process=processBuilder.start()@ -> consoleStream=process.getInputStream()@ } CATCH(Exception) { -> throw new BuildException("couldn't launch "+cmdString(cmd,),e,)@ }
results[https://github.com/ceylon/ceylon-compiler/blob/19a4c80a22e354b0d1ac005509c12958460a924d/langtools/test/tools/javac/api/ToolProvider/ToolProviderTest2.java][run][27] = -> TRY {  -> pb=new ProcessBuilder(cmd,).redirectErrorStream(true,)@ -> p=pb.start()@ -> r=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ -> rc=p.waitFor()@ } CATCH(Exception) {}
results[https://github.com/Sushant/wse/blob/87600a62d4412207e208964b7ca66dd0b1e67590/hw3/src/edu/nyu/cs/cs2580/IndexerInvertedDoconly.java][corpusTermFrequency][2] = -> TRY { -> LOOP { -> pb=new ProcessBuilder(commands,)@!(_corpusTermFrequencyCache.containsKey(term,)) -> p=pb.start()@!(_corpusTermFrequencyCache.containsKey(term,)) -> isr=new InputStreamReader(p.getInputStream(),)@!(_corpusTermFrequencyCache.containsKey(term,)) } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/netceteragroup/esa-beam/blob/e40d8091fded0f1cbbb3c2d979f95f1ca103a417/beam-3dveglab-vlab/src/main/scripts/Install.java][run3DVegLabProcessor][1] = -> TRY {  -> pb=new ProcessBuilder(cmd,)@ -> proc=pb.start()@ -> new Scanner(proc.getInputStream(),).useDelimiter("\\Z",).next()@ -> return proc.waitFor()@ } CATCH(Exception) {}
results[https://github.com/attdevsupport/ARO/blob/1a97a797b9aed36ed73ca2c95b6c7ab7c6a1bb4c/ARODataAnalyzer/src/com/att/aro/pcap/windows/WinPacketCapture.java][execute][1] = -> TRY { -> pb1=new ProcessBuilder(elevateCommand,)@ -> p1=pb1.start()@ -> p1.waitFor()@ -> reader=new BufferedReader(new InputStreamReader(p1.getInputStream(),),)@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/njbartlett/repoindex/blob/d8de0890cfa58980a5a72cac6206cfec75311840/org.osgi.impl.bundle.bindex2.test/src/org/example/tests/cli/TestCommandLine.java][execute][6] = -> TRY {  -> builder=new ProcessBuilder(cmdLine,).directory(runDir,).redirectErrorStream(true,)@ -> process=builder.start()@ -> processOutput=Utils.readStream(process.getInputStream(),)@ -> returnCode=process.waitFor()@ } CATCH(Exception) {}
results[https://github.com/minnal/minnal/blob/04c8eba5338ac587cbe79d6696a7f42598a90033/minnal-generator/src/main/java/org/minnal/generator/ExecutableCommand.java][execute][1] = -> builder=new ProcessBuilder(commandArgs,)@ -> TRY { -> p=builder.start()@ -> inheritIO(p.getInputStream(),System.out,)@ -> inheritIO(p.getErrorStream(),System.err,)@ } CATCH(Exception) { -> throw new MinnalGeneratorException("Failed while starting the project",e,)@ }
results[https://github.com/bomm/thera-pi-2/blob/ccfca7bb460b91b980cd08cb6a6149064595a575/Reha/src/patientenFenster/PatNeuanlage.java][calcKilometer][1] = -> TRY { -> builder=new ProcessBuilder("java","CalcKilometer",patientAdr,mandAdr,)@ -> p=builder.start()@ -> s=new Scanner(new InputStreamReader(p.getInputStream(),"windows-1252",),).useDelimiter("\\Z",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sefirot/androidStuff/blob/56b22a9a5b3a6ac2edcad7bf95c7d85c9958e578/BerichtsheftApp/src/com/applang/Util2.java][dumpSqlite][1] = -> TRY { -> builder=new ProcessBuilder("sqlite3",db.getCanonicalPath(),".dump",).redirectErrorStream(true,)@ -> process=builder.start()@ -> inputStream=process.getInputStream()@ -> exitcode=process.waitFor()@ } CATCH(Exception) { -> handleException(e,)@ }
results[https://github.com/SharkHunter/Channel/blob/2145eb3579f98bc6ca1c4387cfc0dd7809f3a956/src/com/sharkhunter/channel/ChannelUtil.java][execute][1] = -> TRY { -> Channels.debug("about to execute "+pb.command(),)@ -> pb.redirectErrorStream(true,)@ -> pid=pb.start()@ -> is=pid.getInputStream()@ -> pid.waitFor()@ } CATCH(Exception) { -> Channels.debug("executing external script failed "+e,)@ }
results[https://github.com/eskang/validAlloy/blob/983b3f710658214231e6ab4dbf3d7f2788be3204/src/Utils.java][printindex][2] = -> TRY { -> pb=new ProcessBuilder(cmds,)@ -> pb.directory(path,)@ -> pr=pb.start()@ -> out=pr.getOutputStream()@ -> in=pr.getInputStream()@ -> pr.waitFor()@ } CATCH(Exception) { -> exc.printStackTrace()@ }
results[https://github.com/cp149/jactor-logger/blob/b5c5add81003fccb5f7be0c9b78bf2a457d5ad3e/src/test/java/github/com/cp149/MvnCommandexe.java][executeCommands][1] = -> TRY { -> pb=new ProcessBuilder(arg,)@ -> pb.environment().put("PATH",path,)@ -> pb.redirectErrorStream(true,)@ -> process=pb.start()@ -> fis=process.getInputStream()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/jahnje/delcyon-capo/blob/942f1a3f87c3ee09da8f2286c20db5ba9204627a/java/com/delcyon/capo/resourcemanager/types/ShellResourceDescriptor.java][open][1] = -> TRY {  -> processBuilder=new ProcessBuilder()@ -> processBuilder.command(commands,)@ -> processBuilder.redirectErrorStream(true,)@ -> process=processBuilder.start()@ -> stdoutThreadedInputStreamReader=new ThreadedInputStreamReader(process.getInputStream(),this,)@ -> stdinOutputStream=process.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/OurGrid/OurVirt/blob/3af7204918e31daf16a63831e8c80126a37cf64b/src/org/ourgrid/virt/strategies/LinuxUtils.java][getCPUStats][2] = -> TRY {  -> psProcessBuilder=new ProcessBuilder("/bin/bash","-c",topCmd.toString(),)@ -> psProcess=psProcessBuilder.start()@ -> psIn=psProcess.getInputStream()@ -> psExitValue=psProcess.waitFor()@ -> IF { -> throw new Exception("Could not retrieve cpu statistics.",)@topStats.length<CPU_TIME_INDEX+1 && !(psExitValue!=0) } } CATCH(Exception) {}
results[https://github.com/memlab/Penn-TotalRecall/blob/86cf96ea3cc03ebe99c95fe309b12de2912f6993/src/info/SysInfo.java][runningCompiz][1] = -> TRY { -> pb=new ProcessBuilder(ps.getAbsolutePath(),"-A",)@ -> psProc=pb.start()@ -> psProc.waitFor()@ -> br=new BufferedReader(new InputStreamReader(psProc.getInputStream(),),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ttron/lab/blob/48a9930884791c3fa1869ad3bcc9adb656ce9f76/nexus-oss-2.11.2-06/testsuite/modern-testsuite/src/test/java/org/sonatype/nexus/testsuite/obr/ObrITSupport.java][deployUsingObrIntoFelix][2] = -> TRY {  -> pb=new ProcessBuilder("java","-Dfelix.felix.properties="+felixConfig.toURI(),"-jar","bin/felix.jar",)@ -> pb.directory(felixHome,)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> input=p.getInputStream()@ -> output=p.getOutputStream()@ -> p.destroy()@ } CATCH(Exception) {}
results[https://github.com/thiago-silva/epic-java/blob/0493e71a30b73bea584ec0d1a617c68827abf60c/test/tools/javac/EarlyAssertWrapper.java][run][9] = -> TRY {  -> pb=new ProcessBuilder(cmd,)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> p.getOutputStream().close()@ -> in=new DataInputStream(p.getInputStream(),)@ -> rc=p.waitFor()@ } CATCH(Exception) {}
results[https://github.com/service-oriented-science/Globus-Crux-Core/blob/bab84740c0144136df33a3765626b5e6e2b9c6c5/ajaxUI/mediator/src/main/java/org/cyberaide/security/Myproxy.java][retrieveCertificate][1] = -> TRY { -> pb=new ProcessBuilder("id","-u",)@ -> p=pb.start()@ -> input=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ -> pb=new ProcessBuilder("chmod","600",outputFile,)@ -> pb.start()@ } CATCH(Exception) { -> log.info("Failed to retrieve proxy certificate!!\n"+e,)@ }
results[https://github.com/arifhn/NSTools/blob/81a4a87655b7884038bbfa78f90ae49056438827/src/mobi/cyann/nstools/SysCommand.java][run][3] = -> TRY { -> pb=new ProcessBuilder(cmd,)@ -> p=pb.start()@ -> err=new StreamGobbler(p.getErrorStream(),)@ -> out=new StreamGobbler(p.getInputStream(),)@ -> p.waitFor()@ } CATCH(Exception) { -> Log.e(LOG_TAG,"",e,)@ }
results[https://github.com/pcingola/BigDataScript/blob/ab6e896efaca71a130005ec9bbb8125f6ac1a6c8/src/ca/mcgill/mcb/pcingola/bigDataScript/osCmd/Exec.java][run][1] = -> TRY { -> pb=new ProcessBuilder(args,)@ -> process=pb.start()@ -> stdout=new StreamGobbler(process.getInputStream(),false,)@ -> stderr=new StreamGobbler(process.getErrorStream(),true,)@ -> exitValue=process.waitFor()@ } CATCH(Exception) { -> throw new RuntimeException("Cannot execute commnads: '"+commands+"'",)@ }
results[https://github.com/epabst/sonar-plugins/blob/6d9d8d237de6885c03e27faff097255e07876636/phpdepend/src/main/java/org/sonar/plugins/phpdepend/PhpDependExecutor.java][execute][1] = -> TRY { -> builder=new ProcessBuilder(cmd,)@ -> builder.redirectErrorStream(true,)@ -> p=builder.start()@ -> new StreamGobbler(p.getInputStream(),).start()@ -> returnCde=p.waitFor()@ } CATCH(Exception) { -> throw new PhpDependExecutionException(e,)@ }
results[https://github.com/simonAllier/diversify-statements/blob/43b9f0b35d1370b10a435bfbe1fdf595d424b3a0/src/main/java/fr/inria/diversify/transformation/builder/AntBuilder.java][runPrivate][1] = -> probuilder=new ProcessBuilder(command,)@ -> probuilder.directory(new File(System.getProperty("user.dir",),),)@ -> TRY { -> process=probuilder.start()@ -> is=process.getInputStream()@ -> process.waitFor()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/eclipse/cdo.infrastructure/blob/a8cbf482b8cca1e8c47cf095972184c92fdc3542/org.eclipse.emf.cdo.releng.promotion/src/Ant.java][executeAntScript][2] = -> TRY { -> processBuilder=new ProcessBuilder(ant,"-f",getScript().getAbsolutePath(),)@ -> processBuilder.redirectErrorStream(true,)@ -> process=processBuilder.start()@ -> stream=process.getInputStream()@ -> process.waitFor()@ } CATCH(Exception) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/talos-rowing/talos-rowing/blob/2994e8c9677f5f1db217ddd7407b904e3498bc43/swing/src/main/java/org/nargila/robostroke/oggz/ExecHelper.java][exec][1] = -> TRY {  -> pb=new ProcessBuilder(args,)@ -> pb.redirectErrorStream(true,)@ -> proc=pb.start()@ -> is=proc.getInputStream()@ -> status=proc.waitFor()@ -> IF { -> throw new IllegalStateException(msg,)@status!=0 } } CATCH(Exception) {}
results[https://github.com/thecookie/Ardor3D/blob/6914b6b6e96130cece878699f14c870802814cdc/ardor3d-examples/src/main/java/com/ardor3d/example/RunExamples.java][run][1] = -> TRY { -> pb=new ProcessBuilder(args,)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> in=p.getInputStream()@ -> console=(showConsole)?new DisplayConsole(clazz.getCanonicalName(),p,):null@ } CATCH(Exception) { -> JOptionPane.showMessageDialog(RunExamples.this,ex.toString(),)@ }
results[https://github.com/spontecorp/ferretotalserver/blob/3b334b92338e94a1f3fddda067c20505afcdfb63/src/java/com/spontecorp/ferretotalserver/controller/bean/FileDownloadController.java][getServerDumpData][2] = -> TRY { -> IF { -> pb=new ProcessBuilder(command,)@ -> process=pb.start()@ -> in=process.getInputStream()@ } } CATCH(Exception) { -> System.out.println("Error al crear el Respaldo de la Base de Datos getServerDumpData(): "+ex.getMessage(),)@ }
results[https://github.com/orcc/orcc/blob/92120f18e4cbaafebe1ebfb56e9343720ff2c655/eclipse/plugins/net.sf.orcc.core/src/net/sf/orcc/util/OrccUtil.java][runExternalProgram][1] = -> TRY { -> builder=new ProcessBuilder(cmdList,)@ -> process=builder.start()@ -> process.waitFor()@ -> reader=new BufferedReader(new InputStreamReader(process.getInputStream(),),)@ } CATCH(Exception) { -> OrccLogger.severeln(e.getMessage(),)@ }
results[https://github.com/tentejswi/PersonalityExtraction/blob/f1df359c2fa57884b9f9dac7ce9cd636f130d558/src/senna/RunSenna.java][main][1] = -> TRY { -> LOOP { -> pb=new ProcessBuilder("bash","-c",cmd,)@ -> pb.directory(sennaInstallationDir,)@ -> shell=pb.start()@ -> shellIn=shell.getInputStream()@ -> shellExitStatus=shell.waitFor()@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/rob42/freeboard-server/blob/c60d0ee8bc04deee87035c0d73942d9058fe4fd0/src/main/java/nz/co/fortytwo/freeboard/server/util/ForkWorker.java][doInBackground][1] = -> TRY { -> process=builder.start()@ -> res=process.getInputStream()@ -> LOOP { -> IF { -> process.destroy()@!((len=res.read(buffer,0,buffer.length,))!=-1) -> return ""@(len=res.read(buffer,0,buffer.length,))!=-1 } } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Pardot/Rhombus/blob/6d0e3b92126e833952fec91629d0ac488ae336f1/src/test/java/com/pardot/rhombus/functional/SSTableWriterITCase.java][testInsertingSomeNullValuesInSchema_simple][2] = -> TRY {  -> LOOP { -> builder=new ProcessBuilder("sstableloader","-d","localhost",SSTablePath,)@ -> builder.redirectErrorStream(true,)@ -> p=builder.start()@ -> r=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ } } CATCH(Exception) {}
results[https://github.com/cubictest/cubictest/blob/8ceef746b75fdbb7b7b08dcc9f3c7c7ba4e29b1c/CubicTestWatirExporter/src/main/java/org/cubictest/exporters/watir/runner/RunnerSetup.java][run][1] = -> TRY { -> builder=new ProcessBuilder( new String[],)@ -> builder.redirectErrorStream(true,)@ -> process=builder.start()@ -> terminationDetector=new ProcessTerminationDetector(process,this,)@ -> input=new BufferedReader(new InputStreamReader(process.getInputStream(),),)@ } CATCH(Exception) { -> ErrorHandler.logAndRethrow(e,)@ }
results[https://github.com/ops4j/org.ops4j.pax.url/blob/d56d0815e589986be4183ace38024ba4f1678d41/pax-url-aether/src/test/java/org/ops4j/pax/url/mvn/UnitHelp.java][process][1] = -> TRY {  -> builder=new ProcessBuilder(SPACES.split(command,),)@ -> builder.directory(directory,)@ -> builder.redirectErrorStream(true,)@ -> process=builder.start()@ -> copy(process.getInputStream(),System.out,)@ -> process.waitFor()@ } CATCH(Exception) {}
results[https://github.com/barchart/barchart-service/blob/2de4c31bf6efffedcec156e39b6ebcb60d7ecb48/karaf/service/src/int/basic-tester/src/main/java/com/barchart/test/ProcessRunner.java][exec][3] = -> TRY {  -> builder=new ProcessBuilder().redirectErrorStream(true,).directory(dir,).command(command,)@ -> process=builder.start()@ -> reader=new BufferedReader(new InputStreamReader(process.getInputStream(),),)@ } CATCH(Exception) {}
results[https://github.com/stevenreinisch/modulob/blob/87d140e9eac32ee9ea165d8c6901b93b8207629a/eclipse_plugins/de.dubmas.modulob.util/src/de/dubmas/modulob/util/ShellCommandExecutor.java][execute][1] = -> TRY {  -> pb=new ProcessBuilder(commands,)@ -> pb.directory(new File(".",),)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> br=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ } CATCH(Exception) {}
results[https://github.com/openplanets/nanite/blob/c0b422cde9586788914e68f01561107a39848b5b/nanite-hadoop/src/main/java/uk/bl/wap/hadoop/profiler/Ohcount.java][identify][1] = -> TRY { -> pb=new ProcessBuilder(command,)@ -> p=pb.start()@ -> p.waitFor()@ -> result=IOUtils.toString(p.getInputStream(),)@ -> p.destroy()@ } CATCH(Exception) { -> System.err.println("ohcount identify Caught exception: "+e,)@ -> e.printStackTrace()@ }
results[https://github.com/0xdata/h2o/blob/2fdf6fb1dcf6417201814c69d5cbaa7a3e3bb794/src/test/java/hex/rf/RFRunner.java][<init>][2] = -> TRY {  -> bldr=new ProcessBuilder(c,)@ -> bldr.redirectErrorStream(true,)@ -> _process=bldr.start()@ -> _rd=new BufferedReader(new InputStreamReader(_process.getInputStream(),),)@ -> _rdErr=new BufferedReader(new InputStreamReader(_process.getErrorStream(),),)@ } CATCH(Exception) {}
results[https://github.com/godwin668/docview_win/blob/0a06e90764a795679b62700552315847fbd50e8d/src/main/java/com/idocv/docview/util/CmdUtil.java][runWindows][1] = -> TRY { -> builder=new ProcessBuilder(cmdList.toArray( new String[],),)@ -> builder.redirectErrorStream(true,)@ -> p=builder.start()@ -> bri=new BufferedReader(new InputStreamReader(p.getInputStream(),"GBK",),)@ -> exitValue=p.waitFor()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/LukeCarrier/flyway/blob/fcef35b1d6e2b419bca46cde3cbae3862901f5f5/flyway-commandline-largetest/src/test/java/com/googlecode/flyway/commandline/largetest/CommandLineLargeTest.java][runFlywayCommandLine][8] = -> TRY {  -> builder=new ProcessBuilder(args,)@ -> builder.directory(new File(installDir,),)@ -> builder.redirectErrorStream(true,)@ -> process=builder.start()@ -> stdOut=FileCopyUtils.copyToString(new InputStreamReader(process.getInputStream(),"UTF-8",),)@ -> returnCode=process.waitFor()@ } CATCH(Exception) {}
results[https://github.com/tmyroadctfig/unexceptional-javac/blob/0493e71a30b73bea584ec0d1a617c68827abf60c/test/tools/javah/T6893943.java][testCommand][10] = -> TRY {  -> pb=new ProcessBuilder(command,)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> p.getOutputStream().close()@ -> in=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ -> rc=p.waitFor()@ } CATCH(Exception) {}
results[https://github.com/pbzdyl/spring-ldap/blob/c35ee696866bc781894e70c5cb9176322be5355a/odm/src/test/java/org/springframework/ldap/odm/test/utils/CompilerInterface.java][compile][1] = -> TRY {  -> pb=new ProcessBuilder( new String[],)@ -> pb.redirectErrorStream(true,)@ -> proc=pb.start()@ -> is=proc.getInputStream()@ -> ok=proc.waitFor()==0@ -> IF { -> throw new RuntimeException(builder.toString(),)@!(ok) } } CATCH(Exception) {}
results[https://github.com/sleepsort/lucene-solr/blob/69b402906a94b8ec77e11f69efc17c19a29b5b17/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash.java][forkTest][1] = -> TRY {  -> pb=new ProcessBuilder(cmd,)@ -> pb.directory(tempDir,)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> stdoutPumper=ThreadPumper.start(p.getInputStream(),childOut,)@ -> stderrPumper=ThreadPumper.start(p.getErrorStream(),childOut,)@ -> p.waitFor()@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/27804e25becca83ba5bf4ae3f89cb27c1cd45d61/test/tools/launcher/Arrrghs.java][doReExecTest0][3] = -> TRY { -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> retval=detectCookie(p.getInputStream(),expectedArguments,)@ -> p.waitFor()@ -> p.destroy()@ } CATCH(Exception) { -> ex.printStackTrace()@ -> throw new RuntimeException(ex.getMessage(),)@ }
results[https://github.com/DerTeufel/DevilTools/blob/81a4a87655b7884038bbfa78f90ae49056438827/src/mobi/cyann/nstools/SysCommand.java][suRun][3] = -> TRY { -> pb=new ProcessBuilder("su","-c","/system/bin/sh",)@ -> p=pb.start()@ -> err=new StreamGobbler(p.getErrorStream(),)@ -> out=new StreamGobbler(p.getInputStream(),)@ -> os=p.getOutputStream()@ -> p.waitFor()@ } CATCH(Exception) { -> Log.e(LOG_TAG,"",e,)@ }
results[https://github.com/jbosstm/narayana/blob/440ed569087cca2218845170fcd66cec7a47caf5/XTS/localjunit/crash-recovery-tests/src/main/java/com/arjuna/qa/extension/JBossAS7ServerKillProcessor.java][runShellCommand][2] = -> TRY {  -> pb=new ProcessBuilder("/bin/sh","-c",cmd,)@ -> p=pb.start()@ -> p.waitFor()@ -> dumpStream("std out",p.getInputStream(),)@ -> dumpStream("std error",p.getErrorStream(),)@ -> p.destroy()@ -> return p.exitValue()@ } CATCH(Exception) {}
results[https://github.com/andrearastelli/contest-player/blob/07054247558da63686c8166af7aac22861f37365/src/ExecuteSystemCommand.java][processBuilderSystemCommand][1] = -> TRY {  -> process=new ProcessBuilder("ls",)@ -> env=process.environment()@ -> process.directory(new File("C:\\",),)@ -> p=process.start()@ -> p.waitFor()@ -> reader=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ } CATCH(Exception) {}
results[https://github.com/ccard/csci565Project2/blob/57dd08139164b89f4393d425f2492455e720a096/testClientMethods.java][startServer][1] = -> TRY { -> run=new ProcessBuilder("ssh",host,"cd "+path,"; ./runServer.sh "+args+" >> log"+System.currentTimeMillis()+".log",)@ -> run.redirectErrorStream(true,)@ -> p=run.start()@ -> b=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ } CATCH(Exception) { -> System.err.println("Failed to start a server",)@ -> e.printStackTrace()@ }
results[https://github.com/netbout/netbout/blob/8b66eff4869a811ae695c1a9dabdbff8a8ca610f/netbout/netbout-inf/src/main/java/com/netbout/inf/ih/Stage.java][getServer][1] = -> TRY {  -> proc=new ProcessBuilder("sh","-c",cmd,).start()@ -> proc.waitFor()@ -> buf.append(IOUtils.toString(proc.getInputStream(),),)@ -> buf.append(IOUtils.toString(proc.getErrorStream(),),)@ } CATCH(Exception) {}
results[https://github.com/guardianproject/SSCVideoProto/blob/c31e3f8af8c65dfd9e01f01a348f38fe08e30484/src/org/witness/ssc/video/FFMPEGWrapper.java][execProcess][1] = -> TRY {  -> pb=new ProcessBuilder(cmds,)@ -> pb.redirectErrorStream(true,)@ -> process=pb.start()@ -> reader=new BufferedReader(new InputStreamReader(process.getInputStream(),),)@ -> IF { -> process.destroy()@process!=null } } CATCH(Exception) {}
results[https://github.com/adamarla/documentMaster/blob/808baed576332443a1e60eb1303ec48710f034e1/src/gutenberg/workers/Scribe.java][make][1] = -> TRY {  -> pb=new ProcessBuilder("make",operation,"QUIZ="+quizId,"PRINTING_PRESS="+this.bankRoot,"TEST="+testpaperId,)@ -> pb.directory(this.mint.toFile(),)@ -> pb.redirectErrorStream(true,)@ -> process=pb.start()@ -> messages=new BufferedReader(new InputStreamReader(process.getInputStream(),),)@ -> return process.waitFor()@ } CATCH(Exception) {}
results[https://github.com/ajeetmurty/ReferenceCode/blob/2b808d148c67cbe5c398c86eeb873e44f6bc5214/java/src/main/java/ajeetmurty/reference/java/os/CommandExecutor.java][executeCommand][1] = -> TRY { -> builder=new ProcessBuilder(commandList,)@ -> logp.info("command: "+builder.command().toString(),)@ -> p=builder.start()@ -> isStdout=p.getInputStream()@ -> isStderror=p.getErrorStream()@ } CATCH(Exception) { -> logp.error(e.getMessage(),e,)@ }
results[https://github.com/olanto/MYCAT/blob/887373e7be2c0cbda657e6968d386233d236a290/prog/SimpleConverter/src/org/olanto/converter/plugin/ConverterPlugin.java][call][1] = -> TRY {  -> pb=new ProcessBuilder(commandes,)@ -> env=pb.environment()@ -> p=pb.start()@ -> errorGobbler=new StreamGobbler(p.getErrorStream(),"ERROR",)@ -> outputGobbler=new StreamGobbler(p.getInputStream(),"OUTPUT",)@ -> retVal=p.waitFor()@ -> return p.waitFor()@ } CATCH(Exception) {}
results[https://github.com/prat0318/fop/blob/f576e5938da572f2db7fa4a14b036299b022f913/P7_Akanksha_Gaurav_Prateek/P7/CatLite/src/CoreMDELite/MDELiteObject.java][execute][8] = -> TRY {  -> p=new ProcessBuilder(cmdarray,).start()@ -> er=new BufferedReader(new InputStreamReader(p.getErrorStream(),),)@ -> in=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ -> p.waitFor()@ -> p.destroy()@ } CATCH(Exception) {}
results[https://github.com/thiago-silva/epic-java/blob/0493e71a30b73bea584ec0d1a617c68827abf60c/test/tools/javah/T5070898.java][runJavah][11] = -> TRY {  -> pb=new ProcessBuilder(cmd,)@ -> pb.redirectErrorStream(true,)@ -> pb.environment().remove("CLASSPATH",)@ -> p=pb.start()@ -> p.getOutputStream().close()@ -> in=new DataInputStream(p.getInputStream(),)@ -> return p.waitFor()@ } CATCH(Exception) {}
results[https://github.com/yudis/h2database/blob/7e06dfe6980c07ea14280bcd2de52895ce81dd44/h2/src/tools/org/h2/build/BuildBase.java][exec][7] = -> TRY { -> pb=new ProcessBuilder()@ -> pb.command(cmd.array(),)@ -> pb.redirectErrorStream(true,)@ -> p=pb.start()@ -> copyInThread(p.getInputStream(),(quiet)?null:sysOut,)@ -> p.waitFor()@ -> return p.exitValue()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/anteoc/hadoop-fork/blob/949886907ccf9ce02d48cabc55b294edd6788a34/hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/util/Exec.java][run][7] = -> pb=new ProcessBuilder(command,)@ -> TRY { -> p=pb.start()@ -> stdOut=new OutputBufferThread(p.getInputStream(),)@ -> stdErr=new OutputBufferThread(p.getErrorStream(),)@ -> retCode=p.waitFor()@ } CATCH(Exception) { -> mojo.getLog().warn(command+" failed: "+ex.toString(),)@ }
results[https://github.com/apache/accumulo/blob/a4e562602a4dbfff9611f292fd8369124279f83c/test/src/test/java/org/apache/accumulo/test/functional/HalfDeadTServerIT.java][test][1] = -> TRY {  -> builder=new ProcessBuilder(argList,)@ -> env=builder.environment()@ -> tserver=builder.start()@ -> t=new DumpOutput(tserver.getInputStream(),)@ -> FINALLY { -> tserver.destroy()@ -> tserver.waitFor()@ -> t.join()@ } } CATCH(Exception) {}
results[https://github.com/madhusudancs/asterixdb/blob/677206dbf5c35d9c7f8b26e9a3846304865484e1/asterix-installer/src/main/java/edu/uci/ics/asterix/installer/driver/InstallerUtil.java][executeLocalScript][1] = -> TRY {  -> pb=new ProcessBuilder(pargs,)@ -> pb.environment().putAll(EventDriver.getEnvironment(),)@ -> pb.environment().put("IP_LOCATION",EventDriver.CLIENT_NODE.getClusterIp(),)@ -> p=pb.start()@ -> bis=new BufferedInputStream(p.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/waldheinz/fat32-lib/blob/03dfe8079ea0a7c65b045e89ee028d7d2ce08dc1/src/test/java/com/meetwise/fs/fat/DosFsckTest.java][runFsck][2] = -> TRY {  -> pb=new ProcessBuilder(DOSFSCK_CMD,"-v","-n",file.toString(),)@ -> pb.redirectErrorStream(true,)@ -> proc=pb.start()@ -> LOOP { -> c=proc.getInputStream().read()@ } -> assertEquals(0,proc.waitFor(),)@ } CATCH(Exception) {}
results[https://github.com/ThorbenLindhauer/activiti-engine-ppi/blob/7b4abab19c3dc6bee2614adc00e085dfd9dc3547/modules/activiti-engine/src/main/java/org/activiti/engine/impl/ant/LaunchThread.java][run][8] = -> processBuilder=new ProcessBuilder(cmd,).redirectErrorStream(true,).directory(dir,)@ -> TRY { -> process=processBuilder.start()@ -> consoleStream=process.getInputStream()@ } CATCH(Exception) { -> throw new BuildException("couldn't launch "+cmdString(cmd,),e,)@ } FINALLY { -> IoUtil.closeSilently(consoleStream,)@ }
results[https://github.com/patrickvane/my_java_library/blob/55f80aaddc7547db47bf8111df7197ce9e7d5935/01_. Dont Export/lib/patrick_vane/My_Tests/_Test_My_Jar_Exec.java][main][1] = -> LOOP { -> command+=" \""+MyString.trim(arg,"\"",)+"\""@ } -> TRY { -> System.out.println("Running command: "+command,)@ -> process=new ProcessBuilder(command,).start()@ -> in=new BufferedReader(new InputStreamReader(process.getInputStream(),),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Caltoopia/caltoopia/blob/d47a49fed248e57bf4bd623c9e4eb4caff3c6225/org.caltoopia.analysis/src/org/caltoopia/analysis/test/Analysis.java][sdf3Analysis][1] = -> TRY { -> builder=new ProcessBuilder(command,)@ -> builder.redirectErrorStream(true,)@ -> builder.directory(new File(session.getOutputFolder(),),)@ -> process=builder.start()@ -> is=process.getInputStream()@ } CATCH(Exception) { -> session.getOutputStream().print("Failed to execute binary! ("+x.getMessage()+")",)@ }
results[https://github.com/cmeiklejohn/flume-ng/blob/dbb39da97e3ee19fee393e49d7a9608d48a707ab/flume-ng-tests/src/test/java/org/apache/flume/test/util/StagedInstall.java][startAgent][2] = -> TRY {  -> IF { -> throw new Exception("A process is already running",)@process!=null } -> pb=new ProcessBuilder(cmdArgs,)@!(process!=null) -> env=pb.environment()@!(process!=null) -> pb.directory(baseDir,)@!(process!=null) -> pb.redirectErrorStream(true,)@!(process!=null) -> process=pb.start()@!(process!=null) -> consumer=new ProcessInputStreamConsumer(process.getInputStream(),)@!(process!=null) } CATCH(Exception) {}
results[https://github.com/adamarla/documentMaster/blob/87b06ecc0c63826762808cccc5002715d6488866/src/gutenberg/workers/Locker.java][execute][1] = -> TRY {  -> pb=new ProcessBuilder()@ -> pb.command(tokens,)@ -> pb.directory(workingDirPath.toFile(),)@ -> pb.redirectErrorStream(true,)@ -> build=pb.start()@ -> messages=new BufferedReader(new InputStreamReader(build.getInputStream(),),)@ -> return build.waitFor()@ } CATCH(Exception) {}
results[https://github.com/onedanshow/Screen-Courter/blob/7ef687d94fa9906aaca80f28e4778214203e0af3/src/com/reelfx/model/ScreenRecorder.java][run][1] = -> TRY { -> IF { -> pb=new ProcessBuilder(macArgs,)@ -> recordingProcess=pb.start()@ -> errorGobbler=new StreamGobbler(recordingProcess.getErrorStream(),false,"mac E",)@ -> inputGobbler=new StreamGobbler(recordingProcess.getInputStream(),false,"mac O",)@ -> recordingProcess.waitFor()@ } } CATCH(Exception) { -> logger.error("Exception while running ScreenRecorder!",ie,)@ }
results[https://github.com/memlab/Penn-TotalRecall/blob/86cf96ea3cc03ebe99c95fe309b12de2912f6993/src/info/SysInfo.java][usingClearlooks][1] = -> TRY { -> IF { -> return false@gconf.exists()==false } -> pb=new ProcessBuilder(gconf.getAbsolutePath(),"-g","/desktop/gnome/interface/gtk_theme",)@!(gconf.exists()==false) -> psProc=pb.start()@!(gconf.exists()==false) -> psProc.waitFor()@!(gconf.exists()==false) -> br=new BufferedReader(new InputStreamReader(psProc.getInputStream(),),)@!(gconf.exists()==false) } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/dstepanov/coffeescript-netbeans/blob/1af2eee5a4ad08b2db328274a001311732a46798/src/coffeescript/nb/CoffeeScriptNodeJSCompiler.java][execNix][1] = -> TRY {  -> environment=pb.environment()@ -> p=pb.start()@ -> IF { -> os=p.getOutputStream()@ } -> out=getInputStreamAsString(p.getInputStream(),)@ -> err=getInputStreamAsString(p.getErrorStream(),)@ -> p.destroy()@ } CATCH(Exception) {}
results[https://github.com/korpling/ANNIS/blob/3a35212e675f735a0bd76ac8929b79b417fd953b/annis-visualizers/src/main/java/annis/gui/visualizers/component/AbstractDotVisualizer.java][writeOutput][2] = -> TRY { -> pBuilder=new ProcessBuilder(dotPath,"-Tpng",tmpInput.getCanonicalPath(),)@ -> pBuilder.redirectErrorStream(false,)@ -> process=pBuilder.start()@ -> inputFromProcess=process.getInputStream()@ -> resultCode=process.waitFor()@ -> IF { -> stderr=process.getErrorStream()@ } } CATCH(Exception) { -> log.error(null,ex,)@ }
results[https://github.com/openforis/calc/blob/2d445c2b51eeedbe38f6e5118c3f4e29d481932a/calc-core/src/main/java/org/openforis/calc/r/R.java][getJriPath][1] = -> TRY { -> pb=new ProcessBuilder("R","--slave","-e","system.file('jri',package='rJava')",)@ -> p=pb.start()@ -> p.waitFor()@ -> inputStream=p.getInputStream()@ } CATCH(Exception) { -> logger.warn("Error getting JRI library path from R",)@ } FINALLY { -> IF { -> s.close()@s!=null } }
results[https://github.com/madhusudancs/asterixdb/blob/e5a9f0a868207d8795cbc59f4e8e515b062e11b1/asterix-installer/src/main/java/edu/uci/ics/asterix/installer/driver/ManagixUtil.java][executeLocalScript][1] = -> TRY {  -> pb=new ProcessBuilder(pargs,)@ -> pb.environment().putAll(EventDriver.getEnvironment(),)@ -> pb.environment().put("IP_LOCATION",EventDriver.CLIENT_NODE.getIp(),)@ -> p=pb.start()@ -> bis=new BufferedInputStream(p.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/svn2github/crux-framework/blob/4769b1dc2c4f3b75d06b43079fa76558206404b7/branches/crux/4.0.0/Crux/src/tools/org/cruxframework/crux/tools/projectgen/AbstractLayoutProjectGenerator.java][createXSDs][10] = -> TRY { -> builder=new ProcessBuilder("java","-cp",classpath.toString(),SchemaGenerator.class.getCanonicalName(),projectDir,new File(options.getProjectDir(),"xsd",).getCanonicalPath(),)@ -> builder.redirectErrorStream(true,)@ -> process=builder.start()@ -> processStream=process.getInputStream()@ -> process.waitFor()@ } CATCH(Exception) { -> throw new RuntimeException("Error creating XSD files",e,)@ }
results[https://github.com/Caltoopia/caltoopia/blob/e6e9cf586049d09a462f3d18b29dfe260e57abd2/org.caltoopia.tests/src/org/caltoopia/tests/Util.java][build][1] = -> TRY { -> builder=new ProcessBuilder(command,)@ -> builder.directory(new File(session.getOutputFolder(),),)@ -> process=builder.start()@ -> is=process.getInputStream()@ } CATCH(Exception) { -> session.getOutputStream().print("Failed to build binary! ("+x.getMessage()+")",)@ -> fail("Failed to build binary! ("+x.getMessage()+")",)@ }
results[https://github.com/onedanshow/Screen-Courter/blob/0469ea0522754815c93e8447420dd622de5ff574/src/com/reelfx/PostProcessor.java][run][2] = -> TRY { -> pb=new ProcessBuilder(ffmpegArgs,)@ -> postProcess=pb.start()@ -> errorGobbler=new StreamGobbler(postProcess.getErrorStream(),false,"ffmpeg E",)@ -> inputGobbler=new StreamGobbler(postProcess.getInputStream(),false,"ffmpeg O",)@ -> postProcess.waitFor()@ } CATCH(IOException) { -> ioe.printStackTrace()@ } CATCH(Exception) { -> ie.printStackTrace()@ }
results[https://github.com/ericstratmann/Fiz/blob/f2011a9311569f066739c846dbb442eac8424a84/src/org/fiz/TestUtil.java][assertXHTML][1] = -> TRY { -> builder=new ProcessBuilder("xmlvalid","-q","-c","\"--dtd="+dtd+"\"","xmlvalid.tmp",)@ -> builder.redirectErrorStream(true,)@ -> p=builder.start()@ -> reader=new InputStreamReader(p.getInputStream(),)@ -> p.waitFor()@ } CATCH(Exception) { -> Assert.assertEquals("error running xmlvalid: "+e.getMessage(),true,false,)@ } -> IF { -> p.destroy()@p!=null }
results[https://github.com/taktod/myLib/blob/ec845dd77d0fc57c96391478be1ff78fd6e647db/myLib.MIT/myLib.transcode.ffmpeg/src/main/java/com/ttProject/transcode/ffmpeg/process/ProcessHandler.java][executeProcess][1] = -> TRY {  -> IF { -> throw new Exception("process用のコマンドが設定されていません。",)@processCommand==null } -> processBuilder=new ProcessBuilder("/bin/bash","-c",command.toString(),)@!(processCommand==null) -> IF { -> env=processBuilder.environment()@!(processCommand==null) } -> process=processBuilder.start()@!(processCommand==null) -> receiveWorker=new DataReceiveWorker(transcodeManager,process.getInputStream(),)@!(processCommand==null) } CATCH(Exception) {}
results[https://github.com/teachus/teachus/blob/91616cee536d341b7ae629287cb77fb34893957d/teachus-tools/src/main/java/dk/teachus/tools/upgrade/actions/BackupDatabaseAction.java][execute][1] = -> TRY {  -> pb=new ProcessBuilder(command,)@ -> databaseBackup=pb.start()@ -> inputReader=new BufferedReader(new InputStreamReader(databaseBackup.getInputStream(),),)@ -> errorStream=new BufferedReader(new InputStreamReader(databaseBackup.getErrorStream(),),)@ -> IF { -> throw new RuntimeException("Database backup failed.",)@databaseBackup.waitFor()!=0 } } CATCH(Exception) {}
results[https://github.com/ceylon/ceylon-js/blob/e66cdbba5686e3acf987caa5e6b1af13c7fff356/src/main/java/com/redhat/ceylon/compiler/js/CeylonRunJsTool.java][run][1] = -> TRY {  -> proc=buildProcess(modname,version,func,args,exepath,localRepos,output,)@!(version==null) -> nodeProcess=proc.start()@!(version==null) -> new ReadStream(nodeProcess.getInputStream(),(output==null)?System.out:output,).start()@!(version==null) -> IF { -> new ReadErrorStream(nodeProcess.getErrorStream(),System.err,debug,).start()@!(version==null) } -> exitCode=nodeProcess.waitFor()@!(version==null) } CATCH(Exception) {}
results[https://github.com/Caltoopia/caltoopia/blob/d47a49fed248e57bf4bd623c9e4eb4caff3c6225/org.caltoopia.visual/src/org/caltoopia/visual/test/PluginAnalysisNetworkView.java][actionPerformed][1] = -> TRY { -> builder=new ProcessBuilder(command,)@ -> builder.redirectErrorStream(true,)@ -> env=builder.environment()@ -> builder.directory(new File(session.getOutputFolder(),),)@ -> process=builder.start()@ -> is=process.getInputStream()@ } CATCH(Exception) { -> session.getOutputStream().print("Failed to execute binary! ("+x.getMessage()+")",)@ }
results[https://github.com/liferay/liferay-ide/blob/bd337c055103d73e73d8c6c8dba630b5ff92d47c/common/plugins/com.liferay.ide.debug.core/src/com/liferay/ide/debug/core/util/ThreadUtil.java][dump][1] = -> jstackProcessBuilder=new ProcessBuilder("jstack","-l",Long.toString(pid,),)@ -> TRY { -> jstackProcess=jstackProcessBuilder.start()@ -> reader=new InputStreamReader(jstackProcess.getInputStream(),)@ } CATCH(Exception) { -> _logger.log(Level.SEVERE,"Fail to dump threads for process with id:"+pid,ex,)@ } FINALLY { -> IF { -> jstackProcess.destroy()@jstackProcess!=null } }
results[https://github.com/tims/citrine/blob/74e3f8c3b3ba68f393860298cdd57e9699971ac0/src/main/java/fm/last/syscommand/SysCommandExecutor.java][start][2] = -> TRY {  -> processBuilder=new ProcessBuilder(command,)@ -> IF { -> processBuilder.directory(workingDirectory,)@workingDirectory!=null } -> IF { -> processEnvironment=processBuilder.environment()@ } -> process=processBuilder.start()@ -> startStreamReadThreads(process.getInputStream(),process.getErrorStream(),)@ } CATCH(Exception) {}
results[https://github.com/flyway/flyway/blob/6cc69182ed8f6cea57d851c393f7477e1217aeb0/flyway-ant-largetest/src/test/java/org/flywaydb/ant/AntLargeTest.java][runAnt][1] = -> TRY {  -> builder=new ProcessBuilder(args,)@ -> builder.directory(new File(getInstallDir()+"/tests/"+dir,).getAbsoluteFile(),)@ -> builder.redirectErrorStream(true,)@ -> process=builder.start()@ -> stdOut=FileCopyUtils.copyToString(new InputStreamReader(process.getInputStream(),"UTF-8",),)@ -> returnCode=process.waitFor()@ } CATCH(Exception) {}
results[https://github.com/mdiponio/sahara-labs-rig-client-commons/blob/4d831a2047f1aa9ecfc462e1e5b703dd0e5b5c34/src/au/edu/labshare/rigclient/action/detect/RDPActivityDetectorAction.java][detectActivity][1] = -> TRY { -> builder=new ProcessBuilder(RDPActivityDetectorAction.DEFAULT_COMMAND,)@ -> proc=builder.start()@ -> IF { -> this.logger.warn("The RDP Activity Detector Action has failed with the following error: "+proc.exitValue()+". Activity Detection cannot be determined.",)@proc.waitFor()!=0 -> return false@proc.waitFor()!=0 } -> is=proc.getInputStream()@!(proc.waitFor()!=0) } CATCH(Exception) { -> this.logger.error("The RDP Activity Detector failed with exception "+e.getMessage()+", and type "+e.getClass().getName()+'.',)@ }
results[https://github.com/wiperdog/wiperdog/blob/4c51e0501dc6d21d70664fcf6bcc09893a32353c/src/main/java/org/wiperdog/installer/SelfExtractorCmd.java][runGroovyInstaller][1] = -> TRY {  -> IF { -> IF { -> builder=new ProcessBuilder(listCmd,)@ -> builder.directory(workDir,)@ -> builder.redirectErrorStream(true,)@ -> p=builder.start()@ -> procOut=p.getInputStream()@ -> procIn=p.getOutputStream()@ -> p.waitFor()@ } } } CATCH(Exception) {}
results[https://github.com/apache/etch/blob/c70f663208604f4d6c130cd46ee5430073e46ced/interoptester/src/main/java/org/apache/etch/interoptester/DefaultRunningProg.java][start][1] = -> TRY {  -> pb=new ProcessBuilder(tkns,)@ -> pb.environment().putAll(nvs,)@ -> p=pb.start()@ -> p.getOutputStream().close()@ -> outrdr=new ProcessStreamReader(p.getInputStream(),System.out,stdoutTag,)@ -> errrdr=new ProcessStreamReader(p.getErrorStream(),System.out,stderrTag,)@ } CATCH(Exception) {}
results[https://github.com/OurGrid/OurVirt/blob/3af7204918e31daf16a63831e8c80126a37cf64b/src/org/ourgrid/virt/strategies/HypervisorUtils.java][getNetworkStats][1] = -> TRY {  -> IF { -> return null@!(registeredVM.getProperty(VirtualMachineConstants.NETWORK_TYPE,).equals(VirtualMachineConstants.BRIDGED_NET_MODE,)) } -> psProcessBuilder=new ProcessBuilder("/bin/bash","-c",cmdSB.toString(),)@!(!(registeredVM.getProperty(VirtualMachineConstants.NETWORK_TYPE,).equals(VirtualMachineConstants.BRIDGED_NET_MODE,))) -> p=psProcessBuilder.start()@!(!(registeredVM.getProperty(VirtualMachineConstants.NETWORK_TYPE,).equals(VirtualMachineConstants.BRIDGED_NET_MODE,))) -> psExitValue=p.waitFor()@!(!(registeredVM.getProperty(VirtualMachineConstants.NETWORK_TYPE,).equals(VirtualMachineConstants.BRIDGED_NET_MODE,))) -> IF { -> return null@psExitValue!=0 && !(!(registeredVM.getProperty(VirtualMachineConstants.NETWORK_TYPE,).equals(VirtualMachineConstants.BRIDGED_NET_MODE,))) } -> ifStats=IOUtils.toString(p.getInputStream(),).split("\\s+",)@!(psExitValue!=0) && !(!(registeredVM.getProperty(VirtualMachineConstants.NETWORK_TYPE,).equals(VirtualMachineConstants.BRIDGED_NET_MODE,))) } CATCH(Exception) {}
