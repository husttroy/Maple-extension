results[https://github.com/skrusche63/AMES-Web-Service/blob/246858504f38e2c1b20aa9b93903d1193ed5b5dd/ames-web-service/src/de/kp/ames/web/function/symbol/SymbolProcessor.java][getRoot][1] = -> TRY {  -> return jSymbols.getJSONObject(SYMBOL_ROOT,)@ } CATCH(Exception) {}
results[https://github.com/cc14514/pet-service/blob/7c0fa957427e91d4b30954c3ded854927c97db68/pet-service-states/src/main/java/com/momoplan/pet/framework/servicestate/service/impl/StateServiceSupport.java][getUserinfo][3] = -> TRY {  -> json=new JSONObject(responseStr,)@ -> entity=json.getJSONObject("entity",)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/24e9b2ccf0e6380f6332532dfd2ebd95c890c4fd/main/java/com/metaweb/gridworks/operations/row/RowRemovalOperation.java][reconstruct][14] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new RowRemovalOperation(engineConfig,)@ } CATCH(Exception) {}
results[https://github.com/fuhaiq/wesker/blob/86cb804eb5df16066783c6afd43464bf20e3ab38/wesker-core/src/com/wesker/core/rpc/ssl/handler/SslHandlerProvider.java][initialize][1] = -> TRY {  -> ssl=json.getJSONObject("ssl",)@ -> clientMode=ssl.getBoolean("clientMode",)@ } CATCH(Exception) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/qbe/analysisstateloaders/worksheet/Version0WorksheetStateLoader.java][convertFilters][2] = -> TRY {  -> filtersObj=aSheet.getJSONObject("filters",)@ -> filters=filtersObj.getJSONArray("filters",)@ } CATCH(Exception) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/ccea626724deeff150c5806c499aae0f1d6465bb/shoppingprocess/src/main/java/com/connecture/shopping/process/service/data/converter/ConsumerDataConverterUtil.java][getPolicyEffectiveTime][1] = -> TRY {  -> eventJSON=jsonObject.getJSONObject("event",)@ -> dateStr=eventJSON.getString("Coverage_Effective_Date",)@ } CATCH(Exception) {}
results[https://github.com/shamansir/vimeoid/blob/622f88a5ead674e3b04c44fee445648bbef91500/apk/src/org/vimeoid/activity/user/item/UserActivity.java][addSource][1] = -> TRY {  -> received+=page.getJSONObject(Contact.FieldsKeys.MULTIPLE_KEY,).getInt(PagingData.FieldsKeys.ON_THIS_PAGE,)@ } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/b4ac24653e8a5c686e0883e9f1b722fafd5bf9b2/java/social-api/src/test/java/org/apache/shindig/social/dataservice/integration/RestfulJsonActivityTest.java][testGetActivityJson][1] = -> TRY {  -> result=getJson(resp,)@ -> assertActivitiesEqual(johnsActivity,result.getJSONObject("entry",),)@ } CATCH(Exception) {}
results[https://github.com/OpenRefine/OpenRefine/blob/365868564fb426d2aa3f3c84ec1ef52966067f02/main/java/com/metaweb/gridworks/operations/SaveProtographOperation.java][reconstruct][16] = -> TRY {  -> return new SaveProtographOperation(Protograph.reconstruct(obj.getJSONObject("protograph",),),)@ } CATCH(Exception) {}
results[https://github.com/jmorille/android/blob/30a2258f6b50fc12935ad0fbd637c73f8870f14b/cityLib/src/eu/ttbox/velib/service/download/velobleu/VeloBleuServiceParser.java][parseInputStreamForStations][4] = -> TRY { -> jObject=new JSONObject(json,)@ -> site=jObject.getJSONObject("site",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/OpenRefine/OpenRefine/blob/7fd6e22af4686790b74e7b4be6474f5ca4a3a03b/main/src/com/google/refine/operations/row/RowStarOperation.java][reconstruct][14] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> starred=obj.getBoolean("starred",)@ -> return new RowStarOperation(engineConfig,starred,)@ } CATCH(Exception) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/496823e5646435634fb1222770be4dfb33224afc/src/main/java/com/metaweb/gridworks/operations/ReconMatchBestCandidatesOperation.java][reconstruct][18] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconMatchBestCandidatesOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/drevicko/MeandreComponentFoundry/blob/61f4bd27088d894d9f4a4fd6256a9f290c638edb/src-tools/org/seasr/meandre/components/tools/tuples/GoogleBooksSearchToTuple.java][jsonToTuples][3] = -> TRY {  -> json=new JSONObject(jsonData,)@ -> res=json.getJSONObject("responseData",)@ -> results=res.getJSONArray("results",)@ } CATCH(Exception) {}
results[https://github.com/mduduzik/flowframe/blob/acff724fab5cc9bc27ff0e6064d7cd412d9fb6cd/erp/remote.services.impl/src/main/java/org/flowframe/erp/remote/services/impl/BaseOBJSONWSServicesImpl.java][getAll][2] = -> TRY {  -> resultJsonObject=doRequest(URL_PART+"/"+entityName,JsonConstants.IDENTIFIER,"GET",200,)@ -> jsonArray=resultJsonObject.getJSONObject(JsonConstants.RESPONSE_RESPONSE,).getJSONArray(JsonConstants.DATA,)@ } CATCH(Exception) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/7fd6e22af4686790b74e7b4be6474f5ca4a3a03b/main/src/com/google/refine/operations/cell/BlankDownOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new BlankDownOperation(engineConfig,obj.getString("columnName",),)@ } CATCH(Exception) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/496823e5646435634fb1222770be4dfb33224afc/src/main/java/com/metaweb/gridworks/operations/ReconDiscardJudgmentsOperation.java][reconstruct][14] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconDiscardJudgmentsOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/shamansir/vimeoid/blob/fa3ff52432fc84bfbab2bd3c64e68eb35245585d/apk/src/org/vimeoid/dto/advanced/SubscriptionData.java][addSource][1] = -> TRY {  -> received+=page.getJSONObject(rootKey,).getInt(PagingData.FieldsKeys.ON_THIS_PAGE,)@ -> passTo(page,subscriptions,)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/126cd89562a6eb400b510144c035e6ecfeb69dc5/src/main/java/com/metaweb/gridworks/operations/row/RowFlagOperation.java][reconstruct][12] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> flagged=obj.getBoolean("flagged",)@ -> return new RowFlagOperation(engineConfig,flagged,)@ } CATCH(Exception) {}
results[https://github.com/rmarianski/geoserver-exts/blob/4989f19f14520b139ef4baf973435904196086ff/importer/src/test/java/org/opengeo/data/importer/rest/RESTDataTest.java][postNewImport][6] = -> TRY {  -> json=(JSONObject) json(resp,)@ -> imprt=json.getJSONObject("import",)@ -> return imprt.getInt("id",)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/b4772f1f04a36a378555ec4d8b334f7df2296a15/main/src/com/google/refine/operations/cell/FillDownOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new FillDownOperation(engineConfig,obj.getString("columnName",),)@ } CATCH(Exception) {}
results[https://github.com/yungsters/rain-workload-toolkit/blob/89cd80ba3abfeefe7930e0ba6e4df7c5f1880784/src/radlab/rain/workload/httptest/BurstUrlProfileCreator.java][main][2] = -> TRY {  -> jsonConfigRoot=new JSONObject(fileContents,)@ -> params=jsonConfigRoot.getJSONObject(Scenario.CFG_PROFILES_CREATOR_CLASS_PARAMS_KEY,)@ -> tracks=creator.createProfile(params,)@ } CATCH(Exception) {}
results[https://github.com/baoshujun/love_pig/blob/dd16cb285170aa42a6c1f7e843238e3c25e5a8d9/src/com/lovepig/utils/Json.java][getJson][1] = -> TRY { -> return new Json(root.getJSONObject(key,),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/fadmaa/grefine-rdf-extension/blob/fd56f6d6861246f43763587a7f90a6db1e32f9d9/src/org/deri/grefine/rdf/operations/SaveRdfSchemaOperation.java][reconstruct][2] = -> TRY {  -> return new SaveRdfSchemaOperation(RdfSchema.reconstruct(obj.getJSONObject("schema",),),)@ } CATCH(Exception) {}
results[https://github.com/socialize/socialize-sdk-android/blob/6f3086f962f6e41a9f810365f76caf7fc292b2fa/test/src/com/socialize/test/integration/services/a/ActionUtilsTest.java][testGetActionsByUser][4] = -> TRY {  -> jsonObject=(JSONObject) jsonArray.get(0,)@ -> userObject=jsonObject.getJSONObject("user",)@ -> userId=userObject.getString("id",)@ } CATCH(Exception) {}
results[https://github.com/liferay/alloy-taglibs/blob/c5204c8d18162d59e15813053259ac7cc912d935/alloy-taglib/src/com/liferay/alloy/tools/xmlbuilder/XMLBuilder.java][<init>][1] = -> TRY {  -> _json=new JSONObject(FileUtil.read(_fileJSON,),)@ -> _classMapJSON=_json.getJSONObject("classmap",)@ } CATCH(Exception) {}
results[https://github.com/OpenRefine/OpenRefine/blob/1227c9dff41bdc87b56ed0b35cc8d1938d0db168/src/main/java/com/metaweb/gridworks/model/operations/ReconMarkNewTopicsOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> columnName=obj.getString("columnName",)@ -> return new ReconMarkNewTopicsOperation(engineConfig,columnName,)@ } CATCH(Exception) {}
results[https://github.com/nicholasdelrio/VLC/blob/3e0b90dd94409c9b9aab5c5293c55a4b7afa88d2/vlc-visualizations/src/main/java/edu/utep/cybershare/vlc/sparql/SparqlResultsPicker.java][getBindings][1] = -> TRY { -> return sparqlResults.getJSONObject("results",).getJSONArray("bindings",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/AdamBien/lightfish/blob/f4e46ca945b6e2bd280290edc48f2afbc0ef4e00/lightfish/src/main/java/org/lightfish/business/monitoring/control/collectors/authentication/SessionTokenCollector.java][collect][1] = -> TRY {  -> result=response.getEntity(JSONObject.class,)@ -> extraProps=result.getJSONObject("extrapProperties",)@ -> token=extraProps.getString("token",)@ } CATCH(Exception) {}
results[https://github.com/tikkat/KudoMessage/blob/ad6530067e0e2f02fc351f0b5f0b2ac4ede774ba/central/src/se/kudomessage/hustler/ClientHandler.java][sendMessage][2] = -> TRY { -> message=input.getJSONObject("message",)@ -> PushHandler.pushMessageToDevice(email,message,)@ } CATCH(Exception) { -> System.out.println("Error in sendMessage: "+e,)@ }
results[https://github.com/Neamar/CineTime/blob/3a3c273c67179f9b5fd9d2b1a90fcdf7835c3782/src/fr/neamar/cinetime/api/APIHelper.java][downloadMovie][1] = -> TRY { -> jsonObject=new JSONObject(json,)@ -> return jsonObject.getJSONObject("movie",)@ } CATCH(Exception) { -> return new JSONObject()@ }
results[https://github.com/hackaton/hackaton-2/blob/df79fae3db7c395ffcc1dd0739c4ecc20082c163/hackaton-2-transmission/src/main/java/hackaton2/transmission/client/DefaultTransmission.java][request][1] = -> TRY {  -> response=new JSONObject(responseJson,)@ -> resultS=response.getString("result",)@ -> return response.getJSONObject("arguments",)@!(!(resultS.equals("success",))) } CATCH(Exception) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/qbe/services/formviewer/FormViewerQueryTransformer.java][applyStaticClosedFilterToWhereClause][1] = -> TRY {  -> filters=option.getJSONArray("filters",)@ -> expression=option.getJSONObject("expression",)@ -> node=QueryJSONDeserializer.getFilterExpTree(expression,)@ } CATCH(Exception) {}
results[https://github.com/ios-driver/ios-driver/blob/f06b5b43bb96de22461f9533e4ed5163de91612a/server/src/main/java/org/uiautomation/ios/server/command/impl/session/NewSession.java][<init>][1] = -> TRY { -> payload=request.getPayload()@ -> capabilities=payload.getJSONObject("desiredCapabilities",)@ } CATCH(Exception) { -> throw new IOSAutomationException(e,)@ }
results[https://github.com/pjf57/mat-server-side/blob/6f06c1c7829c8bcf74f1f24bc16ebc4c2909dc98/java/src/com/cs/fwk/core/util/DesignUtils.java][decodeCB][1] = -> TRY {  -> cbj=obj.getJSONObject("cb",)@ -> id=cbj.getInt("elId",)@ -> attrList=cbj.getJSONArray("attrs",)@ } CATCH(Exception) {}
results[https://github.com/hanguyenhuu/DTUI_201105_Android/blob/44a2ace2b8e9772ac7092627b567a4d123d3082c/src/com/group5/android/fd/Main.java][onSuccess][1] = -> TRY { -> user=jsonObject.getJSONObject("user",)@ -> m_user.parse(user,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/baasbox/baasbox/blob/76ad4e9fb1c147bc77db45e3eff403230b6d5b92/test/DocumentCMDFunctionalTest.java][getRid][1] = -> TRY { -> jo=(JSONObject) json@ -> sRet=jo.getJSONObject("data",).getString("@rid",)@ } CATCH(Exception) { -> Assert.fail("Cannot get RID value: "+ex.getMessage(),)@ }
results[https://github.com/dfci-cccb/mev/blob/f512eaccf7186255a77b301edc1f8f4abe4a9a28/annotation/server/src/main/java/com/google/refine/operations/row/ImportPresetsRowRemovalOperation.java][reconstruct][1] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new ImportPresetsRowRemovalOperation(engineConfig,new ArrayList<Integer>(),)@ } CATCH(Exception) {}
results[https://github.com/melchor629/Musicote-Melchor629/blob/a846ef79a66b9cf5818d09fc7abb8a28aa803fd4/src/com/melchor629/musicote/scrobbler/Auth.java][AuthParser][1] = -> TRY { -> autho=new JSONObject(json,)@ -> auth=autho.getJSONObject("session",)@ } CATCH(Exception) { -> Log.e(TAG,"Error: "+e.toString(),)@ }
results[https://github.com/kogeva/Reactr/blob/72f4023cc939c08418a2a363bc7658c649ad9db9/Reactr/src/main/java/com/jelvix/reactr/AnotherActivity.java][loadStInfo][3] = -> TRY { -> json=new JSONObject(response,)@ -> urls=json.getJSONObject("static_info",)@ -> toRet=urls.getString(tag,)@ } CATCH(Exception) { -> System.out.println("Exp="+e,)@ }
results[https://github.com/NCIP/psc/blob/e21f694f2d9a8a56507458dad00c305491ed6a51/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/ScheduleRepresentationHelperTest.java][testScheduledActivityIncludesAssignmentName][4] = -> TRY {  -> jsonSA=outputAsObject()@ -> assertEquals("Missing assignment name","S",jsonSA.getJSONObject("assignment",).get("name",),)@ } CATCH(Exception) {}
results[https://github.com/alibaba/fastjson/blob/6601ea7dcb9a96fb1f76a4473f59beb7ce73f892/src/test/java/com/alibaba/json/bvt/JSONObjectTest.java][test_getObject_null][2] = -> TRY {  -> json=new JSONObject()@ -> json.put("obj",null,)@ -> Assert.assertTrue(json.getJSONObject("obj",)==null,)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitTagTest.java][testListOrionServerTags][2] = -> TRY {  -> folder=new JSONObject(response.getText(),)@ -> gitSection=folder.getJSONObject(GitConstants.KEY_GIT,)@ -> gitTagUri=gitSection.getString(GitConstants.KEY_TAG,)@ } CATCH(Exception) {}
results[https://github.com/clintmanning/new-empty/blob/96d222fbda20739b39027c64e8399804d415365b/cycle/src/test/java/com/camunda/fox/cycle/impl/connector/signavio/AbstractSignavioConnectorTest.java][createEmptyModel][4] = -> TRY {  -> jsonObj=new JSONObject(result,)@ -> href=jsonObj.getString("href",)@ -> repObj=jsonObj.getJSONObject("rep",)@ -> name=repObj.getString("name",)@ } CATCH(Exception) {}
results[https://github.com/jdeolive/suite-old/blob/9a748c78fb2eee1e5c36f67b9607d64d0b99f135/geoserver/importer/src/test/java/org/opengeo/data/importer/rest/ImportResourceTest.java][testPost][2] = -> TRY {  -> json=(JSONObject) json(resp,)@ -> imprt=json.getJSONObject("import",)@ -> assertEquals(id,imprt.getInt("id",),)@ } CATCH(Exception) {}
results[https://github.com/qcadoo/mes/blob/fcd9961670c6553a66c37c5c92cdf74e1ffe0459/mes-core/src/test/java/com/qcadoo/mes/newview/ComponentStateTest.java][shouldRenderJsonWithNullFieldValue][3] = -> TRY {  -> json=componentState.render()@ -> assertFalse(json.getJSONObject(ComponentState.JSON_CONTENT,).has(ComponentState.JSON_VALUE,),)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/9b335a552bcc01f120d86832e9322c5abb8106db/main/src/com/google/refine/operations/recon/ReconClearSimilarCellsOperation.java][reconstruct][4] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new ReconClearSimilarCellsOperation(engineConfig,obj.getString("columnName",),obj.getString("similarValue",),)@ } CATCH(Exception) {}
results[https://github.com/baasbox/baasbox/blob/10da10d30fa276463f4463a9553606d158a79db1/test/FileCreateTest.java][getUuid][6] = -> TRY { -> jo=(JSONObject) json@ -> sUuid=jo.getJSONObject("data",).getString("id",)@ } CATCH(Exception) { -> Assert.fail("Cannot get UUID (id) value: "+ex.getMessage()+"\n The json object is: \n"+json,)@ }
results[https://github.com/radare/sdb/blob/2775caa6711321cd945fbaf150a225e6684b13fc/bindings/benchmark/java.java][dojson][6] = -> TRY { -> obj=new JSONObject(json,)@ -> g=obj.getJSONObject("glossary",)@ -> title=g.getString("title",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitStatusTest.java][testStatusCleanLink][3] = -> TRY {  -> project=createProjectOrLink(workspaceLocation,projectName,gitDir.toString(),)@ -> gitSection=project.getJSONObject(GitConstants.KEY_GIT,)@ -> gitStatusUri=gitSection.getString(GitConstants.KEY_STATUS,)@ } CATCH(Exception) {}
results[https://github.com/NUBIC/psc-mirror/blob/21bdf1367cd72c16c4b1b802d074ca106c79252f/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/ScheduledActivityReportJsonRepresentationTest.java][testFilterKey][4] = -> TRY {  -> actual=writeAndParseObject(actual(),)@ -> assertNotNull("Missing key filters",actual.getJSONObject("filters",),)@ } CATCH(Exception) {}
results[https://github.com/simonAllier/diversify-statements/blob/d3d7c678f1896148e510eed457e41310a016db53/src/main/java/fr/inria/diversify/transformation/TransformationParser.java][parseASTDelete][1] = -> TRY {  -> t=getTransformation(jsonObject,)@ -> d=findCodeFragment(t.getJSONObject("CodeFragmentDelete",),)@ -> trans.setPosition(d,)@ } CATCH(Exception) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/1227c9dff41bdc87b56ed0b35cc8d1938d0db168/src/main/java/com/metaweb/gridworks/model/operations/TextTransformOperation.java][reconstruct][5] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new TextTransformOperation(engineConfig,obj.getString("columnName",),obj.getString("expression",),)@ } CATCH(Exception) {}
results[https://github.com/qcadoo/qcadoo/blob/8785e084d055b40b02f124de872a83cada1e2dde/qcadoo-view/src/test/java/com/qcadoo/view/internal/states/components/FormComponentStateTest.java][shouldRenderFormEntityId][3] = -> TRY {  -> json=componentState.render()@ -> assertEquals(13L,json.getJSONObject(AbstractComponentState.JSON_CONTENT,).getLong(FormComponentState.JSON_ENTITY_ID,),)@ } CATCH(Exception) {}
results[https://github.com/forcedotcom/SalesforceMobileSDK-Android/blob/aeb022c9a1082ef038801fedaea2dd92a48585d4/libs/test/SalesforceSDKTest/src/com/salesforce/androidsdk/rest/RestClientTest.java][testRestClientUnauthenticatedlientInfoAsync][2] = -> TRY {  -> jsonResponse=response.asJSONObject()@ -> checkKeys(jsonResponse,"artists",)@ -> checkKeys(jsonResponse.getJSONObject("artists",),"href","items","limit","next","offset","previous","total",)@ } CATCH(Exception) {}
results[https://github.com/utwente-db/neogeo/blob/8683b99cad521d8bdc9521424fea3c4237ff5e5a/neogeo-twitter/src/main/java/nl/utwente/db/neogeo/twitter/harvest/JSONParser.java][parseReverseGeoCode][1] = -> TRY { -> topObj=getTOPJSONObject(jsonTxt,)@ -> places=topObj.getJSONObject("result",).getJSONArray("places",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/yanchenko/droidparts/blob/6a64c33d0da4e5835ebcd525971112747651fe6e/test/src/org/droidparts/test/testcase/JSONTestCase.java][testNestedKeys][2] = -> TRY {  -> obj=serializer.serialize(model,)@ -> assertEquals("str",obj.getJSONObject("sub_obj",).getString("str",),)@ } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/45c09da1e5cf58b176a359fe7d02c35fb541b881/java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/MakeRequestHandlerTest.java][testSetCookiesReturned][4] = -> TRY {  -> results=extractJsonFromResponse()@ -> headers=results.getJSONObject("headers",)@ -> assertNotNull(headers,)@ -> cookies=headers.getJSONArray("set-cookie",)@ } CATCH(Exception) {}
results[https://github.com/qcadoo/mes/blob/4fe0018f025cf93efdb0d2ff3944fb0e4c7267ff/mes-core/src/test/java/com/qcadoo/mes/newview/states/ComponentStateTest.java][shouldRenderJsonWithFieldValue][3] = -> TRY {  -> json=componentState.render()@ -> assertEquals("text",json.getJSONObject(ComponentState.JSON_CONTENT,).getString(ComponentState.JSON_VALUE,),)@ } CATCH(Exception) {}
results[https://github.com/SvenAke/AboveGameServer/blob/5925d16c4844826cf3e5e6777fad6bb56beb9618/abovec2dm.client/com/aboveware/abovec2dm/client/GameManagerClient.java][confirm][1] = -> TRY { -> me=new AccountClient(dataJson.getJSONObject(GameEngineProtocol.Account.UserInfo.RET_ACCOUNT,),)@ } CATCH(Exception) { -> sendBroadcast(new JsonReturn(JsonReturn.value.FAIL,),)@ }
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitCheckoutTest.java][testCheckoutInFolder][1] = -> TRY {  -> folder1=getChild(project,"folder",)@ -> folderTxt=getChild(folder1,"folder.txt",)@ -> gitSection=folder1.getJSONObject(GitConstants.KEY_GIT,)@ -> gitStatusUri=gitSection.getString(GitConstants.KEY_STATUS,)@ } CATCH(Exception) {}
results[https://github.com/omar-sr88/ProjetoLP3/blob/a0147e0482fd2cf2c8bccc6213659616aa688277/SigaaBiblio/src/br/nti/SigaaBiblio/activities/CambridgeActivity.java][doInBackground][2] = -> TRY { -> jsonResult=new JSONObject(jsonString,)@ -> resultados=jsonResult.getJSONObject("search_results",).getJSONArray("bib_record",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/hackaton/hackaton-2/blob/df79fae3db7c395ffcc1dd0739c4ecc20082c163/hackaton-2-transmission/src/main/java/hackaton2/transmission/client/DefaultTransmission.java][addTorrent][1] = -> TRY {  -> responseArguments=request("torrent-add",arguments,)@ -> torrentObject=responseArguments.getJSONObject("torrent-added",)@ -> return Torrent.fromJsonObject(torrentObject,)@ } CATCH(Exception) {}
results[https://github.com/hack4reno2011/BetaReno/blob/d18a73d28c1c928e389fe44f7f3e3459d944cc95/Android/BetaReno/src/hack4reno/betareno/SubmitRide.java][doInBackground][1] = -> TRY { -> jsonObject=new JSONObject(serverResponse,)@ -> return new Idea(jsonObject.getJSONObject("idea",),)@ } CATCH(Exception) { -> System.out.println(e,)@ }
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitIndexTest.java][testIndexModifiedByOrion][1] = -> TRY {  -> testTxt=getChild(project,"test.txt",)@ -> modifyFile(testTxt,"hello",)@ -> gitSection=testTxt.getJSONObject(GitConstants.KEY_GIT,)@ -> gitIndexUri=gitSection.getString(GitConstants.KEY_INDEX,)@ } CATCH(Exception) {}
results[https://github.com/schmurfy/funambol-json/blob/dd127688fe06c5e1872407a528e3cde96d1c53af/json/api-testing-tool/src/main/java/com/funambol/json/api/dao/FunambolJSONApiDAO.java][parseAddItemResponse][1] = -> TRY { -> jo=JSONObject.fromObject(response,)@ -> jdata=jo.getJSONObject("data",)@ -> id=jdata.getString("key",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mmoutenot/SandFox/blob/bf2a8389a920b29af3bf3cff307651df175e5671/embedding/android/GeckoAppShell.java][handleGeckoMessage][2] = -> TRY { -> json=new JSONObject(message,)@ -> geckoObject=json.getJSONObject("gecko",)@ -> type=geckoObject.getString("type",)@ } CATCH(Exception) { -> Log.i(LOG_FILE_NAME,"handleGeckoMessage throws "+e,)@ }
results[https://github.com/apache/sling/blob/497a6106864beb47c4d465acb5b9c3b2ebbe6837/testing/samples/integration-tests/src/test/java/org/apache/sling/testing/samples/integrationtests/serverside/sling/post/SlingPostChunkUploadTest.java][getChunkJson][1] = -> TRY {  -> json=new JSONObject(jsonStr,)@ -> IF { -> json=json.getJSONObject(JCR_CONTENT,)@json.has(JCR_CONTENT,) } } CATCH(Exception) {}
results[https://github.com/JackDanny/projetDCLL_MoodleXML_Json/blob/8fd32dd6097d73413d504e9d520c3bf96fefbda3/projet/src/main/java/jsonttoxml/xmlWriter/XmlWriterImpl.java][t][1] = -> TRY { -> o2=new JSONObject(jsonT,)@ -> tbis=o2.getJSONObject("quiz",)@ -> t2=tbis.getJSONArray("question",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/calabash-driver/calabash-driver/blob/452568cfb658395b8d99cc2f29b79cef670b569e/calabash-driver-server/src/main/java/sh/calaba/driver/server/command/impl/NewSession.java][handle][1] = -> TRY {  -> payload=getRequest().getPayload()@ -> desiredCapabilities=payload.getJSONObject("desiredCapabilities",)@ -> capabilities=CalabashCapabilities.fromJSON(desiredCapabilities,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/psc/blob/fef79655deaa9e91226728031af5a243b44f5e98/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/ReportRepresentationTest.java][testFilterKey][2] = -> TRY {  -> actual=writeAndParseObject(new ReportRepresentation(filters,allRows,),)@ -> assertNotNull("Missing key filters",actual.getJSONObject("filters",),)@ } CATCH(Exception) {}
results[https://github.com/collectionspace/application/blob/addf108261fb0dc9d2c5b38d181041e186ce89ac/tomcat-main/src/test/java/org/collectionspace/chain/csp/persistence/file/TestGeneral.java][testTermsUsedVocab][1] = -> TRY {  -> urn=persondata.getString("urn",)@ -> testdata=new JSONObject(urnTestJoe,)@ -> testdata.getJSONObject("fields",).put("contentPeople",urn,)@ -> out=tester.POSTData("/cataloging/",testdata,jetty,)@ } CATCH(Exception) {}
results[https://github.com/NUBIC/psc-mirror/blob/63fff65c897164a1c3fc54beadabf36b39e55fd5/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/ScheduleRepresentationHelperTest.java][testScheduledActivityHasUpdatePrivilege][2] = -> TRY {  -> jsonSA=outputAsObject()@ -> assertEquals("Missing update privilege","update",jsonSA.getJSONObject("assignment",).getJSONArray("privileges",).get(0,),)@ } CATCH(Exception) {}
results[https://github.com/geoserver/geoserver-history/blob/dcb33fd3a8b4f9e6ed3e3cf477e2863970968a6f/geoserver/wfs/src/test/java/org/geoserver/wfs/response/GeoJSONTest.java][testGeometryCollection][2] = -> TRY {  -> aFeature=featureCol.getJSONObject(1,)@ -> aGeometry=aFeature.getJSONObject("geometry",)@ -> assertEquals(aGeometry.getString("type",),"MultiLineString",)@ -> geomArray=aGeometry.getJSONArray("coordinates",)@ } CATCH(Exception) {}
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/92ecc0c0f5a00fe19784bbcec637a6217ffe3678/src/main/java/com/metaweb/gridworks/model/recon/DataExtensionReconConfig.java][reconstruct][7] = -> TRY {  -> type=obj.getJSONObject("type",)@ -> return new DataExtensionReconConfig(new FreebaseType(type.getString("id",),type.getString("name",),),)@ } CATCH(Exception) {}
results[https://github.com/dfci-cccb/mev/blob/9b4ccf1f96a34439cee9804127bedbdf7a721715/annotation/server/src/main/java/com/google/refine/operations/recon/ReconDiscardJudgmentsOperation.java][reconstruct][3] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new ReconDiscardJudgmentsOperation(engineConfig,obj.getString("columnName",),obj.has("clearData",)&&obj.getBoolean("clearData",),)@ } CATCH(Exception) {}
results[https://github.com/rjmarsan/PlasmaSound/blob/0793daf0094be1cfe04fb01deafb5fa8f950f044/src/com/rj/processing/plasmasoundhd/pd/instruments/JSONPresets.java][deletePreset][2] = -> TRY { -> presetsobj=getPresets(c,)@ -> presets=presetsobj.getJSONObject("presets",)@ -> presets.remove(preset,)@ -> writePresets(presetsobj,c,)@ } CATCH(Exception) { -> j.printStackTrace()@ }
results[https://github.com/jdunck/google-refine/blob/ff55fb4d84722a7a2ffc1a774039b15f52deb866/main/src/com/google/refine/operations/recon/ReconMarkNewTopicsOperation.java][reconstruct][9] = -> TRY {  -> engineConfig=obj.getJSONObject("engineConfig",)@ -> return new ReconMarkNewTopicsOperation(engineConfig,obj.getString("columnName",),(obj.has("shareNewTopics",))?obj.getBoolean("shareNewTopics",):false,)@ } CATCH(Exception) {}
results[https://github.com/cycladessoa/cyclades/blob/6f272c2628addb61946abff28f0688306bde4e57/engine/src/main/java/org/cyclades/engine/stroma/xstroma/XSTROMABrokerRequest.java][fromJSONXTROMAString][1] = -> TRY {  -> jsonObject=new JSONObject(messageString,)@ -> parameters=MapHelper.parameterMapFromMetaObject(jsonObject.getJSONArray(BASE_PARAMETERS,),)@ -> dataJSONObject=jsonObject.getJSONObject(DATA,)@ -> requestsJSONArray=dataJSONObject.getJSONArray(REQUESTS,)@ } CATCH(Exception) {}
results[https://github.com/collectionspace/application/blob/1888600d2fc17a8e4c1a133cbb9068b085a8a37b/cspi-services/src/test/java/org/collectionspace/chain/csp/persistence/services/relation/TestRelations.java][testRelationsThroughAPI][1] = -> TRY {  -> datalist=ss.getPathsJSON("relations/main",searchRestriction,)@ -> paths=(String[]) datalist.get("listItems",)@ -> log.info(datalist.toString(),)@ -> pagination=datalist.getJSONObject("pagination",)@ } CATCH(Exception) {}
results[https://github.com/collectionspace/application/blob/d77c5edbb7439b10562c9c8f403d35924cbc0f1a/tomcat-main/src/test/java/org/collectionspace/chain/csp/webui/main/TestUIRecords.java][testProcedureMedia][1] = -> TRY {  -> spec=new JSONObject(out.getContent(),)@ -> assertEquals("${fields.blobs.0.length}",spec.getJSONObject("recordEditor",).getString(".csc-blobs-length",),)@ } CATCH(Exception) {}
results[https://github.com/hyxf/coder/blob/b297553ac2811379c6fc703a27a2e074f7627455/source/src/cn/hyxf/app/ui/DetailsActivity.java][doInBackground][2] = -> TRY { -> jsonObj=new JSONObject(result,)@ -> response=jsonObj.getJSONObject("response",)@ -> IF { -> return true@(error=response.getInt("isErr",))==0 } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/zjshen/hadoop-common/blob/14b1c14ba6523cd13928c18aa8f6bd278c5e41fb/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/TestRMWebServicesNodes.java][testQueryAll][2] = -> TRY {  -> json=response.getEntity(JSONObject.class,)@ -> nodes=json.getJSONObject("nodes",)@ -> assertEquals("incorrect number of elements",1,nodes.length(),)@ -> nodeArray=nodes.getJSONArray("node",)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitStatusTest.java][testStatusMissing][8] = -> TRY {  -> project=createProjectOrLink(workspaceLocation,projectName,gitDir.toString(),)@ -> testTxt=getChild(project,"test.txt",)@ -> gitSection=project.getJSONObject(GitConstants.KEY_GIT,)@ -> gitStatusUri=gitSection.getString(GitConstants.KEY_STATUS,)@ } CATCH(Exception) {}
results[https://github.com/tikkat/KudoMessage/blob/e9ed9f451cb549e03ca018135cbe069eab78f44d/central/src/se/kudomessage/hustler/handlers/GatewayHandler.java][pushMessage][2] = -> TRY { -> token=input.getString("token",)@ -> message=input.getJSONObject("message",)@ -> gc.saveMessage(GmailController.Label.STANDARD,message,)@ -> PushHandler.pushMessageToClients(email,message,)@ } CATCH(Exception) { -> System.err.println("Error in pushMessage: "+e,)@ }
results[https://github.com/terraframe/Runway-SDK/blob/4e1a50a6e89369a0ea61403f3dc6ca0aef06f5a8/runwaysdk-test/src/main/java/com/runwaysdk/facade/JSONInvokeMethodTest.java][testInvokeArrayMethod][1] = -> TRY {  -> returnObject1=new JSONObject(returnJSON1,)@ -> businessJSON=returnObject1.getJSONObject(JSONReturnObject.RETURN_VALUE,).toString()@ -> returnJSON=jsonProxy.invokeMethod(clientRequest.getSessionId(),metadataJSON,businessJSON,parametersJSON,)@ } CATCH(Exception) {}
results[https://github.com/lbjay/gridworks/blob/402f48068ddd4880948e54f064609b5857701762/src/main/java/com/metaweb/gridworks/model/recon/KeyBasedReconConfig.java][reconstruct][4] = -> TRY {  -> ns=obj.getJSONObject("namespace",)@ -> return new KeyBasedReconConfig(new FreebaseTopic(ns.getString("id",),ns.getString("name",),),)@ } CATCH(Exception) {}
results[https://github.com/facebook/jcommon/blob/af219dab93cfd77fe21f7deecc616b92d241cc07/config/src/test/java/com/facebook/config/TestSystemPropOverridingJSONProvider.java][testValueAsJSON][1] = -> TRY {  -> System.setProperty(KEY5,"{nested_key : nested_value}",)@ -> jsonObject=jsonProvider.get()@ -> nestedJSONObject=jsonObject.getJSONObject(KEY5,)@ -> Assert.assertEquals(nestedJSONObject.get("nested_key",),"nested_value",)@ } CATCH(Exception) {}
results[https://github.com/chandlersong/TestCase/blob/2ada7db79c507c14bb863ca569076c2c7cac414f/TestCase/src/test/java/com/hilatest/googledata/ajaxsearch/AJAXSearchBasic.java][doSearch][1] = -> TRY { -> body=EntityUtils.toString(response.getEntity(),)@ -> return new JSONObject(body,).getJSONObject(KeyWord.responseData,)@ } CATCH(Exception) { -> return new JSONObject()@ }
results[https://github.com/ios-driver/ios-driver/blob/2e9c40cb4554951d0d598d91459d88e719653b9e/server/src/test/java/org/uiautomation/ios/server/XpathTreeFinderTest.java][setup][1] = -> TRY {  -> tree=new JSONObject(uiCatalog1,).getJSONObject("tree",)@ -> parser=new XPath2Engine(new JSONToXMLConverter(tree,).asXML(),)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/5377d3cf454aa4e15b68517cef3a0575ebf035a9/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitStatusTest.java][testStatusSubfolderDiff][1] = -> TRY {  -> LOOP { -> subfolder=getChild(folder,"folder",)@ -> gitSection=subfolder.getJSONObject(GitConstants.KEY_GIT,)@ -> gitStatusUri=gitSection.getString(GitConstants.KEY_STATUS,)@ } } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/b4ac24653e8a5c686e0883e9f1b722fafd5bf9b2/java/social-api/src/test/java/org/apache/shindig/social/dataservice/integration/RestfulJsonPeopleTest.java][assertPerson][1] = -> TRY {  -> assertEquals(expectedId,person.getString("id",),)@ -> assertEquals(expectedName,person.getJSONObject("name",).getString("formatted",),)@ } CATCH(Exception) {}
results[https://github.com/TeamFauna/dumbo/blob/a899da2a67776203942020e87207240c8784cf57/android/AndroidFingerprinter/TestFingerprinter/src/fauna/dumbo/test/TestFingerprinter.java][didFindMatchForCode][1] = -> TRY { -> offset=response.getJSONObject("offset",)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ } -> status.setText("Offset: \n"+offset.toString()+"\nMatch: \n"+response.toString()+" Code \n"+code,)@
results[https://github.com/carlosbrando/shindig/blob/6f2f3b9a7ab617f0f0b136f603a14644723a6eda/java/gadgets/src/test/java/org/apache/shindig/gadgets/render/RenderingGadgetRewriterTest.java][assertXhrConfigContains][1] = -> TRY {  -> config=new JSONObject(configJson,)@ -> xhrConfig=config.getJSONObject("shindig.xhrwrapper",)@ -> assertEquals(message,xhrConfig.toString(),expectedJson.toString(),)@ } CATCH(Exception) {}
results[https://github.com/HUSTDAVID/wuhan-dm/blob/9177ec03cc6cba0c117b9af7ca9594849af69969/src/src/com/wh/dm/util/LoadUtil.java][checkTemplate][1] = -> TRY { -> jsonObject=new JSONObject()@ -> jsonObject=(JSONObject) jsonParser.nextValue()@ -> objMagazine=jsonObject.getJSONObject("magazine",)@ -> template=objMagazine.getInt("template",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/yamac/android-demos/blob/c1d217312e47e37acb65d0041f6354e84a8b3fba/YamacDemos/src/net/yamac/android/demos/data/DemoItemWebServiceRepository.java][getItems][2] = -> TRY { -> json=DemoApplication.getHttpClient().getAsJSONObject(Const.API_BASE+"json/json",params,)@ -> jsonResult=json.getJSONObject("result",)@ -> jsonItems=jsonResult.getJSONArray("items",)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/ese-unibe-ch/ese2013-team7/blob/14989ecdd03e47250f81960b5b06fd972cb71a90/Programming/Mensa@Unibe/src/com/ese2013/mensaunibe/api/JSONParser.java][parse][1] = -> json=new JSONObject()@ -> TRY { -> jsonObj=new JSONObject(jsonString,)@ -> json=jsonObj.getJSONObject("result",)@ } CATCH(Exception) { -> Log.e(TAG,e.getMessage(),)@ }
results[https://github.com/NCIP/psc/blob/f8544f68a13c472091a228a1b436b20b3e025bce/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/MultipleAssignmentScheduleJsonRepresentationTest.java][testScheduledActivityWithoutUpdatePrivilege][1] = -> TRY {  -> jsonSA=outputAsObject()@ -> assertEquals("Should not include update privilege",0,jsonSA.getJSONObject("assignment",).getJSONArray("privileges",).length(),)@ } CATCH(Exception) {}
results[https://github.com/roundrop/facebook4j/blob/dd62d024455d114a559d346d00843d85280205b0/facebook4j-core/src/test/java/facebook4j/BatchRequestsMethodsTest.java][error][1] = -> TRY {  -> body=actual1.asJSONObject()@ -> assertThat(body.getJSONObject("error",).getString("type",),is("OAuthException",),)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/3474a2bcde538260407eaa8cf2db7886b3530db6/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitLogTest.java][testGetNonExistingCommit][1] = -> TRY {  -> testTxt=getChild(project,"test.txt",)@ -> log=logObject(testTxt.getJSONObject(GitConstants.KEY_GIT,).getString(GitConstants.KEY_HEAD,),)@ -> commitsArray=log.getJSONArray(ProtocolConstants.KEY_CHILDREN,)@ } CATCH(Exception) {}
results[https://github.com/meisterfuu/Animexx-Android-App/blob/8a94d98a6c592fec9d3991ecd7583980306866c1/src/de/meisterfuu/animexx/fanworks/Fanart.java][run][1] = -> TRY { -> jsonResponse=new JSONObject(JSON,)@ -> fanart=FanworkObject.parseJSON(jsonResponse.getJSONObject("return",),)@ } CATCH(Exception) { -> e.printStackTrace()@ -> temp.finish()@ }
