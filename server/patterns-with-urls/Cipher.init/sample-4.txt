results[https://github.com/svn2github/kryo/blob/09e8ef73d57c2c112bf50222b323ae2c75ef4fec/src/com/esotericsoftware/kryo/serializers/BlowfishSerializer.java][getCipher] = -> TRY { -> cipher=Cipher.getInstance("Blowfish",)@ -> cipher.init(mode,keySpec,)@ -> return cipher@ } CATCH { }
results[https://github.com/threerings/narya/blob/a7e0893191b56381e37740de4a639e696a368881/core/src/main/java/com/threerings/presents/util/SecureUtil.java][getRSACipher] = -> TRY { -> cipher=Cipher.getInstance("RSA",)@ -> cipher.init(mode,key,)@ -> return cipher@ } CATCH { }
results[https://github.com/threerings/narya/blob/f32e7aa322ed7d97b89138ed339e11c841a91bd6/src/main/java/com/threerings/presents/util/SecureUtil.java][getRSACipher] = -> TRY { -> cipher=Cipher.getInstance("RSA",)@ -> cipher.init(mode,key,)@ -> return cipher@ } CATCH { }
results[https://github.com/AbinashBishoyi/FreeRapid-Plugins/blob/19f75252c46a12ab0acd704675ce699df2f5f880/src/tor/com/subgraph/orchid/crypto/TorStreamCipher.java][createCipher] = -> TRY { -> cipher=Cipher.getInstance("AES/ECB/NoPadding",)@ -> cipher.init(Cipher.ENCRYPT_MODE,keySpec,)@ -> return cipher@ } CATCH { }
results[https://github.com/ChioriGreene/ChioriWebServer/blob/25af99a3457360bbb54a71b4a36ff8541ea8d58c/api/src/com/esotericsoftware/kryo/serializers/BlowfishSerializer.java][getCipher] = -> TRY { -> cipher=Cipher.getInstance("Blowfish",)@ -> cipher.init(mode,keySpec,)@ -> return cipher@ } CATCH { }
results[https://github.com/brl/JTor/blob/63425f189ac7a4ea5e606e97cfc7ca8b8bb3a6fc/src/com/subgraph/orchid/crypto/TorStreamCipher.java][createCipher] = -> TRY { -> cipher=Cipher.getInstance("AES/ECB/NoPadding",)@ -> cipher.init(Cipher.ENCRYPT_MODE,keySpec,)@ -> return cipher@ } CATCH { }
results[https://github.com/optivo-org/kryo/blob/930f6a052a8df30d4818b0df3b5bbb52cd743e14/src/com/esotericsoftware/kryo/serializers/BlowfishSerializer.java][getCipher] = -> TRY { -> cipher=Cipher.getInstance("Blowfish",)@ -> cipher.init(mode,keySpec,)@ -> return cipher@ } CATCH { }
results[https://github.com/cogroo/cogroo4/blob/683218e5729a3f1215ce467723bb02848463b2b6/lang/pt_br/cogroo-addon/src/org/cogroo/addon/util/SecurityUtil.java][decryptSecretKey] = -> TRY { -> rsacf=Cipher.getInstance("RSA",)@ -> rsacf.init(Cipher.DECRYPT_MODE,privatekey,)@ -> result=rsacf.doFinal(encryptedSecretKey,)@ } CATCH { }
results[https://github.com/jca02266/k9mail/blob/16b4a714d0df3abcef01f3e47711026af4655080/src/org/apache/james/mime4j/storage/CipherStorageProvider.java][getInputStream] = -> TRY { -> cipher=Cipher.getInstance(algorithm,)@ -> cipher.init(Cipher.DECRYPT_MODE,skeySpec,)@ -> return new CipherInputStream(in,cipher,)@ } CATCH { }
results[https://github.com/SSilence/scotty/blob/f94be415cac66f1ca45727d5b815f90b121199bb/scotty-commons/src/main/java/scotty/crypto/RSAEncryption.java][encryptDecrypt] = -> TRY { -> cipher=Cipher.getInstance("RSA",)@ -> cipher.init(mode,key,)@ -> return cipher.doFinal(content,)@ } CATCH { }
