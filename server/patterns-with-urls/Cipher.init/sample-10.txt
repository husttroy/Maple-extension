results[https://github.com/OpenAttestation/OpenAttestation/blob/d0c146d6e5a429614570dd14ba36243f288f8724/Source/PrivacyCA/src/gov/niarl/his/privacyca/HisTpmProvisioner.java][decryptDES] = -> cipher=Cipher.getInstance("DESede/ECB/PKCS7Padding","BC",)@ -> cipher.init(Cipher.DECRYPT_MODE,key,)@ -> return cipher.doFinal(text,)@
results[https://github.com/OpenAttestation/OpenAttestation/blob/d0c146d6e5a429614570dd14ba36243f288f8724/Source/PrivacyCA/src/gov/niarl/his/privacyca/HisTpmProvisioner.java][encryptRSA] = -> cipher=Cipher.getInstance("RSA","BC",)@ -> cipher.init(Cipher.ENCRYPT_MODE,pubRSA,)@ -> return cipher.doFinal(text,)@
results[https://github.com/bwilson30/distributed-ftp/blob/2724fb2fd44003f4e7c314b4beeed973df8807d5/the_final_folder/client/Encrypt.java][EncryptData] = -> rsaPublicKey=(RSAPublicKey) pub_Key@ -> encryptCipher=Cipher.getInstance("RSA/NONE/NoPadding",bcp,)@ -> encryptCipher.init(Cipher.ENCRYPT_MODE,rsaPublicKey,)@ -> messageCrypte=blockCipher(encryptCipher,data,Cipher.ENCRYPT_MODE,)@
results[https://github.com/bwilson30/distributed-ftp/blob/2724fb2fd44003f4e7c314b4beeed973df8807d5/the_final_folder/client/Encrypt.java][Decrypt] = -> rsaPrivateKey=(RSAPrivateKey) priv_Key@ -> decryptCipher=Cipher.getInstance("RSA/NONE/NoPadding",bcp,)@ -> decryptCipher.init(Cipher.DECRYPT_MODE,rsaPrivateKey,)@ -> messageDecrypte=blockCipher(decryptCipher,data,Cipher.DECRYPT_MODE,)@
results[https://github.com/crossbear/Crossbear/blob/dfb0b0dab7c94c096155eac19022f9c157bff498/server/eightthousandeighty/src/crossbear/PublicIPNotifProcessor.java][RSADecrypt] = -> rsaOAEPCipher=Cipher.getInstance("RSA/None/OAEPWithSHA1AndMGF1Padding","BC",)@ -> rsaOAEPCipher.init(Cipher.DECRYPT_MODE,pkey,)@ -> return rsaOAEPCipher.doFinal(cryptText,)@
results[https://github.com/crossbear/Crossbear/blob/e90d4bbb4917ea9546239eb507706f47c9689cb6/server/eighty/src/crossbear/PublicIPNotifProcessor.java][RSADecrypt] = -> rsaOAEPCipher=Cipher.getInstance("RSA/None/OAEPWithSHA1AndMGF1Padding","BC",)@ -> rsaOAEPCipher.init(Cipher.DECRYPT_MODE,pkey,)@ -> return rsaOAEPCipher.doFinal(cryptText,)@
results[https://github.com/crossbear/Crossbear/blob/e166b57b61e1b495e08b0db03eefd79a2fd3873e/CBJavaHunter/src/crossbear/PIPFetcher.java][RSAEncrypt] = -> rsaOAEPCipher=Cipher.getInstance("RSA/None/OAEPWithSHA1AndMGF1Padding","BC",)@ -> rsaOAEPCipher.init(Cipher.ENCRYPT_MODE,pkey,)@ -> return rsaOAEPCipher.doFinal(plainText,)@
results[https://github.com/OpenAttestation/OpenAttestation/blob/d0c146d6e5a429614570dd14ba36243f288f8724/Source/PrivacyCA/src/gov/niarl/his/privacyca/HisTpmProvisioner.java][encryptDES] = -> c=Cipher.getInstance("DESede/ECB/PKCS7Padding","BC",)@ -> c.init(Cipher.ENCRYPT_MODE,key,)@ -> return c.doFinal(text,)@
results[https://github.com/chandlersong/TestCase/blob/2ada7db79c507c14bb863ca569076c2c7cac414f/TestCase/src/test/java/com/hilatest/security/chapter7/aes/AESCoder.java][encrypt] = -> k=toKey(key,)@ -> cipher=Cipher.getInstance(CIPHER_ALGORITHM,"BC",)@ -> cipher.init(Cipher.ENCRYPT_MODE,k,)@ -> return cipher.doFinal(data,)@
results[https://github.com/chandlersong/TestCase/blob/2ada7db79c507c14bb863ca569076c2c7cac414f/TestCase/src/test/java/com/hilatest/security/chapter7/aes/AESCoder.java][decrpt] = -> k=toKey(key,)@ -> cipher=Cipher.getInstance(CIPHER_ALGORITHM,"BC",)@ -> cipher.init(Cipher.DECRYPT_MODE,k,)@ -> return cipher.doFinal(data,)@
