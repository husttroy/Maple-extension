results[https://github.com/ansell/openrdf-sesame/blob/5315251cba415bc87d6a0b615989f7db453cfe14/core/util/src/main/java/info/aduna/io/NioFile.java][<init>] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file: "+file,)@!(file.exists()) && !(created) } } } CATCH {}
results[https://github.com/facetoe/JReader/blob/229ebde76506e7b7b5b52495efe02427cd8e9bca/src/com/facetoe/jreader/helpers/Utilities.java][checkAndCreateFileIfNotPresent] = -> TRY {  -> IF { -> wasSuccess=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file at: "+file.getAbsolutePath(),)@!(wasSuccess) && !(file.exists()) } } } CATCH {}
results[https://github.com/facetoe/JReader/blob/f21fdea190af5b1fe7bf1b54406ebbd0217deaae/src/com/facetoe/jreader/helpers/Util.java][checkAndCreateFileIfNotPresent] = -> TRY {  -> IF { -> wasSuccess=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file at: "+file.getAbsolutePath(),)@!(wasSuccess) && !(file.exists()) } } } CATCH {}
results[https://github.com/facetoe/JReader/blob/22945b4ad55dfb3c51e52e1a7537925a2e6ab988/src/com/facetoe/jreader/Utilities.java][writeCLassData] = -> TRY {  -> file=new File(filePath,)@ -> IF { -> wasSuccess=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to save class data at: "+filePath,)@!(wasSuccess) && !(file.exists()) } } -> writeClassData(filePath,data,)@!(!(file.exists())) } CATCH {}
results[https://github.com/ansell/openrdf-sesame/blob/c6840e87d23965e8756a71ed441b6e5a204e75bd/sesame2/openrdf-sail/openrdf-sail-nativerdf/src/main/java/org/openrdf/sail/nativerdf/datastore/HashFile.java][<init>] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file: "+file,)@!(file.exists()) && !(created) } } -> raf=new RandomAccessFile(file,"rw",)@!(!(file.exists())) -> fileChannel=raf.getChannel()@!(!(file.exists())) } CATCH {}
results[https://github.com/ansell/openrdf-sesame/blob/3dd1eead9a6213640e4db6513e522b5fa6532154/core/sail/openrdf-sail-nativerdf/src/main/java/org/openrdf/sail/nativerdf/datastore/HashFile.java][createEmptyFile] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file "+file,)@!(file.exists()) && !(created) } } -> raf=new RandomAccessFile(file,"rw",)@!(!(file.exists())) -> raf.setLength(0L,)@!(!(file.exists())) } CATCH {}
results[https://github.com/ansell/openrdf-sesame/blob/c6840e87d23965e8756a71ed441b6e5a204e75bd/sesame2/openrdf-sail/openrdf-sail-nativerdf/src/main/java/org/openrdf/sail/nativerdf/datastore/HashFile.java][createEmptyFile] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file "+file,)@!(file.exists()) && !(created) } } -> raf=new RandomAccessFile(file,"rw",)@!(!(file.exists())) -> raf.setLength(0L,)@!(!(file.exists())) } CATCH {}
results[https://github.com/ansell/openrdf-sesame/blob/3dd1eead9a6213640e4db6513e522b5fa6532154/core/sail/openrdf-sail-nativerdf/src/main/java/org/openrdf/sail/nativerdf/datastore/HashFile.java][<init>] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file: "+file,)@!(file.exists()) && !(created) } } -> raf=new RandomAccessFile(file,"rw",)@!(!(file.exists())) -> fileChannel=raf.getChannel()@!(!(file.exists())) } CATCH {}
results[https://github.com/ansell/openrdf-sesame/blob/27ddb32380d61b174184fde76f7778d0dcb862ec/core/openrdf-sail/openrdf-sail-nativerdf/src/main/java/org/openrdf/sail/nativerdf/datastore/HashFile.java][createEmptyFile] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file "+file,)@!(file.exists()) && !(created) } } -> raf=new RandomAccessFile(file,"rw",)@!(!(file.exists())) -> raf.setLength(0L,)@!(!(file.exists())) } CATCH {}
results[https://github.com/ansell/openrdf-sesame/blob/27ddb32380d61b174184fde76f7778d0dcb862ec/core/openrdf-sail/openrdf-sail-nativerdf/src/main/java/org/openrdf/sail/nativerdf/datastore/HashFile.java][<init>] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file: "+file,)@!(file.exists()) && !(created) } } -> raf=new RandomAccessFile(file,"rw",)@!(!(file.exists())) -> fileChannel=raf.getChannel()@!(!(file.exists())) } CATCH {}
