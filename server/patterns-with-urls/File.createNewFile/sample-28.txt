results[https://github.com/maven-download-plugin/maven-download-plugin/blob/2423ad8a6fafcd1b9ae89afaf2a338cf972ad9f1/download-maven-plugin/src/main/java/com/googlecode/DownloadCache.java][saveIndex] = -> TRY {  -> IF { -> this.indexFile.createNewFile()@!(this.indexFile.exists()) && !(this.basedir.exists()&&!(this.basedir.isDirectory())) } -> out=new FileOutputStream(this.indexFile,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res=new ObjectOutputStream(out,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.writeObject(index,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.close()@!(this.basedir.exists()&&!(this.basedir.isDirectory())) } CATCH {}
results[https://github.com/svn2github/maven-download-plugin/blob/5b99c92a0c8757b4b3b82dbc10e1b41376e22968/branches/1.0.x/maven-download-plugin/src/main/java/com/googlecode/DownloadCache.java][saveIndex] = -> TRY {  -> IF { -> this.indexFile.createNewFile()@!(this.indexFile.exists()) && !(this.basedir.exists()&&!(this.basedir.isDirectory())) } -> out=new FileOutputStream(this.indexFile,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res=new ObjectOutputStream(out,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.writeObject(index,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.close()@!(this.basedir.exists()&&!(this.basedir.isDirectory())) } CATCH {}
results[https://github.com/svn2github/maven-download-plugin/blob/8c8fda113f3e6163423a57bd29c08c9b7f1a13af/tags/1.0.0/maven-download-plugin/src/main/java/com/googlecode/DownloadCache.java][saveIndex] = -> TRY {  -> IF { -> this.indexFile.createNewFile()@!(this.indexFile.exists()) && !(this.basedir.exists()&&!(this.basedir.isDirectory())) } -> out=new FileOutputStream(this.indexFile,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res=new ObjectOutputStream(out,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.writeObject(index,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.close()@!(this.basedir.exists()&&!(this.basedir.isDirectory())) } CATCH {}
results[https://github.com/svn2github/maven-download-plugin/blob/3589c4cb3789569a2dfef61bf8bc1d47d7aeea5e/trunk/maven-download-plugin/src/main/java/com/googlecode/DownloadCache.java][saveIndex] = -> TRY {  -> IF { -> this.indexFile.createNewFile()@!(this.indexFile.exists()) && !(this.basedir.exists()&&!(this.basedir.isDirectory())) } -> out=new FileOutputStream(this.indexFile,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res=new ObjectOutputStream(out,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.writeObject(index,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.close()@!(this.basedir.exists()&&!(this.basedir.isDirectory())) } CATCH {}
results[https://github.com/errai/errai/blob/bc39be089360f42eddd7b7d2466c3cb0ed5f7fcd/errai-cdi/jboss/src/main/java/org/jboss/errai/cdi/server/gwt/util/CopyUtil.java][copyStreamToFile] = -> TRY {  -> IF { -> to.createNewFile()@!(to.exists()) } -> writer=new BufferedOutputStream(new FileOutputStream(to,),)@ -> copyStream(writer,from,)@ -> writer.close()@ } CATCH {}
results[https://github.com/maven-download-plugin/maven-download-plugin/blob/e7b15d0613637a0392d85c08b9a20b8bd338666a/maven-download-plugin/src/main/java/com/googlecode/DownloadCache.java][saveIndex] = -> TRY {  -> IF { -> this.indexFile.createNewFile()@!(this.indexFile.exists()) && !(this.basedir.exists()&&!(this.basedir.isDirectory())) } -> out=new FileOutputStream(this.indexFile,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res=new ObjectOutputStream(out,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.writeObject(index,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.close()@!(this.basedir.exists()&&!(this.basedir.isDirectory())) } CATCH {}
results[https://github.com/pchaigno/Hydra/blob/8b985b280fa668852e9c145ffdd05e5349461394/src/core/SaveFileThread.java][saveFile] = -> TRY {  -> f=new File(this.savePath+this.piece,)@ -> IF { -> f.createNewFile()@!(f.exists()) } -> fileStream=new FileOutputStream(f,)@ -> Transfert.copyStream(this.incomingStream,fileStream,)@ -> fileStream.close()@ } CATCH {}
results[https://github.com/sneaker/Mediastopf/blob/01c34dece3bf4fa9a185af1cb02beff607cf3774/Code/src/ch/nomoresecrets/mediastopf/filesys/DirectoryObserverTestHelper.java][changeFile] = -> TRY {  -> f=new File(testDirectory+"/newlyCreated",)@ -> IF { -> f.createNewFile()@!(f.exists()) } -> fos=new FileOutputStream(testDirectory+"/newlyChanged",)@ -> new PrintStream(fos,).println("Einige Ã„nderungen...",)@ -> fos.close()@ } CATCH {}
results[https://github.com/pchaigno/Hydra/blob/aa653547e9ace515295b9e1c0c43d7120bce4531/src/core/DownloadPieceOfFileThread.java][saveFile] = -> TRY {  -> f=new File(this.file.getDownloadPath()+".part"+this.piece,)@ -> IF { -> f.createNewFile()@!(f.exists()) } -> fileStream=new FileOutputStream(f,)@ -> endOfFile=Transfer.copyStream(incomingStream,fileStream,)@ -> fileStream.close()@ } CATCH {}
results[https://github.com/jbosstools/jbosstools-jbpm/blob/f6aae383ab3b6d5cac633b4e90c46f25a2bec696/plugins/org.jbpm.gd.jpdl/src/org/jbpm/gd/jpdl/util/ProcessDeployer.java][saveParFile] = -> TRY {  -> file=new Path(targetLocation,).toFile()@ -> IF { -> file.createNewFile()@!(file.exists()) } -> fos=new FileOutputStream(file,)@ -> fos.write(parBytes,)@ -> fos.close()@ } CATCH {}
