results[https://github.com/eclipse/ptp/blob/76e904fbaee6d7473b45debd32a678205da0bcac/rdt/org.eclipse.ptp.rdt.core/miners/org/eclipse/ptp/internal/rdt/core/miners/StandaloneLogService.java][setLogFileName] = -> IF { -> TRY { -> logFile=new File(logFileName,)@logFileName!=null&&logFileName.length()>0 -> IF { -> logFile.createNewFile()@!(logFile.exists()) } -> log_out=new FileOutputStream(logFileName,)@logFileName!=null&&logFileName.length()>0 -> IF { -> this.log_ps.close()@this.log_ps!=null } -> this.log_ps=new PrintStream(log_out,)@ } }
results[https://github.com/rolandschulz/PTP/blob/c754673e2e881d332ca0c193d80c370e1e520e56/rdt/org.eclipse.ptp.rdt.core/miners/org/eclipse/ptp/internal/rdt/core/miners/StandaloneLogService.java][setLogFileName] = -> IF { -> TRY { -> logFile=new File(logFileName,)@logFileName!=null&&logFileName.length()>0 -> IF { -> logFile.createNewFile()@!(logFile.exists()) } -> log_out=new FileOutputStream(logFileName,)@logFileName!=null&&logFileName.length()>0 -> IF { -> this.log_ps.close()@this.log_ps!=null } -> this.log_ps=new PrintStream(log_out,)@ } }
results[https://github.com/zinkem/projectbulletspray/blob/417ea50601c82f9a24747e8bb498e86cfd716f45/src/pbs/PBSGame.java][saveHighScore] = -> TRY { -> file=new File("highscores.dat",)@ -> IF { -> file.createNewFile()@!(file.exists()) } -> writer=new PrintWriter(new FileWriter(file,),)@ -> writer.println(highScore,)@ } FINALLY { -> IF { -> writer.close()@writer!=null } }
results[https://github.com/jclouds/legacy-jclouds-karaf/blob/8816d9984aa08260d1b6dd6f3b0aff18c244fc86/services/src/main/java/org/jclouds/karaf/services/modules/PropertiesCredentialStore.java][load] = -> f=new File(PROPERTIES_FILE_PATH,)@ -> TRY { -> IF { -> f.createNewFile()@!(f.exists()) } -> fis=new FileInputStream(f,)@ -> properties.load(fis,)@ } FINALLY { -> IF { -> TRY { -> fis.close()@fis!=null } } }
results[https://github.com/metaborg/spoofax/blob/5f37669e6b1800bbb97b71c7a2bad2ca8269eb80/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/statistics/StreakManifest.java][load] = -> TRY { -> IF { -> manifestFile.createNewFile()@!(manifestFile.exists()) } -> fis=new FileInputStream(manifestFile,)@ -> props=new Properties()@ -> props.load(fis,)@ } FINALLY { -> TRY { -> IF { -> fis.close()@fis!=null } } }
results[https://github.com/sukrupa/school-admin/blob/b504fd28eece7080184c04d9597398ed2cad91c7/lib/twist/com.thoughtworks.twist.driver.sahi_3.0.0.9411/sahi/sahi/src/net/sf/sahi/util/TrafficLogger.java][store] = -> file=new File(threadDir,fileName,)@!(bytes==null) -> TRY { -> IF { -> file.createNewFile()@!(file.exists()) && !(bytes==null) } -> out=new FileOutputStream(file,true,)@!(bytes==null) -> out.write(bytes,)@!(bytes==null) -> out.flush()@!(bytes==null) } FINALLY { -> TRY { -> IF { -> out.close()@!(bytes==null) && out!=null } } }
results[https://github.com/sukrupa/school-admin/blob/8ed401e53cea23c812e0d505bc0f2c27b35a800e/tools/sahi/src/net/sf/sahi/util/TrafficLogger.java][store] = -> file=new File(threadDir,fileName,)@!(bytes==null) -> TRY { -> IF { -> file.createNewFile()@!(file.exists()) && !(bytes==null) } -> out=new FileOutputStream(file,true,)@!(bytes==null) -> out.write(bytes,)@!(bytes==null) -> out.flush()@!(bytes==null) } FINALLY { -> TRY { -> IF { -> out.close()@!(bytes==null) && out!=null } } }
results[https://github.com/jclouds/jclouds-karaf/blob/79d1b8fe882a6d20347ac1e124038605d625104e/services/src/main/java/org/jclouds/karaf/services/modules/PropertiesCredentialStore.java][load] = -> f=new File(PROPERTIES_FILE_PATH,)@ -> TRY { -> IF { -> f.createNewFile()@!(f.exists()) } -> fis=new FileInputStream(f,)@ -> properties.load(fis,)@ } FINALLY { -> IF { -> TRY { -> fis.close()@fis!=null } } }
results[https://github.com/anthonydahanne/make-p2-buildable-with-tycho/blob/52e563602ccfd1437b99f7474a720ab55f4f389a/bundles/org.eclipse.equinox.p2.ui.importexport/src/org/eclipse/equinox/internal/p2/importexport/internal/wizard/ExportPage.java][doFinish] = -> TRY {  -> TRY { -> target=new File(ExportPage.this.destinationNameField.getText(),)@ -> IF { -> target.createNewFile()@!(target.exists()) } -> stream=new BufferedOutputStream(new FileOutputStream(target,),)@ } FINALLY { -> IF { -> TRY { -> stream.close()@stream!=null } } } } CATCH {}
results[https://github.com/NCIP/cagrid-core/blob/269a51e5ee3173d26de3379ecd383e70d49ee003/caGrid/projects/dataExtensions/src/java/ui/gov/nih/nci/cagrid/data/ui/wizard/OneTimeInfoDialogUtil.java][loadDialogProperties] = -> props=new Properties()@ -> propertiesFile=getPropertiesFile()@ -> TRY { -> IF { -> propertiesFile.createNewFile()@!(propertiesFile.exists()) } -> fis=new FileInputStream(propertiesFile,)@ -> props.load(fis,)@ } FINALLY { -> IF { -> TRY { -> fis.close()@fis!=null } } }
