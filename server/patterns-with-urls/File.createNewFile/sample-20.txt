results[https://github.com/lastfm/moji/blob/b2a85f77be399a08e907cb151dab136bc9bceeb3/src/main/java/fm/last/moji/local/LocalMojiFile.java][getOutputStream] = -> TRY {  -> IF { -> file.createNewFile()@!(file.exists()) } -> return new FileOutputStream(file,)@ } CATCH {}
results[https://github.com/sladeware/groningen/blob/cf49b96617c8a420f6dbfc3a56258f23badf3cff/src/main/java/org/arbeitspferde/groningen/utility/logstream/FileOutputLogStreamFactory.java][<init>] = -> TRY {  -> IF { -> file.createNewFile()@!(file.exists()) } -> this.stream=new FileOutputStream(file,)@ } CATCH {}
results[https://github.com/maqetta/maqetta/blob/8b9e7c5eddab84d6125dda308a609c7f76a469d3/davinci.core/src/org/davinci/server/VFile.java][getOutputStreem] = -> TRY {  -> IF { -> this.workingCopy.createNewFile()@!(this.workingCopy.exists()) } -> return new BufferedOutputStream(new FileOutputStream(this.workingCopy,),)@ } CATCH {}
results[https://github.com/hrehfeld/QuakeInjector/blob/ee085d5445f42ce79480f8f54dcebc2b86cf269a/src/de/haukerehfeld/quakeinjector/SaveInstalled.java][getOutputStream] = -> TRY {  -> IF { -> file.createNewFile()@!(file.exists()) } -> return new BufferedOutputStream(new FileOutputStream(file,),)@ } CATCH {}
results[https://github.com/maqetta/maqetta/blob/d9ea18eed1d06c32b3ca1dfa30dcfced72f93e7a/maqetta.core.server.standalone/src/org/davinci/server/VFile.java][getOutputStreem] = -> TRY {  -> IF { -> this.workingCopy.createNewFile()@!(this.workingCopy.exists()) } -> return new BufferedOutputStream(new FileOutputStream(this.workingCopy,),)@ } CATCH {}
results[https://github.com/libgdx/libgdx/blob/4ee6a27419588a558d477da3493c516986c73e87/src/com/badlogic/gdx/backends/android/AndroidApplication.java][getOutputStream] = -> TRY {  -> IF { -> new File(sdcard+file,).createNewFile()@!(new File(sdcard+file,).exists()) } -> return new FileOutputStream(sdcard+file,)@ } CATCH {}
results[https://github.com/Equinox-/Equinox-MMORPG-Maker/blob/230784029fcbe0bce1e89396cf128ee383b84dae/Common/src/com/pi/common/database/io/DatabaseIO.java][write] = -> TRY {  -> IF { -> f.createNewFile()@!(f.exists()) } -> fO=new FileOutputStream(f,)@ -> write(fO,obj,)@ } CATCH {}
results[https://github.com/exoplatform/aio-portal/blob/a01c7972884aa573f857089dd4597800aed7d209/component/xml-parser/src/main/java/org/exoplatform/services/common/DataBuffer.java][save] = -> TRY {  -> IF { -> file.createNewFile()@!(file.isDirectory()) && !(file.exists()) } -> output=new FileOutputStream(file,)@!(file.isDirectory()) -> save(output,d,)@!(file.isDirectory()) } CATCH {}
results[https://github.com/geoserver/geoserver-history/blob/78c3ad49e9c012fd054301e586fb9f5e0db377d4/geoserver/community/preferences/core/src/main/java/org/vfny/geoserver/control/internal/PropertyPreferenceStoreStrategy.java][flush] = -> TRY {  -> to=new File(file,)@ -> IF { -> to.createNewFile()@!(to.exists()) } -> properties.store(new FileOutputStream(to,),"Geoserver preferences store used by the Preferences Module",)@ } CATCH {}
results[https://github.com/boundlessgeo/geoserver-2.1.x/blob/47fc16afcd7706d880a54ef46bc73d544b2e69b4/community/preferences/core/src/main/java/org/vfny/geoserver/control/internal/PropertyPreferenceStoreStrategy.java][flush] = -> TRY {  -> to=new File(file,)@ -> IF { -> to.createNewFile()@!(to.exists()) } -> properties.store(new FileOutputStream(to,),"Geoserver preferences store used by the Preferences Module",)@ } CATCH {}
