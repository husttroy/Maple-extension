results[https://github.com/CNA/android_packages_apps_Email/blob/b34d98ee2f05318a8b2b58834719988ca8f4674b/emailcommon/src/com/android/emailcommon/utility/Utility.java][createNewFile][148] = -> TRY {  -> return f.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/eclipse/tycho.p2-fork/blob/954f7795720659f00f2146fb1cf01d7114037a53/bundles/org.eclipse.equinox.p2.tests/src/org/eclipse/equinox/p2/tests/extensionlocation/ExtensionLocationArtifactRepositoryFactoryTest.java][testCompositeArtifactsXMLFeaturesandPluginsDirectory][114] = -> TRY {  -> compositeArtifactsXML=new File(directory,"compositeArtifacts.xml",)@ -> compositeArtifactsXML.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/jalian-systems/Marathon/blob/f0492214d045dd1942088a7fe32f9feefe284fe7/marathon-unit-tests/test/net/sourceforge/marathon/junit/TestXMLOutputter.java][createFile][82] = -> TRY {  -> file=new File(name,)@ -> file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/steveloughran/hadoop-trunk/blob/b854a4be5a202c42fd9b5eec46b4e89ae21fcb0f/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestDU.java][createFile][74] = -> TRY {  -> newFile.createNewFile()@ -> file=new RandomAccessFile(newFile,"rws",)@ } CATCH(IOException) {}
results[https://github.com/cytoscape/cytoscape-impl/blob/27fcaca98c5d5930372259ec16b55c9cd25f284d/welcome-impl/src/main/java/org/cytoscape/welcome/internal/task/DownloadBiogridDataTask.java][processOneEntry][5] = -> TRY {  -> outFile.createNewFile()@ -> outWriter=new FileWriter(outFile,)@ } CATCH(IOException) {}
results[https://github.com/JulienBroi/Inpres/blob/e4d575b55958d41cb02509bcf754a4d4c7536973/SGBD/Code sql/InpreZon/src/Models/CouchDB/ProductRepository.java][constructLanguageIndex][24] = -> TRY {  -> f.createNewFile()@ -> fos=new FileOutputStream(f,)@ } CATCH(IOException) {}
results[https://github.com/mnip91/proactive-component-monitoring/blob/6971fae74319659a7063b79996d7a715e97df12f/src/Tests/functionalTests/dataspaces/GCMFunctionalDataSpacesBase.java][createInputOutputSpacesContent][5] = -> TRY {  -> assertTrue(outputWithFileLocalHandle.createNewFile(),)@ } CATCH(IOException) {}
results[https://github.com/svn2github/jcaptcha-trunk/blob/14616fc0f67b30943e7174f3ea864ba736c51398/jcaptcha/engine/src/java/com/octo/captcha/engine/sound/utils/SoundToFile.java][serialize][3] = -> TRY {  -> pFile.createNewFile()@ -> AudioSystem.write(pAudioInputStream,AudioFileFormat.Type.WAVE,pFile,)@ } CATCH(IOException) {}
results[https://github.com/Ziktofel/L2J-Server-Ziktofel/blob/53ded1f6a5418ec78f91f583d8fa4b3c02eae2a2/java/com/l2jserver/tools/gsregistering/BaseGameServerRegister.java][registerGameServer][7] = -> TRY {  -> file=new File(outDir,"hexid.txt",)@ -> file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/moravianlibrary/Kramerius/blob/b4619ef43e50651887180e9d16e2a176906ef4f2/import/src/main/java/org/kramerius/replications/K4ReplicationProcess.java][phaseCompleted][1] = -> TRY {  -> completedFile=phaseCompletedFile(phase,)@ -> completedFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/sstalin/AppBuilder/blob/eb49cc69e1abc77f450fe6b8d575ddf4fe596774/IndividualSandbox/wei/Groovy/org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/FileIndexLocation.java][createNewFile][8] = -> TRY {  -> directory=this.indexFile.getParentFile()@ -> return this.indexFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/matyb/java-koans/blob/f2127d0f9fa43a03f4d35ec3f7376b4c2efe4c3e/lib/file-monitor/src/com/sandwich/util/io/DataFileHelper.java][createNewFile][5] = -> TRY {  -> dataFile.delete()@ -> dataFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/toebbel/buschtrommel/blob/dfb9e19e8ae424b829313ad3090c4cbfe2c6f0f4/Buschtrommel/test/de/tr0llhoehle/buschtrommel/test/TestShareCache.java][testSaveAndLoad][2] = -> TRY {  -> new java.io.File("test.file",).createNewFile()@ } CATCH(IOException) {}
results[https://github.com/maikeps/TCC/blob/2f9631e8c8952d2cd06b18485eb5d49f67a42f4b/src/tcc/PerlinNoise2D.java][saveImg][3] = -> TRY {  -> f.createNewFile()@ -> ImageIO.write(img,"PNG",f,)@ } CATCH(IOException) {}
results[https://github.com/rasto/lcmc/blob/35d572818cb68d89ac6db15d6050a5c25e023833/src/ch/ethz/ssh2/KnownHosts.java][initialize][16] = -> TRY {  -> knownHosts.createNewFile()@ -> fr=new FileReader(knownHosts,)@ } CATCH(IOException) {}
results[https://github.com/etp-work/ThePower/blob/4a7808d49471fba230ef6ae9974131723e570dc6/PortalKit/src/main/java/org/etp/portalKit/common/service/PropertiesManager.java][create][7] = -> TRY { -> configFile.createNewFile()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/Zenika/DORM/blob/cbe52cca9863e4333ba9e8a18b4c1b9d92fd273d/core/core/src/test/java/com/zenika/dorm/core/test/helper/ExtensionFixtures.java][<init>][2] = -> TRY { -> file.createNewFile()@ } CATCH(IOException) { -> throw new CoreException("Cannot create file for test",e,)@ }
results[https://github.com/ndeloof/svnkit/blob/6cd93bfef2472117114293634b82c37d6ded89fb/svnkit/src/main/java/org/tmatesoft/svn/core/internal/io/dav/http/SpoolFile.java][createNextFile][3] = -> TRY {  -> file=File.createTempFile("svnkit.",".spool",myDirectory,)@ -> file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/trifork/sdm2/blob/3591ec8d19ed05324393973e0d103a02d77e00e9/sdm-core/src/main/java/dk/nsi/sdm2/core/parser/DirectoryInbox.java][lock][6] = -> TRY { -> lockFile.createNewFile()@ } CATCH(IOException) { -> throw new RuntimeException("Could not create lock file.",e,)@ }
results[https://github.com/Silverpeas/Silverpeas-Core/blob/1d64add34bdc77d3b79b69720b90732b36fe8fcd/web-core/src/main/java/com/sun/portal/portletcontainer/driver/admin/PortletWar.java][createDeployedMarkerFile][1] = -> TRY { -> markerFile.createNewFile()@ } CATCH(IOException) { -> logger.log(Level.INFO,"PSPCD_CSPPD0037", new String[],)@ }
results[https://github.com/mareknovotny/infinispan/blob/637ff0d1b9ae8cf4815db456b3f615e13f951e9d/core/src/test/java/org/infinispan/io/GridFileTest.java][testGridFS][8] = -> TRY {  -> gridFile=fs.getFile("/test/myfile.txt",)@ -> assert gridFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/ricardoas/SaaSim/blob/e33865b52e68f61c3d0a21240ccf07cd5b612d16/saasim-legacy/src/test/java/saasim/io/CheckpointerTest.java][testHasCheckpointWithUnreadableFile][2] = -> TRY {  -> assert file.createNewFile()@ -> assert file.setWritable(false,)@ } CATCH(IOException) {}
results[https://github.com/facebook/buck/blob/100f6d420100fe5429795629b2ffd42bdc8368f4/third-party/java/jacoco-0.6.4/report-generator-src/ReportGenerator.java][loadExecutionData][1] = -> TRY {  -> executionDataFile.createNewFile()@ -> execFileLoader.load(executionDataFile,)@ } CATCH(IOException) {}
results[https://github.com/sergeymo/android-radio-t/blob/47eaa07ea01c35bfb75676447f7c408ba7b5de9c/Radio-T-Test/src/org/dandelion/radiot/accepttest/testables/FakeDownloadManager.java][createEmptyFile][3] = -> TRY { -> path.createNewFile()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/mixi-inc/triaina/blob/ea93022b3592a62c34620ec64172f3163fcb80e0/android/Commons/src/triaina/commons/utils/FileUtils.java][createNewFile][2] = -> TRY { -> return file.createNewFile()@ } CATCH(IOException) { -> throw new IORuntimeException(exp,)@ }
results[https://github.com/javaswift/joss/blob/c9736c865efc8d187b506801337a4048cf208ba2/src/test/java/org/javaswift/joss/instructions/UploadPayloadFileTest.java][getSegmentationPlan][2] = -> TRY {  -> file.createNewFile()@ -> payload=new UploadPayloadFile(file,)@ } CATCH(IOException) {}
results[https://github.com/moravianlibrary/Kramerius/blob/b4619ef43e50651887180e9d16e2a176906ef4f2/import/src/main/java/org/kramerius/replications/K4ReplicationProcess.java][phaseFailed][1] = -> TRY {  -> completedFile=phaseFailedFile(phase,)@ -> completedFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/StratusLab/storage/blob/8a2b5c27bf897f17d47e6f94905751f1bc00e54b/pdisk-server/war/src/test/java/eu/stratuslab/storage/gzip/GZipRequestTest.java][createFakeImageFile][1] = -> TRY {  -> fakeImage=FileUtils.getCachedDiskFile(uuid,)@ -> fakeImage.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/nitnelave/CreeperHeal/blob/f1114e05681b771b519a26489b6b47a2670da5f4/src/com/nitnelave/CreeperHeal/CreeperDrop.java][createNewFile][1] = -> TRY {  -> file.createNewFile()@ -> fileconf.save(file,)@ } CATCH(IOException) {}
results[https://github.com/aptana/studio2/blob/0905925e7efa7e473e7c2b3d69a618e19056ed31/plugins/org.eclipse.eclipsemonkey.lang.javascript/src/org/eclipse/eclipsemonkey/lang/javascript/doms/io/File.java][jsFunction_createNewFile][1] = -> TRY { -> result=this.file.createNewFile()@ } CATCH(IOException) { -> System.err.println("Error: "+e,)@ }
results[https://github.com/cbcrg/tcoffee-server/blob/e28794952e5db6642bb1d0254066e457ec969388/app/models/Repo.java][lock][1] = -> TRY { -> return fLock.createNewFile()@ } CATCH(IOException) { -> throw new QuickException("Unable to create .lock file for context folder '%s'",rid,)@ }
results[https://github.com/villagereach/mScan/blob/a4f09ea7478a001aa20cd67f4f340c7d0e5695c2/src/com/bubblebot/MScan2CollectActivity.java][writeXMLToFile][7] = -> TRY {  -> instanceFile=new File(outputPath,)@ -> instanceFile.createNewFile()@ -> instanceWriter=new FileWriter(instanceFile,)@ } CATCH(IOException) {}
results[https://github.com/svn2github/crux-framework/blob/4769b1dc2c4f3b75d06b43079fa76558206404b7/branches/crux/old/old-trunk/Crux/src/tools/org/cruxframework/crux/tools/projectgen/AbstractLayoutProjectGenerator.java][createFile][10] = -> TRY {  -> file=new File(rootDir,fileName,)@ -> file.createNewFile()@ -> FileUtils.write(templateContent,file,)@ } CATCH(IOException) {}
results[https://github.com/jim618/multibit/blob/0c0b1d80c53edff7ff3c17d39678a388fed6a1c7/src/test/java/org/multibit/network/ReplayManagerTest.java][createMultiBitRuntime][4] = -> TRY {  -> multibitProperties=new File(multiBitDirectoryPath+File.separator+"multibit.properties",)@ -> multibitProperties.createNewFile()@ -> multibitProperties.deleteOnExit()@ } CATCH(IOException) {}
results[https://github.com/shuiqingliu/Java/blob/0ba896d747927a53b3a9234154c3ee4e3f0ffb1f/io/FileDemo03.java][main][13] = -> f=new File("d:"+File.separator+"test.txt",)@ -> TRY { -> f.createNewFile()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/dmcg/okey-doke/blob/dab7131ae6b622f4f42c5e79c90960f7a8c7ecd9/src/test/java/org/rococoa/okeydoke/DirectoryFinderTest.java][setup][1] = -> TRY {  -> thereButAFile.createNewFile()@ -> assertTrue(thereButAFile.isFile(),)@ } CATCH(IOException) {}
results[https://github.com/ceylon/ceylon-js/blob/6f0f174df5d589299d73acef668200fe3ba1c0a7/src/main/java/com/redhat/ceylon/compiler/js/Stitcher.java][copyFile][5] = -> TRY {  -> IF { -> destFile.createNewFile()@!(destFile.exists()) } } CATCH(IOException) {}
results[https://github.com/moravianlibrary/Kramerius/blob/31bac9ebb3f6f6364c6dc8d9415c28c552ade43c/common/src/main/java/cz/incad/kramerius/imaging/paths/impl/DirPathImpl.java][createChildFile][1] = -> TRY {  -> f=new File(this.file,name,)@ -> f.createNewFile()@ -> return new FilePathImpl(f,this,)@ } CATCH(IOException) {}
results[https://github.com/deanhiller/databus/blob/261e54337f09259405db481ee38d6ec24573c572/modbus/src/main/java/gov/nrel/consumer/DataPointWriter.java][newFile][1] = -> TRY {  -> f=new File("../logs/dataPoints"+time+".json",)@ -> f.createNewFile()@ -> jsonw=new FileWriter(f,true,)@ } CATCH(IOException) {}
results[https://github.com/steveloughran/hadoop-trunk/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/mapreduce/src/test/mapred/org/apache/hadoop/mapred/TestUserLogCleanup.java][testUserLogCleanup][33] = -> TRY {  -> bar.createNewFile()@ -> assertFalse(bar.exists(),)@ } CATCH(IOException) {}
results[https://github.com/zjshen/hadoop-common/blob/fd763be4edf691e891b379fc97902df0cf80c5d7/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestDiskFailures.java][prepareDirToFail][9] = -> TRY {  -> file=new File(dir,)@ -> FileUtil.fullyDelete(file,)@ -> file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/kvite/astridclone/blob/59fc9e98c9429d6029eb77bb3db9fe778f3e20fe/astrid/src-legacy/com/timsu/astrid/utilities/LegacyTasksXmlExporter.java][doTasksExport][16] = -> TRY {  -> xmlFile=new File(this.output,)@ -> xmlFile.createNewFile()@ -> fos=new FileOutputStream(xmlFile,)@ } CATCH(IOException) {}
results[https://github.com/angusmacdonald/h2o/blob/8a76d519661e868d4e876099d766e56cee9a1a87/src/main/org/h2o/event/server/EventViewer.java][createNewLocatorFile][2] = -> file.delete()@ -> TRY { -> file.createNewFile()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/ryuhyoseok/HYOSEOKTAJO/blob/1b0d34ec149186579bb8eb82e9514fdf6a75e2a5/common/src/test/java/tajo/util/TestFileUtils.java][testWriteLoadProtoFromFile][2] = -> TRY {  -> file=new File(TEST_PATH+"/file.bin",)@ -> file.createNewFile()@ -> FileUtil.writeProto(file,proto,)@ } CATCH(IOException) {}
results[https://github.com/freenet/plugin-Freemail-staging/blob/411fe7322499d00513243d01126a28d7c95ca621/test/freemail/MailMessageTest.java][testStoreFlagsTwice][2] = -> TRY {  -> messageFile=new File(msgDir,"0",)@ -> messageFile.createNewFile()@ -> msg=new MailMessage(messageFile,0,)@ } CATCH(IOException) {}
results[https://github.com/ansell/podd/blob/5b1594168fb040056f4c0df0693b53a9220f82ec/src/test/java/podd/util/fedora/IRodsFileWritingPerformanceTest.java][testDownload][2] = -> TRY {  -> localFile=new File(localDir,"poddObject_187",)@ -> localFile.createNewFile()@ -> out=new FileOutputStream(localFile,)@ } CATCH(IOException) {}
results[https://github.com/proofpoint/event-collector/blob/436ec886d076d1596a44e50be35e60f00bf6f697/src/test/java/com/proofpoint/event/collector/TestS3Uploader.java][testFailureOnRetryFileExists][1] = -> TRY {  -> new File(tempStageDir.getPath(),"retry",).createNewFile()@ } CATCH(IOException) {}
results[https://github.com/davros-/platform_frameworks_base/blob/4b50cc39b0518a04b16eb0f0b6286859b32373a3/tests/FrameworkPerf/src/com/android/frameworkperf/TestService.java][onRun][3] = -> TRY { -> mFile.createNewFile()@ } CATCH(IOException) { -> Log.w(TAG,"Failure creating "+mFile,e,)@ } -> mFile.delete()@
results[https://github.com/cityindex/JsTestDriver/blob/f1303183a58f1be4a3ebafc7180383fd207a60bc/JsTestDriver/src-test/com/google/jstestdriver/ConfigurationParserTest.java][createTmpFile][3] = -> TRY {  -> code=new File(codeDir,fileName,)@ -> code.createNewFile()@ -> code.deleteOnExit()@ } CATCH(IOException) {}
results[https://github.com/skkroh/htmledit/blob/1c9f5d21339b0b87e6843d66e88e2e9d9b5da691/editor/src/model/HTMLBuffer.java][forceSave][1] = -> TRY { -> out=new PrintWriter(file,)@ -> file.createNewFile()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/stratosphere/stratosphere/blob/5e1853b64e9f3ad8498e677e681d2a5b4d49101b/stratosphere-runtime/src/test/java/eu/stratosphere/nephele/io/channels/BufferTest.java][before][2] = -> TRY {  -> file.createNewFile()@ -> filestream=new FileOutputStream(file,)@ -> fileinstream=new FileInputStream(file,)@ } CATCH(IOException) {}
results[https://github.com/pitosalas/blogbridge/blob/d896b3c4f4e16a6613e81dea42b7971311c771bd/src/com/salas/bb/utils/FileUtils.java][copyFileToDir][1] = -> TRY {  -> destFile=new File(filename,)@ -> destFile.createNewFile()@ -> copyFileToFile(file,destFile,)@ } CATCH(IOException) {}
results[https://github.com/junit-team/junit/blob/c861b8a24a0663b9f2496214d1a58048d80284a8/src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java][testGetRoot][1] = -> TRY {  -> new File(folder.getRoot(),GET_ROOT_DUMMY,).createNewFile()@ } CATCH(IOException) {}
results[https://github.com/mcarlson/openlaszlo/blob/0c19c9f4814c876f388a10ec8d1fcbb19e6f69bf/WEB-INF/lps/server/src/org/openlaszlo/cm/CachedInfo.java][writeTo][1] = -> TRY {  -> dir=file.getParentFile()@ -> file.createNewFile()@ -> ostream=new FileOutputStream(file,)@ } CATCH(IOException) {}
results[https://github.com/zycgit/hasor/blob/c2fd7e7b325e4bc08168e821b1dfbdc8b4617718/Release branches/more_1.x/src/org.platform.api/org.platform.runtime/src/main/java/org/more/appengine/WorkSpace.java][createTempFile][2] = -> TRY {  -> tmpFile=new File(new File(this.tempFileDirectory,atPath,),fileName,)@ -> tmpFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/student2ua/myTaning/blob/3dc7d93d2b23c811d672fd464a4c1f3a7536d1c1/src/com/tor/thread/DelTempFileOnExit.java][main][1] = -> TRY { -> new File(fileName,).createNewFile()@ } CATCH(IOException) { -> log.error(e,)@ }
results[https://github.com/thiagomanel/intrusiveness-meter/blob/ed278dda1df390079d7fdd8c72a41325bd8bd87c/IntrusivenessMeter/test/commons/internal/DefaultConfigurationLoaderTest.java][createConfigurationFileWithNoProperties][5] = -> TRY {  -> configurationFile=new File(testConfigurationFileName,)@ -> configurationFile.createNewFile()@ -> writer=new RandomAccessFile(configurationFile,"rw",)@ } CATCH(IOException) {}
results[https://github.com/BenCmd/BenCmd/blob/760307411a1be9ab2281cc602fb9c8176b460cc1/src/ben_dude56/plugins/bencmd/advanced/bank/BankFile.java][saveAll][5] = -> TRY { -> new File("/plugins/BenCmd/_bank.db",).createNewFile()@ } CATCH(IOException) { -> plugin.log.warning("Failed to back up bank database!",)@ }
results[https://github.com/mhl/libbio-formats-java/blob/dbd6fa2b96fad02f742a070d83f49078aa17822d/loci/visbio/data/ThumbnailCache.java][clear][3] = -> TRY { -> file.delete()@ -> file.createNewFile()@ } CATCH(IOException) { -> exc.printStackTrace()@ }
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/packages/apps/VoiceDialer/src/com/android/voicedialer/RecognizerLogger.java][enable][2] = -> TRY { -> enabled=new File(dir,ENABLED,)@ -> enabled.createNewFile()@ } CATCH(IOException) { -> Log.e(TAG,"enableLogging "+e,)@ }
results[https://github.com/comsince/myappweixin/blob/faa793cb4d21fce50ecf7f11fdde7c4cab00d055/musicPlayer/src/com/comsince/knowledge/utils/FileUtil.java][createFileInSDCard][1] = -> TRY {  -> file=new File(AndroidUtil.getSDCardRoot()+dir+File.separator+fileName,)@ -> file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/nffdiogosilva/cafeteria/blob/b93f8f9791792a9aefe0f4fd1c2c33b2185c3d88/src/pt/uac/cafeteria/model/persistence/FileAccess.java][createNewFile][2] = -> TRY {  -> file.getParentFile().mkdirs()@ -> file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/renepickhardt/typology/blob/400cb0d70220bf97f299bd07ea7ade711fe5b40c/src/de/typology/trainers/TypologyTrainerMain.java][main][2] = -> TRY {  -> done=new File(Config.get().testDb+"IsDone."+time+"ms",)@ -> done.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/sangamon/sneer/blob/2962176ee83947d315beb05c6a0495aae6020626/sneer/src/spikes/vitor/security/BadFilePlugin.java][run][4] = -> TRY { -> new File("text.txt",).createNewFile()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/dkomanov/fizteh-java-2013/blob/24181fc416b2c251dfd1ffe7b1891f09204b52cb/src/ru/fizteh/fivt/students/vlmazlov/utils/StoreableTableFileManager.java][writeSignature][1] = -> TRY {  -> signatureFile=new File(tableDir,"signature.tsv",)@ -> signatureFile.createNewFile()@ -> writer=new PrintWriter(signatureFile,)@ } CATCH(IOException) {}
results[https://github.com/mahogny/Endrov/blob/856ddddde4e017ea5ef1fe9e01b48a6c3f26a1b6/ev/util2/paperCeExpression/IntegrateAllExp.java][markDone][1] = -> ftagCalcDone=new File(f,"tagCalcDone4d.txt",)@ -> TRY { -> ftagCalcDone.createNewFile()@ } CATCH(IOException) { -> e1.printStackTrace()@ }
results[https://github.com/maikeps/TCC/blob/6fd9e926e3af3b323672b75104ed166657f30d89/src/tcc/ValueNoise2D.java][limpaTxt][2] = -> TRY {  -> f.createNewFile()@ -> output=new BufferedWriter(new FileWriter(f,),)@ } CATCH(IOException) {}
results[https://github.com/bgroenks96/2DX-GL/blob/d9f9e8073c763b5434d8097115e301f05b8a5594/2DX-GL/snapdragon/com/snap2d/gl/CrashReportWindow.java][dumpToLog][2] = -> TRY { -> CRASH_LOG.createNewFile()@ -> Utils.writeToLogFile(CRASH_LOG,report,false,true,)@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/nBdde/l2jserver/blob/da97c52c97827e773ba57953c51f732565e4b8c2/L2_GameServer/java/com/l2jserver/gsregistering/BaseGameServerRegister.java][registerGameServer][2] = -> TRY {  -> file=new File(outDir,"hexid.txt",)@ -> file.createNewFile()@ -> out=new FileOutputStream(file,)@ } CATCH(IOException) {}
results[https://github.com/croo/Szakdolgozat/blob/ea5e40220370dd8983e64dd3a5ceaacbe5e8f64f/src/croo/szakdolgozat/server/database/RdfDatabaseBuilder.java][createDatabaseFile][4] = -> TRY {  -> databaseFile=new File(rdfDatabaseFile,)@ -> databaseFile.delete()@ -> databaseFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/MiniSEC/adito_reload/blob/621a3b13f8451e076ab5d2645e5aff2fe32ce444/adito/trunk/Alfresco-jLAN/alfresco-jlan/source/java/org/alfresco/jlan/server/filesys/loader/FileSegment.java][createTemporaryFile][1] = -> TRY {  -> tempFile=new File(getTemporaryFile(),)@ -> tempFile.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/builddoctor/cruisecontrol/blob/ef9d29d9ac99a192a3fa4e7a99ab068cd8fc9e70/cruisecontrol/reporting/jsp/test/net/sourceforge/cruisecontrol/taglib/NavigationTagTest.java][setUp][1] = -> TRY {  -> LOOP { -> logFile.createNewFile()@ } } CATCH(IOException) {}
results[https://github.com/bcdev/smos-box/blob/01f5b278d545087c91d6168f6159bf66c6d0b922/smos-ui/src/main/java/org/esa/beam/smos/visat/export/EEGridExport.java][startFile][1] = -> TRY {  -> outDbl=new File(outputDir,dblName,)@ -> outDbl.createNewFile()@ -> ouputContext=dataFormat.createContext(outDbl,"rw",)@ } CATCH(IOException) {}
results[https://github.com/acontes/programming/blob/9baa312c1480b727881195346237cd48f8895749/src/Tests/unitTests/vfsprovider/FileOperationsTest.java][deleteDirNotEmpty][3] = -> TRY {  -> assertTrue(new File(this.anotherDir,"newFile",).createNewFile(),)@ } CATCH(IOException) {}
results[https://github.com/madhusudancs/asterixdb/blob/38b7ca49742d23aa076e4656226d3fa1f4e52ed7/asterix-transactions/src/main/java/edu/uci/ics/asterix/transaction/management/service/logging/FileUtil.java][createFileIfNotExists][1] = -> TRY {  -> file=new File(path,)@ -> parentFile=file.getParentFile()@ -> return file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/stlanger/Docear/blob/a0ce46cd19dd247abf1875497c3603fec3b80575/docear_plugin_core/src/org/docear/plugin/core/listeners/WorkspaceChangeListener.java][createFile][1] = -> TRY {  -> IF { -> return @!(file.getParentFile().exists())&&!(file.getParentFile().mkdirs()) } -> file.createNewFile()@!(!(file.getParentFile().exists())&&!(file.getParentFile().mkdirs())) } CATCH(IOException) {}
results[https://github.com/Adamki11s/QuestX/blob/01c63e1d3a51d41735d3df4b36c62a9de3575f84/src/couk/adamki11s/npcs/tasks/TaskLoader.java][setTaskCompleted][1] = -> completed=FileLocator.getNPCTaskProgressionPlayerFile(npcName,playerName,)@ -> TRY { -> completed.createNewFile()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/luksrn/javarch/blob/535cdfc70dff360488379d7212933510e775b6c3/javarch-support/src/main/java/com/github/javarch/support/data/LocalFileStorage.java][<init>][1] = -> TRY { -> this.storageDirectory=storageDirectory.getFile()@ -> this.storageDirectory.createNewFile()@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/eclipse/rap/blob/29429340530f1674397d995c78564b5bcd751b90/tests/org.eclipse.rap.rwt.test/src/org/eclipse/rwt/internal/engine/ApplicationContextUtil_Test.java][testDelete][1] = -> TRY {  -> content=new File(contextDirectory,"context.xml",)@ -> fileCreated=content.createNewFile()@ -> assertTrue(fileCreated,)@ } CATCH(IOException) {}
results[https://github.com/pitosalas/blogbridge/blob/471d4c10e5ba5b4900c001ec85806f2e81687c10/src/com/salas/bb/utils/ipc/IPC.java][configureSocketFile][1] = -> TRY {  -> socketFile.delete()@ -> socketFile.createNewFile()@ -> socketFile.deleteOnExit()@ } CATCH(IOException) {}
results[https://github.com/makumba/parade2/blob/6b4c1218593c7a86939d7db2967e8a6cb00f121e/webapp/WEB-INF/classes/org/makumba/parade/listeners/ParadeJNotifyListener.java][createDirectoryLock][3] = -> f=new java.io.File(absoluteDirectoryPath+java.io.File.separator+LOCK,)@ -> TRY { -> f.createNewFile()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/BenCmd/BenCmd/blob/b191f0f18bef8500d04be79d0185d77b40418144/src/com/bendude56/bencmd/warps/WarpList.java][updateWarp][1] = -> TRY { -> new File("plugins/BenCmd/_warps.db",).createNewFile()@ } CATCH(IOException) { -> BenCmd.log(Level.WARNING,"Failed to back up warp database!",)@ }
results[https://github.com/Jnoee/coo/blob/8a2c5e88a38c44ca96723f90257bd3bf523b28b2/coo.base/src/coo/base/util/FileUtils.java][createFile][1] = -> TRY { -> file=new File(filePath,)@ -> file.createNewFile()@ } CATCH(IOException) { -> throw new UncheckedException("创建文件时发生错误。",e,)@ }
results[https://github.com/elasticsearch/elasticsearch/blob/bf19dc699ad3bf73b70fdec815e40ac1f5f6a21f/src/test/java/org/elasticsearch/plugins/IsolatedPluginTests.java][copyFile][1] = -> TRY {  -> out.createNewFile()@ -> Streams.copy(source,new FileOutputStream(out,),)@ } CATCH(IOException) {}
results[https://github.com/JetBrains/JPS/blob/836a349123e0fc39b323f9b28bb4a114332e3cde/testSrc/org/jetbrains/jps/util/TempFiles.java][doCreateTempFile][1] = -> TRY {  -> file=doCreateTempDir(prefix,suffix,)@ -> file.delete()@ -> file.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/yareally/SignalInfo/blob/ec3a1a074882536410f83728c0c2553d5f1fa621/src/com/cc/signalinfo/util/system/commands/JavaCommands.java][createFile][1] = -> newFile=new File(newFilePath,file,)@ -> TRY { -> return newFile.createNewFile()@ } CATCH(IOException) { -> Log.e(DEBUG_TAG,"Could not create file.",e,)@ }
results[https://github.com/thiagomanel/intrusiveness-meter/blob/ed278dda1df390079d7fdd8c72a41325bd8bd87c/IntrusivenessMeter/test/exerciser/internal/MemoryTaskTest.java][createExerciserFile][1] = -> TRY {  -> file=new File(exerciser,)@ -> file.createNewFile()@ -> file.setExecutable(true,)@ } CATCH(IOException) {}
results[https://github.com/joel-costigliola/assertj-assertions-generator/blob/b31be48a0b7b4f83cebeb1d35cc033f90ab3b6ad/src/main/java/org/fest/assertions/generator/BaseAssertionGenerator.java][createCustomAssertionFile][1] = -> TRY {  -> assertionJavaFile=new File(targetDirectory,assertionFileName,)@ -> assertionJavaFile.createNewFile()@ -> fillAssertionJavaFile(assertionFileContent,assertionJavaFile,)@ } CATCH(IOException) {}
results[https://github.com/brunopedroso/besouro/blob/8190bcc54f30915bd90a90179c5ea80469a4011a/src/besouro/stream/EpisodeFileStorage.java][<init>][1] = -> TRY { -> this.file.createNewFile()@ -> writer=new FileWriter(this.file,true,)@ } CATCH(IOException) { -> throw new RuntimeException(e,)@ }
results[https://github.com/software-engineering-amsterdam/sea-of-ql/blob/c7d259ebd5a9fc193557c1fec0fd8110e60ac6fa/khosrow/QLJava/src/khosrow/uva/sea/ql/QlXmlCreator.java][create][1] = -> TRY {  -> f=new File(path,)@ -> f.createNewFile()@ -> creator=new QlXmlCreator(f,)@ } CATCH(IOException) {}
results[https://github.com/dschuermann/ad-away/blob/5c8089b9d13e6369c7556160a62bf21213aa1ddd/AdAway/src/org/adaway/util/TcpdumpUtils.java][startTcpdump][1] = -> TRY { -> file=new File(filePath,)@ -> file.createNewFile()@ } CATCH(IOException) { -> Log.e(Constants.TAG,"Problem while getting cache directory!",e,)@ }
results[https://github.com/krestenkrab/dart/blob/1a9b52d6e1a2ed85d13c4b26c486ae020a37db51/editor/tools/plugins/com.google.dart.tools.debug.core/src/com/google/dart/tools/debug/core/internal/util/BrowserManager.java][createChromeDataDir][1] = -> TRY { -> firstRunFile=new File(dataDir,"First Run",)@ -> firstRunFile.createNewFile()@ } CATCH(IOException) { -> DartDebugCorePlugin.logError(ioe,)@ }
results[https://github.com/tmyroadctfig/unexceptional-javac/blob/0493e71a30b73bea584ec0d1a617c68827abf60c/test/tools/javac/generics/compat/OverrideBridge1.java][prepare][1] = -> TRY {  -> buildFolder=new File(rootFolder+"/jobs/"+job.getKey()+"/builds/"+buildNr,)@ -> buildFolder.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/r351574nc3/kfs-maven/blob/a15c8be35eed83b379e59692010c5fdec1f67b71/kfs-parent/core/src/main/java/org/kuali/kfs/module/ar/batch/service/impl/CustomerInvoiceWriteoffBatchServiceImpl.java][createDoneFile][1] = -> doneFile=new File(fileNoExtension,)@ -> TRY { -> doneFile.createNewFile()@ } CATCH(IOException) { -> throw new RuntimeException("Exception while trying to create .done file.",e,)@ }
results[https://github.com/bgroenks96/2DX-GL/blob/d9f9e8073c763b5434d8097115e301f05b8a5594/2DX-GL/snapdragon/com/snap2d/SnapLogger.java][<clinit>][1] = -> TRY { -> LOG_MAIN.createNewFile()@ } CATCH(IOException) { -> System.err.println("[Snap2D] failed to create log file: "+e.toString(),)@ }
results[https://github.com/brandt/GridSphere/blob/2a95b23c054e510b8ad5480538b7c328956f6e71/src/org/gridsphere/servlets/SetupServlet.java][createDatabaseFile][1] = -> TRY { -> dbfile=new File(dbpath,)@ -> dbfile.createNewFile()@ } CATCH(IOException) { -> throw new IllegalArgumentException("Unable to create file: "+dbpath,e,)@ }
results[https://github.com/geoserver/geoserver-history/blob/447d3ab89a5fe8053f60967ef95ca51485bc5220/geoserver/data/src/main/java/org/geoserver/data/test/MockData.java][info][1] = -> TRY {  -> info=new File(featureTypeDir,"info.xml",)@ -> info.createNewFile()@ -> writer=new FileWriter(info,)@ } CATCH(IOException) {}
results[https://github.com/desruisseaux/geotoolkit/blob/74dd6e8abad2ae86f6df87d535621892b40ce2d3/modules/coverage/geotk-coverageio/src/test/java/org/geotoolkit/image/io/plugin/WorldFileImageWriterTest.java][changeExtension][1] = -> TRY {  -> file=(File) IOUtilities.changeExtension(mainFile,extension,)@ -> assumeTrue(file.createNewFile(),)@ } CATCH(IOException) {}
results[https://github.com/spring-projects/spring-batch-admin/blob/b2a7dad87ec1d5c68f9a6c0793ebbd3c3031f4f0/spring-batch-admin-manager/src/main/java/org/springframework/batch/admin/service/LocalFileService.java][createFile][1] = -> TRY {  -> dest=new File(outputDir,result.getFileName(),)@ -> dest.createNewFile()@ } CATCH(IOException) {}
results[https://github.com/splunk/splunk-shuttl/blob/f1314ebda6288df10daab6905a6f0b5a436047a3/test/java/com/splunk/shuttl/archiver/archive/BucketCsvFileTest.java][getCsvOutputFileFromBucket_givenFileAlreadyExists_doesNotExist][1] = -> TRY {  -> csvFile=bucketCsvFile.getCsvFile(bucket,)@ -> assertTrue(csvFile.createNewFile(),)@ } CATCH(IOException) {}
