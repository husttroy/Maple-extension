results[https://github.com/gvtools/gvtools-legacy/blob/0ec6acdfef33616c8f048fd81e04e5791857dd28/extensions/extRasterTools-SE/src/org/gvsig/rastertools/raw/tools/VRTFileCreator.java][writeFile] = -> TRY {  -> IF { -> m_File.createNewFile()@!(m_File.exists()) } -> writer=new FileWriter(m_File,)@ -> writer.close()@ } CATCH {}
results[https://github.com/FunThomas424242/devtools/blob/4fa64259f5044135818eff10a854b821f91349ed/Plugins/sflib.plugin/src/net/sourceforge/devtool/lib/xml/DOMWriter.java][writeToFile] = -> TRY {  -> IF { -> file.createNewFile()@!(file.exists()) } -> writer=new FileWriter(file,)@ -> ok=writeNode(doc,writer,)@ -> writer.close()@ } CATCH {}
results[https://github.com/spixi/Dijkstra/blob/d16e9031fb641706481ac1f2448f87b2155ffeda/src/de/bwv_aachen/dijkstra/controller/Controller.java][writeFile] = -> TRY {  -> IF { -> f.createNewFile()@!(f.exists()) } -> writer=new FileWriter(f,)@ -> model.writeJSONString(writer,)@ -> writer.close()@ } CATCH {}
results[https://github.com/tordanik/OSM2World/blob/cef7e3b7602b4d0771e78b6d77b39fde1889ceb7/src/org/osm2world/core/target/povray/POVRayWriter.java][writePOVInstructionFile] = -> TRY {  -> IF { -> file.createNewFile()@!(file.exists()) } -> printStream=new PrintStream(file,)@ -> writePOVInstructionStringToStream(printStream,mapData,camera,projection,)@ -> printStream.close()@ } CATCH {}
results[https://github.com/Atlee/P2PChineseCheckers/blob/f41b6a178f303487cf0b7e87921a5e2dcd0f7719/ChineseCheckers/src/hub/PasswordStore.java][getPasswordFile] = -> TRY {  -> f=new File(PASSWORD_FILE_NAME,)@ -> IF { -> f.createNewFile()@!(f.exists()) -> raf=new RandomAccessFile(f,"rw",)@!(f.exists()) -> raf.close()@ } } CATCH {}
results[https://github.com/svn2github/maven-download-plugin/blob/8c8fda113f3e6163423a57bd29c08c9b7f1a13af/tags/1.0.0/maven-download-plugin/src/main/java/com/googlecode/DownloadCache.java][saveIndex] = -> TRY {  -> IF { -> this.indexFile.createNewFile()@!(this.indexFile.exists()) && !(this.basedir.exists()&&!(this.basedir.isDirectory())) } -> out=new FileOutputStream(this.indexFile,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res=new ObjectOutputStream(out,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.writeObject(index,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.close()@!(this.basedir.exists()&&!(this.basedir.isDirectory())) } CATCH {}
results[https://github.com/svn2github/maven-download-plugin/blob/3589c4cb3789569a2dfef61bf8bc1d47d7aeea5e/trunk/maven-download-plugin/src/main/java/com/googlecode/DownloadCache.java][saveIndex] = -> TRY {  -> IF { -> this.indexFile.createNewFile()@!(this.indexFile.exists()) && !(this.basedir.exists()&&!(this.basedir.isDirectory())) } -> out=new FileOutputStream(this.indexFile,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res=new ObjectOutputStream(out,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.writeObject(index,)@!(this.basedir.exists()&&!(this.basedir.isDirectory())) -> res.close()@!(this.basedir.exists()&&!(this.basedir.isDirectory())) } CATCH {}
results[https://github.com/pchaigno/Hydra/blob/8b985b280fa668852e9c145ffdd05e5349461394/src/core/SaveFileThread.java][saveFile] = -> TRY {  -> f=new File(this.savePath+this.piece,)@ -> IF { -> f.createNewFile()@!(f.exists()) } -> fileStream=new FileOutputStream(f,)@ -> Transfert.copyStream(this.incomingStream,fileStream,)@ -> fileStream.close()@ } CATCH {}
results[https://github.com/apache/flex-falcon/blob/e5b9f4ba0f4f146a63e65f0c67bf35e6749c35c5/compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/goog/JSGoogPublisher.java][writeFile] = -> TRY {  -> tgtFile=new File(path,)@ -> IF { -> tgtFile.createNewFile()@!(tgtFile.exists()) } -> fw=new FileWriter(tgtFile,append,)@ -> fw.write(content,)@ -> fw.close()@ } CATCH {}
results[https://github.com/Atlee/P2PChineseCheckers/blob/5d328c45bbf76f032cf445f6424fd7e7a6ba3eb3/ChineseCheckers/src/test/PasswordStore.java][getPasswordFile] = -> TRY {  -> f=new File(PASSWORD_FILE_NAME,)@ -> IF { -> f.createNewFile()@!(f.exists()) -> raf=new RandomAccessFile(f,"rw",)@!(f.exists()) -> raf.writeInt(0,)@ -> raf.close()@ } } CATCH {}
