results[https://github.com/RamesesDev/osiris2/blob/c8c2d2376572d4a3bd23b0ccf6d60d878d3ac47a/common/rameses-common/src/com/rameses/messaging/AbstractFileEventQueue.java][getLogIndexFile] = -> TRY {  -> IF { -> logindexfile=new File(rootPath+"/"+name+"/logindex",)@logindexfile==null -> IF { -> logindexfile.createNewFile()@logindexfile==null && !(logindexfile.exists()) } } } CATCH {}
results[https://github.com/SvenAke/abovetracker/blob/3708f49cec1517b73741311f7bd5742f281caecb/src/com/aboveware/abovetracker/SmsLogger.java][OpenSmsFile] = -> TRY {  -> file=SmsFile()@ -> IF { -> IF { -> file.createNewFile()@!(file.exists()) && null!=file } } } CATCH {}
results[https://github.com/eclipse/mtj/blob/783ba5c3dfc84b83d818406dfb421f19fee63d0e/trunk/plugins/org.eclipse.mtj.core/src/org/eclipse/mtj/internal/core/packaging/midp/DeployedJADWriter.java][writeJad] = -> TRY {  -> jadName=midletSuite.getJadFileName()@ -> IF { -> deployedJadFile=new File(deploymentFolder,jadName,)@jadName!=null -> IF { -> deployedJadFile.createNewFile()@!(deployedJadFile.exists()) } -> appDescriptor.store(deployedJadFile,)@ } } CATCH {}
results[https://github.com/picketlink/picketlink-idm-restored/blob/8f75fd4d3e85c3c8b0d38e36a549841c4c48a7a2/impl/src/main/java/org/picketlink/idm/internal/file/FileBasedIdentityStore.java][checkAndCreateFile] = -> IF { -> file.delete()@this.alwaysCreateFiles&&file.exists() } -> IF { -> TRY { -> file.createNewFile()@!(file.exists()) } }
results[https://github.com/victoryckl/android-demos/blob/f25944dbb4db3f7e4cdbd1aa46f9d42cb140c789/android-demos/src/com/example/utils/LogWriter.java][getOutputStream] = -> TRY {  -> IF { -> IF { -> file=new File(logFileName,)@ -> IF { -> file.createNewFile()@!(file.exists()) } -> outStream=new FileOutputStream(file,)@outStream==null } } } CATCH {}
results[https://github.com/sk89q/commandhelper/blob/145e58c4b1c5434f1b2e3d5586b4ec8480f21695/src/main/java/com/laytonsmith/persistance/SerializedPersistance.java][run] = -> TRY { -> IF { -> storageLocation.getParentFile().mkdirs()@storageLocation.getParentFile()!=null } -> IF { -> storageLocation.createNewFile()@!(storageLocation.exists()) } }
results[https://github.com/wilsontheball/accionciudadana/blob/8d64f7c3d55b974c3388507d3be64e65e29069a2/webac/src/main/java/ar/com/thinksoft/ac/webac/reclamo/ImageFactory.java][createImage] = -> TRY {  -> IF { -> image=new File(Configuracion.getInstance().getPathTempImages()+fileName,)@ -> IF { -> image.createNewFile()@!(image.exists()) } -> image.write(stream,)@ } } CATCH {}
results[https://github.com/Illarion-eV/Illarion-Java/blob/682b03b27731b73f2d40a668b8d08f58eae1dcd5/illacommon/src/main/java/illarion/common/util/DirectoryManager.java][createDataDirFile] = -> IF { -> dataDirFile=new File(dir,"illarionDir",)@dir!=null -> IF { -> return true@dir!=null && dataDirFile.exists() } -> TRY { -> return dataDirFile.createNewFile()@!(dataDirFile.exists()) && dir!=null } }
results[https://github.com/picketlink/picketlink/blob/812594f5ddbead641d4776b4da0e6a69c5d6be80/src/main/java/org/picketlink/identity/federation/core/sts/registry/FileBasedSTSOperations.java][create] = -> IF { -> throw logger.nullArgumentError("file name",)@fileName==null } -> createdFile=new File(fileName,)@!(fileName==null) -> IF { -> TRY { -> createdFile.createNewFile()@!(fileName==null) && !(createdFile.exists()) } }
results[https://github.com/NetLanPlayer/LanPlayer/blob/bcbe4d9980fb8a11ce35ac0209d5d522f7614b3b/LanPlayer/LanPlayer/src/main/ClientGui.java][initLanData] = -> IF { -> DATA_DIR.mkdirs()@!(DATA_DIR.exists()) } -> IF { -> TRY { -> LAN_DATA_FILE.createNewFile()@!(LAN_DATA_FILE.exists()) } } -> lanData=new LanData(DATA_DIR,LAN_DATA_FILE,INIT_PARTICIPANTS,false,)@
