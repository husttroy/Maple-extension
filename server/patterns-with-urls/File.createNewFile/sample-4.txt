results[https://github.com/macc704/CRiPS/blob/324804df6286dc833b833533182f0c4794d7a176/CompileErrorAnalytics/src/generef/analytics/FailureKnowledgeListFile.java][createFile] = -> TRY {  -> IF { -> fkListFile.createNewFile()@!(fkListFile.exists()) } -> IF { -> writingPointListFile.createNewFile()@!(writingPointListFile.exists()) } } CATCH {}
results[https://github.com/stumoodie/MetabolicNotationSubsystem/blob/5dfb1e0422bdba35f25ffc05024365d82318ac3a/src/org/pathwayeditor/metabolic/excelexport/ExcelExportService.java][checkArgs] = -> TRY {  -> IF { -> throw new IllegalArgumentException("Arguments must not be null",)@canvas==null||exportFile==null||canvas.getModel().getRootNode()==null } -> exportFile.createNewFile()@!(canvas==null||exportFile==null||canvas.getModel().getRootNode()==null) -> IF { -> throw new ExportServiceException("File "+exportFile+" is not writable",)@!(exportFile.canWrite()) && !(canvas==null||exportFile==null||canvas.getModel().getRootNode()==null) } } CATCH {}
results[https://github.com/ansell/openrdf-sesame/blob/5315251cba415bc87d6a0b615989f7db453cfe14/core/util/src/main/java/info/aduna/io/NioFile.java][<init>] = -> TRY {  -> IF { -> created=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file: "+file,)@!(file.exists()) && !(created) } } } CATCH {}
results[https://github.com/tuvd08/other/blob/b7e42e62a2f6f23327f9c78e1cc5e183353083ed/csv-creator/src/main/java/com/cloudmoner/creator/Utils.java][createFile] = -> TRY {  -> aFile=new File(pathname,)@ -> IF { -> aFile.createNewFile()@!(aFile.exists()) } -> IF { -> throw new IllegalArgumentException("Should not be a directory: "+aFile,)@!(aFile.isFile()) } } CATCH {}
results[https://github.com/facetoe/JReader/blob/229ebde76506e7b7b5b52495efe02427cd8e9bca/src/com/facetoe/jreader/helpers/Utilities.java][checkAndCreateFileIfNotPresent] = -> TRY {  -> IF { -> wasSuccess=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file at: "+file.getAbsolutePath(),)@!(wasSuccess) && !(file.exists()) } } } CATCH {}
results[https://github.com/stumoodie/MetabolicNotationSubsystem/blob/b79bffdb8b9ea5a8d67a8a4b663abb148b8a6b92/src/uk/ac/ed/inf/Metabolic/excelexport/ExcelExportService.java][checkArgs] = -> TRY {  -> IF { -> throw new IllegalArgumentException("Arguments must not be null",)@canvas==null||exportFile==null||canvas.getModel().getRootNode()==null } -> exportFile.createNewFile()@!(canvas==null||exportFile==null||canvas.getModel().getRootNode()==null) -> IF { -> throw new ExportServiceException("File "+exportFile+" is not writable",)@!(exportFile.canWrite()) && !(canvas==null||exportFile==null||canvas.getModel().getRootNode()==null) } } CATCH {}
results[https://github.com/stumoodie/MetabolicNotationSubsystem/blob/b79bffdb8b9ea5a8d67a8a4b663abb148b8a6b92/src/uk/ac/ed/inf/Metabolic/paxexport/BioPAXExportService.java][checkArgs] = -> TRY {  -> IF { -> throw new IllegalArgumentException("Arguments must not be null",)@map==null||exportFile==null||map.getTheSingleRootMapObject()==null } -> exportFile.createNewFile()@!(map==null||exportFile==null||map.getTheSingleRootMapObject()==null) -> IF { -> throw new ExportServiceException("File "+exportFile+" is not writable",)@!(exportFile.canWrite()) && !(map==null||exportFile==null||map.getTheSingleRootMapObject()==null) } } CATCH {}
results[https://github.com/facetoe/JReader/blob/f21fdea190af5b1fe7bf1b54406ebbd0217deaae/src/com/facetoe/jreader/helpers/Util.java][checkAndCreateFileIfNotPresent] = -> TRY {  -> IF { -> wasSuccess=file.createNewFile()@!(file.exists()) -> IF { -> throw new IOException("Failed to create file at: "+file.getAbsolutePath(),)@!(wasSuccess) && !(file.exists()) } } } CATCH {}
results[https://github.com/stumoodie/MetabolicNotationSubsystem/blob/5dfb1e0422bdba35f25ffc05024365d82318ac3a/src/org/pathwayeditor/metabolic/paxexport/BioPAXExportService.java][checkArgs] = -> TRY {  -> IF { -> throw new IllegalArgumentException("Arguments must not be null",)@map==null||exportFile==null||map.getModel().getRootNode()==null } -> exportFile.createNewFile()@!(map==null||exportFile==null||map.getModel().getRootNode()==null) -> IF { -> throw new ExportServiceException("File "+exportFile+" is not writable",)@!(map==null||exportFile==null||map.getModel().getRootNode()==null) && !(exportFile.canWrite()) } } CATCH {}
results[https://github.com/jesseeichar/debrief/blob/a4658ad8ef647e358550fadc0ea84f47d3073ac5/trunk/org.mwc.cmap.legacy/src/MWC/GUI/Dialogs/ApplicationProperties.java][<init>] = -> TRY {  -> propertiesFile=new File(fileName,)@ -> IF { -> propertiesFile.createNewFile()@!(propertiesFile.exists()) } -> IF { -> throw new FileNotFoundException(fileName+"\nSpecified file name must resolve to an actual file.",)@!(propertiesFile.isFile()) } } CATCH {}
