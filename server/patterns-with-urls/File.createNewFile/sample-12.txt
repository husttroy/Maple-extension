results[https://github.com/tulskiy/musique/blob/bc842b7304092ec47252c6374279bfb3e11c7862/modules/jflac/src/javaFlacEncoder/FLAC_ConsoleFileEncoder.java][getOutputFile] = -> file=new File(filename,)@ -> TRY { -> IF { -> file.createNewFile()@!(file.exists()) } -> IF { -> System.err.println("Error, can't write to output file: "+filename,)@ } }
results[https://github.com/Neuronix2/IRISv2/blob/66d0c1daaec1b809f27864d2b7dfd8605e6ec796/iris-libraries/java-flac-encoder/src/main/java/javaFlacEncoder/FLAC_ConsoleFileEncoder.java][getOutputFile] = -> file=new File(filename,)@ -> TRY { -> IF { -> file.createNewFile()@!(file.exists()) } -> IF { -> System.err.println("Error, can't write to output file: "+filename,)@ } }
results[https://github.com/tulskiy/musique/blob/500f8156562eaccd3f3a46ce1ece63dd2f191ca4/dependencies/javaFlacEncoder/src/main/java/javaFlacEncoder/FLAC_ConsoleFileEncoder.java][getOutputFile] = -> file=new File(filename,)@ -> TRY { -> IF { -> file.createNewFile()@!(file.exists()) } -> IF { -> System.err.println("Error, can't write to output file: "+filename,)@ } }
results[https://github.com/aldaris/opensso/blob/0208edccc10a63ead065efea45ff44b74d14438f/products/installtools/source/com/sun/identity/install/tools/admin/AdminTool.java][acquireLock] = -> lockFile=getLockFile()@ -> IF { -> TRY { -> result=lockFile.createNewFile()@!(lockFile.exists()) -> IF { -> lockFile.deleteOnExit()@!(lockFile.exists()) } } } -> Debug.log("Lock acquired = "+result,)@
results[https://github.com/Neuronix2/IRISv2/blob/b0e19790d9958ff5d2e404d595dc5479667b6a99/iris-common/src/main/java/javaFlacEncoder/FLAC_ConsoleFileEncoder.java][getOutputFile] = -> file=new File(filename,)@ -> TRY { -> IF { -> file.createNewFile()@!(file.exists()) } -> IF { -> System.err.println("Error, can't write to output file: "+filename,)@ } }
results[https://github.com/wichtounet/jtheque-utils/blob/5187339e7e8db7f4a0df5f85679cc085ddb62629/src/main/java/org/jtheque/utils/io/FileUtils.java][createEmptyFile] = -> f=new File(path,)@ -> IF { -> TRY { -> created=f.createNewFile()@!(f.exists()) -> IF { -> LoggerFactory.getLogger(FileUtils.class,).error("The file "+path+" cannot be created. ",)@ } } }
results[https://github.com/svn2github/openam-trunk/blob/2d2bc49aae095d5aae269ad641595b8a64eb21de/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/admin/AdminTool.java][acquireLock] = -> lockFile=getLockFile()@ -> IF { -> TRY { -> result=lockFile.createNewFile()@!(lockFile.exists()) -> IF { -> lockFile.deleteOnExit()@!(lockFile.exists()) } } } -> Debug.log("Lock acquired = "+result,)@
results[https://github.com/aldaris/openam/blob/c4a9334752f04ca5e05041e5d309c12db7434bec/opensso/products/installtools/source/com/sun/identity/install/tools/admin/AdminTool.java][acquireLock] = -> lockFile=getLockFile()@ -> IF { -> TRY { -> result=lockFile.createNewFile()@!(lockFile.exists()) -> IF { -> lockFile.deleteOnExit()@!(lockFile.exists()) } } } -> Debug.log("Lock acquired = "+result,)@
results[https://github.com/Floobits/floobits-intellij/blob/c3e28ff1502a65c99dfc475e5b64105ba6673422/src/floobits/actions/OpenFloorc.java][actionPerformed] = -> file=new File(Settings.floorcPath,)@ -> IF { -> TRY { -> created=file.createNewFile()@!(file.exists()) } CATCH { -> return @!(file.exists()) } -> IF { -> return @!(file.exists()) && !(created) } }
results[https://github.com/aldaris/openam/blob/3cfe04745aa76a6b469dfd7228a3f2f11fea0b40/openam/openam-tools/openam-installtools/src/main/java/com/sun/identity/install/tools/admin/AdminTool.java][acquireLock] = -> lockFile=getLockFile()@ -> IF { -> TRY { -> result=lockFile.createNewFile()@!(lockFile.exists()) -> IF { -> lockFile.deleteOnExit()@!(lockFile.exists()) } } } -> Debug.log("Lock acquired = "+result,)@
