results[https://github.com/CTSIatUCSF/shindigorng/blob/3ced2289390b8f1a1e2fb85260d4dafd3ffb9265/java/gadgets/src/test/java/org/apache/shindig/gadgets/http/JsonRpcHandlerTest.java][testSimpleRequest][8] = -> TRY {  -> response=jsonRpcHandler.process(input,)@ -> outGadgets=response.getJSONArray("gadgets",)@ -> gadget=outGadgets.getJSONObject(0,)@ } CATCH(Exception) {}
results[https://github.com/terraframe/Runway-SDK/blob/4e1a50a6e89369a0ea61403f3dc6ca0aef06f5a8/runwaysdk-test/src/main/java/com/runwaysdk/facade/JSONInvokeMethodTest.java][testInvokeEmptyMethod][1] = -> TRY {  -> returnObject=new JSONObject(returnJSON,)@ -> jsonArray=returnObject.getJSONArray(JSONReturnObject.RETURN_VALUE,)@ -> jsonObject=jsonArray.getJSONObject(DTOConversionUtilInfo.JSON_CALLED_OBJECT,)@ } CATCH(Exception) {}
results[https://github.com/nicholasdelrio/VLC/blob/63c62be566ca15d66f7149e5160731b9bcc44484/vlc-visko-interface/src/main/java/edu/utep/cybershare/vlc/visko/HTMLQueryBatch.java][extractResultURL][3] = -> TRY { -> resultsArray=aVisKoResult.getJSONArray("results",)@ -> resultURL=resultsArray.getJSONObject(0,).getString("outputURL",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/worksheet/serializer/json/WorkSheetJSONDeserializer.java][deserializeOptions][1] = -> TRY {  -> optionsJSON=workSheetDefinitionJSON.getJSONArray(WorkSheetSerializationUtils.FIELDS_OPTIONS,)@ -> LOOP { -> aField=optionsJSON.getJSONObject(i,)@i<optionsJSON.length() } } CATCH(Exception) {}
results[https://github.com/hampelratte/VCH/blob/08ca03a1d9a00e790ffae33ac088358334df262a/VCHR/src/de/berlios/vch/android/SearchActivity.java][doTheWork][1] = -> TRY {  -> result=new JSONObject(responseBody,)@ -> providers=result.getJSONArray("pages",)@ -> LOOP { -> provider=providers.getJSONObject(i,)@i<providers.length() } } CATCH(Exception) {}
results[https://github.com/geoserver/geoserver-history/blob/dcb33fd3a8b4f9e6ed3e3cf477e2863970968a6f/geoserver/wfs/src/test/java/org/geoserver/wfs/response/GeoJSONTest.java][testPost][20] = -> TRY {  -> rootObject=JSONObject.fromObject(out,)@ -> assertEquals(rootObject.get("type",),"FeatureCollection",)@ -> featureCol=rootObject.getJSONArray("features",)@ -> aFeature=featureCol.getJSONObject(0,)@ } CATCH(Exception) {}
results[https://github.com/evgeniyarbatov/dev-practice/blob/06f63c1223243e41d30dce65486a24ee4c394341/java/researchFeed/src/com/evgeniy/arbatov/feed/NatureAPI.java][searchNature][1] = -> TRY { -> feed=json.getJSONObject("feed",)@ -> entries=feed.getJSONArray("entry",)@ -> paperObj=entries.getJSONObject(0,)@ } CATCH(Exception) { -> System.err.println("Could not encode the search term "+e.getMessage(),)@ }
results[https://github.com/mollyproject/mollyandroid/blob/7636c5b70088af05f9a76b02cbcbc79c3226a309/src/org/mollyproject/android/view/apps/webcam/WebcamPageTask.java][updateView][4] = -> TRY { -> webcams=outputs.getJSONArray("webcams",)@ -> LOOP { -> webcam=webcams.getJSONObject(i,)@i<webcams.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/carlosbrando/shindig/blob/61affe80dd47b60d8acaf8eb0b7f0bfc526ccaf9/java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/HttpRequestHandlerTest.java][testFetchFeedWithParameters][2] = -> TRY {  -> feed=(JSONObject) httpApiResponse.getContent()@ -> feeds=feed.getJSONArray("Entry",)@ -> assertEquals("numEntries not parsed correctly.",2,feeds.length(),)@ -> entry=feeds.getJSONObject(1,)@ } CATCH(Exception) {}
results[https://github.com/jdunck/google-refine/blob/b3039181df07af7cbea139ae8121c910ed8c1e33/src/main/java/com/metaweb/gridlock/browsing/Engine.java][initializeFromJSON][5] = -> TRY {  -> a=o.getJSONArray("facets",)@ -> length=a.length()@ -> LOOP { -> fo=a.getJSONObject(i,)@i<length } } CATCH(Exception) {}
results[https://github.com/joshsh/extendo/blob/5e8c5811b51a1d1b205ee4d80ac86acaddc14a74/extendo-brain/src/test/java/net/fortytwo/myotherbrain/notes/NoteQueriesTest.java][testEncoding][3] = -> TRY {  -> json=writer.toJSON(after,)@ -> j=json.getJSONArray("children",).getJSONObject(0,)@ -> assertEquals("cheval \u00e0 phynances",j.getString("value",),)@ } CATCH(Exception) {}
results[https://github.com/arhughes/droidchatty/blob/7df68c6f4456a9fcc0b0942843d0e27cd9c630da/src/cc/hughes/droidchatty/ShackApi.java][search][1] = -> TRY {  -> result=getJson(url,)@ -> comments=result.getJSONArray("comments",)@ -> LOOP { -> comment=comments.getJSONObject(i,)@i<comments.length() } } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/b6a0510bdf1608b9262759034f88394101c2972e/java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/JsonRpcHandlerTest.java][testMultipleGadgets][2] = -> TRY {  -> response=jsonRpcHandler.process(input,)@ -> outGadgets=response.getJSONArray("gadgets",)@ -> LOOP { -> gadget=outGadgets.getJSONObject(i,)@i<j } } CATCH(Exception) {}
results[https://github.com/forcedotcom/SalesforceMobileSDK-Android/blob/aeb022c9a1082ef038801fedaea2dd92a48585d4/libs/test/SalesforceSDKTest/src/com/salesforce/androidsdk/rest/RestClientTest.java][testDescribeGlobal][4] = -> TRY {  -> jsonResponse=response.asJSONObject()@ -> checkKeys(jsonResponse,"encoding","maxBatchSize","sobjects",)@ -> checkKeys(jsonResponse.getJSONArray("sobjects",).getJSONObject(0,),"name","label","custom","keyPrefix",)@ } CATCH(Exception) {}
results[https://github.com/eventjuggler/eventjuggler/blob/62e1b90a0dbd667e64a027c7204eec40d86c87c9/services/src/main/java/org/eventjuggler/services/MeetupThief.java][main][2] = -> TRY {  -> o=get(openEventsUrl,)@ -> eventsJson=o.getJSONArray("results",)@ -> LOOP { -> eventJson=eventsJson.getJSONObject(i,)@i<eventsJson.length() } } CATCH(Exception) {}
results[https://github.com/hampelratte/VCH/blob/9d0411b59d906457f5c2487067fe3d505ddeffe3/vch-parser-arte/src/main/java/de/berlios/vch/parser/arte/ArteParser.java][getRoot][1] = -> TRY {  -> pagination=json.getJSONObject("paginatedCollectionWrapper",)@ -> videos=pagination.getJSONArray("collection",)@ -> LOOP { -> video=videos.getJSONObject(i,)@i<videos.length() } } CATCH(Exception) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/a34de8f42fad07d1574691f8fc9ac18de002b3fa/SpagoBIQbeEngine/src/it/eng/spagobi/engines/worksheet/services/export/ExportWorksheetAction.java][exportToPDF][1] = -> TRY {  -> sheetsNumber=worksheetJSON.getInt(SHEETS_NUM,)@ -> exportedSheets=worksheetJSON.getJSONArray(EXPORTED_SHEETS,)@ -> LOOP { -> sheetJ=exportedSheets.getJSONObject(i,)@i<sheetsNumber } } CATCH(Exception) {}
results[https://github.com/terraframe/Runway-SDK/blob/4e1a50a6e89369a0ea61403f3dc6ca0aef06f5a8/runwaysdk-test/src/main/java/com/runwaysdk/facade/JSONInvokeMethodTest.java][testInvokeArrayMethod][1] = -> TRY {  -> returnObject=new JSONObject(returnJSON,)@ -> jsonArray=returnObject.getJSONArray(JSONReturnObject.RETURN_VALUE,)@ -> output=(BusinessDTO) JSONUtil.getComponentDTOFromJSON("",locale,jsonArray.getJSONObject(DTOConversionUtilInfo.JSON_RETURN_OBJECT,).toString(),)@ } CATCH(Exception) {}
results[https://github.com/NUBIC/psc-mirror/blob/16a22be7e08ea69eed6fa9468301781220d856b4/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/OsgiBundleRepresentationTest.java][testBundleInfoDoesNotIncludeMetatypeIfNotPresent][2] = -> TRY {  -> bundle6=representSingle(bundleWithServices,)@ -> firstService=bundle6.getJSONArray("services",).getJSONObject(0,)@ -> assertFalse(firstService.has("metatype",),)@ } CATCH(Exception) {}
results[https://github.com/PonySDK/PonySDK/blob/b35a6b6e8b32217ec70ef9d67f58b288001b5208/ponysdk/src-core/main/java/com/ponysdk/core/servlet/AbstractApplicationManager.java][printClientErrorMessage][1] = -> TRY { -> errors=data.getJSONArray(APPLICATION.ERRORS,)@ -> LOOP { -> jsoObject=errors.getJSONObject(i,)@i<errors.length() } } CATCH(Exception) { -> log.error("Failed to display errors",e,)@ }
results[https://github.com/b3log/b3log-solo/blob/f465958d047a450f57e8700345a7d8f235e40986/core/src/main/java/org/b3log/solo/processor/SitemapProcessor.java][addArticles][1] = -> TRY {  -> articleResult=articleRepository.get(query,)@ -> articles=articleResult.getJSONArray(Keys.RESULTS,)@ -> LOOP { -> article=articles.getJSONObject(i,)@i<articles.length() } } CATCH(Exception) {}
results[https://github.com/malinovskiy-alex/ifp-shopping/blob/afcb9192d41ba5d8840b40dc63d36a2e4ab8db51/shoppingui/src/main/java/com/connecture/shopping/ui/RequestHubAction.java][handleRequests][1] = -> TRY {  -> requests=envelope.getJSONArray("requests",)@ -> context=envelope.getString("context",)@ -> LOOP { -> componentRequestJSON=requests.getJSONObject(i,)@i<requests.length() } } CATCH(Exception) {}
results[https://github.com/OrangeTeam/FamilyLink/blob/ecf780853ff2d4d8318ba209d0c4fc73b23028b0/app/src/org/orange/familylink/util/ConvertUtil.java][call][1] = -> TRY {  -> jsonObject=new JSONObject(sb.toString(),)@ -> return jsonObject.getJSONArray("results",).getJSONObject(0,).getString("formatted_address",)@ } CATCH(Exception) {}
results[https://github.com/alberapps/tiempobus/blob/7445b0f686c476e51d1f488dd8fff71cc62fe3f7/TiempoBus/src/alberapps/java/weather/yahooweather/ProcesarYahooWeather.java][parsea][1] = -> TRY { -> item=channel.getJSONObject("item",)@ -> condition=item.getJSONObject("condition",)@ -> forecast=item.getJSONArray("forecast",)@ -> weather=forecast.getJSONObject(0,)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/worksheet/serializer/json/decorator/FiltersOrderTypeJSONDecorator.java][doDecoration][1] = -> TRY { -> sheets=json.getJSONArray(WorkSheetSerializationUtils.SHEETS,)@ -> LOOP { -> sheet=sheets.getJSONObject(i,)@i<sheets.length() } } CATCH(Exception) { -> throw new RuntimeException("Error while decorating JSON Object",e,)@ }
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/worksheet/serializer/json/decorator/FiltersOrderTypeJSONDecorator.java][addFiltersOrderType][1] = -> TRY {  -> filtersJSON=sheetJSON.getJSONObject(WorkSheetSerializationUtils.FILTERS,)@ -> arrayJSON=filtersJSON.getJSONArray(WorkSheetSerializationUtils.FILTERS,)@ -> LOOP { -> aFilter=arrayJSON.getJSONObject(i,)@i<arrayJSON.length() } } CATCH(Exception) {}
results[https://github.com/AlibabaTech/fastjson/blob/8681d3974705dd8617c0ee61ba68c8c09be42b5d/src/test/java/com/alibaba/json/bvt/parser/TypeUtilsTest3.java][test_ex][2] = -> TRY {  -> object=(JSONObject) JSON.toJSON(ex,)@ -> array=object.getJSONArray("stackTrace",)@ -> array.getJSONObject(0,).put("lineNumber",null,)@ -> JSON.parseObject(object.toJSONString(),Exception.class,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/psc/blob/f8544f68a13c472091a228a1b436b20b3e025bce/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/OsgiBundleRepresentationTest.java][testBundleInfoIncludesCorrectTypeForDoubleMetaTypeAttributes][18] = -> TRY {  -> actualMetatype=getMetatypeResult(new PscMockAttributeDefinition(AttributeDefinition.DOUBLE,"foo",),)@ -> assertEquals("double",actualMetatype.getJSONArray("attributes",).getJSONObject(0,).get("type",),)@ } CATCH(Exception) {}
results[https://github.com/oyslin/AndroidBicyle/blob/de703e2d6d1015a3f4a7fde32283586d533446de/src/com/dreamcatcher/bicycle/util/Utils.java][setToDataset][5] = -> TRY { -> jsonObject=new JSONObject(jsonStr,)@ -> jsonArray=jsonObject.getJSONArray(Constants.BicycleJsonTag.STATION,)@ -> LOOP { -> jsonItem=jsonArray.getJSONObject(i,)@i<total } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mollyproject/mollyandroid/blob/d8605a763ce6b1b6f101a519345ec327c700fac4/src/org/mollyproject/android/view/apps/transport/bus/BusTask.java][updateView][1] = -> TRY { -> stops=jsonContent.getJSONArray("entities",)@ -> LOOP { -> stopLayout=parseBusEntity(stops.getJSONObject(i,),page,busLayout,layoutInflater,)@i<stops.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/carlosbrando/shindig/blob/861b495c9baf849c0492e86148a545c6fdef262b/java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/JsonRpcHandlerTest.java][testUnexpectedError][1] = -> TRY {  -> resp=jsonRpcHandler.process(input,)@ -> actual=resp.getJSONArray("gadgets",).getJSONObject(0,).getJSONArray("errors",).getString(0,)@ -> assertEquals("BROKEN",actual,)@ } CATCH(Exception) {}
results[https://github.com/drevicko/MeandreComponentFoundry/blob/61f4bd27088d894d9f4a4fd6256a9f290c638edb/src-tools/org/seasr/meandre/components/tools/tuples/GoogleBooksSearchToTuple.java][jsonToTuples][2] = -> TRY {  -> res=json.getJSONObject("responseData",)@ -> results=res.getJSONArray("results",)@ -> size=results.length()@ -> LOOP { -> fields=results.getJSONObject(i,)@i<size } } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/0565bb44db57d8c421b6d2fbda5613777742374e/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitRemoteTest.java][testGetUnknownRemote][4] = -> TRY {  -> remotes=new JSONObject(response.getText(),)@ -> remotesArray=remotes.getJSONArray(ProtocolConstants.KEY_CHILDREN,)@ -> assertEquals(1,remotesArray.length(),)@ -> remote=remotesArray.getJSONObject(0,)@ } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/45c09da1e5cf58b176a359fe7d02c35fb541b881/java/gadgets/src/test/java/org/apache/shindig/gadgets/servlet/MakeRequestHandlerTest.java][testFetchFeedWithParameters][2] = -> TRY {  -> feed=new JSONObject(results.getString("body",),)@ -> feeds=feed.getJSONArray("Entry",)@ -> assertEquals("numEntries not parsed correctly.",2,feeds.length(),)@ -> entry=feeds.getJSONObject(1,)@ } CATCH(Exception) {}
results[https://github.com/R-a-dio/Android-app/blob/aece16a562399446f24ae73c15d4d7597dffa044/src/src/io/radio/android/QueueActivity.java][doInBackground][1] = -> TRY { -> main=json.getJSONObject("main",)@ -> queue=main.getJSONArray("queue",)@ -> LOOP { -> obj=queue.getJSONObject(i,)@i<queue.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/worksheet/serializer/json/WorkSheetJSONDeserializer.java][deserializeGlobalFilters][1] = -> TRY {  -> gfJSON=workSheetDefinitionJSON.getJSONArray(WorkSheetSerializationUtils.GLOBAL_FILTERS,)@ -> LOOP { -> globalFilters.add(deserializeAttribute(gfJSON.getJSONObject(i,),),)@i<gfJSON.length() } } CATCH(Exception) {}
results[https://github.com/PonySDK/PonySDK/blob/2521dc488192c6c733530203a3ed930b8bf03991/ponysdk/src-jetty/test/java/com/ponysdk/jetty/test/bench/UI.java][update][1] = -> TRY {  -> receivedSeqNum=response.getLong(APPLICATION.SEQ_NUM,)@ -> fireOnMessage(response,)@ -> instructions=response.getJSONArray(APPLICATION.INSTRUCTIONS,)@ -> LOOP { -> instruction=instructions.getJSONObject(i,)@i<instructions.length() } } CATCH(Exception) {}
results[https://github.com/b3log/b3log-solo/blob/f465958d047a450f57e8700345a7d8f235e40986/core/src/main/java/org/b3log/solo/processor/SitemapProcessor.java][addArchives][3] = -> TRY {  -> result=archiveDateRepository.get(new Query(),)@ -> archiveDates=result.getJSONArray(Keys.RESULTS,)@ -> LOOP { -> archiveDate=archiveDates.getJSONObject(i,)@i<archiveDates.length() } } CATCH(Exception) {}
results[https://github.com/mollyproject/mollyandroid/blob/5c4b9a7a727f060fa45b067638ff73031cc943d8/src/org/mollyproject/android/view/apps/transport/BusTask.java][updateView][1] = -> TRY { -> stops=jsonContent.getJSONArray("entities",)@ -> LOOP { -> stopLayout=parseBusEntity(stops.getJSONObject(i,),page,busLayout,layoutInflater,)@i<stops.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/NCIP/psc/blob/f8544f68a13c472091a228a1b436b20b3e025bce/web/src/test/java/edu/northwestern/bioinformatics/studycalendar/restlets/representations/OsgiBundleRepresentationTest.java][testBundleInfoIncludesServiceProperties][2] = -> TRY {  -> actual=representSingle(bundleWithServices,)@ -> firstService=actual.getJSONArray("services",).getJSONObject(0,)@ -> assertTrue("Missing properties",firstService.has("properties",),)@ -> actualProperties=firstService.getJSONObject("properties",)@ } CATCH(Exception) {}
results[https://github.com/skrusche63/AMES-Web-Service/blob/c992917b1ccee6d3a8ce7ba31846a03fabc47407/ames-web-service/src/de/kp/ames/web/core/search/SearcherImpl.java][setFacets][1] = -> TRY {  -> IF { -> jFacets=jQuery.getJSONArray(JsonConstants.J_FACET,)@jQuery.has(JsonConstants.J_FACET,) -> LOOP { -> jFacet=jFacets.getJSONObject(i,)@i<jFacets.length() } } } CATCH(Exception) {}
results[https://github.com/MinionApp/minion/blob/d5cb3aee5f3240e3dc52a505226f6e54fb6e59a9/MinionApp/src/uw/cse403/minion/GroupsActivity.java][doInBackground][2] = -> TRY { -> results=new JSONObject(res,)@ -> groups=results.getJSONArray("items",)@ -> LOOP { -> c=groups.getJSONObject(i,)@i<groups.length() } } CATCH(Exception) { -> res=e.toString()@ }
results[https://github.com/dbstar/dbstar/blob/d5545c590b3169182e2b9133e4ab9afbd386f4c0/DbstarLauncher/src/com/dbstar/guodian/parse/SmartHomeDataHandler.java][parseModeElectrical][1] = -> TRY { -> rootObject=(JSONObject) array.get(0,)@ -> eleArray=rootObject.getJSONArray(JsonTag.TAGModeEleList,)@ -> LOOP { -> jb=eleArray.getJSONObject(i,)@i<size } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/adtworker/iWatch/blob/d2b92ac2bd43ab105ba5e4df4a579f19456ecd33/src/com/adtworker/mail/GoogleImage.java][getImgUrl][1] = -> TRY { -> responseObject=json.getJSONObject("responseData",)@ -> resultArray=responseObject.getJSONArray("results",)@ -> LOOP { -> obj=resultArray.getJSONObject(i,)@i<resultArray.length() } } CATCH(Exception) { -> Log.e(Constants.TAG,"getImgUrl request error",e,)@ }
results[https://github.com/stonedit/TakeAway/blob/40b703dcfa3d59b26314dde482355d59c423c4a5/code/foodie/src/test/java/com/foodie/controller/ApiControllerTest.java][testGetAddressByRestaurantId][2] = -> TRY {  -> loc.setCity(city,)@ -> json=new JSONObject(jsonStr,)@ -> Assert.assertEquals(city,json.getJSONArray("data",).getJSONObject(0,).getString("city",),)@ } CATCH(Exception) {}
results[https://github.com/harism/android_facebook_client/blob/b9328f76bc542bc8cf3207c4e4ca771a7304406a/src/fi/harism/facebook/data/Controller.java][onComplete][1] = -> TRY { -> resp=facebookRequest.getResponse()@ -> message=resp.getJSONArray("data",).getJSONObject(0,).getString("message",)@ -> r=new FacebookStatus(message,)@ } CATCH(Exception) { -> observer.onError(ex,)@ }
results[https://github.com/vircheck/cs424p4/blob/ca344597f6ccbe056d0404f9dba075d1c96e06c4/src/com/anotherbrick/inthewall/datasource/DSFilter.java][getFilterNames][1] = -> TRY { -> j=getJsonFile("_filters",)@ -> lines=j.getJSONArray("lines",)@ -> LOOP { -> line=lines.getJSONObject(i,)@i<lines.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/pjf57/mat-server-side/blob/6f06c1c7829c8bcf74f1f24bc16ebc4c2909dc98/java/src/com/cs/fwk/core/util/DesignUtils.java][decodeCB][1] = -> TRY {  -> cbj=obj.getJSONObject("cb",)@ -> id=cbj.getInt("elId",)@ -> attrList=cbj.getJSONArray("attrs",)@ -> LOOP { -> attr=attrList.getJSONObject(a,)@a<attrList.size() } } CATCH(Exception) {}
results[https://github.com/joshsh/extendo/blob/d722aeb6668eeb6c198703062f69abd9dd836f9d/tinkernotes/src/test/java/net/fortytwo/myotherbrain/notes/NotesSemanticsTest.java][testEncoding][1] = -> TRY {  -> json=writer.toJSON(after,)@ -> j=json.getJSONArray("children",).getJSONObject(0,)@ -> assertEquals("cheval \u00e0 phynances",j.getJSONObject("target",).getString("value",),)@ } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/0565bb44db57d8c421b6d2fbda5613777742374e/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitCloneTest.java][testDeleteInProject][1] = -> TRY {  -> workspace=new JSONObject(response.getText(),)@ -> projects=workspace.getJSONArray(ProtocolConstants.KEY_CHILDREN,)@ -> LOOP { -> p=projects.getJSONObject(i,)@i<projects.length() } } CATCH(Exception) {}
results[https://github.com/yamac/android-demos/blob/c1d217312e47e37acb65d0041f6354e84a8b3fba/YamacDemos/src/net/yamac/android/demos/data/DemoItemWebServiceRepository.java][getItems][2] = -> TRY { -> jsonResult=json.getJSONObject("result",)@ -> jsonItems=jsonResult.getJSONArray("items",)@ -> LOOP { -> jsonItem=jsonItems.getJSONObject(i,)@i<jsonItems.length() } } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/baoshujun/love_pig/blob/dd16cb285170aa42a6c1f7e843238e3c25e5a8d9/src/com/lovepig/utils/Json.java][getJsonArray][1] = -> TRY { -> a=root.getJSONArray(key,)@ -> LOOP { -> jsons[i]=new Json(a.getJSONObject(i,),)@i<jsons.length } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/oshepherd/Impeller/blob/fd02c60e26a8d05488c8050c208cecc860abb21d/src/eu/e43/impeller/contacts/SyncAdapter.java][onPerformSync][1] = -> TRY { -> collection=new JSONObject(jsonString,)@ -> items=collection.getJSONArray("items",)@ -> LOOP { -> person=items.getJSONObject(i,)@i<items.length() } } CATCH(Exception) { -> Log.e(TAG,"Sync exception",e,)@ }
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIQbeEngine/src/it/eng/spagobi/engines/worksheet/serializer/json/WorkSheetJSONDeserializer.java][deserializeSheets][1] = -> TRY {  -> sheetsJSON=crosstabDefinitionJSON.getJSONArray(WorkSheetSerializationUtils.SHEETS,)@ -> LOOP { -> workSheets.add(deserializeSheet(sheetsJSON.getJSONObject(i,),),)@i<sheetsJSON.length() } } CATCH(Exception) {}
results[https://github.com/ryanprater/Routy/blob/4c46d07b9ec4d3df0e4fc7d8fd87929019bcb1c2/Routy/src/org/routy/provider/DistanceMatrixProvider.java][getDistanceMatrix][1] = -> TRY {  -> response=(JSONObject) new JSONTokener(jsonResp.toString(),).nextValue()@ -> rows=response.getJSONArray("rows",)@ -> elements=rows.getJSONObject(0,).getJSONArray("elements",)@ } CATCH(Exception) {}
results[https://github.com/joeyjiron06/CarbonFlights/blob/1373a101feca89f43fd22a26403fabf9a3b89f3a/CarbonFlights/src/main/java/edu/davis/carbonflights/transport/bus/BusHop.java][getBusTransitLines][1] = -> TRY { -> jsonLines=json.getJSONArray(LNS_K,)@ -> LOOP { -> busTransits.add(new BusTransitLine(jsonLines.getJSONObject(i,),),)@i<jsonLines.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jrecursive/mecha/blob/876e20048e1c40905e6f2d9e131aecf0abb9bd2a/src/mecha/vm/bifs/MDBModule.java][each][1] = -> TRY { -> msg=new JSONObject(new String(value,),)@ -> obj=new JSONObject(msg.getJSONArray("values",).getJSONObject(0,).getString("data",),)@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/omg-insa/client/blob/6adf33ed181d5dad5b572c901dd071591edc3083/PlanYourParty/src/eu/chitic/pyp/gui/events/IntrestActivity.java][onPostExecute][15] = -> IF { -> TRY { -> array=res.getJSONArray("list",)@res!=null -> LOOP { -> obj=array.getJSONObject(i,)@i<array.length() } } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/turbo-lover/tagil/blob/d64acee0552466a795c3418a519cd4c40cbd2e92/NewsTagil/src/main/java/ru/news/tagil/activity/activitySettings.java][Set][1] = -> TRY { -> IF { -> arr=object.getJSONArray("result",)@object.getString("status",).equals("ok",) -> LOOP { -> j=arr.getJSONObject(i,)@i<arr.length() } } } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/nonbdev/tourme/blob/1473362e23a770ddca7afb64d9147d34a2deee16/TourMe/src/main/java/org/fruct/oss/tourme/HomeFragment.java][onPostExecute][1] = -> TRY { -> photos=new JSONObject(result,).getJSONArray("photos",)@ -> LOOP { -> photoObject=photos.getJSONObject(i,)@i<photos.length()-1 } } CATCH(Exception) { -> e.printStackTrace()@ -> Log.e("Near images JSON:",result+"*",)@ }
results[https://github.com/belerweb/cqlybest/blob/7ac6520fb4ffd55be34d7015e26b0148490ceb14/site/src/main/java/com/cqlybest/DataUpgrade.java][v4ToV5][3] = -> TRY {  -> IF { -> json=new JSONObject(jsonString,)@ -> data=json.getJSONArray("data",)@ -> LOOP { -> src=data.getJSONObject(i,)@i<data.length() } } } CATCH(Exception) {}
results[https://github.com/jerrycable/Tasquid/blob/9b16149c8a71f69766254e09d85cf686a74f644b/tests/src/com/todoroo/astrid/sync/repeats/RepeatTestsActFmSync.java][clearTasks][6] = -> TRY {  -> result=invoker.invoke("task_list","active",1,)@ -> taskList=result.getJSONArray("list",)@ -> LOOP { -> ActFmSyncService.JsonHelper.taskFromJson(taskList.getJSONObject(i,),remote,new ArrayList<Metadata>(),)@i<taskList.length() } } CATCH(Exception) {}
results[https://github.com/helloworld1/AnyMemo/blob/c89903ec3fe5d64138f5521245c1b516af4527b9/src/org/liberty/android/fantastischmemo/downloader/FEDirectory.java][retrieveList][1] = -> TRY {  -> jsonObject=new JSONObject(jsonString,)@ -> status=jsonObject.getString("response_type",)@ -> directoryArray=jsonObject.getJSONArray("results",)@!(!(status.equals("ok",))) -> LOOP { -> tagsArray=directoryArray.getJSONObject(i,).getJSONArray("tags",)@!(!(status.equals("ok",))) && i<directoryArray.length() } } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/3474a2bcde538260407eaa8cf2db7886b3530db6/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitLogTest.java][testGetNonExistingCommit][1] = -> TRY {  -> log=logObject(testTxt.getJSONObject(GitConstants.KEY_GIT,).getString(GitConstants.KEY_HEAD,),)@ -> commitsArray=log.getJSONArray(ProtocolConstants.KEY_CHILDREN,)@ -> assertEquals(1,commitsArray.length(),)@ -> commit=commitsArray.getJSONObject(0,)@ } CATCH(Exception) {}
results[https://github.com/b3log/b3log-latke/blob/e362f1f06f926f9c6768e0caa9c398deef9db791/latke/src/main/java/org/b3log/latke/repository/impl/UserRepository.java][getByEmail][6] = -> TRY { -> result=get(query,)@ -> array=result.getJSONArray(Keys.RESULTS,)@ -> IF { -> return null@0==array.length() } -> return array.getJSONObject(0,)@!(0==array.length()) } CATCH(Exception) { -> LOGGER.log(Level.ERROR,e.getMessage(),e,)@ }
results[https://github.com/medcafe/medCafe/blob/5339d0b6174f4fa902d3454ca214929e9fa20034/ProofOfConcepts/TestVelocity.java][test][1] = -> TRY {  -> obj=new JSONObject("{\"years\":[{\"months\":[6,7,8,9,10,11,12],\"year\":2008},{\"months\":[1,2,3,4,5,6,7,8],\"year\":2009}]}",)@ -> arr=obj.getJSONArray("years",)@ -> obj=arr.getJSONObject(1,)@ -> keys=obj.keys()@ -> LOOP { -> o=obj.get(x,)@ } } CATCH(Exception) {}
results[https://github.com/momoplan/Android/blob/404b93cb4c74a53ca6afbb2bb2b06b3a26735fa8/Ruyicai_General/v4.2.0/src/com/ruyicai/activity/join/JoinCheckActivity.java][setValue][6] = -> TRY { -> array=json.getJSONArray("result",)@ -> allPage=Integer.parseInt(json.getString("totalPage",),)@ -> LOOP { -> obj=array.getJSONObject(i,)@i<array.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/stefangoelles/mitfahrapp/blob/b1461430ed99ba0693a34ec9082169fc867d7136/MitfahrApp1/src/com/mitfahr/database/RideModel.java][getSearchedRides][2] = -> TRY { -> json=new JSONObject(responseBody,)@ -> jArray=json.getJSONArray("trips",)@ -> LOOP { -> s=jArray.getJSONObject(i,).getString("trip",)@i<jArray.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Sage-Bionetworks/workflow/blob/818d6d4c04f355aac585a0c4268798636880d5b4/tools/gePipeline/src/main/java/org/sagebionetworks/gepipeline/DataModifier.java][checkCheckSums][1] = -> TRY {  -> LOOP { -> loco=synapse.query("select * from location where parentId=="+layerId,)@ -> loca=loco.getJSONArray("results",)@ } ELSE { -> location=loca.getJSONObject(0,)@!(loca.length()==0) } } CATCH(Exception) {}
results[https://github.com/cesarferreira/SmartRemote/blob/13fa461d147c272a3af4031ac2f601bfeb69e59c/SmartRemoteClient/src/com/smartremote/model/ChannelList.java][<init>][2] = -> jsonObj=jr.getJSONObject()@ -> TRY { -> array=jsonObj.getJSONArray("channel",)@ -> size=array.length()@ -> LOOP { -> jsonChannel=array.getJSONObject(i,)@i<size } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/NewMediaCenter/MobileWeb/blob/3bc1183314ae5664e18f7716e56e528366263655/sakai/impl/src/main/java/org/kuali/mobility/sakai/service/SakaiSiteServiceImpl.java][findSiteResources][4] = -> TRY { -> jsonObj=(JSONObject) JSONSerializer.toJSON(json,)@ -> itemArray=jsonObj.getJSONArray("resources_collection",)@ -> LOOP { -> resourceObject=itemArray.getJSONObject(i,)@i<itemArray.size() } } CATCH(Exception) { -> LOG.error(e.getMessage(),e,)@ }
results[https://github.com/gestinronan/Projet-BMA/blob/3a79434c7e634ae668d6b44751a0508f8c756493/android-prod/src/com/android_prod/RoadRequestReciver.java][onReceive][1] = -> TRY { -> test=new JSONObject(road.getStringExtra("road",),)@ -> roadArray=test.getJSONArray("relations",)@ -> LOOP { -> tmpRela=roadArray.getJSONObject(i,)@i<roadArray.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/fliuzzi/DataParser/blob/6e217e5316910736cf5c21ab4b7f551d2084a17b/src/com/where/data/parsers/cslists/CSListWriter.java][loadAllCSLists][3] = -> TRY {  -> LOOP { -> json=readCSListsFromFile(file,)@ -> lists=json.getJSONArray("lists",)@ -> LOOP { -> list=lists.getJSONObject(j,)@j<k } } } CATCH(Exception) {}
results[https://github.com/jdeolive/suite-old/blob/ccf252f7c19cb2167b444065a719f5a4692d89a7/geoserver/importer/src/test/java/org/opengeo/data/importer/rest/ItemResourceTest.java][testDeleteItem][2] = -> TRY {  -> json=(JSONObject) getAsJSON("/rest/imports/0/tasks/0/items",)@ -> items=json.getJSONArray("items",)@ -> assertEquals(1,items.size(),)@ -> assertEquals(1,items.getJSONObject(0,).getInt("id",),)@ } CATCH(Exception) {}
results[https://github.com/TeamFauna/dumbo/blob/ce92e2c843ed1b5b3da3011a583c73c924ae4965/android/dumbo/src/com/fawna/dumbo/FingerprintListener.java][prepareForPickerActivity][1] = -> TRY { -> jobj=new JSONObject(result,)@ -> movs=jobj.getJSONArray("movies",)@ -> LOOP { -> nmo=new MovieStub(movs.getJSONObject(i,),)@i<movs.length() } } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/mixi-inc/triaina/blob/9aa1465f461531c7cd6c43e3ce5759352ee58b85/android/test/CommonsClientTest/src/jp/mixi/triaina/commons/test/json/JSONConverterTest.java][testToJSONTest3][3] = -> TRY {  -> json=JSONConverter.toJSON(t3,)@ -> arr=json.getJSONArray("array",)@ -> assertEquals(3,arr.length(),)@ -> LOOP { -> child=arr.getJSONObject(i,)@i<arr.length() } } CATCH(Exception) {}
results[https://github.com/skaegi/orion.server/blob/9a1b6ec8bec1182f8a8cf2ecf51474fd7334d60f/tests/org.eclipse.orion.server.tests/src/org/eclipse/orion/server/tests/servlets/git/GitConfigTest.java][testGetListOfConfigEntries][1] = -> TRY {  -> LOOP { -> configResponse=listConfigEntries(gitConfigUri,)@ -> configEntries=configResponse.getJSONArray(ProtocolConstants.KEY_CHILDREN,)@ -> LOOP { -> configEntry=configEntries.getJSONObject(i,)@i<configEntries.length() } } } CATCH(Exception) {}
results[https://github.com/gdgturkiye/add2013-android/blob/b09d68d6a0520f62360228ae4bbe9bcdac2ec81f/app/src/org/gdgankara/app/io/ProgramHandler.java][parseJSONObjectToAnnouncementList][2] = -> TRY { -> announcementArray=jsonObject.getJSONArray(objectName,)@ -> length=announcementArray.length()@ -> LOOP { -> announcementObject=announcementArray.getJSONObject(i,)@i<length } } CATCH(Exception) { -> Log.e(TAG,"Error: "+e,)@ -> e.printStackTrace()@ }
results[https://github.com/joeyjiron06/CarbonFlights/blob/475482611c838d84aabc0b3d242988b59a45ce37/CarbonFlights/src/main/java/edu/davis/carbonflights/transport/Train/TrainHop.java][getTransitLines][1] = -> TRY { -> jsonLines=json.getJSONArray(LNS_K,)@ -> LOOP { -> lines.add(new TransitLine(jsonLines.getJSONObject(i,),),)@i<jsonLines.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/heyongjian/joy_launcher/blob/da54877f7954ca933b3d020da0a52f332291c5a1/src/com/joy/launcher2/install/InstallAPK.java][init][1] = -> TRY { -> jsonObject=new JSONObject(string,)@ -> jsonarry=jsonObject.getJSONArray("built_in_apk",)@ -> length=jsonarry.length()@ -> LOOP { -> item=jsonarry.getJSONObject(i,)@i<length } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/huashizhenhua/TadpoleWeibo/blob/4164ec462a621b5990f88c8231507a39de827dad/xiaotingzhong/src-demo/com/xiaotingzhong/model/User.java][fromFriends][3] = -> TRY { -> jsonObj=new JSONObject(response,)@ -> usersArr=jsonObj.getJSONArray("users",)@ -> LOOP { -> user=User.fromResponse(usersArr.getJSONObject(i,),)@i<len } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/azavea/OpenTreeMap-Android/blob/076f44a041fc1396d5fed6313e45a0b9951a13de/OpenTreeMap/src/org/azavea/otm/map/FallbackGeocoder.java][decodeGoogleJsonResponse][1] = -> TRY { -> location=json.getJSONArray("results",).getJSONObject(0,).getJSONObject("geometry",).getJSONObject("location",)@ -> lat=location.getDouble("lat",)@ -> lon=location.getDouble("lng",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/huashizhenhua/TadpoleWeibo/blob/4e778dfc5e5fba807691446bfe015321b4f5980a/tadpole.lib/src-demo/com/weibo/sdk/android/api/response/builder/FriendShipsBuilder.java][fromFriends][2] = -> TRY {  -> jsonObj=new JSONObject(response,)@ -> usersArr=jsonObj.getJSONArray("users",)@ -> LOOP { -> userList.add(UserBuilder.fromResponse(usersArr.getJSONObject(i,),),)@i<len } } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/b4ac24653e8a5c686e0883e9f1b722fafd5bf9b2/java/social-api/src/test/java/org/apache/shindig/social/dataservice/integration/RestfulJsonActivityTest.java][testCreateActivity][1] = -> TRY {  -> result=getJson(resp,)@ -> assertEquals(2,result.getInt("totalResults",),)@ -> assertEquals(0,result.getInt("startIndex",),)@ -> activities=result.getJSONArray("entry",)@ -> jsonActivity=activities.getJSONObject(newActivityIndex,)@ } CATCH(Exception) {}
results[https://github.com/dbstar/dbstar/blob/590fe79f5241cc38d3a2cd181dcb98ef13ac5281/DbstarLauncher/src/com/dbstar/guodian/parse/EqumentDataHandler.java][parse][1] = -> TRY { -> jsonObject=new JSONObject(jsonData,)@ -> array=jsonObject.getJSONArray(JsonTag.TAGEqumentList,)@ -> LOOP { -> info=parseEqument(array.getJSONObject(i,),)@i<size } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Sage-Bionetworks/workflow/blob/818d6d4c04f355aac585a0c4268798636880d5b4/tools/tcgaWorkflow/src/test/java/org/sagebionetworks/workflow/curation/TcgaWorkflowITCase.java][setUpBeforeClass][1] = -> TRY {  -> results=synapse.query("select * from dataset where dataset.name == '"+datasetName+"'",)@ -> numDatasetsFound=results.getInt("totalNumberOfResults",)@ -> IF { -> datasetId=results.getJSONArray("results",).getJSONObject(0,).getString("dataset.id",)@1==numDatasetsFound } } CATCH(Exception) {}
results[https://github.com/kenshiryu7/mdv-projects/blob/cedadeb5e7138e7db81bab2f05259dcea2670b56/APD2/Canine_Care/src/com/lpuente/canine_care/TwitterSearch.java][onPostExecute][1] = -> TRY { -> resultObject=new JSONObject(result,)@ -> tweetArray=resultObject.getJSONArray("results",)@ -> LOOP { -> tweetObject=tweetArray.getJSONObject(t,)@t<tweetArray.length() } } CATCH(Exception) { -> tweetDisplay.setText("Whoops - something went wrong!",)@ -> e.printStackTrace()@ }
results[https://github.com/ppalicaway/SingtelDining-Android/blob/ef724eaae69c37357edfe89b32045e2fa4cbc946/src/com/insidetip/singtel/screen/CuisineListingPage.java][getData][1] = } ELSE { -> TRY { -> jsonObject1=new JSONObject(result,)@!(result==null||result.equalsIgnoreCase("408",)||result.equalsIgnoreCase("404",)) -> nameArray=jsonObject1.getJSONArray("data",)@ -> LOOP { -> jsonObject2=nameArray.getJSONObject(i,)@i<nameArray.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/grudelsud/fom/blob/aaad2471ab2be61faeac171886286a8810cbce25/java/fom/src/fom/termextraction/AlchemyTermExtractor.java][extractKeywords][1] = -> TRY { -> jsonResponse=new JSONObject(jsonTokener,)@ -> jsonResults=jsonResponse.getJSONArray("keywords",)@ -> LOOP { -> results.add(jsonResults.getJSONObject(i,).getString("keyword",),)@i<jsonResults.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/analyst1001/OpenRefine-Hbase/blob/0795bd842276be8db84460d6c9d75d3b59963d79/extensions/freebase/src/com/google/refine/freebase/util/FreebaseDataExtensionJob.java][extend][1] = -> TRY {  -> o=ParsingUtilities.evaluateJsonStringToObject(result,)@ -> IF { -> a=o.getJSONArray("result",)@o.has("result",) -> l=a.length()@ -> LOOP { -> o2=a.getJSONObject(i,)@i<l } } } CATCH(Exception) {}
results[https://github.com/socialize/socialize-sdk-android/blob/6f3086f962f6e41a9f810365f76caf7fc292b2fa/test/src/com/socialize/test/integration/services/a/ActionUtilsTest.java][assertResults][1] = -> TRY {  -> json=TestUtils.getJSON(getContext(),datafile,)@ -> jsonArray=json.getJSONArray("items",)@ -> LOOP { -> ids.add(jsonArray.getJSONObject(i,).getString("id",),)@i<jsonArray.length() } } CATCH(Exception) {}
results[https://github.com/DomoTop/DomoTop/blob/a68bd34899db71c695ee09236ab912a73a60620f/Product/Controller/test/org/openremote/controller/rest/ListPanelIDsTest.java][testListPanelIdsJSON][1] = -> TRY {  -> root=(JSONObject) o@ -> Assert.assertTrue(root.has("panel",),)@ -> array=root.getJSONArray("panel",)@ -> Assert.assertTrue(array.length()==3,)@ -> LOOP { -> panel=array.getJSONObject(index,)@index<array.length() } } CATCH(Exception) {}
results[https://github.com/SINTEF-9012/oryx-neffics/blob/839376f1d957b9e74e17fdf17e82956cc6e24f88/editor/server/src/de/hpi/bpmn2_0/factory/AbstractActivityFactory.java][handleLoopBehaviorAttributes][5] = -> IF { -> TRY { -> complexDef=new JSONObject(comBehavDefString,)@ -> complexDefItems=complexDef.getJSONArray("items",)@ -> LOOP { -> complexDefItem=complexDefItems.getJSONObject(i,)@i<complexDefItems.length() } } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/herath/MAD_app/blob/d5f7f41900c7487280157c2e59077bab64705d56/app/src/org/coursework/FragmentMyContacts.java][doInBackground][1] = -> TRY { -> j=new JSONObject(jsonString,)@ -> jcontacts=j.getJSONArray("Contacts",)@ -> LOOP { -> d=new JSONObject(jcontacts.getJSONObject(i,).toString(),)@i<jcontacts.length() } } CATCH(Exception) { -> ex.getMessage()@ }
results[https://github.com/forcedotcom/SalesforceMobileSDK-Android/blob/8af4e4b4b9d0436f2a9a93ea10c3e50f5ff85323/native/SalesforceSDKTest/src/com/salesforce/androidsdk/rest/RestClientTest.java][testQuery][1] = -> TRY {  -> jsonResponse=response.asJSONObject()@ -> checkKeys(jsonResponse,"done","totalSize","records",)@ -> assertEquals("Expected one row",1,jsonResponse.getInt("totalSize",),)@ -> assertEquals("Wrong row returned",newAccountIdName.name,jsonResponse.getJSONArray("records",).getJSONObject(0,).get("Name",),)@ } CATCH(Exception) {}
results[https://github.com/MinionApp/minion/blob/a10c3c4566323c64d7d777c0d306224562895f34/MinionApp/src/uw/cse403/minion/ViewGroupActivity.java][doInBackground][1] = -> TRY { -> results=new JSONObject(res,)@ -> pendingInvite=results.getBoolean("pendingInvite",)@ -> isGM=results.getBoolean("isGM",)@ -> players=results.getJSONArray("items",)@ -> LOOP { -> c=players.getJSONObject(i,)@i<players.length() } } CATCH(Exception) { -> res=e.toString()@ }
results[https://github.com/mikofski/SifterReader/blob/3bdc76de388f7df52e0bc0be1d47ef7328ea0b67/SifterReaderJSONorg/SifterReaderJSONorg.java][main][1] = -> TRY {  -> projects=new JSONObject(x,)@ -> System.out.println(projects.toString(2,),)@ -> array=projects.getJSONArray("projects",)@ -> arrayLength=array.length()@ -> LOOP { -> p[i]=array.getJSONObject(i,)@i<arrayLength } } CATCH(Exception) {}
results[https://github.com/mollyproject/mollyandroid/blob/7636c5b70088af05f9a76b02cbcbc79c3226a309/src/org/mollyproject/android/view/apps/weblearn/signup/WebLearneventEventTask.java][updateView][1] = -> TRY { -> events=jsonContent.getJSONArray("events",)@ } ELSE { -> LOOP { -> sortedEvents.add(events.getJSONObject(i,),)@!(events.length()==0) && i<events.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/SINTEF-9012/sensapp-android/blob/5190b579110a2a4eeb1b8a64d8ca9cd5936fdb63/sensappdroid-contract/src/main/java/org/sensapp/android/sensappdroid/api/SensAppHelper.java][mergeData][1] = -> IF { -> return localData@!(webData.has("e",)) } -> TRY { -> btLoc=localData.getLong("bt",)@!(!(webData.has("e",))) -> eLoc=localData.getJSONArray("e",)@!(!(webData.has("e",))) -> LOOP { -> entry=eLoc.getJSONObject(i,)@!(!(webData.has("e",))) && i<eLoc.length() } } CATCH(Exception) { -> e.printStackTrace()@!(!(webData.has("e",))) }
results[https://github.com/herath/MAD_app/blob/1adb7fff1f3af9ffda1bfe5beb38e039c8ce61f0/app/src/org/coursework/ShopMateService.java][getLatestShopItems][1] = -> TRY { -> j=new JSONObject(ret,)@ -> jArray=j.getJSONArray("ShopItems",)@ -> LOOP { -> d=new JSONObject(jArray.getJSONObject(i,).toString(),)@i<jArray.length() } } CATCH(Exception) { -> e.printStackTrace()@ }
