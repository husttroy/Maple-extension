results[https://github.com/Teiid-Designer/teiid-designer/blob/b667294a0c726b6be94fe6b12c51eeef4204f167/plugins/org.teiid.designer.legacy/src/org/teiid/designer/metadata/runtime/impl/RecordFactory.java][getOptionalToken] = -> IF { -> return (String) tokens.get(tokenIndex,)@tokens.size()>tokenIndex }
results[https://github.com/lemmy/dnsjava/blob/4f1ef6446273172dd8e931dce52a31124ad8db5f/tags/dnsjava-1-6-2/org/xbill/DNS/ExtendedResolver.java][getResolver] = -> IF { -> return (Resolver) resolvers.get(n,)@n<resolvers.size() }
results[https://github.com/apache/synapse/blob/bc2626ace2d70d26767851b8baeb8ab9c3cb871e/scratch/asankha/synapse_ws/modules/core/src/main/java/org/apache/synapse/endpoints/FailoverEndpoint.java][setEndpoints] = -> IF { -> currentEndpoint=(Endpoint) endpoints.get(0,)@endpoints.size()>0 }
results[https://github.com/lemmy/dnsjava/blob/1416259f6c996c30a68bdfe5ebb28718ea71a410/tags/dnsjava-2.0.8/org/xbill/DNS/ExtendedResolver.java][getResolver] = -> IF { -> return (Resolver) resolvers.get(n,)@n<resolvers.size() }
results[https://github.com/wguedes01/chat/blob/919c17e63de5c5b1f6574cd38f4b9d5812fc2878/libs/asmack-android-18-source-0.8.5/org/xbill/DNS/ExtendedResolver.java][getResolver] = -> IF { -> return (Resolver) resolvers.get(n,)@n<resolvers.size() }
results[https://github.com/DevBoost/EMFText/blob/67da6c558660b8728e8cc0cec085e28f8f234943/EMFText Deprecated/org.emftext.sdk.antlr3_2_0/src-runtime/org/antlr/runtime3_2_0/tree/BufferedTreeNodeStream.java][next] = -> IF { -> return nodes.get(current,)@current<nodes.size() }
results[https://github.com/tomsontom/jface-split/blob/1666f3dac92807adec24c664f6952551d8d83b6f/org.eclipse.jface.viewers/src/org/eclipse/jface/viewers/AbstractListViewer.java][getElementAt] = -> IF { -> return listMap.get(index,)@index>=0&&index<listMap.size() }
results[https://github.com/DevBoost/EMFText/blob/67da6c558660b8728e8cc0cec085e28f8f234943/EMFText Deprecated/org.emftext.commons.antlr3_1_1/src/org/antlr/runtime/tree/CommonTreeNodeStream.java][next] = -> IF { -> return nodes.get(current,)@current<nodes.size() }
results[https://github.com/DevBoost/EMFText/blob/67da6c558660b8728e8cc0cec085e28f8f234943/EMFText Deprecated/org.emftext.sdk.antlr3_3_0/src-runtime/org/antlr/runtime3_3_0/tree/BufferedTreeNodeStream.java][next] = -> IF { -> return nodes.get(current,)@current<nodes.size() }
results[https://github.com/DevBoost/EMFText/blob/33f75295cd7a22f5c9e868ce2bc83eb71e63454e/Deprecated/org.emftext.sdk.antlr3_3_0/src-runtime/org/antlr/runtime3_3_0/tree/BufferedTreeNodeStream.java][next] = -> IF { -> return nodes.get(current,)@current<nodes.size() }
