results[https://github.com/lemmy/dnsjava/blob/4f1ef6446273172dd8e931dce52a31124ad8db5f/tags/dnsjava-1-6-2/org/xbill/DNS/ExtendedResolver.java][getResolver] = -> IF { -> return (Resolver) resolvers.get(n,)@n<resolvers.size() }
results[https://github.com/DevBoost/EMFText/blob/137ec9e906ef031554e55aaca3c0487924c85422/org.reuseware.emftextedit.antlr/src/org/antlr/stringtemplate/language/Cat.java][<init>] = -> LOOP { -> attribute=(Object) attributes.get(i,)@i<attributes.size() }
results[https://github.com/flyingsaucerproject/flyingsaucer/blob/d46d5aeadca0157ca25e3dd78b60a02f4206880c/flying-saucer-core/src/main/java/org/xhtmlrenderer/layout/Layer.java][findPageSequence] = -> LOOP { -> result=(BlockBox) sequences.get(i,)@i<sequences.size() }
results[https://github.com/lemmy/dnsjava/blob/1416259f6c996c30a68bdfe5ebb28718ea71a410/tags/dnsjava-2.0.8/org/xbill/DNS/ExtendedResolver.java][getResolver] = -> IF { -> return (Resolver) resolvers.get(n,)@n<resolvers.size() }
results[https://github.com/apache/synapse/blob/bc2626ace2d70d26767851b8baeb8ab9c3cb871e/scratch/asankha/synapse_ws/modules/core/src/main/java/org/apache/synapse/endpoints/FailoverEndpoint.java][setEndpoints] = -> IF { -> currentEndpoint=(Endpoint) endpoints.get(0,)@endpoints.size()>0 }
results[https://github.com/wguedes01/chat/blob/919c17e63de5c5b1f6574cd38f4b9d5812fc2878/libs/asmack-android-18-source-0.8.5/org/xbill/DNS/ExtendedResolver.java][getResolver] = -> IF { -> return (Resolver) resolvers.get(n,)@n<resolvers.size() }
results[https://github.com/bcdev/beam/blob/741250582a8f1b257fe7d8db3c48a2d93224a988/beam-gpf-common/src/main/java/org/esa/beam/gpf/common/mosaic/ui/MosaicExpressionsPanel.java][getBandRow] = -> LOOP { -> row=(List) newDataVector.get(i,)@i<newDataVector.size() }
results[https://github.com/DevBoost/EMFText/blob/67da6c558660b8728e8cc0cec085e28f8f234943/EMFText Deprecated/org.emftext.sdk.antlr3_2_0/src-runtime/org/antlr/runtime3_2_0/tree/BufferedTreeNodeStream.java][next] = -> IF { -> return nodes.get(current,)@current<nodes.size() }
results[https://github.com/DevBoost/EMFText/blob/9ea79d0be747ed9958d4cb0419519ef1a0ed81a8/Core/org.emftext.sdk.antlr3_4_0/src-runtime/org/antlr/runtime3_4_0/tree/BufferedTreeNodeStream.java][getNodeIndex] = -> LOOP { -> t=(Object) nodes.get(i,)@i<nodes.size() }
results[https://github.com/DevBoost/EMFText/blob/43437d26735571eb64416a6482959bfe83e91c8d/Core/Commons/org.emftext.commons.antlr3_4_0/src/org/antlr/runtime3_4_0/tree/BaseTree.java][getChild] = -> IF { -> return null@children==null||i>=children.size() } -> return (Tree) children.get(i,)@!(children==null||i>=children.size())
