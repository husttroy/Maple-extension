results[https://github.com/Mykhailenko/uml-prolog-checker/blob/7ebe2358bcba5710954d0f6d93bcbceb56360e9c/src/main/java/com/uml/contradiction/engine/model/predicate/IsComposition.java][predict] = -> as=(Association) params.get(0,)@ -> IF { -> return true@as.getEnd1().getAggregationKind()!=null&&as.getEnd1().getAggregationKind()==AggregationKind.COMPOSITE||as.getEnd2().getAggregationKind()!=null&&as.getEnd2().getAggregationKind()==AggregationKind.COMPOSITE }
results[https://github.com/niloc132/mauve-gwt/blob/1634a188b6407f869bc2705b9763a95f28e3beb1/gnu/testlet/java/net/HttpURLConnection/reuseConnection.java][processConnection] = -> request=(String) headers.get(0,)@ -> IF { -> return false@!(request.startsWith("HEAD ",)) }
results[https://github.com/teiid/teiid/blob/21c93a6fd4be2528f95224f99905d74479862d1b/federate-console/src/main/java/com/metamatrix/toolbox/ui/widget/table/DefaultTableModel.java][isColumnEditable] = -> colEditStatus=(List) colEditStatusList.get(columnIndex,)@ -> IF { -> return true@(Boolean) colEditStatus.get(COLUMN_EDITABILITY,).booleanValue()||(Set) colEditStatus.get(CELL_EXCEPTIONS,).size()>0 }
results[https://github.com/Mykhailenko/uml-contradiction/blob/5de21310b27b462105ce364813ae67d4fac524a4/main/com/uml/contradiction/engine/model/predicate/IsComposition.java][predict] = -> as=(Association) params.get(0,)@ -> IF { -> return true@as.getEnd1().getAggregationKind()!=null&&as.getEnd1().getAggregationKind()==AggregationKind.COMPOSITE||as.getEnd2().getAggregationKind()!=null&&as.getEnd2().getAggregationKind()==AggregationKind.COMPOSITE }
results[https://github.com/Teiid-Designer/teiid-designer/blob/8cd4b0931bc1b5b2c2fa08317c5714a5e11dab5e/plugins/org.teiid.designer.jdbc/src/org/teiid/designer/jdbc/metadata/impl/GetImportedForeignKeysRequest.java][isTupleValid] = -> schemaValue=(String) tuple.get(1,)@ -> IF { -> return true@schemaValue!=null&&schemaPattern.equalsIgnoreCase(schemaValue,) }
results[https://github.com/niloc132/mauve-gwt/blob/1634a188b6407f869bc2705b9763a95f28e3beb1/gnu/testlet/java/net/HttpURLConnection/reuseConnection.java][processConnection] = -> request=(String) headers.get(0,)@ -> IF { -> return false@!(request.startsWith("HEAD ",)) }
results[https://github.com/Mykhailenko/uml-prolog-checker/blob/5de21310b27b462105ce364813ae67d4fac524a4/main/com/uml/contradiction/engine/model/predicate/IsComposition.java][predict] = -> as=(Association) params.get(0,)@ -> IF { -> return true@as.getEnd1().getAggregationKind()!=null&&as.getEnd1().getAggregationKind()==AggregationKind.COMPOSITE||as.getEnd2().getAggregationKind()!=null&&as.getEnd2().getAggregationKind()==AggregationKind.COMPOSITE }
results[https://github.com/niloc132/mauve-gwt/blob/1634a188b6407f869bc2705b9763a95f28e3beb1/gnu/testlet/java/net/HttpURLConnection/reuseConnection.java][processConnection] = -> request=(String) headers.get(0,)@ -> IF { -> return false@!(request.startsWith("POST ",)) }
results[https://github.com/Teiid-Designer/teiid-designer/blob/0862b2c0d76084b983258c3b594c0de85eb228ed/org.teiid.designer.jdbc/src/com/metamatrix/modeler/jdbc/metadata/impl/GetImportedForeignKeysRequest.java][isTupleValid] = -> schemaValue=(String) tuple.get(1,)@ -> IF { -> return true@schemaValue!=null&&schemaPattern.equalsIgnoreCase(schemaValue,) }
results[https://github.com/niloc132/mauve-gwt/blob/1634a188b6407f869bc2705b9763a95f28e3beb1/gnu/testlet/java/net/HttpURLConnection/reuseConnection.java][processConnection] = -> request=(String) headers.get(0,)@ -> IF { -> return false@!(request.startsWith("GET ",)) }
