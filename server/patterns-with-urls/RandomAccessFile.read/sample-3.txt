results[https://github.com/y2k/Spectator/blob/79a5875c146cd26a756e5817f80eb007f912bddb/src/net/itwister/tools/widgets/drawable/DiskGifDecoder.java][readColorTable][1] = -> TRY { -> n=file.read(c,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/hilotec/elexis-hilotec-plugins/blob/bbb9bcb97c695f4a56db0ace03707e60a1cbc039/com.hilotec.elexis.opendocument2omnivore/src/com/hilotec/elexis/opendocument2omnivore/Exporter.java][exportDocument][1] = -> TRY { -> f=new RandomAccessFile(path,"r",)@ -> f.read(b,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/CSEMike/OneSwarm/blob/5014710bd4b1277f9911633877301cb453255490/oneswarm_gwt_ui/src/edu/washington/cs/oneswarm/ui/gwt/server/community/CommunityServerKeyPublish.java][main][2] = -> TRY {  -> fr=new RandomAccessFile("capabilities.xml","r",)@ -> fr.read(b,)@ -> scratch.write(b,)@ } CATCH(Exception) {}
results[https://github.com/UNC-Libraries/Carolina-Digital-Repository/blob/2e4be47fdd9f81f3d6b82d1ad1f813a2795eba38/sword-server/src/test/java/edu/unc/lib/dl/cdr/sword/server/util/DepositReportingUtilTest.java][retrieveDepositReceiptWithMODSTest][2] = -> TRY {  -> modsFile=new RandomAccessFile("src/test/resources/modsDocument.xml","r",)@ -> modsFile.read(modsBytes,)@ -> mimeStream.setStream(modsBytes,)@ } CATCH(Exception) {}
results[https://github.com/rolandschulz/PTP/blob/d3717153a1289a8b9400de2ead4794bb8ebb7548/tools/etfw/org.eclipse.ptp.etfw.tau/src/org/eclipse/ptp/etfw/tau/TAUPortalUploadDialog.java][uploadPPK][1] = -> TRY {  -> rfile=new RandomAccessFile(ppkFile,"r",)@ -> rfile.read(barr,)@ -> ppkString=new String(barr,"ISO-8859-1",)@ } CATCH(Exception) {}
results[https://github.com/olanto/MYCAT/blob/5dc5e6c732963894f519ce37837be54b15cf2a76/prog/coreidx/src/org/olanto/idxvli/util/BytesAndFiles.java][readBytes][1] = -> TRY { -> r.seek(pos,)@ -> r.read(byteidx,)@ } CATCH(Exception) { -> error("IO error readBytes",e,)@ }
results[https://github.com/olanto/MYCAT/blob/5dc5e6c732963894f519ce37837be54b15cf2a76/prog/coreidx/src/org/olanto/idxvli/util/BytesAndFiles.java][readString][1] = -> TRY { -> r.seek(pos,)@ -> r.read(bw,)@ -> return convertBytes2String(bw,encode,)@ } CATCH(Exception) { -> error("IO error readString",e,)@ }
results[https://github.com/UNC-Libraries/Carolina-Digital-Repository/blob/b02579208054b01d81ed8ff0a51df10a53cf2565/persistence/src/test/java/edu/unc/lib/dl/update/AtomDCToMODSFilterTest.java][replaceMODSWithDCTerms][5] = -> TRY {  -> raf=new RandomAccessFile("src/test/resources/testmods.xml","r",)@ -> raf.read(bytes,)@ -> modsStream.setStream(bytes,)@ -> raf.close()@ } CATCH(Exception) {}
results[https://github.com/olanto/MYCAT/blob/5dc5e6c732963894f519ce37837be54b15cf2a76/prog/coreidx/src/org/olanto/idxvli/util/BytesAndFiles.java][readInt][1] = -> TRY { -> r.seek(pos,)@ -> r.read(byteidx,)@ -> byteToint(b,4,byteidx,)@ } CATCH(Exception) { -> error("IO error readInt",e,)@ }
results[https://github.com/egonw/cdk-taverna-2/blob/d247a204289deec2407447ea51ec980c6f5bceae/cdk-taverna-2-activity/src/main/java/org/openscience/cdk/applications/taverna/basicutilities/CacheController.java][uncacheByteStream][1] = -> TRY {  -> raf=new RandomAccessFile(cacheFile,"r",)@ -> raf.seek(cacheObj.offset,)@ -> raf.read(data,)@ -> raf.close()@ } CATCH(Exception) {}
results[https://github.com/patrickvane/my_java_library/blob/8388867bc1e8f594b23d6e2f3321437e3c4318cf/01a. My Common Objects/lib/patrick_vane/My_Static_Classes/MyFile.java][run][1] = -> TRY { -> f=new RandomAccessFile(file,"r",)@ -> f.read(b,)@ -> progression.createrComplete(f,)@ } CATCH(Exception) { -> progression.createrException(e,)@ }
results[https://github.com/osi/mulgara/blob/8ca6f75997507c75e91f311be0c6e670dcf533c2/src/jar/rdql/java/org/mulgara/rdql/RdqlInterpreterTest.java][testParseQuery][2] = -> TRY {  -> LOOP { -> file=new RandomAccessFile(testFiles[i],"r",)@i<testFiles.length -> file.read(bytes,)@ } } CATCH(Exception) {}
results[https://github.com/fgeraci/cs352-bittorrent-project/blob/7bfce127dbd10a5f698a510a4b4eb1c50e629c3b/src/bt/Utils/Utilities.java][getBytesFromFile][1] = -> TRY { -> raf=new RandomAccessFile(file,"r",)@ -> raf.read(bytesArray,)@ -> raf.close()@ } CATCH(Exception) { -> System.out.println("Random Access File failed.",)@ }
results[https://github.com/ConatyConsulting/jaudiotagger/blob/750c25427950f474e1da0ea9507764f54871face/srctest/org/jaudiotagger/tag/vorbiscomment/VorbisWriteTagTest.java][testWriteTagToFile][15] = -> TRY { -> imageFile=new RandomAccessFile(new File("testdata","coverart.png",),"r",)@ -> imageFile.read(imagedata,)@ -> testdata=Base64Coder.encode(imagedata,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/utyman/Base-de-Datos-TP1/blob/2a163d7829fcd02f2bd7da648e8b1406eef9d1e6/TP2/sources/UBADB-Original/src/test/java/ubadb/components/diskManager/DiskManagerImplTest.java][readFromFile][4] = -> TRY {  -> fileToRead=new RandomAccessFile(new ClassPathResource(fileName,).getFile(),"r",)@ -> fileToRead.seek(offset,)@ -> fileToRead.read(bytes,)@ } CATCH(Exception) {}
results[https://github.com/ntietz/virtualdisk/blob/061bcb45ac6ccda6e3ab82c1ea5e28f2998d71fb/src/edu/kent/cs/virtualdisk/datanode/Drive.java][read][1] = -> TRY { -> in=new RandomAccessFile(f,"r",)@ -> in.seek(physicalOffset*blockSize,)@ -> in.read(block,)@ -> in.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ConatyConsulting/jaudiotagger/blob/d6da4fa00a482af92c423336a133c8d652b70e9b/srctest/org/jaudiotagger/tag/flac/FlacWriteTest.java][testWriteFileWithId3HeaderAudioShifted][6] = -> TRY { -> imageFile=new RandomAccessFile(new File("testdata","coverart.png",),"r",)@ -> imageFile.read(imagedata,)@ -> tag.setField(tag.createArtworkField(imagedata,PictureTypes.DEFAULT_ID,ImageFormats.MIME_TYPE_PNG,"test",200,200,24,0,),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/craigpetchell/Jaudiotagger/blob/72950481284dc9357875fd0bad34e49783f58aca/srctest/org/jaudiotagger/tag/wma/WmaSimpleTest.java][testWritePngArtworkToFile][1] = -> TRY { -> imageFile=new RandomAccessFile(new File("testdata","coverart.png",),"r",)@ -> imageFile.read(imagedata,)@ -> asftag.setField(asftag.createArtworkField(imagedata,),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/jaudiotagger/srctest/org/jaudiotagger/tag/mp4/M4aWriteTagTest.java][testWriteMuchLargerWhenFreeIsAfterMdat][9] = -> TRY { -> imageFile=new RandomAccessFile(new File("testdata","coverart.png",),"r",)@!(!(orig.isFile())) -> imageFile.read(imagedata,)@!(!(orig.isFile())) -> tag.addField((Mp4Tag) tag.createArtworkField(imagedata,),)@!(!(orig.isFile())) } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/craigpetchell/Jaudiotagger/blob/ea8336bd1cb81437ab32f698b23f8779aded82a6/srctest/org/jaudiotagger/tag/vorbiscomment/VorbisImageTest.java][testWriteImage2][3] = -> TRY { -> imageFile=new RandomAccessFile(new File("testdata","coverart.png",),"r",)@ -> imageFile.read(imagedata,)@ -> tag.setArtworkField(imagedata,"image/png",)@ -> testdata=Base64Coder.encode(imagedata,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mahogny/Endrov/blob/e8408b57b22a60257604bd466a964e75e9fba1c5/ev/evplugin/adAlldab/Testfile.java][main][1] = -> TRY { -> fp=new RandomAccessFile("genometest.txt","r",)@ -> LOOP { -> fp.seek(seqstart,)@ -> fp.read(b,)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/acidrain42/misc/blob/88500e747b0a44bc4efd362a397e6e67c41e502d/mp3player/src/org/acidrain/id3/ID3v1.java][lireTag][1] = -> TRY {  -> file=new RandomAccessFile(chanson,"r",)@ -> size=(int) file.length()@ -> file.seek(size-128,)@ -> file.read(last128,)@ -> id3=new String(last128,)@ -> file.close()@ } CATCH(Exception) {}
results[https://github.com/Mobicents/mediaserver/blob/341a3d219d827046e82cb49a7d705d80124a9791/resources/mediaplayer/src/main/java/org/mobicents/media/server/impl/resource/mediaplayer/mpeg/TestRead.java][main][1] = -> TRY {  -> file=new RandomAccessFile("c:\\video\\001.mp4","r",)@ -> file.seek(23360-4,)@ -> file.read(buffer,)@ -> LOOP { -> System.out.println(Integer.toHexString(buffer[i],),)@i<20 } } CATCH(Exception) {}
results[https://github.com/yukuku/androidbible/blob/b826f38dffaae116b4f764128bbb9a68ff941637/Alkitab/src/yuku/alkitab/base/storage/YesReader.java][loadVerseText][1] = -> TRY { -> IF { -> return null@pasal_1>book.nchapter } -> f.seek(seekTo,)@!(pasal_1>book.nchapter) -> f.read(ba,)@!(pasal_1>book.nchapter) } ELSE { -> xayat=verseTextDecoder.separateIntoVerses(ba,hurufKecil,)@!(pasal_1>book.nchapter) } CATCH(Exception) { -> Log.e(TAG,"muatTeks error",e,)@ }
results[https://github.com/uditrugman/openjdk8-jdk/blob/ba6e9e97c84948700e301eb25dc16e8a36b52524/test/java/util/zip/EntryCount64k.java][usesZip64][1] = -> TRY {  -> raf=new RandomAccessFile(zipFile,"r",)@ -> raf.seek(raf.length()-buf.length,)@ -> raf.read(buf,)@ -> LOOP { -> IF { -> return true@buf[i+0]=='P'&&buf[i+1]=='K'&&buf[i+2]==6&&buf[i+3]==6 && i<buf.length-4 } } } CATCH(Exception) {}
results[https://github.com/yukuku/androidbible/blob/5f14030373434a9ef692f8090590bb214cfddb92/Alkitab/src/yuku/alkitab/base/storage/YesPembaca.java][muatTeks][1] = -> TRY { -> IF { -> return null@pasal_1>book.nchapter } -> f.seek(seekTo,)@!(pasal_1>book.nchapter) -> f.read(ba,)@!(pasal_1>book.nchapter) } ELSE { -> xayat=pembacaDecoder.pisahJadiAyat(ba,hurufKecil,)@!(pasal_1>book.nchapter) } CATCH(Exception) { -> Log.e(TAG,"muatTeks error",e,)@ }
results[https://github.com/asascience/THREDDS/blob/c776d816ad599ceb460e316f7f9e1c522afde02d/grib/src/test/java/ucar/nc2/iosp/grib/TestIndexUpdating.java][switchToCompleteGrib][1] = -> TRY { -> input=new RandomAccessFile(dataFile.getPath()+".extra","r",)@ -> input.read(extra,)@ -> input.close()@ -> output.write(extra,)@ } CATCH(Exception) { -> fail("Failed to add file ["+input.getLocation()+"] to  file ["+dataFile.getPath()+"]: "+e.getMessage(),)@ }
results[https://github.com/yukuku/androidbible/blob/92768b5b520ba9a79e9bdaf99c61fa6a6353fdbd/Alkitab/src/yuku/alkitab/yes1/Yes1Reader.java][init][1] = -> TRY {  -> IF { -> f.seek(0,)@ -> f.read(buf,)@ -> IF { -> throw new RuntimeException("Header ga betul. Ketemunya: "+Arrays.toString(buf,),)@!(Arrays.equals(buf, new byte[],)) } -> text_baseOffset=f.getFilePointer()@!(!(Arrays.equals(buf, new byte[],))) } } CATCH(Exception) {}
results[https://github.com/asascience/THREDDS/blob/c776d816ad599ceb460e316f7f9e1c522afde02d/grib/src/test/java/ucar/nc2/iosp/grib/TestIndexUpdating.java][gribAppend][1] = -> TRY { -> input=new RandomAccessFile(dataFile.getPath()+suffix,"r",)@ -> input.read(extra,)@ -> input.close()@ -> output.write(extra,)@ } CATCH(Exception) { -> fail("Failed to add file ["+input.getLocation()+"] to  file ["+dataFile.getPath()+"]: "+e.getMessage(),)@ }
results[https://github.com/yukuku/androidbible/blob/c56b17fe7f4a054a98de36a7414740e05c9cface/Alkitab/src/yuku/alkitab/model/YesPembaca.java][muatTeks][1] = -> TRY { -> f.seek(seekTo,)@ -> f.read(ba,)@ -> IF { -> U.hurufkecilkanAscii(ba,)@ } } ELSE { -> return U.pisahJadiAyatAscii(ba,)@ } CATCH(Exception) { -> Log.e(TAG,"muatTeks error",e,)@ }
results[https://github.com/yukuku/androidbible/blob/92768b5b520ba9a79e9bdaf99c61fa6a6353fdbd/Alkitab/src/yuku/alkitab/yes1/Yes1Reader.java][loadVerseText][1] = -> TRY { -> IF { -> return null@pasal_1>book.chapter_count } -> f.seek(seekTo,)@!(pasal_1>book.chapter_count) -> f.read(ba,)@!(pasal_1>book.chapter_count) } ELSE { -> return new Yes1SingleChapterVerses(verseTextDecoder.separateIntoVerses(ba,hurufKecil,),)@!(pasal_1>book.chapter_count) } CATCH(Exception) { -> Log.e(TAG,"muatTeks error",e,)@ }
results[https://github.com/gurkerl83/millipede-xtreemfs/blob/c57f6e295c1b6dd8e39a55d560c61d658576ed0b/src/servers/src/org/xtreemfs/sandbox/tests/replicationStressTest/ReplicationStressTestReader.java][readFromDisk][2] = -> TRY {  -> in.seek(startOffset,)@ -> in.read(buffer,)@ -> LOOP { -> IF { -> Arrays.fill(buffer,from,to,(byte) 0,)@ } } -> IF { -> Arrays.fill(buffer,(int) filesize-startOffset,bufferSize,(byte) 0,)@endOffset>filesize } } CATCH(Exception) {}
results[https://github.com/yukuku/androidbible/blob/b826f38dffaae116b4f764128bbb9a68ff941637/Alkitab/src/yuku/alkitab/base/storage/YesReader.java][init][3] = -> TRY {  -> IF { -> f=new RandomAccessFile(nf,"r",)@f==null -> f.seek(0,)@f==null -> f.read(buf,)@f==null -> IF { -> throw new RuntimeException("Header ga betul. Ketemunya: "+Arrays.toString(buf,),)@!(Arrays.equals(buf, new byte[],)) && f==null } -> teks_dasarOffset=f.getFilePointer()@!(!(Arrays.equals(buf, new byte[],))) && f==null } } CATCH(Exception) {}
results[https://github.com/silid/project-x-cvs/blob/89a7b841949232c478a619ee550294aa5072ed6c/src/net/sourceforge/dvb/projectx/parser/StreamConverter.java][remuxPES][1] = -> LOOP { -> TRY { -> pes=new RandomAccessFile(fn,"r",)@ -> LOOP { -> pes.seek(pes_values[1],)@ -> pes.read(pes_packet,)@ -> writePacket(job_processing,pes_packet,)@ } -> pes.close()@ } CATCH(Exception) { -> Common.setExceptionMessage(e,)@ } }
results[https://github.com/open2jamorg/open2jam/blob/3fe4d65ec8caed54c9a0077800b710aa0488c3fc/base/org/open2jam/parser/OJMParser.java][parseFile][1] = -> TRY { -> f=new RandomAccessFile(file,"r",)@ -> f.read(sig,)@ -> signature=new String(sig,)@ -> IF { -> return parseM30()@signature.equals("M30\0",) } ELSE { -> f.close()@signature.equals("M30\0",) } } CATCH(Exception) { -> die(e,)@ }
results[https://github.com/yukuku/androidbible/blob/b826f38dffaae116b4f764128bbb9a68ff941637/Alkitab/src/yuku/alkitab/base/storage/YesReader.java][bacaInfoEdisi][3] = -> TRY { -> f.read(buf,)@ -> in=new BintexReader(new ByteArrayInputStream(buf,),)@ -> LOOP { -> IF { -> IF { -> throw new RuntimeException("Versi Edisi: "+versi+" tidak dikenal",)@key.equals("versi",) && versi>2 } } } } CATCH(Exception) { -> Log.e(TAG,"bacaInfoEdisi error",e,)@ }
results[https://github.com/spgroup/groundhog/blob/db53d2208332c1b2f6c2a00816866f355616c08f/src/java/main/br/ufpe/cin/groundhog/util/FileUtil.java][isTextFile][1] = -> IF { -> return false@file.isDirectory() } -> TRY { -> fis=new RandomAccessFile(file,"r",)@!(file.isDirectory()) -> fis.seek(0,)@!(file.isDirectory()) -> read=fis.read(buffer,)@!(file.isDirectory()) } CATCH(Exception) { -> e.printStackTrace()@!(file.isDirectory()) } FINALLY { -> TRY { -> fis.close()@!(file.isDirectory()) } }
results[https://github.com/crosswire/jsword/blob/b4941af12cd77920103aba9fd5aefec2bce995b3/jsword/src/limbo/org/crosswire/jsword/book/search/ser/SerIndex.java][find][4] = -> TRY { -> dataRaf.seek(section.offset,)@ -> read=dataRaf.read(blob,)@ -> IF { -> throw new IOException()@read!=blob.length } -> return PassageKeyFactory.fromBinaryRepresentation(blob,)@!(read!=blob.length) } CATCH(Exception) { -> log.warn("Search failed on:",)@ -> log.warn("  word="+word,)@ -> log.warn("  offset="+section.offset,)@ -> log.warn("  length="+section.length,)@ -> Reporter.informUser(this,ex,)@ -> return book.createEmptyKeyList()@ }
results[https://github.com/WSN-2012/BPF-Gateway-Service/blob/724161d929c927e2e9204bbb87342083f517585b/src/DirWatcher/PeriodicDirWatcher.java][onChange][1] = -> TRY { -> raf=new RandomAccessFile(file,"r",)@ -> IF { -> raf.seek(previousFileSize,)@(int) raf.length()-previousFileSize>0 -> raf.read(buf,0,(int) raf.length()-previousFileSize,)@(int) raf.length()-previousFileSize>0 } ELSE { -> raf.read(buf,)@!((int) raf.length()-previousFileSize>0) } -> IF { -> Service.send(buf,)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/topicus-ini/benchmarking-dennis/blob/2302d48d3a2357336300e5367811502579100ec5/voltdb_procedures/src/procedures/BulkLoad.java][loadData][1] = -> TRY {  -> file=new RandomAccessFile(new File(filename,),"r",)@ -> file.seek(offset,)@ -> stat=file.read(buffer,)@ -> file.close()@ -> IF { -> return -1@stat==-1||cutOff==-1 } -> rawData=new String(buffer,)@!(stat==-1||cutOff==-1) -> LOOP { -> IF { -> throw new Exception("Invalid column count "+split.length+" in line "+lineNum,)@!(stat==-1||cutOff==-1) && lines.size() > 0 } } } CATCH(Exception) {}
results[https://github.com/yukuku/androidbible/blob/c56b17fe7f4a054a98de36a7414740e05c9cface/Alkitab/src/yuku/alkitab/model/YesPembaca.java][bacaInfoKitab][1] = -> TRY { -> f.read(buf,)@ -> in=new BintexReader(new ByteArrayInputStream(buf,),)@ -> LOOP { -> LOOP { -> IF { -> IF { -> throw new RuntimeException("Versi Kitab: "+versi+" tidak dikenal",)@kitabPos<edisi.nkitab && key.equals("versi",) && versi!=1 } } } } } CATCH(Exception) { -> Log.e(TAG,"bacaInfoKitab error",e,)@ }
results[https://github.com/conceptstailored/NCSU-GBS-Pipeline/blob/d16978268678f9fa8958e60cdd43d64937a912d5/TASSEL_20121011/maizegenetics/src/net/maizegenetics/gbs/tagdist/TagsByTaxaBitFileMap.java][readDistFile][3] = -> TRY { -> theRAF=new RandomAccessFile(inFile,"rw",)@ -> tagNum=theRAF.readInt()@ -> tagLengthInLong=theRAF.readInt()@ -> taxaNum=theRAF.readInt()@ -> LOOP { -> taxaNames[t]=theRAF.readUTF()@t<taxaNum } -> dataStartPos=theRAF.getFilePointer()@ -> LOOP { -> theRAF.read(b,)@ -> bb=ByteBuffer.wrap(b,)@ } } CATCH(Exception) { -> System.out.println("Catch in reading input file: "+e,)@ -> e.printStackTrace()@ }
results[https://github.com/ThatGuyOverTher/Frost/blob/dae73d71fa634e30a86399e8a55b39999915745d/frost-wot/source/frost/fcp/FecBlock.java][getPaddedMemoryArray][1] = -> TRY { -> IF { -> Arrays.fill(data,(byte) 0,)@ } ELSE { -> f=new RandomAccessFile(this.blockFile,"r",)@ -> f.seek(this.fileOffset,)@!(this.fileOffset>filelen) -> read=f.read(data,)@ -> f.close()@ -> IF { -> Arrays.fill(data,read,blockSize,(byte) 0,)@read<blockSize } } } CATCH(Exception) { -> logger.log(Level.SEVERE,"Error in FecBlock.getPaddedMemoryArray()",ex,)@ }
results[https://github.com/bndtools/bnd/blob/e4431d098cde2fd3477c3a3e121622cebf1aec73/aQute.libg/src/aQute/libg/cafs/CAFS.java][read][1] = -> TRY {  -> IF { -> return null@offset<0 } -> store.seek(offset,)@!(offset<0) -> IF { -> throw new IllegalArgumentException("No signature",)@!(verifySignature(store,CAFE,)) && !(offset<0) } -> flags=store.readInt()@!(!(verifySignature(store,CAFE,))) && !(offset<0) -> compressedLength=store.readInt()@!(!(verifySignature(store,CAFE,))) && !(offset<0) -> uncompressedLength=store.readInt()@!(!(verifySignature(store,CAFE,))) && !(offset<0) -> store.read(readSha1,)@!(!(verifySignature(store,CAFE,))) && !(offset<0) -> rsha1=new SHA1(readSha1,)@!(!(verifySignature(store,CAFE,))) && !(offset<0) -> crc=store.readShort()@!(!(verifySignature(store,CAFE,))) && !(!(sha1.equals(rsha1,))) && !(offset<0) -> IF { -> throw new IllegalArgumentException("Invalid header checksum: "+sha1,)@!(!(verifySignature(store,CAFE,))) && !(!(sha1.equals(rsha1,))) && crc!=checksum(flags,compressedLength,uncompressedLength,readSha1,) && !(offset<0) } -> store.readFully(buffer,)@!(!(verifySignature(store,CAFE,))) && !(!(sha1.equals(rsha1,))) && !(crc!=checksum(flags,compressedLength,uncompressedLength,readSha1,)) && !(offset<0) } CATCH(Exception) {}
results[https://github.com/PatrickDeelen/molgenis-genotype-reader/blob/440e7774583fd917413b03ac1ff40c15a675b0f2/src/main/java/org/molgenis/genotype/plink/drivers/BedFileDriver.java][getSNPs][1] = -> TRY {  -> IF { -> throw new Exception("nrOfIndividuals + paddingIndividuals) % 4 must be 0",)@nrOfIndividualsInFAMfile+paddingIndividuals%4!=0 } -> raf=new RandomAccessFile(bedFile,"r",)@!(nrOfIndividualsInFAMfile+paddingIndividuals%4!=0) -> raf.seek(startByte,)@!(nrOfIndividualsInFAMfile+paddingIndividuals%4!=0) -> raf.read(res,)@!(nrOfIndividualsInFAMfile+paddingIndividuals%4!=0) -> raf.close()@!(nrOfIndividualsInFAMfile+paddingIndividuals%4!=0) -> LOOP { -> IF { -> LOOP { -> IF { -> throw new IOException("Fatal error: padding 0's not present where expected!",)@j<8 && byteString.charAt(j,)!='0' && i==res.length-1 && !(nrOfIndividualsInFAMfile+paddingIndividuals%4!=0) && i<res.length } } } } } CATCH(Exception) {}
results[https://github.com/StigLau/vdvil/blob/137edcaa194773a582a44a01f77c4e30adae6bb2/renderer.audio/src/main/java/no/bouvet/kpro/renderer/audio/MP3Source.java][index][2] = -> TRY { -> LOOP { -> IF { -> available=_raf.read(buffer,)@offset>=available } -> IF { -> return false@frequency!=44100 } } ELSE { -> IF { -> return false@!(0==_frameSize) && !(frequency!=44100) && _frameSize!=samples } } } CATCH(Exception) { -> log.debug("Exception indexing: "+e.toString(),)@ } -> IF { -> return true@_frameCount>10 } ELSE { -> return false@!(_frameCount>10) }
results[https://github.com/crissii/water-esb-new/blob/a81832454dbec42613e6c8ee1216e2018626e210/modules/transport/src/main/java/com/sunsharing/transport/file/FileChannel.java][run][1] = -> LOOP { -> TRY { -> raf=new RandomAccessFile(fs[i],"r",)@i<fs.length -> raf.seek(fs[i].length()-13,)@i<fs.length -> raf.read(endTag,)@ -> IF { -> raf.seek(0,)@ } } CATCH(Exception) { -> logger.error("读取文件报错",e,)@ } FINALLY { -> IF { -> TRY { -> raf.close()@raf!=null } } } }
results[https://github.com/crissii/water-esb-new/blob/5bd3b0433d9d39d7169035f6a3648b66d543f0e2/modules/transport/src/main/java/com/sunsharing/transport/exchage/protocol/FilePakageSave.java][lastCheck][1] = -> TRY { -> raf=new RandomAccessFile(path+getServerTempFileName()+".log","rw",)@ -> raf.seek(FileSend.beginFileSize+getCurrentPakage()-1,)@ -> raf.write(b,)@ -> raf.seek(FileSend.beginFileSize,)@ -> raf.read(b,)@ -> IF { -> raf.close()@ } } CATCH(Exception) { -> logger.error("异常",e,)@ } FINALLY { -> lock.unlock()@ -> TRY { -> raf.close()@ } }
results[https://github.com/chgenly/experiment/blob/781c161ac3edca8aa8bbf8219710d40948a85d2e/DataExtractionOSM/src/rtree/rTreeDemo.java][readSeq][1] = -> TRY { -> length=file.length()@ -> ln=new Integer(new Long(file.length(),).intValue(),)@!(length==0) -> file.seek(0,)@!(length==0) -> LOOP { -> file.read(data,)@!(length==0) -> IF { -> printFlHdr(data,)@!(length==0) } ELSE { -> printNode(i-1,data,)@i<kbytes+1 && !(length==0) && !(i==0) } } } CATCH(Exception) { -> System.out.println("RTreeRead"+e.getMessage(),)@ }
results[https://github.com/Androxyde/Flashtool/blob/58f33d33feddcf72686f5093787c8b62b26fbd9d/src/flashsystem/SinDataHeader.java][computeDataSizeAndType][1] = -> TRY {  -> fin.seek(_sinheader+getDataOffset()+a.getSrcOffset(),)@ -> fin.read(res,)@ -> System.arraycopy(res,startpos+pos,magic,0,magic.length,)@ -> IF { -> return "elf"@new String(magic,).contains("ELF",) } -> LOOP { -> TRY { -> System.arraycopy(res,startpos+pos,magic,0,magic.length,)@!(new String(magic,).contains("ELF",)) && !(HexDump.toHex(magic,).endsWith(", 53, EF]",)) } CATCH(Exception) { -> return "unknown"@!(new String(magic,).contains("ELF",)) && !(HexDump.toHex(magic,).endsWith(", 53, EF]",)) } -> IF { -> return "elf"@!(HexDump.toHex(magic,).endsWith(", 53, EF]",)) && new String(magic,).contains("ELF",) } } -> System.arraycopy(res,startpos+pos,header,0,header.length,)@!(new String(magic,).contains("ELF",)) && !(!(HexDump.toHex(magic,).endsWith(", 53, EF]",))) } CATCH(IOException) {}
results[https://github.com/yukuku/androidbible/blob/92768b5b520ba9a79e9bdaf99c61fa6a6353fdbd/Alkitab/src/yuku/alkitab/yes1/Yes1Reader.java][loadBooks][3] = -> TRY { -> f.read(buf,)@ -> in=new BintexReader(new ByteArrayInputStream(buf,),)@ -> LOOP { -> LOOP { -> IF { -> IF { -> throw new RuntimeException("Versi Kitab (lebih dari 2): "+versi+" tidak dikenal",)@key.equals("versi",) && kitabIndex<this.book_count && versi>2 } } } -> IF { -> IF { -> throw new RuntimeException("ada kitabPos yang sangat besar: "+k.bookId,)@kitabIndex<this.book_count } } } } CATCH(Exception) { -> Log.e(TAG,"bacaInfoKitab error",e,)@ }
results[https://github.com/CIIR/Proteus/blob/d22628d2d69aeb93439c654bb892b296771ab419/galago-for-proteus/core/src/main/java/org/lemurproject/galago/core/tools/App.java][run][1] = -> TRY {  -> indexReaderWriter=new RandomAccessFile(filename,"rw",)@ -> length=indexReaderWriter.length()@ -> indexReaderWriter.seek(footerOffset,)@ -> vocabularyOffset=indexReaderWriter.readLong()@ -> manifestOffset=indexReaderWriter.readLong()@ -> blockSize=indexReaderWriter.readInt()@ -> magicNumber=indexReaderWriter.readLong()@ -> indexReaderWriter.seek(manifestOffset,)@ -> indexReaderWriter.read(xmlData,)@ -> newParameters=Parameters.parse(xmlData,)@ -> indexReaderWriter.seek(manifestOffset,)@ -> xmlData=newParameters.toString().getBytes("UTF-8",)@ -> indexReaderWriter.write(xmlData,)@ -> indexReaderWriter.writeLong(vocabularyOffset,)@ -> indexReaderWriter.writeLong(manifestOffset,)@ -> indexReaderWriter.writeInt(blockSize,)@ -> indexReaderWriter.writeLong(magicNumber,)@ -> indexReaderWriter.close()@ } CATCH(Exception) {}
results[https://github.com/apache/chukwa/blob/7d2427371a8573e48f69bca394cfa2272956a36e/src/java/org/apache/hadoop/chukwa/datacollection/adaptor/FileAdaptor.java][sendFile][1] = -> IF { -> IF { -> return @toWatch.lastModified()>oneMinAgo&&now<timeOut && toWatch.exists() } ELSE { -> TRY { -> reader=new RandomAccessFile(toWatch,"r",)@toWatch.exists() && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) -> reader.read(buf,)@!(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) -> reader.close()@!(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) -> bytesUsed=extractRecords(dest,0,buf,fileTime,)@!(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) } CATCH(Exception) { -> log.warn("Exception while trying to read: "+toWatch.getAbsolutePath(),e,)@toWatch.exists() && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) } FINALLY { -> IF { -> TRY { -> reader.close()@reader!=null && !(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) } } } } }
results[https://github.com/apache/chukwa/blob/fbddd8a5d751508bbd669666aef5054784c3e7f2/src/main/java/org/apache/hadoop/chukwa/datacollection/adaptor/FileAdaptor.java][sendFile][1] = -> IF { -> IF { -> return @toWatch.lastModified()>oneMinAgo&&now<timeOut && toWatch.exists() } ELSE { -> TRY { -> reader=new RandomAccessFile(toWatch,"r",)@toWatch.exists() && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) -> reader.read(buf,)@!(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) -> reader.close()@!(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) -> bytesUsed=extractRecords(dest,0,buf,fileTime,)@!(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) } CATCH(Exception) { -> log.warn("Exception while trying to read: "+toWatch.getAbsolutePath(),e,)@toWatch.exists() && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) } FINALLY { -> IF { -> TRY { -> reader.close()@reader!=null && !(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) } FINALLY { -> log.debug(ExceptionUtil.getStackTrace(e,),)@!(toWatch.exists()) && !(toWatch.lastModified()>oneMinAgo&&now<timeOut) } } } } }
results[https://github.com/WSN-2012/Bundle-Express/blob/bf3abb849b306492642f66bb4291d286f7e466c6/src/se/kth/ssvl/tslab/wsn/service/bpf/ActionReceiver.java][bundleReceived][1] = -> TRY { -> f=new RandomAccessFile(bundle.payload().file(),"r",)@ -> f.read(buffer,)@ -> Log.i(TAG,new String(buffer,),)@ } CATCH(FileNotFoundException) { -> Log.e(TAG,"Payload should be in file: "+bundle.payload().file().getAbsolutePath()+". But did not exist!",)@ } CATCH(Exception) { -> Log.e(TAG,e.getMessage(),)@ } FINALLY { -> TRY { -> f.close()@ } FINALLY { -> Log.e(TAG,e.getMessage(),)@ } }
results[https://github.com/SakuraServer/SakuraCmd/blob/3ca2226db262dc31af1202507a2a404d01e6109c/src/main/java/com/maxmind/geoip/LookupService.java][getDatabaseInfo][13] = -> TRY { -> file.seek(file.length()-3,)@!(databaseInfo!=null) -> LOOP { -> read=file.read(delim,)@!(databaseInfo!=null) -> file.seek(file.getFilePointer()-4,)@!(databaseInfo!=null) } -> IF { -> file.seek(file.getFilePointer()-6,)@!(databaseInfo!=null) } ELSE { -> file.seek(file.length()-3,)@!(databaseInfo!=null) } -> LOOP { -> file.readFully(delim,)@!(databaseInfo!=null) -> IF { -> file.readFully(dbInfo,)@!(delim[0]==0&&delim[1]==0&&delim[2]==0) && !(databaseInfo!=null) -> return databaseInfo@delim[0]==0&&delim[1]==0&&delim[2]==0 && !(databaseInfo!=null) } -> file.seek(file.getFilePointer()-4,)@!(delim[0]==0&&delim[1]==0&&delim[2]==0) && !(databaseInfo!=null) } } CATCH(Exception) { -> e.printStackTrace()@!(databaseInfo!=null) }
results[https://github.com/Gruppe14/KIT-PSE/blob/e04af9ac2f4eee2032e905854340f1df4947a43d/app/what/sp_parser/sp_GeoIp/LookupService.java][getDatabaseInfo][1] = -> TRY { -> file.seek(file.length()-3,)@!(databaseInfo!=null) -> LOOP { -> read=file.read(delim,)@!(databaseInfo!=null) -> file.seek(file.getFilePointer()-4,)@!(databaseInfo!=null) } -> IF { -> file.seek(file.getFilePointer()-6,)@!(databaseInfo!=null) } ELSE { -> file.seek(file.length()-3,)@!(databaseInfo!=null) } -> LOOP { -> file.readFully(delim,)@!(databaseInfo!=null) -> IF { -> file.readFully(dbInfo,)@!(delim[0]==0&&delim[1]==0&&delim[2]==0) && !(databaseInfo!=null) -> return databaseInfo@delim[0]==0&&delim[1]==0&&delim[2]==0 && !(databaseInfo!=null) } -> file.seek(file.getFilePointer()-4,)@!(delim[0]==0&&delim[1]==0&&delim[2]==0) && !(databaseInfo!=null) } } CATCH(Exception) { -> Printer.perror("while getting database info.",)@!(databaseInfo!=null) }
results[https://github.com/WSN-2012/BPF/blob/88957dd60f064f893c1eb50fc18fa88915e14bd4/src/se/kth/ssvl/tslab/wsn/general/dtnapi/DTN.java][dtn_send][1] = -> IF { -> return dtn_api_status_report_code.DTN_EHANDLE_INVALID@!(is_handle_valid(handle,)) } -> TRY { -> f=new RandomAccessFile(payload,"r",)@!(!(is_handle_valid(handle,))) -> f.read(buffer,)@!(!(is_handle_valid(handle,))) -> return dtn_send_final(handle,spec,buffer,dtn_bundle_id,b,)@!(!(is_handle_valid(handle,))) } CATCH(FileNotFoundException) { -> BPF.getInstance().getBPFLogger().error(TAG,String.format("payload file %s can't be opened: %s",payload.getAbsoluteFile(),e.getMessage(),),)@!(!(is_handle_valid(handle,))) } CATCH(Exception) { -> BPF.getInstance().getBPFLogger().error(TAG,e.getMessage(),)@!(!(is_handle_valid(handle,))) } FINALLY { -> TRY { -> f.close()@!(!(is_handle_valid(handle,))) } FINALLY { -> BPF.getInstance().getBPFLogger().error(TAG,e.getMessage(),)@!(!(is_handle_valid(handle,))) } }
results[https://github.com/WSN-2012/BPF-Gateway-Service/blob/121d2e81f228a6a72c2680b0e07a66dd4f9adc1d/src/bpf/ActionReceiver.java][bundleReceived][1] = -> TRY { -> f=new RandomAccessFile(bundle.payload().file(),"r",)@ -> f.read(buffer,)@ -> logger.info(TAG,new String(buffer,),)@ } CATCH(FileNotFoundException) { -> BPF.getInstance().getBPFLogger().error(TAG,"Payload should be in file: "+bundle.payload().file().getAbsolutePath()+". But did not exist!",)@ } CATCH(Exception) { -> BPF.getInstance().getBPFLogger().error(TAG,e.getMessage(),)@ } FINALLY { -> TRY { -> f.close()@ } FINALLY { -> BPF.getInstance().getBPFLogger().error(TAG,e.getMessage(),)@ } }
results[https://github.com/crissii/water-esb-new/blob/300201139e5b58e682455f55cc92c4721e835e06/modules/messagecenter/src/main/java/com/sunsharing/msgcenter/db/DBUtils.java][readMsg][1] = -> TRY { -> raf1=new RandomAccessFile(new File(path,),"r",)@ -> raf1.seek(index,)@ -> raf1.read(content,)@ } CATCH(Exception) { -> logger.error("写消息文件出错",e,)@ } FINALLY { -> TRY { -> raf1.close()@ } } -> beginHead=StringUtils.getString(content,7,0,)@ -> IF { -> return null@!(beginHead.equals("[start]",)) } -> msg.setClientId(StringUtils.getString(content,32,7,),)@!(!(beginHead.equals("[start]",))) -> msg.setMsgId(StringUtils.getLong(content,44,),)@!(!(beginHead.equals("[start]",))) -> msg.setExpires(StringUtils.getInt(content,52,),)@!(!(beginHead.equals("[start]",))) -> msg.setTopic(StringUtils.getString(content,10,56,),)@!(!(beginHead.equals("[start]",))) -> msg.setAppId(StringUtils.getString(content,10,66,),)@!(!(beginHead.equals("[start]",))) -> msg.setConsumer(StringUtils.getString(content,100,76,),)@!(!(beginHead.equals("[start]",))) -> msg.setSend(StringUtils.getString(content,100,176,),)@!(!(beginHead.equals("[start]",))) -> msg.setContent(StringUtils.getString(content,content.length-8-276,276,),)@!(!(beginHead.equals("[start]",))) -> crc=StringUtils.getLong(content,content.length-8,)@!(!(beginHead.equals("[start]",))) -> c.update(content,0,content.length-8,)@!(!(beginHead.equals("[start]",))) -> IF { -> return null@!(!(beginHead.equals("[start]",))) && crc!=c.getValue() }
results[https://github.com/camptocamp/secureOWS/blob/36abae7e77d3c056352799f286899453ecac360b/owsproxyserver/src/org/deegree/tools/security/DRMAccess.java][main][1] = -> TRY { } ELSE { } ELSE { } ELSE { } ELSE { } ELSE { } ELSE { } ELSE { } ELSE { } ELSE { } ELSE { -> IF { -> LOOP { -> IF { -> raf=new RandomAccessFile(filter[i],"r",)@i<filter.length && filter[i]!=null&&!(filter[i].trim().equals("-",))&&!(filter[i].trim().equals(".",)) -> l=raf.length()@ -> raf.read(b,)@ -> raf.close()@ -> filter[i]=new String(b,)@i<filter.length && filter[i]!=null&&!(filter[i].trim().equals("-",))&&!(filter[i].trim().equals(".",)) } } } } CATCH(FileNotFoundException) { -> e.printStackTrace()@ } CATCH(IOException) { -> e.printStackTrace()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/asascience/THREDDS/blob/8bbe2923e04b15786bc8cbb8061fd71b255cab26/cdm/src/main/java/ucar/atd/dorade/DoradeDescriptor.java][sweepfileIsLittleEndian][2] = -> TRY {  -> TRY { -> file.seek(0,)@ -> file.read(bytes,)@ -> descLen=file.readInt()@ -> file.seek(0,)@ } CATCH(Exception) { -> throw new DescriptorException(ex,)@ } } CATCH(DescriptorException) {}
results[https://github.com/Unidata/thredds/blob/03e9f77586bdf3ef62d77e695fb630f23ab18dd8/cdm/src/main/java/ucar/atd/dorade/DoradeDescriptor.java][skipDescriptor][2] = -> TRY {  -> TRY { -> file.read( new byte[],)@ -> file.read(lenBytes,)@ -> descLen=grabInt(lenBytes,0,littleEndianData,)@ -> file.read( new byte[],)@ } CATCH(Exception) { -> throw new DescriptorException(ex,)@ } } CATCH(DescriptorException,java.io.IOException) {}
results[https://github.com/craigpetchell/Jaudiotagger/blob/407fb2db363d56071d516d95745d11c972cbaccd/srctest/org/jaudiotagger/tag/mp4/M4aWriteTagTest.java][testWriteFileWhichDoesntHaveAMetadataAtom][3] = -> TRY { -> imageFile=new RandomAccessFile(new File("testdata","coverart.png",),"r",)@ -> imageFile.read(imagedata,)@ -> tag.addField((Mp4Tag) tag.createArtworkField(imagedata,),)@ -> imageFile=new RandomAccessFile(new File("testdata","coverart_small.png",),"r",)@ -> imageFile.read(imagedata,)@ -> tag.addField((Mp4Tag) tag.createArtworkField(imagedata,),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/visad/visad/blob/0a1706b8ac424e57458a5b915e562c39be31c4bc/deps/src/ucar/trunk/netcdf/RandomAccessFile.java][testBlocks][4] = -> TRY { -> inFile=new RandomAccessFile(filename,RandomAccessFile.READ,bufferSize,)@ -> LOOP { -> inFile.seek(index,)@ -> inFile.read(block,)@ } -> LOOP { -> inFile.seek(index,)@ -> inFile.read(block,)@ } -> inFile.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/jaudiotagger/srctest/org/jaudiotagger/tag/id3/NewInterfaceTest.java][testNewInterfaceBasicReadandWriteID3v24][9] = -> TRY {  -> imageFile=new RandomAccessFile(new File("testdata","coverart.png",),"r",)@ -> imageFile.read(imagedata,)@ -> af.getTag().addField(tag.createArtworkField(imagedata,"image/png",),)@ -> imageFile=new RandomAccessFile(new File("testdata","coverart_small.png",),"r",)@ -> imageFile.read(imagedata,)@ -> af.getTag().addField(tag.createArtworkField(imagedata,"image/png",),)@ } CATCH(Exception) {}
results[https://github.com/MDSplus/MDSplus/blob/e4901ef37d8454c04a1fb2e80fefeaaed086e635/mdsplus/javatraverser/StoreFile.java][main][2] = -> TRY { -> raf=new RandomAccessFile(fileName,"r",)@ -> raf.read(serialized,)@ -> raf.close()@ } CATCH(Exception) { -> System.err.println("Cannot read file "+fileName+": "+exc,)@ -> System.exit(0,)@ } -> TRY { -> tree.putData(nid,new ByteArray(serialized,),0,)@ } CATCH(Exception) { -> System.err.println("Error writing data in"+nodeName+": "+exc,)@ -> System.exit(0,)@ }
results[https://github.com/utyman/Base-de-Datos-TP1/blob/a2b0936ae9ab77daed619e441037d1ba006e42cb/TP2/sources/UBADB/src/main/java/ubadb/components/diskManager/DiskManagerImpl.java][readPage][3] = -> TRY {  -> TRY { -> file=getFile(pageId.getTableId(),)@ -> checkPageIsExisting(offset,file.length(),)@ -> file.seek(offset,)@ -> file.read(pageContents,)@ -> file.close()@ -> return new Page(pageId,pageContents,)@ } CATCH(Exception) { -> throw new DiskManagerException("Cannot read page from disk",e,)@ } } CATCH(DiskManagerException) {}
results[https://github.com/crosswire/jsword/blob/ba9a8392be19acdc6da1277881dbeb87715847ec/jsword/java/jsword/org/crosswire/jsword/book/search/ser/SerSearcher.java][findWord][2] = -> TRY {  -> TRY { -> ref_dat.seek(section.offset,)@ -> ref_dat.read(blob,)@ -> return PassageUtil.fromBinaryRepresentation(blob,)@ } CATCH(Exception) { -> log.warn("Search failed on:",)@ -> log.warn("  word="+word,)@ -> log.warn("  ref_ptr="+section.offset,)@ -> log.warn("  ref_length="+section.length,)@ -> Reporter.informUser(this,ex,)@ -> return PassageFactory.createPassage()@ } } CATCH(BookException) {}
results[https://github.com/chgenly/experiment/blob/781c161ac3edca8aa8bbf8219710d40948a85d2e/DataExtractionOSM/src/rtree/Node.java][refreshNode][1] = -> TRY {  -> TRY { -> file.read(data,)@ -> ds=new DataInputStream(new ByteArrayInputStream(data,),)@ -> IF { -> return @totalElements<=0 } -> IF { -> return @totalElements<1 && !(totalElements<=0) } } CATCH(Exception) { -> throw new IOException("Node.refreshNode : Can't read from node header "+e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/openplanets/plato/blob/ffb58f0645c4ab587928f6885814a56aa71e30db/minimee/src/main/java/at/tuwien/minimee/util/TopParser.java][findPid][1] = -> TRY {  -> f=new RandomAccessFile(file,"r",)@ -> TRY { -> size=f.length()@ -> f.seek(size-2,)@ -> LOOP { -> f.seek(i,)@i>=0 -> f.read(b,)@ } -> line=f.readLine().trim()@ } FINALLY { -> f.close()@ } } CATCH(Exception) {}
results[https://github.com/jrecursive/mecha/blob/4babb2dc24116a6ba2b8ba4c0d7af59b37966796/src/mecha/db/Slab.java][get][2] = -> TRY {  -> TRY { -> IF { -> throw new Exception("Read past end of file: "+key+" > "+raf.length(),)@key>raf.length() } -> raf.seek(key,)@!(key>raf.length()) -> raf.read(bytes,)@!(key>raf.length()) -> IF { -> throw new Exception("Corrupted Index: "+this.filename+"!",)@rLen!=raf.read(cRec,) && !(key>raf.length()) } } CATCH(IOException) { -> ex.printStackTrace()@ -> throw new Exception(ex,)@ } } CATCH(Exception) {}
results[https://github.com/NCIP/cadsr-cgmdr/blob/2d7c7a614a2a2589b64061f0cea812a14f40c1ac/src/org/exist/storage/btree/Paged.java][read][2] = -> TRY {  -> TRY { -> IF { -> raf.seek(offset,)@raf.getFilePointer()!=offset } -> Arrays.fill(tempHeaderData,(byte) 0,)@ -> raf.read(tempHeaderData,)@ -> header.read(tempHeaderData,0,)@ -> raf.read(workData,)@ } CATCH(Exception) { -> LOG.warn("error while reading page: "+getPageInfo(),e,)@ -> throw new IOException(e.getMessage(),)@ } } CATCH(IOException) {}
results[https://github.com/chgenly/experiment/blob/781c161ac3edca8aa8bbf8219710d40948a85d2e/DataExtractionOSM/src/rtree/Node.java][readElement][1] = -> TRY {  -> IF { -> throw new NodeReadException("Node.readElement: Index value not correct",)@index<0||index>MAX-1||totalElements>index+1 } -> TRY { -> file.read(data,)@!(index<0||index>MAX-1||totalElements>index+1) -> ds=new DataInputStream(new ByteArrayInputStream(data,),)@!(index<0||index>MAX-1||totalElements>index+1) -> IF { -> throw new NodeReadException("Can't read buffer: Header or index wrong",)@ds.skipBytes(skipValue,)!=skipValue && !(index<0||index>MAX-1||totalElements>index+1) } } CATCH(Exception) { -> throw new NodeReadException("Node.readElement: "+e.getMessage(),)@!(index<0||index>MAX-1||totalElements>index+1) } } CATCH(NodeReadException) {}
results[https://github.com/bndtools/bnd/blob/be43f16a6fed3fd7ef78fa646dd5653ecb711e07/biz.aQute.jpm/src/aQute/jpm/main/Main.java][_log][1] = -> TRY {  -> IF { -> return @service==null && !(s==null) } -> raf=new RandomAccessFile(logFile,"r",)@!(service==null) && !(s==null) && !(!(logFile.isFile())) -> TRY { -> LOOP { -> l=raf.length()@!(service==null) && !(s==null) && !(!(logFile.isFile())) -> raf.seek(start,)@!(service==null) && !(s==null) && !(!(logFile.isFile())) -> raf.read(buffer,)@!(service==null) && !(s==null) && !(!(logFile.isFile())) -> out.write(buffer,)@!(service==null) && !(s==null) && !(!(logFile.isFile())) -> IF { -> return @!(service==null) && !(service.isRunning())||!(opts.tail()) && !(s==null) && !(!(logFile.isFile())) } } } FINALLY { -> raf.close()@!(service==null) && !(s==null) && !(!(logFile.isFile())) } } CATCH(Exception) {}
results[https://github.com/Wilby89/OCMJD/blob/85ec792ede36524e4bfef9e2c5bb4628084753ea/src/suncertify/db/DataDBAccess.java][read][1] = -> TRY {  -> TRY { -> fileObject.seek(offset+recNo*maxRecord,)@ -> tempRecordLength=fileObject.read(record,)@ -> IF { -> throw new RecordNotFoundException("Record not found or record size does not match",)@tempRecordLength!=maxRecord } -> IF { -> throw new RecordNotFoundException("The record "+recNo+" has been deleted",)@record[0]==DELETED && !(tempRecordLength!=maxRecord) } -> return parseRecord(new String(record,ENCODING,),)@!(record[0]==DELETED) && !(tempRecordLength!=maxRecord) } CATCH(Exception) { -> throw new RecordNotFoundException("The record: "+recNo+" was not found, "+e.getMessage(),)@ } } CATCH(RecordNotFoundException) {}
results[https://github.com/apache/directory-server/blob/ce2bf5c95833be46fcc94309470fd593b4fbf9b9/ldif-partition/src/test/java/org/apache/directory/server/core/partition/SingleFileLdifPartitionTest.java][testModifyEntry][1] = -> TRY {  -> file=new RandomAccessFile(new File(partition.getPartitionPath(),),"r",)@ -> assertEquals(getEntryLdifLen(modOpCtx.getAlteredEntry(),),file.length(),)@ -> assertEquals(getEntryLdifLen(modOpCtx.getAlteredEntry(),),file.length(),)@ -> file.seek(ctxEntryLen,)@ -> file.read(entry1Data,)@ -> ldif=Strings.utf8ToString(entry1Data,)@ -> file.seek(ctxEntryLen,)@ -> file.read(entry1Data,)@ -> ldif=Strings.utf8ToString(entry1Data,)@ } CATCH(Exception) {}
results[https://github.com/Androxyde/Flashtool/blob/58f33d33feddcf72686f5093787c8b62b26fbd9d/src/flashsystem/SinFile.java][dumpImageV1_2][1] = -> TRY {  -> TRY { -> findata=new RandomAccessFile(sinfile,"r",)@ -> findata.seek(sinheader.getHeaderSize(),)@ -> LOOP { -> findata.read(data,)@ -> b.validate(data,)@ -> fout.write(data,)@ } -> findata.close()@ } CATCH(Exception) { -> MyLogger.getLogger().error("Error while extracting data : "+e.getMessage(),)@ -> MyLogger.initProgress(0,)@ -> e.printStackTrace()@ } } CATCH(IOException) {}
results[https://github.com/apache/directory-server/blob/583450158757c30266fbb8a5ad6291880f9bf525/ldif-partition/src/test/java/org/apache/directory/server/core/partition/ldif/SingleFileLdifPartitionTest.java][testModifyEntry][1] = -> TRY {  -> file=new RandomAccessFile(new File(partition.getPartitionPath(),),"r",)@ -> assertEquals(getEntryLdifLen(modOpCtx.getAlteredEntry(),),file.length(),)@ -> assertEquals(getEntryLdifLen(modOpCtx.getAlteredEntry(),),file.length(),)@ -> file.seek(ctxEntryLen,)@ -> file.read(entry1Data,)@ -> ldif=Strings.utf8ToString(entry1Data,)@ -> file.seek(ctxEntryLen,)@ -> file.read(entry1Data,)@ -> ldif=Strings.utf8ToString(entry1Data,)@ -> file.close()@ } CATCH(Exception) {}
results[https://github.com/andyburke/bitflood/blob/5239d7c86da1c742ebc7754f68f650c7e1087429/clients/java/src/HTTPConnection.java][Stream][1] = -> IF { -> IF { -> CATCH(Exception) { -> return false@floodingFileHandle!=null } } -> IF { -> TRY { -> return false@chunkIndex>=runtimeTargetFile.chunkMap.length && floodingFileHandle!=null } CATCH(Exception) { -> e.printStackTrace()@!(chunkIndex>=runtimeTargetFile.chunkMap.length) && !(floodingFileHandle!=null) -> return false@chunkIndex>=runtimeTargetFile.chunkMap.length && floodingFileHandle!=null } } -> IF { -> TRY { -> floodingFileHandle.seek(runtimeTargetFile.chunkOffsets[chunkIndex],)@!(chunkIndex>=runtimeTargetFile.chunkMap.length) && floodingFileHandle!=null && runtimeTargetFile.chunkMap[chunkIndex]=='1' -> floodingFileHandle.read(chunkData,)@!(chunkIndex>=runtimeTargetFile.chunkMap.length) && floodingFileHandle!=null && !(runtimeTargetFile.chunkMap[chunkIndex]=='1') -> writeBuffer.put(chunkData,)@!(chunkIndex>=runtimeTargetFile.chunkMap.length) && !(floodingFileHandle!=null) && !(runtimeTargetFile.chunkMap[chunkIndex]=='1') -> return true@!(chunkIndex>=runtimeTargetFile.chunkMap.length) && floodingFileHandle!=null && runtimeTargetFile.chunkMap[chunkIndex]=='1' } CATCH(Exception) { -> e.printStackTrace()@!(chunkIndex>=runtimeTargetFile.chunkMap.length) && !(floodingFileHandle!=null) && !(runtimeTargetFile.chunkMap[chunkIndex]=='1') -> return false@!(chunkIndex>=runtimeTargetFile.chunkMap.length) && floodingFileHandle!=null && runtimeTargetFile.chunkMap[chunkIndex]=='1' } } }
results[https://github.com/chgenly/experiment/blob/781c161ac3edca8aa8bbf8219710d40948a85d2e/DataExtractionOSM/src/rtree/FileHdr.java][<init>][1] = -> TRY {  -> TRY { -> this.file=new RandomAccessFile(fileName,"rw",)@ -> IF { -> file.seek(0,)@file.length()<=Node.INTEGER_SIZE -> file.writeInt(0,)@file.length()<=Node.INTEGER_SIZE -> file.writeLong(Node.NOT_DEFINED,)@file.length()<=Node.INTEGER_SIZE -> file.writeInt(Node.NOT_DEFINED,)@file.length()<=Node.INTEGER_SIZE } ELSE { -> file.seek(0,)@!(file.length()<=Node.INTEGER_SIZE) -> file.read(data,)@!(file.length()<=Node.INTEGER_SIZE) -> ds=new DataInputStream(new ByteArrayInputStream(data,),)@ } } CATCH(Exception) { -> throw new RTreeException("FileHdr.FileHdr: "+e.getMessage(),)@ } } CATCH(RTreeException) {}
results[https://github.com/CSEMike/OneSwarm/blob/c391e61ab70b210d10dc44ba7c172aeb96fd9d13/oneswarm_az_mods/mods_onehop/edu/uw/cse/netlab/testharness/ReceiveOrders.java][run][1] = -> TRY { -> IF { } ELSE { } ELSE { -> IF { -> TRY { -> f=new RandomAccessFile(out,"r",)@ -> f.seek(f.length()-buff.length,)@ -> f.read(buff,)@ -> oos.writeObject(new String(buff,),)@ } CATCH(Exception) { -> System.err.println("reading logs: "+e,)@ -> e.printStackTrace()@ } } } -> System.out.println("error after accept "+e,)@ -> e.printStackTrace()@ }
results[https://github.com/chgenly/experiment/blob/781c161ac3edca8aa8bbf8219710d40948a85d2e/DataExtractionOSM/src/rtree/FileHdr.java][update][1] = -> TRY {  -> TRY { -> file.close()@ -> this.file=new RandomAccessFile(fileName,"rw",)@ -> IF { -> file.seek(0,)@file.length()<=Node.INTEGER_SIZE -> file.writeInt(0,)@file.length()<=Node.INTEGER_SIZE -> file.writeLong(Node.NOT_DEFINED,)@file.length()<=Node.INTEGER_SIZE -> file.writeInt(Node.NOT_DEFINED,)@file.length()<=Node.INTEGER_SIZE } ELSE { -> file.seek(0,)@!(file.length()<=Node.INTEGER_SIZE) -> file.read(data,)@!(file.length()<=Node.INTEGER_SIZE) -> ds=new DataInputStream(new ByteArrayInputStream(data,),)@ } } CATCH(Exception) { -> e.printStackTrace()@ -> throw new RTreeException("FileHdr.FileHdr: "+e.getMessage(),)@ } } CATCH(RTreeException) {}
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/java/io/RandomAccessFile/WriteBytesChars.java][main][3] = -> TRY {  -> raf=new RandomAccessFile(fn,"rw",)@ -> TRY { -> raf.writeBytes(towrite,)@ -> raf.seek(0,)@ -> raf.read(b,)@ } ELSE { -> throw new RuntimeException("RandomAccessFile.writeBytes, wrong result",)@!(towrite.equals(new String(b,),)) -> raf.seek(0,)@towrite.equals(new String(b,),) -> raf.writeChars(towrite,)@towrite.equals(new String(b,),) -> raf.seek(0,)@towrite.equals(new String(b,),) -> LOOP { -> buf[i]=raf.readChar()@i<80 && towrite.equals(new String(b,),) } } ELSE { -> throw new RuntimeException("RandomAccessFile.writeChars, wrong result",)@!(towrite.equals(new String(buf,),)) && towrite.equals(new String(b,),) } FINALLY { -> raf.close()@towrite.equals(new String(b,),) -> fn.delete()@towrite.equals(new String(b,),) } } CATCH(Exception) {}
results[https://github.com/gurkerl83/millipede-xtreemfs/blob/e848cab95ca6d8821dfe79364e2581b1c670bddd/servers/src/org/xtreemfs/sandbox/tests/ReplicationStressTest.java][writeFile][1] = -> TRY {  -> TRY { -> in=new java.io.RandomAccessFile(tmpDir+tmpFilename,"rw",)@ -> assert filesize<=in.length()@ -> IF { -> in.read(data,)@ -> raf.write(data,0,data.length,)@ } ELSE { -> LOOP { -> in.read(data,)@ -> raf.write(data,0,data.length,)@ } -> IF { -> in.read(data,)@ -> raf.write(data,0,data.length,)@ } } } FINALLY { -> IF { -> in.close()@in!=null } } } CATCH(Exception) {}
results[https://github.com/zlegein/storitz/blob/dbbec4ce918d030d82c737bcb1cef0927badf07d/src/java/com/maxmind/geoip/LookupService.java][getDatabaseInfo][2] = -> TRY { -> file.seek(file.length()-3,)@!(databaseInfo!=null) -> LOOP { -> file.read(delim,)@!(databaseInfo!=null) } -> IF { -> file.seek(file.getFilePointer()-3,)@!(databaseInfo!=null) } ELSE { -> file.seek(file.length()-3,)@!(databaseInfo!=null) } -> LOOP { -> file.read(delim,)@!(databaseInfo!=null) -> IF { -> file.read(dbInfo,)@!(delim[0]==0&&delim[1]==0&&delim[2]==0) && !(databaseInfo!=null) -> this.databaseInfo=new DatabaseInfo(new String(dbInfo,),)@!(delim[0]==0&&delim[1]==0&&delim[2]==0) && !(databaseInfo!=null) -> return databaseInfo@delim[0]==0&&delim[1]==0&&delim[2]==0 && !(databaseInfo!=null) } -> file.seek(file.getFilePointer()-4,)@!(delim[0]==0&&delim[1]==0&&delim[2]==0) && !(databaseInfo!=null) } } CATCH(Exception) { -> e.printStackTrace()@!(databaseInfo!=null) }
results[https://github.com/Wilby89/OCMJD/blob/85ec792ede36524e4bfef9e2c5bb4628084753ea/src/suncertify/db/DataDBAccess.java][delete][1] = -> TRY {  -> IF { -> throw new DatabaseException("Record is not locked: "+recNo,)@ownerCookieValue==null && !(recNo<0) } -> IF { -> TRY { -> fileObject.seek(offset+recNo*maxRecord,)@ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) -> tempRecordLength=fileObject.read(record,)@ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) -> IF { -> throw new RecordNotFoundException("Record not found or record size does not match",)@!(recNo<0) && ownerCookieValue.equals(lockCookie,) && tempRecordLength!=maxRecord && !(ownerCookieValue==null) } -> IF { -> throw new RecordNotFoundException("The record "+recNo+" has already been deleted",)@!(recNo<0) && ownerCookieValue.equals(lockCookie,) && record[0]==DELETED && !(ownerCookieValue==null) && !(tempRecordLength!=maxRecord) } -> fileObject.seek(offset+recNo*maxRecord,)@!(record[0]==DELETED) && ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) && !(tempRecordLength!=maxRecord) -> fileObject.writeByte(DELETED,)@!(record[0]==DELETED) && ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) && !(tempRecordLength!=maxRecord) } CATCH(Exception) { -> throw new RecordNotFoundException("The record: "+recNo+" was not found, "+e.getMessage(),)@!(recNo<0) && ownerCookieValue.equals(lockCookie,) && !(ownerCookieValue==null) } } ELSE { -> throw new DatabaseException("Record already locked by another"+" client: "+recNo,)@!(recNo<0) && !(ownerCookieValue==null) && !(ownerCookieValue.equals(lockCookie,)) } } CATCH(RecordNotFoundException,DatabaseException) {}
results[https://github.com/georgeparisis/dhtbd/blob/a188954ca82546b9d2ab5f16ff51d436fb65b300/original/blast_pastry/src/blast/storage/ExternalFileStorage.java][doWork][1] = -> TRY {  -> IF { -> TRY { -> storage.seek(val.fileOffset.longValue(),)@ -> storage.read(payload,)@ -> return new StoredObject(val.version,payload,)@ } CATCH(IOException) { -> ex.printStackTrace()@ } } } CATCH(Exception) {}
results[https://github.com/zqsd/jmc2obj/blob/1036da9f53ce66915ef331932d5019e97cb8d205/src/org/jmc/AnvilRegion.java][getChunk][1] = -> TRY {  -> IF { -> return null@sec<2 } -> raf=new RandomAccessFile(region_file,"r",)@!(sec<2) -> raf.seek(sec*4096,)@!(sec<2) -> len=raf.readInt()@!(sec<2) -> compression_type=raf.readByte()@!(sec<2) -> IF { -> raf.read(buf,)@!(sec<2) && compression_type==1 -> raf.close()@!(sec<2) && compression_type==1 -> is=new GZIPInputStream(new ByteArrayInputStream(buf,),)@!(sec<2) && compression_type==1 -> return new Chunk(is,)@!(sec<2) && compression_type==1 } ELSE { -> IF { -> raf.read(buf,)@!(sec<2) && compression_type==1 && compression_type==2 -> raf.close()@!(sec<2) && compression_type==1 && compression_type==2 -> is=new InflaterInputStream(new ByteArrayInputStream(buf,),)@!(sec<2) && compression_type==1 && compression_type==2 -> return new Chunk(is,)@!(sec<2) && !(compression_type==1) && compression_type==2 } ELSE { -> throw new Exception("Wrong compression type!",)@!(sec<2) && !(compression_type==2) && !(compression_type==1) } } } CATCH(Exception) {}
results[https://github.com/BenjaminSchiller/GTNA/blob/b7e4968f7c625212aff09072269cfcb7bb2f43d0/src/gtna/io/networks/WOTReader.java][read][1] = -> TRY {  -> file=new RandomAccessFile(new File(filename,),"r",)@ -> LOOP { -> file.read(key,)@ -> node.key=Util.toInt(key,)@ } -> signaturesLine=file.readLine()@ -> IF { -> throw new IllegalArgumentException("A line starting with \"signatures/\" was expected.",)@!(signaturesLine.startsWith("signatures/",)) } -> LOOP { -> file.read(buffer,)@!(!(signaturesLine.startsWith("signatures/",))) && !(index<wotNodes.size()) -> signatureCount=Util.toInt(buffer,)@!(!(signaturesLine.startsWith("signatures/",))) && !(index<wotNodes.size()) -> LOOP { -> file.read(signatureBuffer,)@!(signatureIndex<signatureCount) && !(!(signaturesLine.startsWith("signatures/",))) && !(index<wotNodes.size()) -> signature=Util.toInt(signatureBuffer,)@!(signatureIndex<signatureCount) && !(!(signaturesLine.startsWith("signatures/",))) && !(index<wotNodes.size()) -> IF { -> throw new IllegalArgumentException("A target index that matches a node was expected.",)@signatureIndex<signatureCount && !(!(signaturesLine.startsWith("signatures/",))) && targetIndex>=wotNodes.size() && index<wotNodes.size() } } } -> debugLine=file.readLine()@!(!(signaturesLine.startsWith("signatures/",))) && !(index<wotNodes.size()) -> IF { -> throw new IllegalArgumentException("A line starting with \"debug/was expected.",)@!(!(signaturesLine.startsWith("signatures/",))) && !(index<wotNodes.size()) && !(debugLine.startsWith("debug/",)) } -> file.close()@!(!(signaturesLine.startsWith("signatures/",))) && !(index<wotNodes.size()) && !(!(debugLine.startsWith("debug/",))) } CATCH(Exception) {}
results[https://github.com/Wilby89/OCMJD/blob/85ec792ede36524e4bfef9e2c5bb4628084753ea/src/suncertify/db/DataDBAccess.java][update][1] = -> TRY {  -> IF { -> throw new DatabaseException("Record is not locked: "+recNo,)@ownerCookieValue==null && !(recNo<0) } -> IF { -> TRY { -> fileObject.seek(offset+recNo*maxRecord,)@ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) -> tempRecordLength=fileObject.read(record,)@ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) -> IF { -> throw new RecordNotFoundException("Record not found or record size does not match",)@!(recNo<0) && ownerCookieValue.equals(lockCookie,) && tempRecordLength!=maxRecord && !(ownerCookieValue==null) } -> IF { -> throw new RecordNotFoundException("The record "+recNo+" has been deleted",)@!(recNo<0) && ownerCookieValue.equals(lockCookie,) && record[0]==DELETED && !(ownerCookieValue==null) && !(tempRecordLength!=maxRecord) } -> fileObject.seek(offset+recNo*maxRecord,)@!(record[0]==DELETED) && ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) && !(tempRecordLength!=maxRecord) -> fileObject.writeByte(VALID,)@!(record[0]==DELETED) && ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) && !(tempRecordLength!=maxRecord) -> fileObject.write(getDataAsByteArray(data,),)@!(record[0]==DELETED) && ownerCookieValue.equals(lockCookie,) && !(recNo<0) && !(ownerCookieValue==null) && !(tempRecordLength!=maxRecord) } CATCH(Exception) { -> throw new RecordNotFoundException("The record: "+recNo+" was not found, "+e.getMessage(),)@!(recNo<0) && ownerCookieValue.equals(lockCookie,) && !(ownerCookieValue==null) } } ELSE { -> throw new DatabaseException("Record already locked by another"+" client: "+recNo,)@!(recNo<0) && !(ownerCookieValue==null) && !(ownerCookieValue.equals(lockCookie,)) } } CATCH(RecordNotFoundException,DatabaseException) {}
results[https://github.com/zqsd/jmc2obj/blob/9d2ae32f8d0ca1b3da7736ea7d39f330fd01bfe7/src/org/jmc/Region.java][getChunk][1] = -> TRY {  -> IF { -> return null@sec<2 } -> raf=new RandomAccessFile(region_file,"r",)@!(sec<2) -> raf.seek(sec*4096,)@!(sec<2) -> len=raf.readInt()@!(sec<2) -> compression_type=raf.readByte()@!(sec<2) -> IF { -> raf.read(buf,)@!(sec<2) && compression_type==1 -> raf.close()@!(sec<2) && compression_type==1 -> is=new GZIPInputStream(new ByteArrayInputStream(buf,),)@!(sec<2) && compression_type==1 -> return new Chunk(is,is_anvil,)@!(sec<2) && compression_type==1 } ELSE { -> IF { -> raf.read(buf,)@!(sec<2) && compression_type==1 && compression_type==2 -> raf.close()@!(sec<2) && compression_type==1 && compression_type==2 -> is=new InflaterInputStream(new ByteArrayInputStream(buf,),)@!(sec<2) && compression_type==1 && compression_type==2 -> return new Chunk(is,is_anvil,)@!(sec<2) && !(compression_type==1) && compression_type==2 } ELSE { -> raf.close()@!(sec<2) && compression_type==1 && compression_type==2 -> throw new Exception("Wrong compression type!",)@!(sec<2) && !(compression_type==2) && !(compression_type==1) } } } CATCH(Exception) {}
results[https://github.com/crissii/water-esb-new/blob/026f654d5ac5917a70b779b012b807ea9702a550/modules/transport/src/main/java/com/sunsharing/transport/exchage/protocol/FileLogInfo.java][initLog][1] = -> TRY { -> raf=new RandomAccessFile(fileLog,"rw",)@ -> raf.read(fileNameArr,)@ -> this.fileName=new String(fileNameArr,"UTF-8",).trim()@ -> raf.read(filePathArr,)@ -> this.filePath=new String(filePathArr,"UTF-8",).trim()@ -> this.totalPakage=raf.readInt()@ -> this.fileLen=raf.readLong()@ -> raf.read(last,)@ -> this.lastModify=new String(last,"UTF-8",).trim()@ -> raf.read(retry,)@ -> retryIpPort=new String(retry,"UTF-8",).trim()@ -> raf.read(pakageState,)@ -> IF { -> raf.seek(FileSend.beginFileSize,)@ -> raf.write(pakageState,)@ } } CATCH(Exception) { -> logger.error("读取Log文件出错",e,)@ -> throw new RuntimeException("读取Log文件出错",)@ } FINALLY { -> TRY { -> raf.close()@ } }
results[https://github.com/gurkerl83/millipede-xtreemfs/blob/545cb5012cfeafb13506fc1ac1e5e8d8f32a7df1/src/servers/src/org/xtreemfs/sandbox/tests/ReplicationStressTest/ReplicationStressTest.java][writeFile][1] = -> TRY {  -> TRY { -> in=new java.io.RandomAccessFile(tmpDir+tmpFilename,"rw",)@ -> assert filesize<=in.length()@ -> IF { -> in.read(data,)@ -> raf.write(data,0,data.length,)@ } ELSE { -> LOOP { -> IF { -> in.read(data,)@ -> raf.write(data,0,data.length,)@raf.getFilePointer()+PART_SIZE<filesize } ELSE { -> in.seek(raf.getFilePointer()+PART_SIZE,)@!(filesize<PART_SIZE) && raf.getFilePointer()+PART_SIZE<filesize } -> assert in.getFilePointer()==raf.getFilePointer()@raf.getFilePointer()+PART_SIZE<filesize } -> IF { -> in.read(data,)@ -> raf.write(data,0,data.length,)@raf.getFilePointer()<filesize } -> assert in.getFilePointer()==raf.getFilePointer()@ } } FINALLY { -> IF { -> in.close()@in!=null } } } CATCH(Exception) {}
results[https://github.com/dkomanov/fizteh-java-2013/blob/bfc80eb74b06b37097db5b8153dd802d2c2b4237/src/ru/fizteh/fivt/students/mescherinilya/multifilehashmap/Table.java][readFile][1] = -> TRY {  -> TRY { -> IF { -> return @database.length()==0 } -> database.getFilePointer()!=offsets.get(0,)@!(database.length()==0) -> LOOP { -> b=database.readByte()@!(database.length()==0) -> LOOP { -> b=database.readByte()@b!=0 && !(database.length()==0) } -> IF { -> throw new IncorrectFileFormatException("Empty key was detected.",)@keySymbols.size()==0 && !(database.length()==0) } -> LOOP { -> bytes[i]=keySymbols.get(i,)@!(keySymbols.size()==0) && !(database.length()==0) && i<bytes.length } -> key=new String(bytes,"UTF-8",)@!(keySymbols.size()==0) && !(database.length()==0) -> IF { -> throw new IncorrectFileFormatException("Key does not match the file.",)@!(keySymbols.size()==0) && !(database.length()==0) && ndirectory!=hashcode%16||nfile!=hashcode/16%16 } -> offset=database.readInt()@!(keySymbols.size()==0) && !(ndirectory!=hashcode%16||nfile!=hashcode/16%16) && !(database.length()==0) -> IF { -> throw new IncorrectFileFormatException("Bad offset value",)@!(keySymbols.size()==0) && offset<=0||!(offsets.isEmpty())&&offset<=offsets.get(offsets.size()-1,) && !(ndirectory!=hashcode%16||nfile!=hashcode/16%16) && !(database.length()==0) } } -> offsets.add((int) database.length(),)@!(database.length()==0) -> LOOP { -> database.read(bytes,)@!(database.length()==0) -> values.add(new String(bytes,"UTF-8",),)@!(database.length()==0) } } CATCH(EOFException) { -> throw new IncorrectFileFormatException("Suddenly the end of the file was reached",)@ } } CATCH(Exception) {}
results[https://github.com/Androxyde/Flashtool/blob/58f33d33feddcf72686f5093787c8b62b26fbd9d/src/flashsystem/SinFile.java][getDatatype][1] = -> TRY {  -> fin=new RandomAccessFile(sinfile,"r",)@ -> fin.seek(sinheader.getHeaderSize()+sinheader.getPartitionInfo().length,)@ -> TRY { -> read=fin.read(ident,)@ -> IF { -> fin.close()@!(read!=ident.length) -> throw new IOException("Error in retrieving data type",)@read!=ident.length } -> result=new String(ident,)@!(read!=ident.length) -> IF { -> fin.close()@!(result.equals(yaffs,)) && !(read!=ident.length) -> return "yaffs2"@result.equals(yaffs,) && !(read!=ident.length) } -> IF { -> fin.close()@!(result.contains("ELF",)) && !(result.equals(yaffs,)) && !(read!=ident.length) -> return "elf"@!(result.equals(yaffs,)) && result.contains("ELF",) && !(read!=ident.length) } -> LOOP { -> read=fin.read(ident,)@!(result.contains("ELF",)) && !(result.equals(yaffs,)) && !(read!=ident.length) -> IF { -> throw new Exception("End of file",)@!(result.contains("ELF",)) && read==-1 && !(result.equals(yaffs,)) && !(read!=ident.length) } } -> fin.seek(fin.getFilePointer()-16+0x38,)@!(result.contains("ELF",)) && !(result.equals(yaffs,)) && !(read!=ident.length) -> read=fin.read(ident1,)@!(result.contains("ELF",)) && !(result.equals(yaffs,)) && !(read!=ident.length) -> IF { -> throw new Exception("End of file",)@!(result.contains("ELF",)) && read==-1 && !(result.equals(yaffs,)) && !(read!=ident.length) } -> fin.close()@!(read==-1) && !(result.contains("ELF",)) && !(result.equals(yaffs,)) && !(read!=ident.length) -> IF { -> return "ext4"@!(read==-1) && !(result.contains("ELF",)) && HexDump.toHex(ident1,).contains("53, EF",) && !(result.equals(yaffs,)) && !(read!=ident.length) } } CATCH(Exception) { -> fin.close()@ } } CATCH(IOException) {}
results[https://github.com/jbosstm/narayana/blob/bc9a3668c4ed6e8c52f6b2c3d4596e115c12ccf8/ArjunaCore/arjuna/classes/com/arjuna/ats/internal/arjuna/objectstore/LogStore.java][scanLog][1] = -> TRY {  -> TRY { -> iFile=new RandomAccessFile(fd,FILE_MODE,)@ -> TRY { -> iFile.seek(0,)@ -> LOOP { -> iFile.read(buff,)@iFile.getFilePointer()<iFile.length() } ELSE { -> uidSize=iFile.readInt()@iFile.getFilePointer()<iFile.length() && !(redzoneProtected(buff,)) -> iFile.read(uidString,)@iFile.getFilePointer()<iFile.length() && !(redzoneProtected(buff,)) -> txId=new Uid(new String(uidString,),)@!(iFile.getFilePointer()<iFile.length()) && !(redzoneProtected(buff,)) -> imageSize=iFile.readInt()@iFile.getFilePointer()<iFile.length() && !(redzoneProtected(buff,)) -> iFile.read(imageState,)@iFile.getFilePointer()<iFile.length() && !(redzoneProtected(buff,)) -> TRY { -> state=new InputObjectState(txId,"",imageState,)@!(iFile.getFilePointer()<iFile.length()) && !(redzoneProtected(buff,)) } CATCH(Exception) { -> ex.printStackTrace()@!(iFile.getFilePointer()<iFile.length()) && !(redzoneProtected(buff,)) -> throw new ObjectStoreException(ex.toString(),ex,)@iFile.getFilePointer()<iFile.length() && !(!(redzoneProtected(buff,))) } } -> unlockAndClose(fd,iFile,)@!(iFile.getFilePointer()<iFile.length()) -> IF { -> return objectStates@!(iFile.getFilePointer()<iFile.length()) && deletedLogs.size()>0 } ELSE { -> return objectStates@!(iFile.getFilePointer()<iFile.length()) && !(deletedLogs.size()>0) } } FINALLY { -> IF { -> unlockAndClose(fd,iFile,)@iFile!=null && !(iFile.getFilePointer()<iFile.length()) } } -> ex.printStackTrace()@ -> ex.printStackTrace()@ -> throw new ObjectStoreException(ex.toString(),ex,)@ } } CATCH(ObjectStoreException) {}
results[https://github.com/gurkerl83/millipede-xtreemfs/blob/e848cab95ca6d8821dfe79364e2581b1c670bddd/servers/src/org/xtreemfs/sandbox/tests/ReplicationStressTest.java][readFile][1] = -> TRY {  -> TRY { -> originalFile=new java.io.RandomAccessFile(tmpDir+tmpFilename,"r",)@ -> raf=new RandomAccessFile("r",mrcAddress,VOLUME_NAME+DIR_PATH+fileName,client,userCredentials,)@ -> filesize=raf.length()@ -> LOOP { -> TRY { -> raf.seek(startOffset,)@!(startOffsets.size() > 0) -> raf.read(result,0,result.length,)@!(startOffsets.size() > 0) } CATCH(Exception) { -> Logging.logMessage(Logging.LEVEL_ERROR,this,"File "+fileName+" cannot be read.",)@!(startOffsets.size() > 0) -> throw e@startOffsets.size() > 0 } -> originalFile.seek(startOffset,)@!(startOffsets.size() > 0) -> originalFile.read(expectedResult,)@!(startOffsets.size() > 0) -> IF { -> expectedResult=Arrays.copyOf(expectedResult,(int) filesize-startOffset,)@startOffset+partSize>filesize && !(startOffsets.size() > 0) -> expectedResult=Arrays.copyOf(expectedResult,partSize,)@startOffset+partSize>filesize && !(startOffsets.size() > 0) } -> IF { -> System.out.println("first 128 bytes read:\t"+Arrays.toString(Arrays.copyOfRange(result,0,128,),),)@!(startOffsets.size() > 0) && !(Arrays.equals(result,expectedResult,)) -> System.out.println("first 128 bytes expected:\t"+Arrays.toString(Arrays.copyOfRange(expectedResult,0,128,),),)@!(startOffsets.size() > 0) && !(Arrays.equals(result,expectedResult,)) -> System.out.println("last 128 bytes read:\t"+Arrays.toString(Arrays.copyOfRange(result,result.length-128,result.length,),),)@!(startOffsets.size() > 0) && !(Arrays.equals(result,expectedResult,)) -> System.out.println("last 128 bytes expected:\t"+Arrays.toString(Arrays.copyOfRange(expectedResult,result.length-128,result.length,),),)@!(startOffsets.size() > 0) && !(Arrays.equals(result,expectedResult,)) } } } FINALLY { -> IF { -> originalFile.close()@originalFile!=null && !(startOffsets.size() > 0) } } } CATCH(Exception) {}
results[https://github.com/crissii/water-esb-new/blob/da59bef65ccc847cf2b9c15d59d8481a86e40ba1/modules/messagecenter/src/main/java/com/sunsharing/msgcenter/db/MetadataUtils.java][searchMsgFromFile][1] = -> IF { -> return null@!(filedir.exists()) } -> IF { -> LOOP { -> IF { -> TRY { -> raf1=new RandomAccessFile(files[i],"rw",)@!(name.startsWith("metadata_",)) && files!=null && i<files.length && !(!(filedir.exists())) -> index=raf1.readInt()@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) -> raf1.seek(4,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) -> r=raf1.read(bytes,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) -> IF { -> throw new RuntimeException("无消息",)@files!=null && i<files.length && !(!(filedir.exists())) && r==-1 && name.startsWith("metadata_",) } -> begin=getMsgId(bytes,).getMsgId()@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) && !(r==-1) -> raf1.seek(len-22,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) && !(r==-1) -> r=raf1.read(bytes,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) && !(r==-1) -> IF { -> throw new RuntimeException("读取最后消息错误",)@files!=null && i<files.length && !(!(filedir.exists())) && r==-1 && name.startsWith("metadata_",) } -> end=getMsgId(bytes,).getMsgId()@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) && !(r==-1) -> IF { -> raf1.seek(4,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) && !(r==-1) -> LOOP { -> topic=StringUtils.getString(bytes,10,0,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && raf1.read(bytes,)!=-1 && !(!(filedir.exists())) && !(r==-1) -> dbname=StringUtils.getInt(bytes,10,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && raf1.read(bytes,)!=-1 && !(!(filedir.exists())) && !(r==-1) -> index1=StringUtils.getInt(bytes,14,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && raf1.read(bytes,)!=-1 && !(!(filedir.exists())) && !(r==-1) -> len1=StringUtils.getInt(bytes,18,)@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && raf1.read(bytes,)!=-1 && !(!(filedir.exists())) && !(r==-1) } } } CATCH(Exception) { -> logger.error("读取消息文件"+name+"出错",e,)@!(files!=null) && !(i<files.length) && !(!(filedir.exists())) && name.startsWith("metadata_",) } FINALLY { -> TRY { -> raf1.close()@!(files!=null) && !(i<files.length) && !(name.startsWith("metadata_",)) && !(!(filedir.exists())) } } } } }
results[https://github.com/Unidata/thredds/blob/39c132922cc13260f0b0919085d5972bffb2650b/grib/src/ucar/grib/grib2/Grib2ExtractRawData.java][scan][1] = -> TRY {  -> IF { -> raf.seek(raf.getFilePointer()-4,)@raf.getFilePointer()>4 -> es=new Grib2EndSection(raf,)@raf.getFilePointer()>4 -> IF { -> return false@raf.getFilePointer()>4 && !(es.getEndFound()) } } -> dos=new DataOutputStream(new FileOutputStream(raf.getLocation()+".extract",),)@!(raf.getFilePointer()>4) -> LOOP { -> IF { -> IF { -> return false@!(seekHeader(raf,raf.length(),)) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) } -> is=new Grib2IndicatorSection(raf,)@!(!(seekHeader(raf,raf.length(),))) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> EOR=raf.getFilePointer()+is.getGribLength()-is.getLength()@!(!(seekHeader(raf,raf.length(),))) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> SOR=raf.getFilePointer()-is.getLength()@!(!(seekHeader(raf,raf.length(),))) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> IF { -> raf.seek(EOR,)@!(!(seekHeader(raf,raf.length(),))) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) } -> IF { -> raf.seek(SOR,)@!(!(seekHeader(raf,raf.length(),))) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> raf.read(oneRecord,)@!(!(seekHeader(raf,raf.length(),))) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> dos.write(oneRecord,0,oneRecord.length,)@!(!(seekHeader(raf,raf.length(),))) && !(raf.getFilePointer()<raf.length()) && !(raf.getFilePointer()>4) } -> id=new Grib2IdentificationSection(raf,)@!(!(seekHeader(raf,raf.length(),))) && raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) } -> TRY { -> IF { -> lus=new Grib2LocalUseSection(raf,)@raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> gds=new Grib2GridDefinitionSection(raf,true,)@raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) } -> pds=new Grib2ProductDefinitionSection(raf,refTime,)@raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> IF { -> raf.seek(SOR,)@raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> raf.read(oneRecord,)@raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) -> dos.write(oneRecord,0,oneRecord.length,)@!(raf.getFilePointer()<raf.length()) && !(raf.getFilePointer()>4) } -> raf.seek(EOR,)@raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) } CATCH(Exception) { -> e.printStackTrace()@!(raf.getFilePointer()<raf.length()) && !(raf.getFilePointer()>4) -> return true@raf.getFilePointer()<raf.length() && !(raf.getFilePointer()>4) } } } CATCH(IOException) {}
