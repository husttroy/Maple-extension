results[https://github.com/bloodfire91/cnt4007c/blob/2e362bea81aef1f90b9b31cabae5a9a1cf06bb8f/FileHandler.java][getPiece] = -> TRY { -> outputFile.seek(index*pieceSize,)@ -> readSize=outputFile.read(data,)@ -> IF { -> System.arraycopy(smallerData,0,data,0,smallerData.length,)@ } }
results[https://github.com/martoe/mytourbook/blob/702bbc714cfa17c4c031710fd8b8aeca808ba987/net.tourbook/src/net/tourbook/data/DataUtil.java][readFileOffset] = -> TRY {  -> TRY { -> bytesRead=fileRawData.read(buffer,)@ -> IF { -> value=Integer.parseInt(new String(buffer,0,4,),16,)*2.5+5@ } } -> return (int) value@ } CATCH {}
results[https://github.com/tav/plexnet/blob/73e0c73b897411ddf1bc9fb596cc437b60cef0dc/third_party/generic/pypy/pypy/translator/jvm/src/pypy/ll_os.java][read] = -> TRY { -> n=this.file.read(buffer,)@ -> IF { -> return ""@n==-1 } ELSE { -> return ll_os.bytes2string(buffer,n,)@!(n==-1) } }
results[https://github.com/uKev/knipsX/blob/e083cd3f211c6ce2e3f18a59984b781379dca462/Implementierung/src/org/knipsX/utils/exifAdapter/jexifviewer/JExif.java][read] = -> TRY { -> m_offset=file.getFilePointer()@ -> file.read(buf,)@ -> id=new String(buf,0,4,)@ -> IF { -> file.skipBytes(2,)@ } }
results[https://github.com/uKev/knipsX/blob/95d284f17f3efd8d12cab1e2c0f7e5246dcc7447/src/main/java/org/knipsX/utils/exifAdapter/jexifviewer/JExif.java][read] = -> TRY { -> m_offset=file.getFilePointer()@ -> file.read(buf,)@ -> id=new String(buf,0,4,)@ -> IF { -> file.skipBytes(2,)@ } }
results[https://github.com/crosswire/jsword/blob/b4941af12cd77920103aba9fd5aefec2bce995b3/jsword/src/limbo/org/crosswire/jsword/book/search/ser/SerIndex.java][find] = -> TRY { -> dataRaf.seek(section.offset,)@ -> read=dataRaf.read(blob,)@ -> IF { -> throw new IOException()@read!=blob.length } -> return PassageKeyFactory.fromBinaryRepresentation(blob,)@!(read!=blob.length) }
results[https://github.com/camillobruni/pygirl/blob/ddbd442d53061d6ff4af831c1eab153bcc771b5a/pypy/translator/jvm/src/pypy/ll_os.java][read] = -> TRY { -> n=this.file.read(buffer,)@ -> IF { -> return ""@n==-1 } ELSE { -> return new String(buffer,0,n,)@!(n==-1) } }
results[https://github.com/crosswire/jsword/blob/333d0f84281b3e259deac29f3c5c6b7484bbeb0f/jsword/java/limbo/org/crosswire/jsword/book/search/ser/SerIndex.java][find] = -> TRY { -> dataRaf.seek(section.offset,)@ -> read=dataRaf.read(blob,)@ -> IF { -> throw new IOException()@read!=blob.length } -> return PassageKeyFactory.fromBinaryRepresentation(blob,)@!(read!=blob.length) }
results[https://github.com/crosswire/jsword/blob/316131fb7513b384641240cc20757008bce1e77c/jsword/java/jsword/org/crosswire/jsword/book/search/ser/SerIndex.java][findWord] = -> TRY { -> dataRaf.seek(section.offset,)@ -> read=dataRaf.read(blob,)@ -> IF { -> throw new IOException()@read!=blob.length } -> return PassageKeyFactory.fromBinaryRepresentation(blob,)@!(read!=blob.length) }
results[https://github.com/crosswire/jsword/blob/c5e452550f4f9f6ed1d6332a1e6b9380ad04bacb/jsword/java/jsword/org/crosswire/jsword/book/search/ser/SerSearchEngine.java][findWord] = -> TRY { -> dataRaf.seek(section.offset,)@ -> read=dataRaf.read(blob,)@ -> IF { -> throw new IOException()@read!=blob.length } -> return PassageKeyFactory.fromBinaryRepresentation(blob,)@!(read!=blob.length) }
