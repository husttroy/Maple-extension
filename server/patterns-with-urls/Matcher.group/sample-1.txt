results[https://github.com/liquibase/BACKUP_FROM_SVN/blob/bf4d425cfb23b7d3cce41763ef5b8ad56dc0fa9f/liquibase-core/src/main/java/liquibase/parser/core/formattedsql/FormattedSqlChangeLogParser.java][parseString][11] = -> IF { -> endDelimiter=matcher.group(1,)@matcher.matches() }
results[https://github.com/cmccabe/hadoop/blob/dbedbf2d9308833816c5597eb8d5964a3cba25d4/src/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java][getDataNodeStorageRoot][889] = -> matcher=BLOCK_POOL_PATH_PATTERN.matcher(bpRoot,)@ -> IF { -> return matcher.group(1,)@matcher.matches() }
results[https://github.com/mdaniel/svn-caucho-com-resin/blob/1c06bc0e918b42f4a9d5010611ef3d385a6effe8/modules/quercus/src/com/caucho/quercus/lib/QuercusRegexpModule.java][eval][1] = -> IF { -> sb.append(matcher.group(_group,),)@_group<=matcher.groupCount() }
results[https://github.com/jenkinsci/shiningpanda-plugin/blob/967fbc8793ee9251358616c0682a2c0a6147b658/src/main/java/jenkins/plugins/shiningpanda/PythonAxisTree.java][getInterpreter][4] = -> matcher=getMatcher(installation,)@ -> IF { -> return matcher.group(1,)@matcher.matches() }
results[https://github.com/hortonworks/knox/blob/6b1a668a4a5f0d42744e9c949a9df1f1622bfadf/gateway-util-urltemplate/src/main/java/org/apache/hadoop/gateway/util/urltemplate/Parser.java][consumeSchemeMatch][1] = -> IF { -> consumeSchemeToken(match.group(MATCH_GROUP_SCHEME_NAKED,),)@match.group(MATCH_GROUP_SCHEME,)!=null }
results[https://github.com/crh/escidoc-core-1.4/blob/562055ed247f9340d11b3bbcb2dbdb0b2d2f29a2/common/src/main/java/de/escidoc/core/common/util/xml/XmlUtility.java][getVersionNumberFromObjid][3] = -> m=PATTERN_VERSION_NUMBER.matcher(objid,)@ -> IF { -> version=m.group(1,)@m.find() }
results[https://github.com/hortonworks/knox/blob/6b1a668a4a5f0d42744e9c949a9df1f1622bfadf/gateway-util-urltemplate/src/main/java/org/apache/hadoop/gateway/util/urltemplate/Parser.java][consumeQueryMatch][1] = -> IF { -> consumeQueryToken(match.group(MATCH_GROUP_QUERY_NAKED,),)@match.group(MATCH_GROUP_QUERY,)!=null }
results[https://github.com/ModDamage/ModDamage/blob/f226bdb748a83ff9480dc7dd0d6a3692ecafb9e3/src/com/ModDamage/External/mcMMO/AbilityConditional.java][parse][1] = -> IF { -> LogUtil.error("Invalid McMMO ability \""+m.group(3,)+"\"",)@!(mcMMOability==null) -> return null@mcMMOability==null }
results[https://github.com/hortonworks/knox/blob/6b1a668a4a5f0d42744e9c949a9df1f1622bfadf/gateway-util-urltemplate/src/main/java/org/apache/hadoop/gateway/util/urltemplate/Parser.java][consumeAuthorityMatch][1] = -> IF { -> consumeAuthorityToken(match.group(MATCH_GROUP_AUTHORITY_NAKED,),)@match.group(MATCH_GROUP_AUTHORITY,)!=null }
results[https://github.com/anba/es6draft/blob/3ca1d18acd16f27198e7165f742e4cccd2ed09b5/src/test/java/com/github/anba/es6draft/test262/Test262Info.java][getTestName][1] = -> IF { -> matcher=fileNamePattern.matcher(filename,)@ -> testName=matcher.group(1,)@testName==null }
results[https://github.com/hortonworks/knox/blob/6b1a668a4a5f0d42744e9c949a9df1f1622bfadf/gateway-util-urltemplate/src/main/java/org/apache/hadoop/gateway/util/urltemplate/Parser.java][consumeFragmentMatch][1] = -> IF { -> consumeFragmentToken(match.group(MATCH_GROUP_FRAGMENT_NAKED,),)@match.group(MATCH_GROUP_FRAGMENT,)!=null }
results[https://github.com/inspirer/mps-core/blob/efb0bbd2cb978d383e43422ab5e66f33a17674a5/languages/syntax/source_gen/jetbrains/mps/core/syntax/actions/QueriesGenerated.java][getMatchingText][1] = -> IF { -> return (pattern.endsWith("::=",))?pattern:_matcher_x583g4_a0a2a0a0a0a2a0a1a2.group(1,)+" ::="@(_matcher_x583g4_a0a2a0a0a0a2a0a1a2=REGEXP_x583g4_a0a0a1a2a0a0a0a2a0a1a2.matcher(pattern,)).find() }
results[https://github.com/osiam/connector4java/blob/8451c33a5077aff8c5400a6c27dd251df1cbceb4/src/main/java/org/osiam/client/query/Query.java][getCountPerPage][2] = -> IF { -> return Integer.parseInt(countMatcher.group(1,),)@ }
results[https://github.com/turesheim/org.eclipse.mylyn.docs/blob/4254670c1da69a5e98b501e204c5e2d33fa36136/org.eclipse.mylyn.wikitext.confluence.core/src/org/eclipse/mylyn/internal/wikitext/confluence/core/block/TableOfContentsBlock.java][processLineContent][1] = -> IF { -> options=matcher.group(1,)@ -> setOptions(options,)@ }
results[https://github.com/illumos/opengrok/blob/d4779cee50a85146ac72dbfe52033b3fd645f5ff/src/org/opensolaris/opengrok/web/Util.java][getEmail][19] = -> email_matcher=EMAIL_PATTERN.matcher(author,)@ -> IF { -> email=email_matcher.group(1,).trim()@email_matcher.find() }
results[https://github.com/teamgummy/frameworks_base/blob/3e7a90f576deeccc9718b9d15889ecd60ce56772/tests/DumpRenderTree2/src/com/android/dumprendertree2/Summarizer.java][getWebKitVersionFromUserAgentString][12] = -> matcher=Pattern.compile("AppleWebKit/([0-9]+?\\.[0-9])",).matcher(userAgent,)@ -> IF { -> return matcher.group(1,)@matcher.find() }
results[https://github.com/alfredas/jwbf/blob/cb4f82e84fc478413495218204ff27694dccf58c/jwbf/core/src/net/sourceforge/jwbf/actions/trac/GetRevision.java][parseVersion][28] = -> m=p.matcher(s,)@ -> IF { -> version=Integer.parseInt(m.group(1,),)@m.find() }
results[https://github.com/RoboBees/simbeeotic/blob/6b5bad419f705876ee6afd90ef7be15978472f77/simbeeotic-core/src/main/java/harvard/robobees/simbeeotic/util/DocUtil.java][extractPlaceholderDefault][4] = -> IF { -> matcher=PLACEHOLDER_PATTERN.matcher(placeholder,)@placeholder!=null -> matcher.find()@!(placeholder!=null) -> return matcher.group(3,)@placeholder!=null }
results[https://github.com/iwein/spring-integration/blob/e6302ffff8ec59d517ff47d010bbb31614c6f340/org.springframework.integration.adapter/src/main/java/org/springframework/integration/adapter/mail/monitor/MailTransportUtils.java][getSubject][1] = -> matcher=SUBJECT_PATTERN.matcher(uri.getSchemeSpecificPart(),)@ -> IF { -> return matcher.group(1,)@matcher.find() }
results[https://github.com/yusuke/twitter4j/blob/fbe7241af8e00776d8128555486d795c03d99d62/twitter4j-core/src/main/java/twitter4j/TwitterAPIMonitor.java][methodCalled][2] = -> matcher=pattern.matcher(twitterUrl,)@ -> IF { -> method=matcher.group(1,)@matcher.matches()&&matcher.groupCount()>0 -> STATISTICS.methodCalled(method,elapsedTime,success,)@ }
results[https://github.com/ModDamage/ModDamage/blob/28de44db7347f601bdf6a7e03380609735808ab5/src/com/KoryuObihiro/bukkit/ModDamage/RoutineObjects/Conditional/Binomial.java][getNew][1] = -> IF { -> return new Binomial(DynamicInteger.getNew(matcher.group(1,),),)@matcher!=null }
results[https://github.com/apache/hive/blob/997202b4fe678d24991f67085e7a11fca2194f00/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/expressions/FilterStringColRegExpStringScalar.java][tryCreate][2] = -> matcher=MIDDLE_PATTERN.matcher(pattern,)@ -> IF { -> return new MiddleChecker(matcher.group(1,),)@matcher.matches() }
results[https://github.com/ogrisel/pignlproc/blob/4167c0e8644bfab94c12fc42a757b7108ff7a3da/src/main/java/pignlproc/markup/AnnotatingMarkupParser.java][parse][2] = -> matcher=REDIRECT_PATTERN.matcher(rawWikiMarkup,)@ -> IF { -> redirect=titleToUri(matcher.group(1,),languageCode,)@matcher.find() }
results[https://github.com/cstamas/enunciate-old/blob/ec76deb6a3b50215c6b69a1be6c3ea5793ef73a6/enunciate/rest-rt/src/main/java/org/codehaus/enunciate/modules/rest/RESTResourceExporter.java][findContentTypeId][2] = -> matcher=getContentTypeIdPattern().matcher(requestContext,)@ -> IF { -> contentTypeId=matcher.group(1,)@matcher.find() }
results[https://github.com/pistruiatul/hartapoliticii/blob/f973106478ac2d396a0242f73e5c8f18dff7b816/java/src/ro/vivi/pistruiatul/Deputy.java][maybeParseTalkTimeInfo][1] = -> m=talkTimeInfo.matcher(line,)@ -> IF { -> idv=m.group(3,)@m.matches() -> video.setIdv(idv,)@ }
results[https://github.com/turesheim/org.eclipse.mylyn.docs/blob/9055ef8b1f817a68a83647b5fd7489cb275b5191/org.eclipse.mylyn.wikitext.confluence.core/src/org/eclipse/mylyn/internal/wikitext/confluence/core/block/ColorBlock.java][processLineContent][5] = -> IF { -> setOptions(matcher.group(1,),)@ -> offset=matcher.start(2,)@ }
results[https://github.com/groovy/groovy-eclipse/blob/c73270860d8fcd979a3a33f65076909e2847579d/ide-test/org.codehaus.groovy.eclipse.refactoring.test/src/tests/BaseTestCase.java][getArea][2] = -> match=regExpression.matcher(filecontent,)@ -> IF { -> fileContent=match.group(1,)@match.find() -> return ASTTools.getDocumentWithSystemLineBreak(fileContent,)@match.find() }
results[https://github.com/eclipse/recommenders/blob/5c50dfdb789d355d138b434ed6a0def0f5a8556a/org.eclipse.recommenders.mining/src/org/eclipse/recommenders/commons/mining/RecommenderOptions.java][parseMin][4] = -> m=p.matcher(string,)@ -> IF { -> propability=Double.parseDouble(m.group(1,),)@m.matches() }
results[https://github.com/elight/the_grinder/blob/6064ca4addd40e313ad89b89033053e6a62e2dda/src/net/grinder/plugin/http/tcpproxyfilter/HTTPRecordingImplementation.java][addRequest][4] = -> lastPathElementMatcher=m_regularExpressions.getLastPathElementPathPattern().matcher(unescapedURI,)@ -> IF { -> element=lastPathElementMatcher.group(1,)@lastPathElementMatcher.find() }
results[https://github.com/kassah/warlock2/blob/b915d5239bfe61ab5d128397e1f797a5520c4746/warlock2-rcp/com.arcaner.warlock.core/src/main/com/arcaner/warlock/script/wsl/WarlockWSLScript.java][parseLabel][2] = -> matcher=labelPattern.matcher(firstToken,)@ -> IF { -> labelOffsets.put(matcher.group(1,),lineIndex,)@matcher.matches() }
results[https://github.com/webx/citrus-tool/blob/ee5a9fd05c46a1da047de3ceee1583827e6b17d3/eclipse/springext-eclipse-plugin/src/main/java/com/alibaba/ide/plugin/eclipse/springext/editor/config/namespace/dom/DomDocumentUtil.java][getNamespacePrefix][3] = -> m=XMLNS_PATTERN.matcher(attrName,)@ -> IF { -> return trimToEmpty(m.group(2,),)@m.matches() }
results[https://github.com/boggle/public-transport-enabler/blob/982507dd11a75653c1125cd69177c6042cae52ed/enabler/src/de/schildbach/pte/EireannProvider.java][parseLineAndType][1] = -> mLine=P_NORMALIZE_LINE.matcher(lineAndType,)@ -> IF { -> return newLine('B',mLine.group(1,),)@mLine.matches() }
results[https://github.com/schildbach/public-transport-enabler/blob/e599481525b8694870b3137d2636e303f37bd3fa/src/de/schildbach/pte/PlProvider.java][parseLineWithoutType][2] = -> mRussia=P_NORMALIZE_LINE_RUSSIA.matcher(line,)@ -> IF { -> return newLine('R'+mRussia.group(1,),)@mRussia.matches() }
results[https://github.com/jbosstm/transaction-profiler/blob/857e951d962d26f41db7b268efd0d386de60e7a1/core/src/main/java/io/narayana/txprof/logparsing/as8/handlers/JTACreateResourceRecordHandler.java][main][2] = -> matcher=pattern.matcher(LINE,)@ -> IF { -> System.out.println(matcher.group(RESUID,),)@matcher.find() }
results[https://github.com/before/uadetector/blob/2bc2a8360351936809f8db5032b595c3a9eff81d/modules/uadetector-core/src/main/java/net/sf/uadetector/internal/util/VersionParser.java][identifySymbianVersion][2] = -> m=pattern.matcher(userAgent,)@ -> IF { -> version=parseFirstVersionNumber(m.group(MAJOR_INDEX,),)@m.find() }
results[https://github.com/LeeMinWoo/android_dalvik/blob/f6c387128427e121477c1b32ad35cdcaa5101ba3/libcore/regex/src/test/java/org/apache/harmony/regex/tests/java/util/regex/MatcherTest.java][testRelactantQuantifiers][2] = -> mat=pat.matcher("abbbb",)@ -> IF { -> assertEquals("abbb",mat.group(1,),)@mat.matches() }
results[https://github.com/tekul/spring-security/blob/bc6fc518d3a05ae3fd1c9e728032f5be2930d448/ldap/src/main/java/org/springframework/security/ldap/authentication/ad/ActiveDirectoryLdapAuthenticationProvider.java][parseSubErrorCode][1] = -> m=SUB_ERROR_CODE.matcher(message,)@ -> IF { -> return Integer.parseInt(m.group(1,),16,)@m.matches() }
results[https://github.com/apache/hive/blob/12c43b2ed151ef954aa628c8fb24fe8d43154cc0/ql/src/java/org/apache/hadoop/hive/ql/exec/vector/expressions/FilterStringColLikeStringScalar.java][tryCreate][1] = -> matcher=BEGIN_PATTERN.matcher(pattern,)@ -> IF { -> return new BeginChecker(matcher.group(1,),)@matcher.matches() }
results[https://github.com/atlasapi/atlas/blob/53821fe0a9b20c24e84a2eb24c6c5dd6dbfcff14/src/main/java/org/atlasapi/remotesite/channel4/pmlsd/C4AtomApi.java][canonicalizeSeriesFeedId][1] = -> matcher=SERIES_PAGE_ID_PATTERN.matcher(source.getId(),)@ -> IF { -> return FEED_ID_CANONICAL_PREFIX+matcher.group(1,)@matcher.matches() }
results[https://github.com/if12b017/embedded_sensor_cloud/blob/762294aa69c0877dfe6a89ba8c2c9d2b0e4bbffe/microerp/src/main/java/microerp/business/URLService.java][parseInvoiceIDfromURL][2] = -> matcher=pattern.matcher(urlString,)@ -> id=(long) 0@ -> IF { -> id=Long.parseLong(matcher.group(1,),)@matcher.matches() }
results[https://github.com/deepsky/SQL-Code-Assistant-/blob/8fb9f91dbfce7177cdc4fea74378047849ce2e21/shared/root/java/resolver/com/deepsky/lang/plsql/resolver/utils/ContextPathUtil.java][getOwnColumns][8] = -> m=fkPattern.matcher(value,)@ -> IF { -> return m.group(2,).split("\\,",)@m.find() }
results[https://github.com/amplafi/amplafi-flow-client/blob/5bdaa80dbc57cce1b93910f22085a812da3a0fd2/src/main/java/org/amplafi/flow/ui/command/ServerChangeFlowCommand.java][execute][1] = -> m=ONE_WORD.matcher(options,)@ -> IF { -> mode=m.group(1,)@m.matches() -> adminTool.setMode(mode,)@ }
results[https://github.com/alexjck/XmmpProxy/blob/3a06ec16d73b871617d9be9db84af6f61dc21c9d/src/utility/Attachment.java][hostSetter][1] = -> matcher=pattern.matcher(generic,)@ -> IF { -> att.setHost(matcher.group(2,),)@matcher.find() -> return true@matcher.find() }
results[https://github.com/rsavoye/cadpage/blob/3ad9503f9a6515bd7d78ae0748d795187509f8e3/cadpage/src/net/anei/cadpage/parsers/WA/WAMasonCountyParser.java][parse][1] = -> match=APT_PTN.matcher(field,)@!(field.equalsIgnoreCase("YES",)) && !(field.length()==0) && !(field.equalsIgnoreCase("CONTACT",)) -> IF { -> field=match.group(1,)@!(field.equalsIgnoreCase("YES",)) && match.matches() && !(field.length()==0) && !(field.equalsIgnoreCase("CONTACT",)) } -> super.parse(field,data,)@!(field.equalsIgnoreCase("YES",)) && !(field.length()==0) && !(field.equalsIgnoreCase("CONTACT",))
results[https://github.com/gamma9mu/SOMa/blob/d3f85626000752797f64dbba627c0b45f4164801/src/cs437/som/util/CustomSOMFileReader.java][matchGridType][1] = -> gridTypeMatch=gridTypeRegEx.matcher(line,)@ -> IF { -> gridType=(GridType) Reflector.instantiateClass("cs437.som.topology",gridTypeMatch.group(1,),)@gridTypeMatch.matches() -> return true@gridTypeMatch.matches() }
results[https://github.com/stevenremot/RaSKlett/blob/c92873d358d6b135634a6c5907c57b2a04e0214f/src/compiler/combinators/LazyCallFactory.java][get][1] = -> m=lazyCallPattern.matcher(name,)@ -> IF { -> return new LazyCall(m.group(1,),)@m.find() }
results[https://github.com/playframework/play1/blob/47053cf21d59e37786360539e7375f195e287633/framework/src/play/libs/Expression.java][evaluate][2] = -> matcher=expression.matcher(value,)@ -> IF { -> return Play.configuration.getProperty(matcher.group(1,),defaultValue,)@matcher.matches() }
results[https://github.com/eclipse/epf.archive/blob/393612dacc98c4a57d33e1c4aa39bc4497173ac4/plugins/org.eclipse.epf.library/src/org/eclipse/epf/library/util/ResourceHelper.java][getAttributesFromLink][1] = -> m=p_link_ref.matcher(link,)@ -> IF { -> attributes=m.group(1,)@m.find() -> return getTagAttributes(attributes,)@m.find() }
results[https://github.com/sappho/code-heatmap/blob/de19560336aeb830979ec7449e58339c7e64c0d6/code-heatmap-engine/src/main/java/uk/org/sappho/code/heatmap/engine/Change.java][getJiraId][2] = -> matcher=JIRA_REGEX.matcher(comment.split("\n",)[0],)@ -> IF { -> jiraId=matcher.group(1,)@matcher.matches() }
results[https://github.com/steveloughran/hadoop-trunk/blob/dbedbf2d9308833816c5597eb8d5964a3cba25d4/src/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java][convertMetatadataFileName][8] = -> matcher=PRE_GENSTAMP_META_FILE_PATTERN.matcher(oldFileName,)@ -> IF { -> return FSDataset.getMetaFileName(matcher.group(1,),GenerationStamp.GRANDFATHER_GENERATION_STAMP,)@matcher.matches() }
results[https://github.com/cfeclipse/cfeclipse/blob/b4be19559bde3cf976207bd8347dac841c60d861/svn/org.cfeclipse.cfml/tags/1.3-dev/src/org/cfeclipse/cfml/parser/xpath/XPathSearch.java][findEndOfString][2] = -> matcher=charStrRegEx.matcher(inStr,)@ -> IF { -> retval=matcher.group(0,).length()@matcher.find() -> return retval@matcher.find() }
results[https://github.com/RobertFischer/caliper/blob/75981e8deac42e2497362531037cd0c4c455304c/src/com/google/caliper/AdbLogParser.java][getProcessId][8] = -> matcher=processIdPattern.matcher(line,)@ -> IF { -> return Integer.valueOf(matcher.group(1,),)@matcher.matches() }
results[https://github.com/encuestame/encuestame/blob/152b86f504fb4c7f2acc0dc5f1c1d6ffe0497123/enme-core/src/main/java/org/encuestame/core/integration/MailMessageService.java][processMessage][1] = -> matcher=p.matcher(bites,)@ -> IF { -> url=matcher.group(0,)@matcher.find() -> messageBuilder=MessageBuilder.withPayload(url,)@ }
results[https://github.com/eclipse/linuxtools/blob/9c6805d4f78d4aaebfd3c8edecc6b34d92f4426e/rpmstubby/org.eclipse.linuxtools.rpmstubby/src/org/eclipse/linuxtools/internal/rpmstubby/parser/PythonEggParser.java][prepareSetupOptions][1] = -> variableMatcher=pattern.matcher(setupLine,)@ -> IF { -> setupLine=variableMatcher.group(2,)@variableMatcher.find() } -> tempList=setupLine.split("(?=,)",)@
results[https://github.com/iipc/openwayback/blob/13e1b35ddd4d2203b4169d40570e8163b11ee915/wayback-core/src/main/java/org/archive/wayback/archivalurl/TagMagix.java][getTagAttr][1] = -> matcher=daPattern.matcher(page,)@ -> IF { -> found=matcher.group(1,)@matcher.find(idx,) -> found=trimAttrValue(found,)@ }
results[https://github.com/RedHatQE/rhsm-qe/blob/72822637f19733e7943c3094a89a0562351390e4/src/com/redhat/qe/sm/cli/tasks/SubscriptionManagerTasks.java][yumCanInstallPackageFromRepo][2] = -> matcher=pattern.matcher(sshCommandRunner.getStdout(),)@ -> IF { -> obsoletedByPkg=matcher.group(1,)@matcher.find() -> return false@matcher.find() }
results[https://github.com/samchuang/zkspreadsheet/blob/a3a783c11efb6728418cd3c56e05be25469e29b0/zss/src/org/zkoss/zss/model/impl/DateInputMask.java][parseYear][1] = -> IF { -> year=m.group(_year,)@_year>0 -> y=Integer.parseInt(year,)@!(_year>0) -> return (y<100)?twoDigitYearTo4DigitYear(y,twoDigitYearUpperBound,):y@_year>0 }
results[https://github.com/jmchilton/TINT/blob/ae7e73bc44f83356645bb4d589ea86798da99fe1/projects/TropixProteomicsCore/src/main/edu/umn/msi/tropix/proteomics/conversion/impl/MgfParseUtils.java][getReadw4MascotRt][1] = -> matcher=READW_4_MASCOT_RT_PATTERN.matcher(line,)@ -> IF { -> rt=Float.parseFloat(matcher.group(1,),)@matcher.matches() }
results[https://github.com/ModDamage/ModDamage/blob/bbe189f6c32564a54d632494790429efc1545e78/src/com/KoryuObihiro/bukkit/ModDamage/RoutineObjects/Nestable/Conditional/Binomial.java][getNew][1] = -> IF { -> return new Binomial(Integer.parseInt(matcher.group(1,),),)@matcher!=null }
results[https://github.com/miracee/rasdaman/blob/dbc5ca3afa44d28f62de99ceeb1d83fa599abc3a/applications/secore/secore-core/src/java/secore/util/StringUtil.java][replaceElementValue][1] = -> matcher=pattern.matcher(xml,)@ -> IF { -> match=">"+matcher.group(2,)+"<"@matcher.find() -> ret=xml.replace(match,">"+replacement+"<",)@ }
results[https://github.com/USGS-CIDA/WaterSMART/blob/7a99da3166d0d5ae99e1a0018856933da535dbda/watersmart-ui/src/main/java/gov/usgs/cida/watersmart/parse/file/StationPerFileDSGParser.java][getStationId][1] = -> matcher=getStationIdPattern().matcher(parseText,)@ -> IF { -> return matcher.group(1,)@matcher.matches() }
results[https://github.com/DevBoost/EMFText/blob/67da6c558660b8728e8cc0cec085e28f8f234943/EMFText Tools/org.emftext.tools.development/src/org/emftext/tools/development/generator_generator/CodeGeneratorGenerator.java][isImported][7] = -> matcher=importPattern.matcher(fileContent,)@ -> matches=matcher.find()@ -> IF { -> className=matcher.group(1,)@!(matches) -> return className@matches }
results[https://github.com/liferay/liferay-maven-support/blob/2687ee3b6d90b0d05c994f08b0886fc42171e103/plugins/liferay-maven-plugin/src/main/java/com/liferay/maven/plugins/AbstractLiferayMojo.java][getPortalMajorVersion][1] = -> matcher=_majorVersionPattern.matcher(liferayVersion,)@ -> IF { -> majorVersion=GetterUtil.getFloat(matcher.group(1,),)@matcher.find() }
results[https://github.com/neuland/jade4j/blob/e9538ff3fd69aad3f6658ae0a2b0f323d773f1c4/src/main/java/de/neuland/jade4j/lexer/Lexer.java][scan][1] = -> matcher=scanner.getMatcherForPattern(regexp,)@ -> IF { -> end=matcher.end()@matcher.find(0,)&&matcher.groupCount()>0 -> return matcher.group(1,)@matcher.find(0,)&&matcher.groupCount()>0 }
results[https://github.com/tonytw1/brownbag/blob/9d8951644ff33548685e47af542dae73dcd7b693/src/main/java/nz/gen/wellington/screenscrapers/auckland/AucklandCityCouncilScraper.java][extractDateFromUrl][1] = -> m=p.matcher(uri,)@ -> IF { -> dateString=m.group(0,)@m.find() -> return parseDate(dateString,"yyyyMMdd",)@m.find() }
results[https://github.com/seasarorg/s2dao/blob/1418233b6c8888c4abca5190274911b9039344dc/s2-dao/src/main/java/org/seasar/dao/pager/MySQLLimitOffsetPagingSqlRewriter.java][makeCalcFoundRowsSQL][1] = -> matcher=baseSqlPattern.matcher(baseSQL,)@ -> IF { -> baseSQL=matcher.replaceFirst(matcher.group(1,)+" SQL_CALC_FOUND_ROWS",)@matcher.find() }
results[https://github.com/slepeweb/java-sandbox/blob/905ac7db4ea4d7728328f07437b8e903b45ac35a/slepeweb-www/src/main/java/com/slepeweb/sandbox/ws/soap/WeatherBean.java][getTemperatureCelsius][1] = -> m=TEMPERATURE_PATTERN.matcher(str.trim(),)@ -> IF { -> return m.group(1,)@m.matches() }
results[https://github.com/apache/chukwa/blob/716f288a308508e1f3f391a44e60c49dc27b333f/src/java/org/apache/hadoop/chukwa/dataloader/SocketDataLoader.java][<init>][2] = -> m=pattern.matcher(collectors.next(),)@ -> IF { -> hostname=m.group(2,)@m.matches() }
results[https://github.com/svalaskevicius/qtjs-generator/blob/08a9c50e0d7dd23f1534a77ce2e81397aed64c66/lib/cpgf/tools/metagen/tool/src/org/cpgf/metagen/metawriter/MetaClassWriter.java][extractTemplateInstanceSubject][1] = -> m=p.matcher(type.getLiteralType(),)@ -> IF { -> return m.group(1,)@m.find() }
results[https://github.com/tordanik/OSM2World/blob/aaec0343883ae4c4218e2252ef639e1f1eab74d1/src/org/openstreetmap/josm/plugins/graphview/core/util/ValueStringParser.java][parseIncline][1] = -> inclineMatcher=INCLINE_PATTERN.matcher(value,)@ -> IF { -> inclineString=inclineMatcher.group(1,)@inclineMatcher.matches() -> return parseOsmDecimal(inclineString,true,)@inclineMatcher.matches() }
results[https://github.com/apache/opennlp/blob/6215efef3f99a458edf7c0b5d88693bbfb179985/opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java][getToken][1] = -> tokenMatcher=tokenPattern.matcher(rest,)@ -> IF { -> return decodeToken(tokenMatcher.group(1,),)@tokenMatcher.find() }
results[https://github.com/davros-/frameworks_base/blob/da9165e10f476bc46f990e1d63a0f63dcbadbc26/tests/DumpRenderTree2/src/com/android/dumprendertree2/Summarizer.java][getWebKitRevision][2] = -> matcher=Pattern.compile("^version=([0-9]+)",Pattern.MULTILINE,).matcher(thirdPartyProjectContents,)@ -> IF { -> return matcher.group(1,)@matcher.find() }
results[https://github.com/twitter/ambrose/blob/1c3ba943bd0b623613af2e309d428da72a0b8512/hive/src/main/java/com/twitter/ambrose/hive/AmbroseHiveUtil.java][getNodeIdFromJobName][1] = -> matcher=STAGEID_PATTERN.matcher(jobName,)@ -> IF { -> return getNodeIdFromNodeName(conf,matcher.group(1,),)@matcher.find() }
results[https://github.com/remi/selenium/blob/84ad9b2203fdd0efb57d95681d781ccf4150940e/selenium/src/java/org/openqa/selenium/internal/seleniumemulation/NameLookupStrategy.java][getFilterFunction][4] = -> matcher=NAME_AND_VALUE_PATTERN.matcher(originalFilter,)@ -> IF { -> filterName=matcher.group(1,)@matcher.matches() } -> return filterFunctions.get(filterName,)@
results[https://github.com/sdorra/scm-manager/blob/2debdd1ef53e7ec29c132c61cd04d14e49b894c5/scm-core/src/main/java/sonia/scm/security/MessageDigestHashBuilder.java][getSalt][1] = -> m=PATTERN.matcher(hash,)@ -> IF { -> hashWithoutPrefix=m.group(2,)@m.matches() } -> return getSalt(hashWithoutPrefix,length,)@
results[https://github.com/Obvious/plovr/blob/2066771f96c0e0a34425fd86ab33431f3b0f7fbb/src/org/plovr/CoffeeScriptCompilerException.java][<init>][1] = -> matcher=LINE_AND_CHAR_NO.matcher(message,)@ -> IF { -> lineno=Integer.valueOf(matcher.group(1,),10,)@matcher.find() }
results[https://github.com/acanda/eclipse-pmd/blob/60858c0d0f5f3c80adc45f13b5adbb65ef886c35/ch.acanda.eclipse.pmd.java/src/ch/acanda/eclipse/pmd/java/resolution/design/EqualsNullQuickFix.java][<init>][1] = -> matcher=METHOD_INVOCATION_EXPRESSION.matcher(marker.getMarkerText(),)@ -> IF { -> methodInvocationExpression=matcher.group(1,)@matcher.matches() }
results[https://github.com/gicappa/api-spike/blob/7a3d319ef008ee99573a9b21f759fd0c6511cf47/src/main/java/jobengine/app/request/Versions.java][addToVersionsIfIsMatchedOn][1] = -> versionMatcher=versionMatcherOf(mediaSubtype,)@ -> IF { -> versions.add(versionMatcher.group(1,),)@versionMatcher.matches() }
results[https://github.com/fastcatgroup/analyzer/blob/44304c480af204de78a57b6f3d831f36fe723458/japanese/kuromoji/java/com/atilika/kuromoji/util/CSVUtil.java][unQuoteUnEscape][1] = -> m=QUOTE_REPLACE_PATTERN.matcher(original,)@ -> IF { -> result=m.group(1,)@m.matches() } -> result=result.replaceAll(ESCAPED_QUOTE,"\"",)@
results[https://github.com/apache/archiva/blob/3a1638e1ea3339a6aa734813e57bca0af01e44b0/archiva-modules/archiva-base/archiva-artifact-converter/src/test/java/org/apache/archiva/converter/artifact/LegacyToDefaultConverterTest.java][createArtifact][1] = -> matcher=Artifact.VERSION_FILE_PATTERN.matcher(version,)@ -> IF { -> baseVersion=matcher.group(1,)+"-SNAPSHOT"@matcher.matches() } -> return createArtifact(groupId,artifactId,baseVersion,version,"jar",)@
results[https://github.com/black-knight/Q-Cumberless-Testing/blob/b8677367919bd249a309d099a929c9dc119c776b/src/com/trollsahead/qcumberless/device/generic/GenericDevice.java][notifyStepFailed][1] = -> matcher=patternStepFailed.matcher(log,)@ -> IF { -> deviceCallback.afterStepFailed(matcher.group(2,),)@matcher.find() }
results[https://github.com/OpenRadStack/mirth/blob/05adf21b1ebe54ad9195157fce5f07803a2cbea0/client/src/com/mirth/connect/client/ui/util/VariableListUtil.java][getMapKey][1] = -> key=matcher.group(FULL_NAME_MATCHER_INDEX,)@ -> IF { -> key=matcher.group(SHORT_NAME_MATCHER_INDEX,)@key==null } -> return StringEscapeUtils.unescapeEcmaScript(key,)@
results[https://github.com/cgeo/cgeo/blob/1a961abf676ce1ad24726514f2194e739394deeb/src/cgeo/geocaching/cgBase.java][detectGcCustomDate][1] = -> matcher=pattern.matcher(result,)@ -> IF { -> settings.setGcCustomDate(matcher.group(1,),)@matcher.find() }
results[https://github.com/iPlantCollaborativeOpenSource/de-common-module/blob/89c28ceefd4db313cd31e1f472a1ff38cf570f95/src/main/java/org/iplantc/de/server/CasGroupUserDetailsService.java][extractListContents][1] = -> IF { -> m=LIST_CONTENTS_PATTERN.matcher(listString,)@listString!=null -> result=(m.find())?m.group(1,):""@ }
results[https://github.com/xylifyx/langtools/blob/ad09c44c6c2e496c342c475b588ff101d295a436/test/tools/javac/diags/RunExamples.java][showFile][3] = -> m=copyrightHeaderPat.matcher(text,)@ -> IF { -> writeLines(m.group(2,),)@m.matches() }
results[https://github.com/unpush/apache-incubator-shindig/blob/192d6cedb9e1039c0a9a7ed0efa7a3cf1cb7e121/java/gadgets/src/test/java/org/apache/shindig/gadgets/render/SanitizedRenderingContentRewriterTest.java][rewrite][2] = -> matcher=BODY_REGEX.matcher(mc.getContent(),)@ -> IF { -> return matcher.group(1,)@matcher.matches() }
results[https://github.com/apache/incubator-marmotta/blob/582abb5b0db790244b5ade0db134b1cf01860536/libraries/ldpath/ldpath-core/src/test/java/org/apache/marmotta/ldpath/parser/StringTestingBackend.java][getLiteralType][1] = -> m=TYPE_PATTERN.matcher(n,)@ -> IF { -> return URI.create(m.group(1,),)@m.find() }
results[https://github.com/jalian-systems/Marathon/blob/a39638f2c7c65962ff4ba585bcf0d8444bfb4617/marathon-runtime-server/src/net/sourceforge/marathon/component/MComponent.java][stripHTMLTags][1] = -> m=p.matcher(text,)@ -> IF { -> text=stripTags(m.group(2,),)@m.matches() }
results[https://github.com/jproggy/Snippetory/blob/b6345827415e75703e82943ac89226e54641fba1/src/main/java/de/jproggy/snippetory/impl/RegExSyntax.java][getContent][1] = -> LOOP { -> IF { -> return matcher.group(i,)@i<=matcher.groupCount() && matcher.group(i,)!=null } }
results[https://github.com/caelum/tubaina/blob/23604d27a183ea8d8840f19b38e536cd3417c489/src/main/java/br/com/caelum/tubaina/builder/BookPartsBuilder.java][extractIntroduction][1] = -> introductionMatcher=introductionPattern.matcher(text,)@ -> IF { -> introduction=introductionMatcher.group(1,)@introductionMatcher.find() } -> introduction=introduction.trim()@
results[https://github.com/stefanotravelli/seam-2.2/blob/8fec4a5311300bc309bb47f9aafcb85e3e753063/src/ioc/org/jboss/seam/ioc/microcontainer/SeamComponentRegistryPlugin.java][parseCreate][1] = -> createMatcher=CREATE.matcher(name,)@ -> IF { -> create=Boolean.parseBoolean(createMatcher.group(1,),)@createMatcher.find() }
results[https://github.com/papyri/navigator/blob/bd80ac9e3d9096f34ae1b6ae771916643dfe2f68/pn-dispatcher/src/main/java/info/papyri/dispatch/browse/facet/StringSearchFacet.java][getFacetConstraints][1] = -> matcher=pattern.matcher(facetParam,)@ -> IF { -> paramNumber=matcher.group(1,)@matcher.matches() } -> constraints.add(paramNumber,)@
results[https://github.com/spingel/org.eclipse.mylyn.incubator/blob/0ddba49e7b7539c3501bb06879f58f6cbfb04990/connector-tutorial/org.eclipse.mylyn.xml3.core/src/org/eclipse/mylyn/internal/examples/xml/core/XmlTaskDataHandler.java][getTaskId][1] = -> matcher=XmlClient.ID_PATTERN.matcher(file.getName(),)@ -> IF { -> return matcher.group(1,)@matcher.find() }
results[https://github.com/KristianKarl/GraphWalker/blob/dce7fe8954f7a03b9b350b27766a1c73b54441bb/mbt/src/org/tigris/mbt/graph/AbstractElement.java][getIndex][1] = -> m=p.matcher(str,)@ -> IF { -> index_key=m.group(2,)@m.find() -> return new Integer(index_key,)@m.find() }
results[https://github.com/apache/ivyde/blob/72d5dea76e97d9fd328d6974a90e8efbad2ff30e/org.apache.ivyde.eclipse/src/java/org/apache/ivyde/common/ivyfile/IvyModuleDescriptorFile.java][getOrganisation][1] = -> m=p.matcher(getDoc(),)@ -> IF { -> return m.group(1,)@m.find() }
results[https://github.com/3wks/thundr/blob/d16e7769e30220fb1b740d8f823f107d3eaa74ae/src/main/java/com/atomicleopard/webFramework/routes/RewriteActionResolver.java][createActionIfPossible][1] = -> matcher=ActionNamePattern.matcher(actionName,)@ -> IF { -> return new RewriteAction(matcher.group(1,),)@matcher.matches() }
results[https://github.com/Top-Q/jsystem/blob/4d33c8c9e74d520b77406f00fa3cfc794d89fdeb/jsystem-core-projects/jsystemCore/src/main/java/jsystem/framework/scenario/flow_control/AntFlowControl.java][extractMeaningfulName][1] = -> m=MEANINGFULNAME_PATTERN.matcher(comment,)@ -> IF { -> meaningfulName=m.group(1,)@m.find() -> container.setMeaningfulName(meaningfulName,false,)@ }
results[https://github.com/papyri/navigator/blob/6eb5dc456ba17c234bc0228785f7908de615f0ae/pn-metadata-portlets/src/test/java/tests/PublicationSearchPatternTests.java][testSBExtraction][1] = -> matcher=p.matcher(raw,)@ -> IF { -> actual=matcher.group(2,)@matcher.matches() } -> assertEquals("E: "+expected+" A: "+actual,expected,actual,)@
results[https://github.com/eclipse/tptp.test/blob/a60c283dc30bdf31dd762b35a91ee2d2e0810f8a/org.eclipse.hyades.test.core/src/org/eclipse/hyades/test/core/testservices/resources/WorkspaceResourceProviderService.java][listChildren][1] = -> matcher=pattern.matcher(methodArgs,)@ -> IF { -> file=matcher.group(1,)@matcher.find() -> resource=getWorkspaceResource(file,)@ }
results[https://github.com/eclipse/linuxtools/blob/54fdb19c42d69e0586a3f0aad9c9c09f50da444d/libhover/org.eclipse.linuxtools.cdt.libhover.texinfoparsers/src/org/eclipse/linuxtools/cdt/libhover/texinfoparsers/ParseAutomakeTexinfo.java][AddMacroDefxParms][1] = -> IF { -> tt=killTagsParms(mx.group(ParmsIndex,),)@null!=mx.group(ParmsIndex,) -> parms=tt.split(",\\s",)@!(null!=mx.group(ParmsIndex,)) -> return mpnew@null!=mx.group(ParmsIndex,) }
