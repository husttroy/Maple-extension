results[https://github.com/apache/karaf-cave/blob/1a56729609f80e385297ae816953afac313118b8/server/backend/filesystem/src/main/java/org/apache/karaf/cave/server/backend/impl/CaveRepositoryImpl.java][proxyHttp][2] = -> TRY {  -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/entwinemedia/weblounge/blob/fcd50b0aa30bebd477d4261f4ddaf0c52fff04cf/modules/weblounge-common/src/main/java/ch/entwine/weblounge/common/impl/util/TestUtils.java][parseTextResponse][3] = -> TRY {  -> responseText=EntityUtils.toString(response.getEntity(),"utf-8",)@ } CATCH(Exception) {}
results[https://github.com/pymager/pymager-java/blob/7238975212f7f055d325bd86e6115e6a637f7371/api/src/main/java/com/sirika/pymager/client/impl/HttpDownloadInputStreamSource.java][doWithHttpResponse][11] = -> TRY {  -> return generateInputStream(httpResponse.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/nbeloglazov/GeekAlarm/blob/d9b6b06a13b61eb1b6dcfcc710eeda5bd039c742/android/src/com/geekalarm/android/tasks/TaskManager.java][sendRequest][2] = -> TRY {  -> response=client.execute(request,)@ -> return response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/crh/escidoc-core-1.4/blob/a1fa99808bd3486232ac0b5081bc58a43e86a438/integration-tests/src/test/java/de/escidoc/core/test/sb/SearchTestBase.java][search][6] = -> TRY {  -> httpRes=(HttpResponse) result@ -> assertHttpStatusOfMethod("",httpRes,)@ -> return EntityUtils.toString(httpRes.getEntity(),HTTP.UTF_8,)@ } CATCH(Exception) {}
results[https://github.com/DavidOrchard/HockeyBuzz/blob/d9f87492808bd6c3854079cd1d45e577d10b8b57/android/src/com/phonegap/demo/HttpHandler.java][getHttpEntity][36] = -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sahan/RoboZombie/blob/6f84d6daea8a5804e60fe2e81a8064ee19872d84/robozombie/src/main/java/com/lonepulse/robozombie/core/response/parser/ObjectResponseParser.java][processResponse][3] = -> TRY {  -> responseBytes=EntityUtils.toByteArray(httpResponse.getEntity(),)@ -> bais=new ByteArrayInputStream(responseBytes,)@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/2139f978c863b2de04fa565a8df4d2fdbf2ceb8d/HttpClient-4.3/httpclient-cache/src/test/java/org/apache/http/impl/client/cache/TestBasicHttpCache.java][testOriginalResponseWithNoContentSizeHeaderIsReleased][1] = -> TRY {  -> result=impl.cacheAndReturnResponse(host,request,originResponse,requestSent,responseReceived,)@ -> EntityUtils.consume(result.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/Awful/Awful.apk/blob/4aab2f2ec2c71da481c28bc37a25f75745be7b48/Awful.apk/src/main/java/com/ferg/awfulapp/network/NetworkUtils.java][getStream][3] = -> TRY {  -> httpResponse=sHttpClient.execute(httpGet,)@ -> return httpResponse.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/SSilence/scotty/blob/f8bb27614677647d0947f87ea70d110a9486f088/src/scotty/transporter/impl/DefaultGatewayTransporter.java][sendAndReceive][1] = -> TRY {  -> response=httpclient.execute(targetHost,httpPost,)@ -> entity=response.getEntity()@ -> rawResponse=EntityUtils.toString(entity,)@ } CATCH(Exception) {}
results[https://github.com/se-yoshi/myapp/blob/f75c0d41571a875e261573407085b58fdd25a437/projects/myapp-batch-core/src/main/java/jp/myapp/batch/logic/BA01J010S01Impl.java][execute][2] = -> TRY {  -> response=client.execute(new HttpGet(uri,),)@ -> entity=response.getEntity()@ } CATCH(Exception) {}
results[https://github.com/europeana/contrib/blob/15934811e1930e93405735facf6b5c3989f9efdd/ntua/awareness/app/gr/ntua/ivml/awareness/search/SearchServiceAccess.java][searchEuropeanaRecord][2] = -> TRY {  -> httpRes=httpClient.execute(httpGet,)@ -> httpEntity=httpRes.getEntity()@ -> httpEntity.writeTo(out,)@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/2139f978c863b2de04fa565a8df4d2fdbf2ceb8d/HttpClient-4.3/httpclient/src/test/java/org/apache/http/impl/client/integration/TestConnectionAutoRelease.java][testReleaseOnAbort][5] = -> TRY {  -> response=this.httpclient.execute(target,httpget,)@ -> e=response.getEntity()@ -> Assert.assertNotNull(e,)@ } CATCH(Exception) {}
results[https://github.com/RedHatEMEA/rh6pd/blob/c4bee8c3f2281991795f4a2a97edcb7ec45aff75/examples/rest-web-example/src/main/java/com/rest/example/manager/JBPMRestManagementClient.java][getBytesFromRestGetService][1] = -> TRY {  -> resp=this.getResponseGET(url,null,)@ -> return resp.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/nfmangano/CalicoServer/blob/70d98304313ca1c9534061b30573d21e7e123608/calico3server/src/calico/plugins/designminders/DesignMindersPlugin.java][onDMScrap2Card][1] = -> TRY { -> resp=client.execute(post,)@ -> respEnt=resp.getEntity()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Rudin-Informatik/ch.ri.DynamicServlet/blob/2a73eed390687e1b9dd4d54c95969c8afba92f77/src/test/java/ch/ri/dynamicservlet/test/RestSubjectTest.java][getContent][2] = -> TRY {  -> response=client.execute(request,)@ -> string=EntityUtils.toString(response.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/hazelcast/hazelcast/blob/4a923f283aa641f947eed63633e1e584bf570090/hazelcast-wm/src/test/java/com/hazelcast/wm/test/AbstractWebfilterTestCase.java][executeRequest][5] = -> TRY {  -> response=client.execute(request,)@ -> entity=response.getEntity()@ -> return EntityUtils.toString(entity,)@ } CATCH(Exception) {}
results[https://github.com/adamfisk/LittleProxy/blob/af33371061a7c599f79e57d0030af4b64c8a09c0/src/test/java/org/littleshoot/proxy/HttpFilterTest.java][getResponse][1] = -> TRY {  -> hr=http.execute(get,)@ -> responseEntity=hr.getEntity()@ -> EntityUtils.consume(responseEntity,)@ } CATCH(Exception) {}
results[https://github.com/NetworksAreMadeOfString/Rhybudd/blob/7f6e34a7be2b41c1d7a44e8f9ecae6c3ed4a9e83/src/net/networksaremadeofstring/rhybudd/ZenossAPIZaas.java][Login][1] = -> TRY {  -> response=httpclient.execute(httpost,)@ -> response.getEntity().consumeContent()@ } CATCH(Exception) {}
results[https://github.com/cuyum/FormRender/blob/2a69e2667b9b096acf27fee719a7b6e709f37ea5/src/main/java/ar/com/cuyum/cnc/service/TransformationService.java][processResponse][1] = -> TRY { -> entity=EntityUtils.toString(rawResponse.getEntity(),)@ } CATCH(Exception) { -> log.error(e,)@ }
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/httpcomponents-client-4.0/httpclient/src/test/java/org/apache/http/impl/conn/TestTSCCMWithServer.java][testConnectionManagerGC][3] = -> TRY {  -> response=Helper.execute(request,conn,target,httpExecutor,httpProcessor,defaultParams,httpContext,)@ -> EntityUtils.toByteArray(response.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/RedHatEMEA/rh6pd/blob/c4bee8c3f2281991795f4a2a97edcb7ec45aff75/examples/rest-web-example/src/main/java/com/rest/example/manager/JBPMRestManagementClient.java][getRequestString][1] = -> TRY {  -> inputStream=response.getEntity().getContent()@ -> inputStreamReader=new InputStreamReader(inputStream,)@ } CATCH(Exception) {}
results[https://github.com/jsonld-java/jsonld-java/blob/015704bf96d35aa969b2133d6f2be35f511bf110/core/src/test/java/com/github/jsonldjava/utils/JSONUtilsTest.java][fromURLCache][1] = -> TRY {  -> respo=client.execute(get,localContext,)@ -> EntityUtils.consume(respo.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/arvindbatra/appvamp/blob/8ff3ce628b66fa731429ff09c81c0d7e1e4ec448/depot/source/main/apper/src/com/pjab/apper/helpers/HttpHelper.java][handleResponse][1] = -> TRY { -> entity=response.getEntity()@ -> entity.writeTo(buffer,)@ } CATCH(Exception) { -> e.printStackTrace()@ -> return (String) ""@ }
results[https://github.com/yanchenko/droidparts/blob/bca28b308ab6d776425de2aff9c97af7eaeef810/extra/src/org/droidparts/http/wrapper/DefaultHttpClientWrapper.java][consumeResponse][1] = -> TRY { -> resp.getEntity().consumeContent()@ } CATCH(Exception) { -> L.d(e,)@ }
results[https://github.com/huangjingyu/yaogan/blob/2a5b7290d94243c8e28d5657a66b330bbec95cca/yaogan-service-impl/src/main/java/com/rockontrol/yaogan/service/util/GeoServiceUtil.java][getContent][1] = -> TRY { -> return EntityUtils.toString(response.getEntity(),)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/xw8852/guoli/blob/1995be840714fbf8232f98194666ee307db942f2/guoli/docs/jsonposttest.java][getResponse][1] = -> TRY {  -> resp=client.execute(post,)@ -> return EntityUtils.toString(resp.getEntity(),HTTP.UTF_8,)@ } CATCH(Exception) {}
results[https://github.com/RedHatEMEA/rh6pd/blob/d11e85ffd2ffe18465e7c7aecf2aa2b382c84e21/rh6pd-processController/src/main/java/rh6pd/processController/manager/WebServiceClient.java][getBytesFromRestGetService][1] = -> TRY {  -> resp=this.executeGetRequest(url,null,)@ -> return resp.getEntity().getContent()@ } CATCH(Exception) {}
results[https://github.com/sahan/RoboZombie/blob/79867dd1fcb8e1a27c9466f4fb5639fc9bb9476f/robozombie/src/main/java/com/lonepulse/robozombie/response/RawResponseParser.java][deserialize][7] = -> TRY {  -> responseString=EntityUtils.toString(httpResponse.getEntity(),)@ -> return responseString.subSequence(0,responseString.length(),)@ } CATCH(Exception) {}
results[https://github.com/heyongjian/joy_launcher/blob/70044ef54a87cf9110e5a21a9612feb87c157149/src/com/joy/launcher2/network/util/HttpRequestUtil.java][postFromHttpClient][1] = -> TRY {  -> response=httpclient.execute(httppost,)@ -> return readStream(response.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/darrenjl/pdfrun/blob/61f485b9c6fa0944e2a9ad46767cd87c4492effb/external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/client/protocol/TestResponseContentEncoding.java][testContentEncodingNoEntity][4] = -> TRY {  -> response=new BasicHttpResponse(HttpVersion.HTTP_1_1,200,"OK",)@ -> interceptor.process(response,context,)@ -> entity=response.getEntity()@ -> Assert.assertNull(entity,)@ } CATCH(Exception) {}
results[https://github.com/kozo2/kgmlreader/blob/34d7fa317378ba42e483e2c98ff3e7f97f037948/KGMLReader/test/org/cytoscape/data/reader/kgml/test/SimpleClientTest.java][testClient][2] = -> TRY {  -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> System.out.println(EntityUtils.toString(entity,),)@ } CATCH(Exception) {}
results[https://github.com/square/okhttp/blob/894743dd5cfeb198d904903fa8598163e1f80808/okhttp-apache/src/test/java/com/squareup/okhttp/apache/OkApacheClientTest.java][success][3] = -> TRY {  -> response=client.execute(request,)@ -> actual=EntityUtils.toString(response.getEntity(),)@ -> assertEquals("Hello, World!",actual,)@ } CATCH(Exception) {}
results[https://github.com/pitfail/pitfail-demo/blob/f572ebe060ebf0c9beb2a10a15b19837b13843be/android/Pitfail_Android_Cleint/src/com/pitfail/HomeScreen.java][onClick][12] = -> TRY { -> response=client.execute(get,)@ -> rp=response.getEntity()@ -> originalContent=EntityUtils.toString(rp,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/darrenjl/pdfrun/blob/1b3be26c3328e1ede55801432c36eaf528bc23b1/external_sources/httpclient-4.1.1/httpclient-cache/src/test/java/org/apache/http/impl/client/cache/TestSizeLimitedResponseReader.java][testLargeResponseIsTooLarge][9] = -> TRY {  -> result=impl.getReconstructedResponse()@ -> body=EntityUtils.toByteArray(result.getEntity(),)@ -> Assert.assertArrayEquals(buf,body,)@ } CATCH(Exception) {}
results[https://github.com/jtbdevelopment/e-eye-o/blob/39fcc310a3290f3831f6a230023973fd87be0562/E-EYE-O_Example-Integration-HibernateJacksonJersey/test-integration/com/jtbdevelopment/e_eye_o/jersey/rest/JerseyRestViaGrizzlyIntegration.java][testGetVersion][2] = -> TRY {  -> response=httpHelper.httpGet(uri,adminClient,)@ -> assertEquals("2.0",EntityUtils.toString(response.getEntity(),),)@ } CATCH(Exception) {}
results[https://github.com/kwliou/SmartNature/blob/db1ca8ec084100a8fcae3f4ed3cbe6ef96d6e72a/src/edu/berkeley/cs160/smartnature/FindGarden.java][getPlots][8] = -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> result=EntityUtils.toString(entity,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sriramr79/calorieCounter/blob/2d589493befbc40964c7df0d93dae4b3c94c0c54/CalorieCounter/src/edu/upenn/cis350/util/HttpRequest.java][execBinaryHttpRequest][1] = -> TRY { -> response=m_client.execute(request,)@ -> return EntityUtils.toByteArray(response.getEntity(),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sabativi/MarsAttack/blob/dc3a8e678388a8d86ac5cbff28dc7f0067f33438/MarsAndroidClient/src/com/marsattacksgrenoble/utils/HttpUtils.java][getHttpContent][1] = -> TRY {  -> inputStream=response.getEntity().getContent()@ -> reader=new BufferedReader(new InputStreamReader(inputStream,),)@ } CATCH(Exception) {}
results[https://github.com/xwiki-contrib/xwiki-eclipse/blob/cb9c4b3b2b82336db939c80452f402c519cd065f/plugins/org.xwiki.eclipse.storage/src/main/java/org/xwiki/eclipse/storage/rest/XWikiRestClient.java][getServerInfo][7] = -> TRY {  -> response=executeGet(serverURI,)@ -> xwiki=(Xwiki) unmarshaller.unmarshal(response.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/iRail/BeTrains-for-Android/blob/51091e89d26d7a242dbe846a21d344f4ca972c4e/WelcomeActivity/src/tof/cv/mpp/Utils/ConnectionMaker.java][getJSONData][18] = -> TRY { -> response=httpClient.execute(method,)@ -> data=response.getEntity().getContent()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ttron/lab/blob/2139f978c863b2de04fa565a8df4d2fdbf2ceb8d/HttpClient-4.3/httpclient/src/test/java/org/apache/http/impl/client/integration/TestCookie2Support.java][testSetCookieVersionMix][1] = -> TRY {  -> response1=this.httpclient.execute(getServerHttp(),httpget,context,)@ -> e1=response1.getEntity()@ -> EntityUtils.consume(e1,)@ } CATCH(Exception) {}
results[https://github.com/darrenjl/pdfrun/blob/61f485b9c6fa0944e2a9ad46767cd87c4492effb/external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/conn/TestConnectionAutoRelease.java][testReleaseOnEntityConsumeContent][4] = -> TRY {  -> response=client.execute(target,httpget,)@ -> e=response.getEntity()@ -> Assert.assertNotNull(e,)@ -> EntityUtils.consume(e,)@ } CATCH(Exception) {}
results[https://github.com/darrenjl/pdfrun/blob/61f485b9c6fa0944e2a9ad46767cd87c4492effb/external_sources/httpclient-4.1.1/httpclient/src/test/java/org/apache/ogt/http/client/protocol/TestCookie2Support.java][testSetCookieVersionMix][2] = -> TRY {  -> response1=client.execute(getServerHttp(),httpget,context,)@ -> e1=response1.getEntity()@ -> EntityUtils.consume(e1,)@ } CATCH(Exception) {}
results[https://github.com/priyaaank/bloodtorrent/blob/49ab0c34cd23f79335d3bd4f0aabb8d2c8d28b56/droid/b/src/com/calatrava/bridge/AjaxRequestManager.java][readResponseBody][4] = -> TRY { -> entity=response.getEntity()@ -> content=entity.getContent()@ } CATCH(Exception) { -> Log.d(TAG,"Error ",)@ -> e.printStackTrace()@ }
results[https://github.com/ieb/sparsemapcontent/blob/597ea8da1f0b52d3024800e3ef1478cb54820f49/extensions/proxy/src/test/java/uk/co/tfd/sm/proxy/ProxyResponseImplTest.java][methodHasAResponseBody][1] = -> TRY {  -> when(response.getEntity(),).thenReturn(new StringEntity(body,),)@ } CATCH(Exception) {}
results[https://github.com/forcedotcom/aura/blob/9fce0091bd5089192ba46219e6397f3293c59428/aura/src/test/java/org/auraframework/impl/security/CSRFTokenValidationHttpTest.java][_testVerifyPostWithInvalidToken][2] = -> TRY {  -> httpResponse=perform(post,)@ -> statusCode=getStatusCode(httpResponse,)@ -> EntityUtils.consume(httpResponse.getEntity(),)@ } CATCH(Exception) {}
results[https://github.com/Tapad/tapestry-android-sdk/blob/a263ad6900d7a4f360f901d0674608b72c75679b/tapestry/src/com/tapad/tapestry/http/HttpClientStack.java][performGet][2] = -> TRY {  -> response=client.execute(http,)@ -> entity=response.getEntity()@ -> validateOrThrowResponse(response,)@ -> responseBody=readEntityBody(entity,)@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/8e5b87a6d50b46fe212da99a143fd44cdf38e528/HttpClient-4.2/httpclient/src/test/java/org/apache/http/conn/TestConnectionAutoRelease.java][testReleaseOnEntityWriteTo][5] = -> TRY {  -> response=client.execute(target,httpget,)@ -> e=response.getEntity()@ -> Assert.assertNotNull(e,)@ -> e.writeTo(outsteam,)@ } CATCH(Exception) {}
results[https://github.com/springside/springside4/blob/2e41a206c204e32de1deb2c86c60699d3202c13c/examples/showcase/src/main/java/org/springside/examples/showcase/web/MashupContentServlet.java][fetchContent][3] = -> TRY { -> remoteResponse=httpClient.execute(httpGet,context,)@ -> return remoteResponse.getEntity()@ } CATCH(Exception) { -> logger.error("fetch remote content"+targetUrl+"  error",e,)@ -> httpGet.abort()@ }
results[https://github.com/corestick/MateLauncher/blob/3b55b053e520b101e9f38d62b81d9dfeec2477bc/MateLauncher/src/mobi/intuitit/android/homepage/JSONfunctions.java][getJSONfromURL][1] = -> TRY { -> response=httpclient.execute(httpGet,)@ -> entity=response.getEntity()@ -> is=entity.getContent()@ } CATCH(Exception) { -> Log.e("kim","1"+e,)@ }
results[https://github.com/mattloidolt/CS414/blob/9c3c9b16404b5d6679e938bfd77b52e1d6c916a2/PizzasRUs/src/com/CS414/pizzasrus/AndoidKiosk.java][doInBackground][3] = -> TRY { -> response=httpClient.execute(httpGet,localContext,)@ -> entity=response.getEntity()@ -> text=getASCIIContentFromEntity(entity,)@ } CATCH(Exception) { -> return e.getLocalizedMessage()@ }
results[https://github.com/finalist/Project-Arena-Server/blob/1c5f2f338eca28f1a9720bd26bc0dd71f3beaff2/src/main/java/nl/kennisnet/arena/web/fileserver/FileController.java][send][1] = -> TRY {  -> response=httpclient.execute(httppost,)@ -> resEntity=response.getEntity()@ -> return FileCopyUtils.copyToByteArray(resEntity.getContent(),)@ } CATCH(Exception) {}
results[https://github.com/arpit87/SB1/blob/dfc41c4ee1a2d0eaee7de361296909613a547976/Hopin/src/my/b1701/SB/Server/ServerResponse.java][GetJSONResponse][2] = -> TRY { -> entity=serverResponse.getEntity()@ -> content=entity.getContent()@ } CATCH(Exception) { -> Log.e("Buffer Error","Error converting result "+e.toString(),)@ }
results[https://github.com/sahan/ZombieLink/blob/9fd9b5ae62faa3dc3df01bd683c70a4755c08f00/src/main/java/com/lonepulse/zombielink/response/JsonResponseParser.java][deserialize][2] = -> TRY {  -> jsonString=EntityUtils.toString(httpResponse.getEntity(),)@!(unavailable||incompatible) -> return Gson_fromJson.invoke(gson,jsonString,TypeToken_getType.invoke(typeToken,),)@!(unavailable||incompatible) } CATCH(Exception) {}
results[https://github.com/MatrixDev/Sutapu/blob/17a5c2205a32fc9a4ade771399e404b1736853d3/Sutapu/src/com/sutapu/api/connection/Connection.java][readResponseData][1] = -> TRY { -> return EntityUtils.toString(httpResponse.getEntity(),HTTP.UTF_8,)@ } CATCH(Exception) { -> Log.w(TAG,Log.getStackTraceString(ex,),)@ }
results[https://github.com/iNoles/Android/blob/3e5a21fea2aa4822c41783b3504989fd17893095/AndroidNolesCore/src/StatusNetOAuth.java][postData][1] = -> TRY { -> response=client.execute(post,)@ -> response.getEntity().consumeContent()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/uib/matterhorn/blob/a57f8f0c3d55da3d92ac74c5af27b00e83917106/modules2/opencast-test-harness/trunk/src/main/java/org/opencastproject/remotetest/ComposerRestEndpointTest.java][getRecepitStatus][4] = -> TRY {  -> xml=EntityUtils.toString(pollResponse.getEntity(),)@ -> doc=builder.parse(IOUtils.toInputStream(xml,),)@ } CATCH(Exception) {}
results[https://github.com/diederik555/stayconnected/blob/4beaa9877f32e74eb9b163d07a342739839d3585/Hidde/ClientServerRESTDemo/src/com/oadigital/clientserverrestdemo/MainActivity.java][doInBackground][3] = -> TRY { -> response=httpclient.execute(httppost,)@ -> entity=response.getEntity()@ -> result=EntityUtils.toString(entity,)@ } CATCH(Exception) { -> Log.e("ClientServerDemo","Error:",e,)@ }
results[https://github.com/crh/escidoc-core-1.4/blob/9503a5f294fa65f6fe2eaaf785bb7238147bbdb1/integration-tests/src/test/java/de/escidoc/core/test/common/client/servlet/ClientBase.java][handleBinaryResult][1] = -> TRY {  -> IF { -> httpRes=(HttpResponse) result@result instanceof HttpResponse -> ins=httpRes.getEntity().getContent()@ } } CATCH(Exception) {}
results[https://github.com/xwiki-contrib/xwiki-eclipse/blob/cb9c4b3b2b82336db939c80452f402c519cd065f/plugins/org.xwiki.eclipse.storage/src/main/java/org/xwiki/eclipse/storage/rest/XWikiRestClient.java][storeComment][1] = -> TRY {  -> response=executePostXml(commentsURI,comment,)@ -> result=(Comment) unmarshaller.unmarshal(response.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/httpcomponents-client-4.0/httpclient/src/test/java/org/apache/http/impl/conn/ExecReqThread.java][doConsumeResponse][3] = -> TRY {  -> IF { -> response_data=EntityUtils.toByteArray(response.getEntity(),)@response.getEntity()!=null } } CATCH(Exception) {}
results[https://github.com/Berico-Technologies/AMP/blob/751faf0a0c2da8e48fb933e0e74a8d149784afc4/amp-topology/global-topology-clients/java/src/main/java/amp/topology/client/HttpRoutingInfoRetriever.java][retrieveRoutingInfo][3] = -> TRY { -> response=httpClient.execute(httpGet,)@ -> entity=response.getEntity()@ -> content=EntityUtils.toString(entity,)@ } CATCH(Exception) { -> logger.error("Failed to retrieve routing info: {}",e,)@ }
results[https://github.com/forcedotcom/aura/blob/4a814bc0fd8634e259aab4624a6d3172bcc52894/aura/src/test/java/org/auraframework/test/AuraHttpTestCase.java][assertUrlResponse][1] = -> TRY {  -> httpResponse=perform(get,)@ -> EntityUtils.consume(httpResponse.getEntity(),)@ -> status=getStatusCode(httpResponse,)@ } CATCH(Exception) {}
results[https://github.com/sahan/ZombieLink/blob/9fd9b5ae62faa3dc3df01bd683c70a4755c08f00/src/test/java/com/lonepulse/zombielink/processor/ParserEndpoint.java][deserialize][2] = -> TRY {  -> json=EntityUtils.toString(httpResponse.getEntity(),)@ -> user=new Gson().fromJson(json,User.class,)@ } CATCH(Exception) {}
results[https://github.com/xwiki-contrib/xwiki-eclipse/blob/6f9cb52f56abad9734b817d2ad2ea44805afb8a3/plugins/org.xwiki.eclipse.rest/src/main/java/org/xwiki/eclipse/rest/XWikiRestClient.java][renamePage][4] = -> TRY {  -> response=executePutXml(pageURI,sourcePageToBeCopied,)@ -> result=(Page) unmarshaller.unmarshal(response.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/OrangeTeam/FamilyLink/blob/ecf780853ff2d4d8318ba209d0c4fc73b23028b0/app/src/org/orange/familylink/util/ConvertUtil.java][call][1] = -> TRY {  -> response=client.execute(httpGet,)@ -> entity=response.getEntity()@ -> br=new InputStreamReader(entity.getContent(),"utf-8",)@ } CATCH(Exception) {}
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/lib/jars-src/httpcomponents-client-4.0/httpclient/src/test/java/org/apache/http/conn/TestConnectionAutoRelease.java][testReleaseOnEntityConsumeContent][1] = -> TRY {  -> response=client.execute(target,httpget,)@ -> e=response.getEntity()@ -> assertNotNull(e,)@ -> e.consumeContent()@ } CATCH(Exception) {}
results[https://github.com/jtbdevelopment/e-eye-o/blob/39fcc310a3290f3831f6a230023973fd87be0562/E-EYE-O_Example-Integration-HibernateJacksonJersey/test-integration/com/jtbdevelopment/e_eye_o/jersey/rest/JerseyRestViaGrizzlyIntegration.java][createHttpClientSession][2] = -> TRY {  -> response=httpHelper.httpPostForm(uri,httpClient,formValues,)@ -> logger.info(EntityUtils.toString(response.getEntity(),),)@ } CATCH(Exception) {}
results[https://github.com/smarek/Simple-Dilbert/blob/e232db992000e8b71c815dc1cd2ee6c6b0c99272/src/com/mareksebera/dilbert/DilbertActivity.java][doInBackground][1] = -> TRY { -> response=client.execute(get,)@ -> return DilbertActivity.toString(response.getEntity(),)@ } CATCH(Exception) { -> Log.e(TAG,"HttpGet failed",e,)@ }
results[https://github.com/sergeymo/android-radio-t/blob/b9430373db29d6af38ae2d9a6411b85840e9dcad/Radio-T-Test/src/org/dandelion/radiot/explore/HttpServerTest.java][testReceivesResponseBody][1] = -> TRY {  -> response=sendGetRequest()@ -> body=EntityUtils.toString(response.getEntity(),)@ -> assertEquals(MyHttpServer.BODY_TEXT,body,)@ } CATCH(Exception) {}
results[https://github.com/dnt5020/IST440W-Android-App/blob/6e04ec13bd2ad1427b45293d13c0e9ed998e6482/TheLuvExchange/src/com/theluvexchange/android/WebService.java][postPhoto][1] = -> TRY { -> response=httpClient.execute(httpPost,localContext,)@ -> responseEntity=response.getEntity()@ -> xmlString=EntityUtils.toString(responseEntity,)@ } CATCH(Exception) { -> Log.e("TheLuvExchange","WebServiceError",e,)@ }
results[https://github.com/xwiki-contrib/xwiki-eclipse/blob/6f9cb52f56abad9734b817d2ad2ea44805afb8a3/plugins/org.xwiki.eclipse.rest/src/main/java/org/xwiki/eclipse/rest/XWikiRestClient.java][getXwikiInfo][1] = -> TRY {  -> response=executeGet(serverURI,username,password,)@ -> xwiki=(Xwiki) unmarshaller.unmarshal(response.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/sawise/SoftwerkCoffee/blob/d3fb534ca8612bd46b6c287d5109706693550041/CoffeeProject/Coffee/src/main/java/se/softwerk/coffee/Webservice.java][getWebservice][1] = -> TRY { -> httpResponse=httpClient.execute(httpGet,)@ -> httpEntity=httpResponse.getEntity()@ -> output=EntityUtils.toString(httpEntity,)@ } CATCH(Exception) { -> Log.i("Error...","something went wrong o.O"+e,)@ }
results[https://github.com/ORGTecnologo/7b6581PT/blob/42b0bea7c061638cfecea37719ef1c84a0a59f9c/Implementacion/ModuloMovil/workspace/Proyecto/src/Services/ValidaUsuarioWs.java][doInBackground][1] = -> TRY { -> resp=httpClient.execute(put,)@ -> respStr=EntityUtils.toString(resp.getEntity(),)@ } CATCH(Exception) { -> Log.e("ServicioRest","Error!",ex,)@ }
results[https://github.com/escidoc/escidoc-core/blob/6a07ec24f21c021289e0dbdf9cdc2f0cff05f212/integration-tests/src/test/java/de/escidoc/core/test/common/client/servlet/ClientBase.java][handleBinaryResult][1] = -> TRY {  -> IF { -> httpRes=(HttpResponse) result@result instanceof HttpResponse -> ins=EntityUtil.getContent(httpRes.getEntity(),)@ } } CATCH(Exception) {}
results[https://github.com/52North/OX-Framework/blob/6f9d0360c30b5fea0af646197f3b72d4539e887b/52n-oxf-ows-v110/src/test/java/org/n52/ows/request/HttpClientDecoratorTest.java][testGetCapabilities][1] = -> TRY {  -> httpResponse=httpclient.executeGet(baseUri,parameters,)@ -> responseEntity=httpResponse.getEntity()@ -> capabilities=XmlObject.Factory.parse(responseEntity.getContent(),)@ } CATCH(Exception) {}
results[https://github.com/fcrepo/fcrepo/blob/d37876973b783b99b74a74adad8bdf2fd564fbbf/fcrepo-integrationtest/fcrepo-integrationtest-core/src/main/java/org/fcrepo/test/integration/TestLargeDatastreams.java][exportAPIALite][1] = -> TRY {  -> response=client.execute(httpMethod,)@ -> dataStream=new BufferedInputStream(response.getEntity().getContent(),)@ } CATCH(Exception) {}
results[https://github.com/cgeo/cgeo/blob/020ad3046900886b6fd8fb226e23075e03a37ff7/main/src/cgeo/geocaching/network/Network.java][getResponseDataNoError][1] = -> TRY { -> data=EntityUtils.toString(response.getEntity(),CharEncoding.UTF_8,)@ -> return (replaceWhitespace)?TextUtils.replaceWhitespace(data,):data@ } CATCH(Exception) { -> Log.e("getResponseData",e,)@ }
results[https://github.com/clafonta/Mockey/blob/727af7a07c634378eb32c4b100906598671aded1/src/java/com/mockey/runner/JettyRunner.java][initializeMockey][1] = -> TRY {  -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> System.out.println("Response: "+entity.getContent(),)@ } CATCH(Exception) {}
results[https://github.com/caio1982/Corre-Curitiba/blob/0940e6c936a6ceccd18c83332a06271f1eca91d0/Android/CorreCuritiba/src/br/mello/arthur/correcuritiba/WebClient.java][get][1] = -> TRY { -> response=client.execute(get,)@!(useCache&&cache.isValid()) -> entity=response.getEntity()@!(useCache&&cache.isValid()) -> json=EntityUtils.toString(entity,)@!(useCache&&cache.isValid()) } CATCH(Exception) { -> return cache.retrieve()@!(useCache&&cache.isValid()) }
results[https://github.com/tburdett/Conan2/blob/ba04116f90086029c86e9c9f89d20bac7423f55f/conan-core-services/src/main/java/uk/ac/ebi/fgpt/conan/rest/AbstractRESTAPISubprocess.java][restApiRequest][2] = -> TRY { -> response=httpclient.execute(httpget,localContext,)@ -> entity=response.getEntity()@ -> responseString=EntityUtils.toString(entity,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/one-in-the-crowd/qpzm-woxn-eicn/blob/8c5a84636d18660fc0a3fa82ab5783425d46965d/src/ru/ifree/drugstore/server/util/HttpUtil.java][post][1] = -> TRY { -> response=execute(postMethod,)@ -> r_entity=response.getEntity()@ -> content=EntityUtils.toString(r_entity,"UTF-8",)@ } CATCH(Exception) { -> Log.e(e,)@ }
results[https://github.com/ttron/lab/blob/8e5b87a6d50b46fe212da99a143fd44cdf38e528/HttpClient-4.2/httpclient-cache/src/test/java/org/apache/http/impl/client/cache/TestCachingHttpClient.java][testCallsSelfOnExecuteHostRequestWithHandlerAndContext][2] = -> TRY {  -> streamingEntity=makeStreamingEntity()@ -> expect(theResponse.getEntity(),).andReturn(streamingEntity,)@ } CATCH(Exception) {}
results[https://github.com/mandylu/android/blob/546341da285b3f529a43f4e577f6c85da8820b62/baixing_quanleimu/src/com/quanleimu/activity/BigGallery.java][downloadBitmap][1] = -> TRY { -> response=httpClient.execute(httpPost,)@ -> is=response.getEntity().getContent()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ios-driver/ios-driver/blob/2e9c40cb4554951d0d598d91459d88e719653b9e/common/src/main/java/org/uiautomation/ios/communication/Helper.java][extractString][2] = -> TRY { -> is=resp.getEntity().getContent()@ -> IOUtils.copy(is,writer,"UTF-8",)@ } CATCH(Exception) { -> throw new WebDriverException(str,e,)@ }
results[https://github.com/k-int/KBPlus/blob/007c50a782ca10c8bc988e6a1f23b543314307de/docstore-java/src/main/java/org/kuali/ole/web/KBPlusTestServlet.java][createOutput][1] = -> TRY {  -> is=response.getEntity().getContent()@ -> fileInBuf=new BufferedInputStream(is,)@ -> is.close()@ } CATCH(Exception) {}
results[https://github.com/nebogeo/littlej/blob/0b53f24c54ec1e7405176313faa55035931c976f/android/Core/src/foam/littlej/android/app/net/MainHttpClient.java][GetText][1] = -> TRY { -> text=GetText(response.getEntity().getContent(),)@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/cksystemsgroup/CPCC/blob/c047503e05879a0672b591106d6df65cb4bacfbe/progam/engine/src/main/java/at/uni_salzburg/cs/ckgroup/cscpp/engine/sensor/SensorProxy.java][getSensorValueAsStream][1] = -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> return entity.getContent()@ } CATCH(Exception) { -> LOG.error("Can not access "+url,e,)@ }
results[https://github.com/aajackson/Creepers/blob/558ff057fa4224a04c38fc692f744ed641977959/desktop/Connector/myfavsCC.java][<init>][1] = -> TRY {  -> response=httpclient.execute(httpget,)@ -> response.getEntity().getContent().close()@ } CATCH(Exception) {}
results[https://github.com/xwiki-contrib/xwiki-eclipse/blob/6f9cb52f56abad9734b817d2ad2ea44805afb8a3/plugins/org.xwiki.eclipse.rest/src/main/java/org/xwiki/eclipse/rest/XWikiRestClient.java][getSpaces][1] = -> TRY {  -> response=executeGet(spacesURI,username,password,)@ -> spaces=(Spaces) unmarshaller.unmarshal(response.getEntity().getContent(),)@ -> return spaces.getSpaces()@ } CATCH(Exception) {}
results[https://github.com/Ducatel/TeXloud/blob/686974b08a14a1e63bcb962d17221bbce8db2dbc/AndroidSrc/src/com/android/texloud/Comm.java][signIn][3] = -> TRY { -> response=httpclient.execute(httppost,localContext,)@ -> entity=response.getEntity()@ -> is=entity.getContent()@ } CATCH(Exception) { -> Log.e("log_tag","Error in http connection "+e.toString(),)@ }
results[https://github.com/dreanor/androidwebapp/blob/6bb5d0d8dbcd60d2fd516dd1ad383d9f2938dea5/SchulPlan/src/g18/group5/schulplan/helper/DownloadTask.java][downloadUrl][3] = -> TRY { -> response=httpclient.execute(httppost,)@ -> entity=response.getEntity()@ -> is=entity.getContent()@ } CATCH(Exception) { -> Log.e("log_tag","Error in http connection "+e.toString(),)@ }
results[https://github.com/markkerzner/FreeEed/blob/6850819a46f60b64c4c7125fbf63b57b96af7a30/freeeed/src/main/java/org/freeeed/lotus/NSFParser.java][requestResults][2] = -> TRY { -> response=httpClient.execute(request,)@ -> entity=response.getEntity()@ -> responseString=EntityUtils.toString(entity,"UTF-8",)@ } CATCH(Exception) { -> System.out.println("NSFParser -- Problem sending data: "+e.getMessage(),)@ }
results[https://github.com/xwiki-contrib/xwiki-eclipse/blob/cb9c4b3b2b82336db939c80452f402c519cd065f/plugins/org.xwiki.eclipse.storage/src/main/java/org/xwiki/eclipse/storage/rest/XWikiRestClient.java][getSpaces][1] = -> TRY {  -> response=executeGet(spacesURI,)@ -> spaces=(Spaces) unmarshaller.unmarshal(response.getEntity().getContent(),)@ -> return spaces.getSpaces()@ } CATCH(Exception) {}
results[https://github.com/adamantoise/wordswithcrosses/blob/52ffda7a6f39abb07ab46a46a719dcdef870d106/words-with-crosses/src/com/totsp/crossword/versions/DefaultUtil.java][downloadFile][2] = -> TRY { -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> AbstractDownloader.copyStream(entity.getContent(),baos,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/apache/httpcore/blob/86b756db5f382a3b61fe61ec7a9dac1fa93dd30a/httpcore-nio/src/test/java/org/apache/http/nio/protocol/TestBasicAsyncResponseConsumer.java][testResponseProcessingWithException][1] = -> TRY {  -> when(response.getEntity(),).thenReturn(new StringEntity("stuff",),)@ -> consumer.responseReceived(response,)@ } CATCH(Exception) {}
results[https://github.com/ericfri/lydia/blob/5e1d8445ffc428c341ae4d9f6076503459d094b7/lydia/src/ca/efriesen/lydia/includes/GMapV2Direction.java][getDocument][1] = -> TRY { -> response=httpClient.execute(httpPost,localContext,)@ -> in=response.getEntity().getContent()@ -> doc=builder.parse(in,)@ } CATCH(Exception) { -> Log.e(TAG,"Get document error",e,)@ }
results[https://github.com/AKSW/FOX/blob/f50c23f188d0a82641b0fe6b778046fa1697c7a2/src/main/java/org/aksw/fox/ketools/Yahooapis.java][main][1] = -> TRY {  -> response=httpclient.execute(httpget,)@ -> entity=response.getEntity()@ -> IF { -> instream=entity.getContent()@entity!=null } } CATCH(Exception) {}
results[https://github.com/xwiki-contrib/xwiki-eclipse/blob/cb9c4b3b2b82336db939c80452f402c519cd065f/plugins/org.xwiki.eclipse.storage/src/main/java/org/xwiki/eclipse/storage/rest/XWikiRestClient.java][getWikis][1] = -> TRY {  -> response=executeGet(wikisURI,)@ -> wikis=(Wikis) unmarshaller.unmarshal(response.getEntity().getContent(),)@ -> return wikis.getWikis()@ } CATCH(Exception) {}
