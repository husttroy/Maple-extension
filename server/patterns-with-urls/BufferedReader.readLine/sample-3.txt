results[https://github.com/usunyu/LeetCode/blob/82bed472177be0704aa3d508121070f0f4797d44/Data Structures and Algorithms in Java/Chap8 - Binary Trees/huffmanTree.java][getString][1] = -> TRY {  -> br=new BufferedReader(isr,)@ -> s=br.readLine()@ } CATCH(Exception) {}
results[https://github.com/jponge/izpack-full-svn-history-copy/blob/b2f06ee87faa021fc2e92c3928d777ffe92387c2/izpack-src/branches/branch-3-6/src/lib/com/izforge/izpack/uninstaller/UninstallerFrame.java][getInstallPath][93] = -> TRY {  -> reader=new BufferedReader(inReader,)@ -> installPath=reader.readLine()@ -> reader.close()@ } CATCH(Exception) {}
results[https://github.com/ippontech/tatami-team1/blob/58e088acaecd348bbc95455de20e8a790b38e421/src/integration/java/fr/ippon/tatami/test/support/LdapTestServer.java][main][78] = -> TRY {  -> new BufferedReader(new InputStreamReader(System.in,),).readLine()@ } CATCH(Exception) {}
results[https://github.com/bugobliterator/BUAGI/blob/b750aaada2542649ca7b209d6a920e62ecf5c015/app/src/processing/app/UpdateCheck.java][readInt][12] = -> TRY {  -> reader=new BufferedReader(isr,)@ -> return Integer.parseInt(reader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/AntonioRochaOliveira/EAPLI_PL_2NB/blob/89ee8c0dcd5223b6d6843de6ceed9ce6610fbf45/eapli.util/src/eapli/util/Console.java][readLine][6] = -> TRY { -> in=new BufferedReader(converter,)@ -> return in.readLine()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/propra13-orga/gruppe92/blob/b9c610b42a4c0bfd948d4edf0fcc0dec81179e8b/src/newgame/Diggy_1_Server.java][run][2] = -> TRY {  -> BR=new BufferedReader(ISR,)@ -> Message=BR.readLine()@ -> System.out.println(Message,)@ } CATCH(Exception) {}
results[https://github.com/deruelle/mobicents/blob/8b13d6819d5f880ac3982327b0bb7e7857d87f0f/servers/media/core/server-impl/src/main/java/org/mobicents/media/server/impl/resource/zap/Test1.java][main][3] = -> TRY {  -> reader=new BufferedReader(new FileReader("c:\\temp\\mtp.txt",),)@ -> line=reader.readLine()@ } CATCH(Exception) {}
results[https://github.com/leleuj/pac4j/blob/31771b6b29a815c58f18d44314997b7eeaa02767/pac4j-saml/src/test/java/org/pac4j/saml/client/RedirectSaml2ClientIT.java][getInflatedAuthnRequest][2] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(inputStream,),)@ -> return reader.readLine()@ } CATCH(Exception) {}
results[https://github.com/LibraryOfCongress/bagit-java/blob/e10019cb62a4a0b56a44446c55e01be779f225bb/trunk/transfer-common/src/main/java/gov/loc/repository/utilities/ManifestReader.java][setFile][2] = -> TRY {  -> this.reader=new BufferedReader(new FileReader(file,),)@ -> this.nextLine=this.reader.readLine()@ } CATCH(Exception) {}
results[https://github.com/mozilla-services/android-sync/blob/465277d9b351c6ab8c2c56a5caa25358e4b56148/external/commons-codec-1.5/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java][testInputStreamReader][3] = -> TRY {  -> br=new BufferedReader(isr,)@ -> line=br.readLine()@ -> assertNotNull("Codec101:  InputStreamReader works!",line,)@ } CATCH(Exception) {}
results[https://github.com/johnperry/CTP/blob/16d8df881ffcd61d5fad7d59f67f83643cb3b370/source/java/org/rsna/ctp/stdstages/anonymizer/xml/XmlCommandHandler.java][<init>][1] = -> TRY {  -> br=new BufferedReader(new StringReader(cmds,),)@ -> line=br.readLine()@ } CATCH(Exception) {}
results[https://github.com/marklogic/recordloader/blob/bdf1333271c85b68b48b74c44d54e874250fef61/src/java/com/marklogic/ps/Crypto.java][decryptPassword][1] = -> TRY {  -> br=new BufferedReader(new InputStreamReader(cis,),)@ -> decrypted=br.readLine()@ } CATCH(Exception) {}
results[https://github.com/square/okhttp/blob/8508ae98fd2fc176996acdc50221803b0c226624/mockwebserver/src/test/java/com/google/mockwebserver/MockWebServerTest.java][testRedirect][24] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(in,),)@ -> assertEquals("This is the new location!",reader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/jdeolive/geoserver-old/blob/e93ef3e4f6b73d87e7d5a91fa0bfd69b6fb117ff/community/geoxacml/src/test/java/org/geotools/xacml/geoxacml/test/XACMLHttpTransporterTest.java][getPDPUrl][5] = -> TRY { -> in=new BufferedReader(new FileReader("src/test/resources/remotePDP.properties",),)@ -> urlString=in.readLine()@ } CATCH(Exception) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/fcrepo/fcrepo-historical/blob/96c4797cf94e9b580e77eca3a3c6d5a1dd86612f/fedorarepo-server/src/main/java/fedora/utilities/install/InstallOptions.java][readLine][25] = -> TRY { -> reader=new BufferedReader(new InputStreamReader(System.in,),)@ -> return reader.readLine()@ } CATCH(Exception) { -> throw new RuntimeException("Error: Unable to read from STDIN",)@ }
results[https://github.com/veltzer/demos/blob/ea818af497fce8aa0a1cbd8b9ea3bdf9e1080f04/java/standard/src/programming/samples/client_server/SentenceClient.java][main][3] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(in,"latin1",),)@ -> reply=reader.readLine()@ -> System.out.println("RECEIVED reply: "+reply,)@ } CATCH(Exception) {}
results[https://github.com/exoplatform/forum/blob/ff03eae6971f77036a965d518cf54c485d17b16a/forum/service/src/test/java/org/exoplatform/forum/service/impl/TestJCRDataStorage.java][stringOf][4] = -> TRY { -> return new BufferedReader(new InputStreamReader(inputStream,"UTF-8",),).readLine()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/jwill/algorithm-practice/blob/3f00f493815153528a492484da8ac794074702d6/UVaOnlineJudge/src/org/onlinejudge/uva/Main11799.java][main][2] = -> TRY {  -> in=new BufferedReader(new FileReader("data/11799.txt",),)@ -> cases=new Integer(in.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/Thibau/datalift-sdmxdatacube/blob/66046f08d510ca465e85bae6fc436c7575f2dacb/DemoRDF(ant)/src/org/sdmxsource/demo/rdf/main/RDFDataTransformer.java][main][1] = -> TRY {  -> in=new BufferedReader(converter,)@ -> filePath=in.readLine()@ -> beans=rdfDataTransformer.outputStructures(structureFormat,filePath,)@ -> rdfDataTransformer.outputData(beans,dataFormat,filePath,)@ } CATCH(Exception) {}
results[https://github.com/svn2github/javassist_mirror/blob/d72870bfb6b09927e10944bdd129ce18dfcf7366/src/test/javassist/compiler/CodeTest.java][main][3] = -> TRY {  -> line=new BufferedReader(new InputStreamReader(System.in,),).readLine()@ -> obj=jc.compile(line,)@ } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-integration/blob/ebcccdc5c94cc5da456e1430069ffeac006c148b/org.springframework.integration.xml/src/test/java/org/springframework/integration/xml/source/StringSourceTests.java][testWithUnsupportedPayload][12] = -> TRY {  -> reader=new BufferedReader(source.getReader(),)@ -> docAsString=reader.readLine()@ -> assertXMLEqual("Wrong content in StringSource","<?xml version=\"1.0\" encoding=\"UTF-8\"?><item>one</item>",docAsString,)@ } CATCH(Exception) {}
results[https://github.com/JustAnother1/Pacemaker/blob/85b38b7c6fcd10ea8d29acc63982149cf30e81f7/src/de/nomagic/printerController/ControllerMain.java][getCommitID][1] = -> TRY { -> in=new BufferedReader(new InputStreamReader(s,),)@ -> return in.readLine()@ } CATCH(Exception) { -> return e.toString()@ }
results[https://github.com/stumoodie/MetabolicNotationSubsystem/blob/1a0b111e7cd798b0924a267d7af876e6d7e572ad/test/uk/ed/ac/inf/Metabolic/sbmlexport/LibSBMLConfigManager.java][getPath][1] = -> TRY {  -> br=new BufferedReader(new FileReader("./testSetUp/PathToNativeSBMLLibraries.setUp",),)@ -> rc=br.readLine()@ -> System.out.println(rc,)@ } CATCH(Exception) {}
results[https://github.com/deanhiller/databus/blob/7091dbc9b9dfad87ada0dc59267bcf5a2a409101/modbus/src/main/java/gov/nrel/modbusclient/ModBusClient.java][loadMeters][1] = -> TRY { -> br=new BufferedReader(new FileReader(strFile,),)@ -> br.readLine()@ } CATCH(Exception) { -> log.warn("Exception while reading csv file: "+e,e,)@ }
results[https://github.com/elexis/elexis-3-base/blob/9b345ba381452306ca1f6161377001bc00f08e72/ch.elexis.base.ch.diagnosecodes/src/ch/elexis/base/ch/diagnosecodes/ICDImporter.java][<init>][5] = -> TRY {  -> br=new BufferedReader(new InputStreamReader(new FileInputStream(fname,),"iso-8859-1",),)@ -> prev=br.readLine()@ } CATCH(Exception) {}
results[https://github.com/apache/ace/blob/aa6d8ac162752277a755fb9a59698968df5fb399/ace-deployment-task-base/src/test/java/org/apache/ace/deployment/service/impl/DeploymentServiceImplTest.java][install][6] = -> TRY {  -> bufReader=new BufferedReader(new InputStreamReader(inputStream,),)@ -> versionString=bufReader.readLine()@ -> return new Version(versionString,)@ } CATCH(Exception) {}
results[https://github.com/samaitra/algos/blob/0087fb5d10f7e0a308d7aa6c22ab43aea42998ed/src/com/hr/GameOfThrones2.java][main][1] = -> TRY {  -> bufferedReader=new BufferedReader(new InputStreamReader(System.in,),)@ -> str=bufferedReader.readLine()@ -> checkPalindrome(str,)@ } CATCH(Exception) {}
results[https://github.com/wtsi-npg/illumina2bam/blob/ce9c42432a667d506eb93f6dc7842bab01505254/test/uk/ac/sanger/npg/illumina/TileTest.java][processAnotherTile][12] = -> TRY {  -> md5Stream=new BufferedReader(new FileReader(md5File,),)@ -> md5=md5Stream.readLine()@ -> assertEquals("9849624a131db28e5cd2af92c1064159",md5,)@ } CATCH(Exception) {}
results[https://github.com/svn2github/crux-framework/blob/4769b1dc2c4f3b75d06b43079fa76558206404b7/branches/crux/old/old-trunk/Crux/src/module/org/cruxframework/crux/module/CruxModuleBridge.java][getCurrentModule][17] = -> TRY { -> reader=new BufferedReader(new FileReader(currentModuleBridgeFile,),)@ -> return reader.readLine()@ } CATCH(Exception) { -> logger.info("No module registered under the bridge module. Assuming the development module",)@ }
results[https://github.com/xiaolezheng/com.zxl.http-request/blob/fd9ef3ba0e159a3a3d7022bb39110f7bb6bd3794/lib/src/test/java/com/github/kevinsawicki/http/RequestTest.java][getReader][2] = -> TRY {  -> reader=new BufferedReader(request.reader(),)@ -> assertEquals("hello",reader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/EDACC/edacc_aac/blob/411002a00676bca114f8f88bf5abbc6bded96e51/test/edacc/configurator/models/CensoredRandomForestTest.java][main][1] = -> TRY {  -> bufRdr=new BufferedReader(new FileReader(file,),)@ -> bufRdr.readLine()@ -> bufRdr.close()@ } CATCH(Exception) {}
results[https://github.com/ericherman/gearmanij/blob/c5ae4114fbc7883b15546538295636ca11503566/test/org/gearman/util/StreamsTest.java][testConnectMoreRealistically][4] = -> TRY {  -> receive=new BufferedReader(new InputStreamReader(getback,),)@ -> assertEquals("foo",receive.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/marioyc/Online-Judge-Solutions/blob/1446966d36ee53677c0568cca450f470c49d500a/Timus Online Judge/1222 - Chernobyl’ Eagles.java][main][5] = -> TRY {  -> in=new BufferedReader(new InputStreamReader(System.in,),)@ -> n=Integer.parseInt(in.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/anbangr/trusted-mr/blob/7dae18aa150c2eab8104c3913d057564831eb533/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/security/ssl/TestEncryptedShuffle.java][createCustomYarnClasspath][3] = -> TRY {  -> reader=new BufferedReader(new FileReader(f,),)@ -> cp=reader.readLine()@ -> writer.write(cp,)@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/31d92906d5d61f28af1711da4fa7fff18aa4e947/jersey/tests/e2e/src/test/java/org/glassfish/jersey/tests/e2e/client/ResponseBufferEntityTest.java][testSecondBufferedRead][2] = -> TRY {  -> buffered=new BufferedReader(response.readEntity(Reader.class,),)@ -> line=buffered.readLine()@ -> assertEquals(Resource.ENTITY,line,)@ } CATCH(Exception) {}
results[https://github.com/mdoninger/org.eclipse.mylyn.tasks/blob/43a767b8d046d41cecf0b9fa30a8f408560d5e2c/org.eclipse.mylyn.tasks.tests/src/org/eclipse/mylyn/tasks/tests/data/Xml11InputStreamTest.java][testXml10Stream][2] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(in,),)@ -> assertEquals("<?xml version=\"1.1\" encoding=\"UTF-8\"?>",reader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/mkrause/gx/blob/2fe118d26b29ef2d14971e721ec51f3430932e9a/src/main/BrowserChannelTest.java][main][2] = -> TRY { -> br=new BufferedReader(new InputStreamReader(System.in,),)@ -> br.readLine()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/iwein/spring-integration/blob/b8ed5eeffdada55a0bdc2d2aa853a98ac6ba89cb/spring-integration-twitter/src/main/java/org/springframework/integration/twitter/oauth/ConsoleBasedAccessTokenInitialRequestProcessListener.java][openUrlAndReturnPin][1] = -> TRY {  -> br=new BufferedReader(new InputStreamReader(System.in,),)@ -> return StringUtils.trim(br.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/melink14/6.867-Final-Project/blob/61359779c91912bc6f04640e2f10b76c634ccd77/src/project6867/MarioML.java][loadFeatureSpace][1] = -> TRY { -> r=new BufferedReader(new FileReader(filename,),)@ -> indices=r.readLine()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/kframework/k/blob/19f7ce3ce0eaa8b62ab039d3b7f103bd3c0d7928/javasources/IOServer/src/resources/ResourceSmt.java][getFromOutput][6] = -> TRY {  -> br=new BufferedReader(new InputStreamReader(smt.getInputStream(),),)@ -> output=br.readLine()@ } CATCH(Exception) {}
results[https://github.com/jose-acevedoflores/git-workspace/blob/a70eefab114cd36d4bea8947110cf677378faf6a/Utils/src/udp/simple/server/UDPClient.java][main][2] = -> TRY {  -> inFromUser=new BufferedReader(new InputStreamReader(System.in,),)@ -> sentence=inFromUser.readLine()@ -> sendData=sentence.getBytes()@ } CATCH(Exception) {}
results[https://github.com/mintools/min/blob/c1dfa442cb2dd74784ae7cd61f3706edfc2523ee/app/controllers/Sandbox.java][upload][1] = -> TRY {  -> r=new BufferedReader(new InputStreamReader(request.body,),)@ -> System.out.println("Uploaded: "+r.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-codec/blob/a85362e950874ce8fdc1c741a0b775495f2af842/src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java][testInputStreamReader][1] = -> TRY {  -> br=new BufferedReader(isr,)@ -> line=br.readLine()@ -> assertNotNull("Codec101:  InputStreamReader works!",line,)@ -> br.close()@ } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/0a475d034b73886824cacfea49d29a699312dcc5/jetty-spdy/spdy-jetty-http/src/test/java/org/eclipse/jetty/spdy/proxy/ProxyHTTPSPDYTest.java][testGETThenReset][3] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(input,"UTF-8",),)@ -> Assert.assertNull(reader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/linkedin/databus/blob/0f519041f31e234ec49525950935a50416c488e5/databus-util-cmdline/databus-util-cmdline-impl/src/test/java/com/linkedin/databus/util/TestDevRelaySrcConfigGen.java][testDevRelaySrcConfigGen][1] = -> TRY {  -> r=new BufferedReader(new FileReader(f,),)@ -> json=r.readLine()@ -> config=PhysicalSourceConfig.fromString(json,)@ } CATCH(Exception) {}
results[https://github.com/misto/Ruby-Refactoring/blob/24cfaa9c4aadaa0a4a1cb98e3530c4d1eb5eaace/org.rubypeople.rdt.launching.tests/src/org/rubypeople/rdt/internal/launching/tests/EvaluateRubyProcessOutput.java][main][1] = -> TRY {  -> in=new BufferedReader(new InputStreamReader(System.in,),).readLine()@ -> erpo.sendOutput(in,)@ } CATCH(Exception) {}
results[https://github.com/vnc-biz/zcs-openerp-connector/blob/e728f06b4591db5991b98bcff8eb493ca88c90dd/src/com_zimbra_erp_mail_connector/src/com_zimbra_erp_mail_connector/com/zimbra/configuration/ErpConfiguration.java][<clinit>][1] = -> TRY { -> br=new BufferedReader(isr,)@ -> MYSQL_PASSWORD=br.readLine()@ -> System.out.println("Mysql password: "+MYSQL_PASSWORD,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/samaitra/algos/blob/c695ff1be4b9e80466ef1c21554d2f2e95e21dab/src/com/google/TicTacToe.java][main][1] = -> TRY {  -> bufferedReader=new BufferedReader(new FileReader("TicTacToe/A-large.in",),)@ -> n=Integer.parseInt(bufferedReader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/jutzig/jabylon/blob/9aba491b2532748a79228469344bc5ec910e1983/org.jabylon.properties/src/test/java/org/jabylon/properties/util/PropertiesHelperTest.java][testCheckForBom][2] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(stream,),)@ -> assertEquals("The reader must contain everything after the bom","test",reader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/nio/charset/coders/IOCoders.java][isrNegative][3] = -> TRY {  -> br=new BufferedReader(isr,)@ -> TRY { -> br.readLine()@ } } CATCH(Exception) {}
results[https://github.com/radargun/radargun/blob/45ccb386f77d2720e1f8d9d24bb3895ab36ad2ad/framework/src/main/java/org/radargun/stages/ReportBackgroundStatsStage.java][generateTotalThroughputCsvFromThroughputCsv][1] = -> TRY { -> br=new BufferedReader(new InputStreamReader(in,),)@ -> br.readLine()@ } CATCH(Exception) { -> log.error("Error creating total throughput csv: ",e,)@ }
results[https://github.com/tanzwud/CERT803/blob/f8beb1be3646fa7dc5608e6745267aa1bf8c7be0/beginning/basics/arraysAndCollections/ArrayAndVowels.java][main][5] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(System.in,),)@ -> text=reader.readLine()@ -> array=text.toCharArray()@ } CATCH(Exception) {}
results[https://github.com/JEBailey/posl-dsl-framework/blob/15cbba66d5faec3e4a6a8690de47f0308b104d2d/posl-lang-core/src/posl/lang/CoreLangFeatures.java][readLine][3] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(System.in,),)@ -> line=reader.readLine()@ -> reader.close()@ } CATCH(Exception) {}
results[https://github.com/ferhatelmas/algo/blob/fc37f3e96d988cdc90c29607ef4299f46324cff8/eolimp/page10/q909/Main.java][main][1] = -> TRY {  -> s=new BufferedReader(new InputStreamReader(System.in,),).readLine().split(" ",)@ } CATCH(Exception) {}
results[https://github.com/ankhia/programming/blob/5d706cab1fbea66b8c130e1c7e82ac2e0666a0c0/Programming/src/Code333A.java][main][1] = -> TRY {  -> in=new BufferedReader(new InputStreamReader(System.in,),)@ -> a=Double.parseDouble(in.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/chriswhitmore/c348/blob/fe8e0ed95343ad9e14538afde02c490f14f35d14/src/tme3Server/HttpRequest.java][processRequest][1] = -> TRY {  -> br=new BufferedReader(new InputStreamReader(inputStream,),)@ -> requestLine=br.readLine()@ -> tokens=new StringTokenizer(requestLine,)@ } CATCH(Exception) {}
results[https://github.com/larsar/moria/blob/08d3ac72b4c39e5bc252669b4048ae629b922dab/moria/doc/SimpleCreateAuthSession.java][<init>][1] = -> TRY {  -> moriaID=new BufferedReader(new InputStreamReader(System.in,),).readLine()@ -> userData=moria.getAttributes(moriaID,)@ } CATCH(Exception) {}
results[https://github.com/jdurbin/durbinlib/blob/1b7339f9faa811f33d3b276db2b46b3d78e0b9b6/src/durbin/util/FileUtils.java][firstLine][1] = -> TRY {  -> in=new BufferedReader(new FileReader(fileName,),)@ -> rval=in.readLine()@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/sonhuytran/Code.Forces.Problem.Set/blob/cc4692c1c906600e18441a70471af0c10000b222/src/p133/P133A_HQ9Plus.java][main][1] = -> TRY { -> reader=new BufferedReader(isr,)@ -> hq9plus=reader.readLine()@ -> reader.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/bisanthe/twitstreet/blob/ca0380c3829c3bae95ac75cc4841862cdd95bb18/test/com/twitstreet/twitter/TwitterProxyTest.java][authorize][1] = -> TRY {  -> br=new BufferedReader(new InputStreamReader(System.in,),)@ -> oauth_verifier=br.readLine()@ -> accessTokenPair=twitterProxy.getAccessTokenPair(requestTokenPair,oauth_verifier,)@ } CATCH(Exception) {}
results[https://github.com/willuhn/jameica/blob/4bcd27f638dec4e130bc9d187db9b8626e505dd2/src/de/willuhn/jameica/system/ApplicationCallbackConsole.java][checkTrust][1] = -> TRY {  -> keyboard=new BufferedReader(isr,)@ -> s=keyboard.readLine()@ -> return s!=null&&"j".equalsIgnoreCase(s,)||"y".equalsIgnoreCase(s,)@ } CATCH(Exception) {}
results[https://github.com/lqjliu/ghlh/blob/c30f759a36d94df518c42391c9f351526665b737/src/main/java/com/ghlh/util/HttpUtil.java][accessInternet][1] = -> TRY { -> br=new BufferedReader(new InputStreamReader(in,"utf-8",),)@ -> line=br.readLine()@ } CATCH(Exception) { -> logger.error("Quote stock info from "+stockQuotesURL+" throw : ",ex,)@ }
results[https://github.com/marklogic/recordloader/blob/bdf1333271c85b68b48b74c44d54e874250fef61/src/java/com/marklogic/ps/TestCipher.java][main][1] = -> TRY {  -> br=new BufferedReader(new InputStreamReader(cis,),)@ -> System.out.println(br.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/systests/transports/src/test/java/org/apache/cxf/systest/http/WSDLQueryTest.java][sendQuery][1] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(is,),)@ -> line=reader.readLine()@ -> assertEquals("unexpected response",expectedResponseLine,line,)@ } CATCH(Exception) {}
results[https://github.com/slycelote/webcamstudio/blob/44464efaa5194ec418e19aaf91925316462bd921/trunk/src/webcamstudio/util/StopMonitor.java][run][1] = -> TRY { -> reader=new BufferedReader(new InputStreamReader(accept.getInputStream(),),)@ -> reader.readLine()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/apache/servicemix3/blob/1c1ee1a849b02158da78776a8f7ea451c5042afc/servicemix-jsr181/src/test/java/org/apache/servicemix/jsr181/Jsr181ComplexPojoTest.java][main][1] = -> TRY { -> reader=new BufferedReader(new InputStreamReader(System.in,),)@ -> reader.readLine()@ } CATCH(Exception) { -> System.err.println("Caught: "+e,)@ -> e.printStackTrace()@ }
results[https://github.com/axDev-JDK/jdk/blob/09c99a676d4e74af47b1d520efdbdd16b7ee5337/test/sun/security/krb5/auto/SSL.java][run][3] = -> TRY {  -> in=new BufferedReader(new InputStreamReader(sslSocket.getInputStream(),),)@ -> inStr=in.readLine()@ -> System.out.println("Received "+inStr,)@ } CATCH(Exception) {}
results[https://github.com/justayak/ALP5/blob/8735f2181f780486fa73879b94d78bcef9251c56/src/ueb03/Check.java][handle][5] = -> TRY {  -> dict=new BufferedReader(new InputStreamReader(in,),)@ -> LOOP { -> line=dict.readLine()@ } } CATCH(Exception) {}
results[https://github.com/molgenis/molgenis_apps-legacy/blob/742c7f8ea8cac809736c92d7477ff2a16469a5c7/apps/xgap/org/molgenis/xgap/other/xqtlworkbench_lifelines/ThreadReaders/CSVFileSpliter.java][<init>][1] = -> TRY {  -> this.br=new BufferedReader(new FileReader(fileName,),)@ -> this.headers=br.readLine().replace("\"","",).split("\\,",)@ } CATCH(Exception) {}
results[https://github.com/terencehonles/jaramiko/blob/09382b40dc4099441f04048c9264ff1ef0ff921e/test/net/lag/jaramiko/ChannelTest.java][testPTY][4] = -> TRY {  -> r=new BufferedReader(new InputStreamReader(schan.getInputStream(),),)@ -> assertEquals("communist j. cat",r.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/plbogen/CSDL/blob/91a01b810ffd24cc101dce4415b148602cf8eba5/diffXHTML/src/prefuse/util/ArrayLib.java][getIntArray][1] = -> TRY { -> br=new BufferedReader(new FileReader(filename,),)@ -> line=br.readLine()@ -> st=new StringTokenizer(line,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/boringmachine/SimplePoker/blob/81153d2141ff551b3da6f357f7c0e9a093bf1d98/v0.05/src/edu/kcg/Poker/Strategy/HumanPlayerStdIn.java][solveRaise][2] = -> TRY { -> in=new BufferedReader(new InputStreamReader(System.in,),)@ -> line=in.readLine()@ -> bet=Integer.parseInt(line,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/daianqi/cracking/blob/35a358a4716fc539ee3ecc5c537e421684157397/cracking7_0.java][main][1] = -> TRY {  -> readBuffer=new BufferedReader(new InputStreamReader(System.in,),)@ -> N=Integer.parseInt(readBuffer.readLine(),)@ -> printAllPrime(N,)@!(N<2) } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/15964519082ace94f73a6b1ead0b2b6bc8fb2b3e/jetty-websocket/src/test/java/org/eclipse/jetty/websocket/WebSocketMessageTest.java][testServerSendBigBinaryMessage][2] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(input,"ISO-8859-1",),)@ -> responseLine=reader.readLine()@ -> assertTrue(responseLine.startsWith("HTTP/1.1 101 Web Socket Protocol Handshake",),)@ } CATCH(Exception) {}
results[https://github.com/magsilva/ironiacorp-commons/blob/0c59520d28e86033465c9ee83e2effc6cfcc8188/commons-io/test/com/ironiacorp/io/IoUtilTest.java][testToFile_FromClassLoader][1] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(new FileInputStream(tmpFile,),),)@ -> assertEquals("Create the diff from the root of the MPLayer source tree: this makes the diff easier do apply.",reader.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/Th0ar/rate3/blob/d226de257360a477b0958ec0a22b4b201a2b8b65/src/rate/engine/task/BadResult.java][generateInfo][1] = -> TRY {  -> reader=new BufferedReader(new FileReader(logFilePath,),)@ -> result=reader.readLine().split(" ",)@ -> reader.close()@ } CATCH(Exception) {}
results[https://github.com/svn2github/crux-framework/blob/4769b1dc2c4f3b75d06b43079fa76558206404b7/branches/crux/3.3.0-GWT-2.2/CruxModules/src/br/com/sysmap/crux/module/CruxModuleBridge.java][getCurrentModule][3] = -> TRY { -> reader=new BufferedReader(new FileReader(currentModuleBridgeFile,),)@ -> return reader.readLine()@ } CATCH(Exception) { -> logger.info(messages.moduleBridgeErrorReadingModule(),)@ }
results[https://github.com/tdiesler/gravia/blob/c5b8d838937a875510f0ec289b4519f965033fd2/repository/src/test/java/org/jboss/test/gravia/repository/PersistentRepositoryStorageTestCase.java][testAddResourceWithMultipleContent][2] = -> TRY {  -> br=new BufferedReader(new FileReader(contentFile,),)@ -> Assert.assertEquals("some text",br.readLine(),)@ -> br.close()@ } CATCH(Exception) {}
results[https://github.com/afodor/cobs/blob/b84701deb5ea03d5be7233419cf950f7d5464c6b/cobs/covariance/parsers/PdbParser.java][getFourCharId][1] = -> TRY {  -> reader=new BufferedReader(new FileReader(fileToParse,),)@ -> firstLine=reader.readLine()@ -> reader.close()@ -> return firstLine.substring(62,66,)@ } CATCH(Exception) {}
results[https://github.com/henrysher/cryptoDB/blob/34afd74c7b7e6e74ef362ff6232297b426ae0757/eval/bench/src/client/SSHGetStats.java][getDiskStats][1] = -> TRY { -> br=new BufferedReader(new InputStreamReader(stdout,),)@ -> line=br.readLine()@ -> st=new StringTokenizer(line,)@ } CATCH(Exception) { -> e.printStackTrace(System.err,)@ }
results[https://github.com/TakashiMatsuda/zoneclassify/blob/9ce8168feef52395836eb2733ab5db4ad938d238/src/zone/InputWig.java][getWIG][1] = -> TRY { -> br=new BufferedReader(new FileReader(filename,),)@ -> br.readLine()@ -> br.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/service-oriented-science/Globus-Crux-Core/blob/bab84740c0144136df33a3765626b5e6e2b9c6c5/ajaxUI/mediator/src/main/java/org/cyberaide/security/Myproxy.java][retrieveCertificate][1] = -> TRY { -> input=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ -> uid=input.readLine()@ } CATCH(Exception) { -> log.info("Failed to retrieve proxy certificate!!\n"+e,)@ }
results[https://github.com/DSpace/DSpace/blob/7310043e567cd952b9ff5a1771d540d1489668c1/dspace-api/src/main/java/org/dspace/handle/UpdateHandlePrefix.java][main][1] = -> TRY {  } ELSE { -> input=new BufferedReader(new InputStreamReader(System.in,),)@ -> choiceString=input.readLine()@ } CATCH(Exception) {}
results[https://github.com/nourlcn/yarn-comment/blob/c98a1d7c4812bb3f83d05ac389207d6e9029e703/hadoop-hdfs-project/hadoop-hdfs-httpfs/src/test/java/org/apache/hadoop/fs/http/server/TestHttpFSServer.java][testHdfsAccess][7] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(conn.getInputStream(),),)@ -> reader.readLine()@ -> reader.close()@ } CATCH(Exception) {}
results[https://github.com/bryanjimenez/empanada/blob/e6a5ffa14bde5495b1182a74875f392f2a968b08/hadoop/hadoop-1.2.1/src/test/org/apache/hadoop/mapred/TestJvmManager.java][testJvmKill][3] = -> TRY {  -> in=new BufferedReader(new FileReader(pidFile,),)@ -> pid=in.readLine()@ -> in.close()@ -> jvmManager.setPidToJvm(jvmid,pid,)@ } CATCH(Exception) {}
results[https://github.com/thomasbecker/jetty-spdy/blob/2640e8010107970bedbd911d26e001137750e1ea/spdy-jetty-http/src/test/java/org/eclipse/jetty/spdy/http/ProtocolNegotiationTest.java][testServerAdvertisingSPDYAndHTTPSpeaksDefaultProtocolWhenNPNMissing][2] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(input,"UTF-8",),)@ -> line=reader.readLine()@ -> Assert.assertTrue(line.contains(" 404 ",),)@ } CATCH(Exception) {}
results[https://github.com/thihy/lucene/blob/2fbf861ad75a21ebff370f344fd98407fda51772/lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/utils/StreamUtilsTest.java][assertReadText][1] = -> TRY {  -> r=new BufferedReader(in,)@ -> line=r.readLine()@ -> assertEquals("Wrong text found in "+f.getName(),TEXT,line,)@ -> r.close()@ } CATCH(Exception) {}
results[https://github.com/shantanusharma/barna/blob/43357e51bc278593e830122e873cb7e5014dfca8/barna/barna.io/src/main/java/barna/genome/io/gtf/GTFwrapper.java][guessFieldTIDGID][1] = -> TRY { -> buffy=new BufferedReader(getReader(),)@ -> s=buffy.readLine()@ -> ss=s.split("\\s",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cogroo/cogroo4/blob/65f48ae3de1fe71f19a04f71ea81a8748950dc55/cogroo-eval/GramEval/src/main/java/cogroo/uima/SimpleRunCPE.java][<init>][1] = -> TRY {  -> LOOP { -> line=new BufferedReader(new InputStreamReader(System.in,),).readLine()@ } } CATCH(Exception) {}
results[https://github.com/XYAOSP/packages_apps_XYSettings/blob/5d003475e17816ab5584b34b840c9134505d6ff8/src/com/xylon/settings/beerbong/Utils.java][getProperty][1] = -> TRY { -> input=new BufferedReader(new InputStreamReader(p.getInputStream(),),)@ -> output=input.readLine()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sonatype/plexus-io/blob/e4d9089a7ae8f359914d8b7e0dea485f1a318dc4/src/test/java/org/codehaus/plexus/components/io/resources/PlexusIoZipFileResourceCollectionTest.java][testNamelessRootFolder][1] = -> TRY {  -> d=new BufferedReader(new InputStreamReader(entry.getContents(),),)@ -> assertEquals("dummy content",d.readLine(),)@ } CATCH(Exception) {}
results[https://github.com/JacORB/JacORB/blob/1f622ed9a104adffcb4437a3c8fc6d498cd35637/test/regression/src/test/java/org/jacorb/test/bugs/bug923/Client.java][main][1] = -> TRY {  -> br=new BufferedReader(new FileReader(f,),)@ -> iorString=br.readLine()@ -> obj=orb.string_to_object(iorString,)@ -> br.close()@ } CATCH(Exception) {}
results[https://github.com/CS3365/TTU-ACM-PC-Submitter/blob/ca4999569bd8b150f3695e85d246130137a53540/Submissions/team0/Problem0/0/Problem0/src/Problem0/Main.java][main][1] = -> TRY {  -> in=new BufferedReader(new FileReader("Problem0Input.txt",),)@ -> lines=Integer.parseInt(in.readLine(),)@ -> in.close()@ } CATCH(Exception) {}
results[https://github.com/hobinyoon/faban-src/blob/2d744a3e29448cd978073e5b4fac1aa71a2cc2a2/driver/src/com/sun/faban/driver/core/RunInfo.java][getPostRequest][1] = -> TRY {  -> br=new BufferedReader(new FileReader(data,),)@ -> s=br.readLine()@ -> br.close()@ -> requestString=generateRandomData(s,)@ } CATCH(Exception) {}
results[https://github.com/shantanusharma/barna/blob/22f0be87461b31652f308e1ea39cfbf651b76a12/barna/fbi.genome.astalavista/src/main/java/fbi/genome/astalavista/statistics/EventDavid.java][readAttributes][1] = -> TRY { -> buffy=new BufferedReader(new FileReader(annFile,),)@ -> s=buffy.readLine()@ -> toki=new StringTokenizer(s,inFileDelim,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/knowitall/tac2013/blob/fbf59b0f6f85c8b2fa590c72228d1329e295671b/multir/src/main/java/edu/knowitall/tac2013/preprocess/coref/Test.java][<init>][2] = -> TRY { -> r=new BufferedReader(new InputStreamReader(new FileInputStream(file,),"utf-8",),)@ -> nextLine=r.readLine()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/NCIP/cagrid2/blob/2166012b14aa119089f7b46ebbc9b3e1296db2f4/cagrid-gaards/cagrid-gaards-api/ref-src/org/cagrid/gaards/authentication/service/WhitelistUpdater.java][main][1] = -> TRY { -> waitForIt=new BufferedReader(new InputStreamReader(System.in,),).readLine()@ -> System.out.println(waitForIt,)@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/kevinsawicki/http-request/blob/03dd99fe11ef7b89d8d09e4088e24f91eb4f564c/lib/src/test/java/com/github/kevinsawicki/http/HttpRequestTest.java][getReader][1] = -> TRY {  -> reader=new BufferedReader(request.reader(),)@ -> assertEquals("hello",reader.readLine(),)@ -> reader.close()@ } CATCH(Exception) {}
results[https://github.com/JacORB/JacORB/blob/ddde29852200b56bf677c1633a7e1a97d505df04/test/regression/src/org/jacorb/test/util/JDKLoggerTest.java][XXXtestLogFileSingleton][1] = -> TRY {  -> in=new BufferedReader(new FileReader(logFile,),)@ -> line=in.readLine()@ -> in.close()@ -> assertNotNull(line,)@ } CATCH(Exception) {}
results[https://github.com/ALRubinger/shrinkwrap/blob/2fc7a69522e6fb42b6e38e111e931381e88ff1b5/extension-tomcat/src/test/java/org/jboss/shrinkwrap/tomcat/test/TomcatDeploymentIntegrationUnitTestCase.java][requestWebapp][1] = -> TRY {  -> reader=new BufferedReader(new InputStreamReader(entity.getContent(),),)@ -> line=reader.readLine()@ -> Assert.assertEquals("Unexpected response from Servlet",echoValue,line,)@ } CATCH(Exception) {}
