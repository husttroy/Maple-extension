results[https://github.com/Unidata/thredds/blob/f5d2b832c3cdb5a903a85befb6a654da6ae95a19/wmotables/src/main/java/edu/ucar/unidata/bufrvalidate/BtMessInfoController.java][getBufrMessageByPos] = -> TRY {  -> raf=new RandomAccessFile(file.getPath(),"r",)@ -> scan=new MessageScanner(raf,pos,true,)@ -> IF { -> return scan.next()@scan.hasNext() } -> IF { -> raf.close()@raf!=null && !(scan.hasNext()) } } CATCH {}
results[https://github.com/asascience/THREDDS/blob/d25102b3b58a3d0482b534be073968a20825cb12/wmoTables/src/main/java/thredds/bufrtables/BtMessInfoController.java][getBufrMessageByPos] = -> TRY {  -> raf=new RandomAccessFile(file.getPath(),"r",)@ -> scan=new MessageScanner(raf,pos,)@ -> IF { -> return scan.next()@scan.hasNext() } -> IF { -> raf.close()@raf!=null && !(scan.hasNext()) } } CATCH {}
results[https://github.com/asascience/THREDDS/blob/2b14a760f9896ffaad02d1a8619ed7497bb08673/bufrTables/src/main/java/thredds/bufrtables/BtMessInfoController.java][getBufrMessageByPos] = -> TRY {  -> raf=new RandomAccessFile(file.getPath(),"r",)@ -> scan=new MessageScanner(raf,pos,)@ -> IF { -> return scan.next()@scan.hasNext() } -> IF { -> raf.close()@raf!=null && !(scan.hasNext()) } } CATCH {}
results[https://github.com/mpatric/mp3agic/blob/7bcc62d40eaed06c66387f3613eaceef85d2d814/src/com/mpatric/mp3agic/app/Mp3Retag.java][trySetAlbumImage] = -> TRY { -> file=new RandomAccessFile(filename,"r",)@ -> IF { -> return false@file.read(bytes,)!=file.length() } -> id3Wrapper.setAlbumImage(bytes,mimeType,)@!(file.read(bytes,)!=file.length()) } FINALLY { -> IF { -> TRY { -> file.close()@file!=null } } }
results[https://github.com/Unidata/thredds/blob/5d6fa263f45e70d55c6f2f38bf34cf6f5f019fa9/bufrTables/src/main/java/thredds/bufrtables/BtMessInfoController.java][getBufrMessageByPos] = -> TRY {  -> raf=new RandomAccessFile(file.getPath(),"r",)@ -> scan=new MessageScanner(raf,pos,)@ -> IF { -> return scan.next()@scan.hasNext() } -> IF { -> raf.close()@raf!=null && !(scan.hasNext()) } } CATCH {}
results[https://github.com/YongJiang/org.eclipse.birt.common/blob/a0bc8d627844ba2ec29eeee5601e24f402d69153/plugins/org.eclipse.birt.core/src/org/eclipse/birt/core/archive/RAFolderOutputStream.java][<init>] = -> TRY {  -> this.name=file.getCanonicalPath()@ -> this.randomFile=new RandomAccessFile(file,"rw",)@ -> TRY { -> IF { -> this.randomFile.setLength(0,)@ } -> this.bufferMgr=new RAStreamBufferMgr(this.randomFile,)@ } CATCH { -> IF { -> randomFile.close()@randomFile!=null } } } CATCH {}
results[https://github.com/vadimbobrov/hdup/blob/4c17d4b800c0bd9f6bbc86c6abbec27cb1cb6b7b/src/main/java/com/os/rest/exchange/ByteHelper.java][allocateBodyFile] = -> TRY {  -> TRY { -> file=createTempFile()@ -> raf=new RandomAccessFile(file,"rw",)@ -> fc=raf.getChannel()@ -> buffer=fc.map(FileChannel.MapMode.READ_WRITE,0,size,)@ } FINALLY { -> IF { -> fc.close()@null!=fc } -> IF { -> raf.close()@null!=raf } } } CATCH {}
results[https://github.com/Unidata/thredds/blob/a7e431a6cc3f43b14257e7093df5e12a6afd2b38/wmoTablesOld/src/main/java/thredds/bufrtables/BtMessInfoController.java][getBufrMessageByPos] = -> TRY {  -> raf=new RandomAccessFile(file.getPath(),"r",)@ -> scan=new MessageScanner(raf,pos,true,)@ -> IF { -> return scan.next()@scan.hasNext() } -> IF { -> raf.close()@raf!=null && !(scan.hasNext()) } } CATCH {}
results[https://github.com/Unidata/thredds/blob/f85c7fc8f43ab2f8f964a4a3af640db0a09183a1/bufr/src/main/java/ucar/nc2/iosp/bufr/tables/BufrTables.java][readEmbeddedTableD] = -> TRY {  -> TRY { -> raf=new RandomAccessFile(location,"r",)@ -> scan=new MessageScanner(raf,)@ -> lookup=scan.getTableLookup()@ -> IF { -> return lookup.getLocalTableD()@lookup!=null } } FINALLY { -> IF { -> raf.close()@raf!=null && !(lookup!=null) } } } CATCH {}
results[https://github.com/Unidata/thredds/blob/f85c7fc8f43ab2f8f964a4a3af640db0a09183a1/bufr/src/main/java/ucar/nc2/iosp/bufr/tables/BufrTables.java][readEmbeddedTableB] = -> TRY {  -> TRY { -> raf=new RandomAccessFile(location,"r",)@ -> scan=new MessageScanner(raf,)@ -> lookup=scan.getTableLookup()@ -> IF { -> return lookup.getLocalTableB()@lookup!=null } } FINALLY { -> IF { -> raf.close()@raf!=null && !(lookup!=null) } } } CATCH {}
