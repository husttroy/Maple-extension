results[https://github.com/CMPUT301W13T11/FoodBook/blob/c7b988e51a5e7cebeac210009d428d1e62e8913f/FoodBookTest/src/ca/ualberta/cmput301w13t11/FoodBook/test/RecipesDbManagerTests.java][setUp][2] = -> TRY {  -> sdCardPath=Environment.getExternalStorageDirectory()+File.separator@ } CATCH(Exception) {}
results[https://github.com/mbarbon/mangaget/blob/05d6b3cfa19bcdf74516d20124563952d751b395/tests/src/org/barbon/mangaget/scrape/ScraperTest.java][setUp][2] = -> TRY {  -> externalStorage=Environment.getExternalStorageDirectory()@ -> tempDir=new File(externalStorage,"MangaGetTest",)@ } CATCH(Exception) {}
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/3ba7dc374a89593c640e7a3cf82c6760aa4fbe97/src/es/prodevelop/gvsig/mini/app/Initializer.java][initialize][1] = -> TRY {  -> Constants.ROOT_DIR=Environment.getExternalStorageDirectory().getAbsolutePath()@ } CATCH(Exception) {}
results[https://github.com/IntersectAustralia/faims-android/blob/67a08ca670dcda36d05f8cbc2b6203c428fd572c/faims-android-app/src/au/org/intersect/faims/android/ui/activity/ShowModuleActivity.java][hasDatabaseChanges][1] = -> TRY {  -> database=Environment.getExternalStorageDirectory()+FaimsSettings.modulesDir+module.key+"/db.sqlite3"@ -> databaseManager.init(database,)@ } CATCH(Exception) {}
results[https://github.com/davros-/platform_frameworks_base/blob/4b50cc39b0518a04b16eb0f0b6286859b32373a3/core/tests/hosttests/test-apps/DownloadManagerTestApp/src/com/android/frameworks/downloadmanagertests/DownloadManagerTestApp.java][runDownloadMultipleSwitching][41] = -> TRY {  -> localDownloadDirectory=Environment.getExternalStorageDirectory().getPath()@ -> downloadedFile=new File(localDownloadDirectory,filename,)@ } CATCH(Exception) {}
results[https://github.com/nocoast/android_packages_apps_Camera/blob/5665e3790841ffc54ab3494ef6627026d5048a8c/tests/src/com/android/camera/stress/TestUtil.java][prepareOutputFile][58] = -> TRY {  -> camera_test_output_file=Environment.getExternalStorageDirectory().toString()+"/mediaStressOut.txt"@ -> mfstream=new FileWriter(camera_test_output_file,true,)@ } CATCH(Exception) {}
results[https://github.com/AnySoftKeyboard/AnySoftKeyboard/blob/48b10a19c100905bd3fafd56874889026d4fafba/src/main/java/com/anysoftkeyboard/ui/settings/RestoreUserWordsAsyncTask.java][doAsyncTask][4] = -> TRY {  -> externalFolder=Environment.getExternalStorageDirectory()@ -> targetFolder=new File(externalFolder,"/Android/data/"+mAppContext.getPackageName()+"/files/",)@ } CATCH(Exception) {}
results[https://github.com/devnull-project/android_packages_apps_Camera/blob/585f0caa3549f5a700e9a939a9ce05ad7d1d6bb6/tests/src/com/android/camera/functional/VideoCaptureIntentTest.java][testExtraDurationLimit][116] = -> TRY {  -> mFile=new File(Environment.getExternalStorageDirectory(),"video.tmp",)@ -> uri=Uri.fromFile(mFile,)@ } CATCH(Exception) {}
results[https://github.com/mkedwards/android_cts/blob/6a2dedee137f39f732898de28e1e0ef20550dcca/tests/tests/media/src/android/media/cts/JetPlayerTest.java][setUp][3] = -> TRY {  -> mJetFile=new File(Environment.getExternalStorageDirectory(),"test.jet",).getAbsolutePath()@ } CATCH(Exception) {}
results[https://github.com/axDev-aosp/platform_packages_apps_Gallery2/blob/1ed8e6ffcff4efaeb861ccbc0c2483cd17f79a64/tests/src/com/android/photos/data/MediaCacheTest.java][setUp][7] = -> TRY {  -> externalDir=Environment.getExternalStorageDirectory()@ -> mDir=new File(externalDir,"test",)@ -> mCacheDir=new File(externalDir,"test_cache",)@ } CATCH(Exception) {}
results[https://github.com/bladenight/bladenightapp-android/blob/9dda0256295197bceadfc7470877afcd4f896fe8/src/de/greencity/bladenightapp/android/map/BladenightMapActivity.java][clearTileCache][1] = -> TRY { -> externalStorageDirectory=Environment.getExternalStorageDirectory().getAbsolutePath()@ } CATCH(Exception) { -> Log.w(TAG,"Failed to clear the MapsForge cache",e,)@ }
results[https://github.com/Imaginea/pancake-android/blob/b90f87ac613e1703315e4500525cd133866673ca/tests/src/com/imaginea/android/sugarcrm/restapi/GenerateModuleFieldsTest.java][generateClass][1] = -> TRY {  -> moduleFieldsClass=new File(Environment.getExternalStorageDirectory(),"ModuleFields.java",)@ -> fw=new FileWriter(moduleFieldsClass,)@ } CATCH(Exception) {}
results[https://github.com/IntersectAustralia/faims-android/blob/151b3938885024f1e0a590c87782a2b3394ffa1f/spatialite-android-test/src/com/spatialite/test/SpatialiteDatabaseGeneralTest.java][dbSetUp][3] = -> TRY {  -> db=new jsqlite.Database()@ -> db.open(Environment.getExternalStorageDirectory()+"/Download/testdb.sqlite",jsqlite.Constants.SQLITE_OPEN_CREATE,)@ } CATCH(Exception) {}
results[https://github.com/nagarajug/NagaRepos/blob/fb3cf5240054b5083feb906f12d044e774a5dd7d/src/jp/co/rakuten/android/basket/common/config/AbstractEncodingConfigPoller.java][createConfInstance][2] = -> TRY {  -> file2=android.os.Environment.getExternalStorageDirectory().getPath()+fileUrl@ -> f=new File(file2,)@ } CATCH(Exception) {}
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/c9283d9cecff35a940ca30741ef4173b4b0a72fe/src/src/es/prodevelop/gvsig/mini/map/MapState.java][<init>][2] = -> TRY { -> SDDIR=Environment.getExternalStorageDirectory().getPath()@ } CATCH(Exception) { -> log.error(e,)@ }
results[https://github.com/pankajc-optimus/android-lib/blob/1459cab20bf07f3d806a352789fd2929c6946057/PictureManager/Code/PictureModuleUT/src/com/example/librarypicturemodule/test/PictureModuleUT.java][setUp][2] = -> TRY {  -> filePath=Environment.getExternalStorageDirectory().getAbsolutePath().toString()+File.separator+"Pictures"@ } CATCH(Exception) {}
results[https://github.com/IntersectAustralia/faims-android/blob/ec8d3d7a06a10613a1d774859b5913c78834523d/faims-android-app/src/au/org/intersect/faims/android/services/DownloadModuleService.java][downloadDirectory][2] = -> TRY { -> moduleDir=Environment.getExternalStorageDirectory()+FaimsSettings.modulesDir+module.key@ -> downloadResult=faimsClient.downloadDirectory(moduleDir,downloadDir,"/android/module/"+module.key+"/"+requestExcludePath,"/android/module/"+module.key+"/"+infoPath,"/android/module/"+module.key+"/"+downloadPath,)@ } CATCH(Exception) { -> FLog.e("downloading dir "+downloadDir+" error",)@ }
results[https://github.com/sasq64/droidsound/blob/6be69f52c901fa689d7536c9aa31ba0624a07f6a/tests/src/com/ssb/droidsound/test/SongTest.java][setUp][1] = -> TRY {  -> f=Environment.getExternalStorageDirectory()@ -> tempDir=new File(f,"testmusic"+System.nanoTime(),)@ } CATCH(Exception) {}
results[https://github.com/biafra23/AmDroid/blob/2d36a5cdd7932f24c6308991405979f5e1ced07c/AmDroid/src/main/java/com/jaeckel/amenoid/util/HelloWorldMaker.java][main][1] = -> TRY {  -> outputDir=Environment.getExternalStorageDirectory()@ -> loader=dexMaker.generateAndLoad(HelloWorldMaker.class.getClassLoader(),outputDir,)@ } CATCH(Exception) {}
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/25518ef62ee5e7912be07302d602cef0f753736d/src/es/prodevelop/gvsig/mini/map/MapState.java][<init>][1] = -> TRY { -> SDDIR=Environment.getExternalStorageDirectory().getPath()@ } CATCH(Exception) { -> log.log(Level.SEVERE,"",e,)@ }
results[https://github.com/TeamNyx/packages_apps_LegacyCamera/blob/585f0caa3549f5a700e9a939a9ce05ad7d1d6bb6/tests/src/com/android/camera/functional/VideoCaptureIntentTest.java][testExtraSizeLimit][58] = -> TRY {  -> mFile=new File(Environment.getExternalStorageDirectory(),"video.tmp",)@ -> uri=Uri.fromFile(mFile,)@ -> length=mFile.length()@ } CATCH(Exception) {}
results[https://github.com/AndroidDeveloperAlliance/platform_packages_apps_Mms/blob/2020380c0d99a02fe809525df1fe0c992f346e16/tests/src/com/android/mms/ui/SmsStressTest.java][setUp][51] = -> TRY {  -> mWriter=new BufferedWriter(new FileWriter(new File(Environment.getExternalStorageDirectory(),OUTPUT,),true,),)@ } CATCH(Exception) {}
results[https://github.com/bopang/FaceMe/blob/411e2422d8f95616b2a1eda3b865c99eb76d05b7/FaceMe_Android/src/com/example/faceme_android/CameraActivitySuperMan.java][onClick][2] = -> TRY { -> filename=Environment.getExternalStorageDirectory().getPath()+"/CosplayTmp.png"@ -> out=new FileOutputStream(filename,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/arco/android_vendor_qcom_opensource_fm/blob/cd4bbb4f8e74be388a7d99dea1ca58c87ca19193/fmapp/src/com/codeaurora/fmradio/FMRadioService.java][getAvailableSpace][6] = -> TRY { -> sampleDir=Environment.getExternalStorageDirectory()@ -> stat=new StatFs(sampleDir.getAbsolutePath(),)@ } CATCH(Exception) { -> Log.i(LOGTAG,"Fail to access external storage",e,)@ }
results[https://github.com/insidepower/eclipseandroid/blob/e08729d92e5c2beb803eeb24e6d08740e8d132ed/reference/web/diskusage/src/com/google/android/diskusage/MountPoint.java][storageCardPath][1] = -> TRY { -> return Environment.getExternalStorageDirectory().getCanonicalPath()@ } CATCH(Exception) { -> return Environment.getExternalStorageDirectory().getAbsolutePath()@ }
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/core/tests/coretests/src/android/os/storage/AsecTests.java][isMediaMounted][12] = -> TRY {  -> mPath=Environment.getExternalStorageDirectory().toString()@ -> state=getMs().getVolumeState(mPath,)@ } CATCH(Exception) {}
results[https://github.com/carnero/c-geo/blob/185ed6c8e7e725ad2397b5505b776a567b4a6c66/src/carnero/cgeo/cgData.java][backupDatabase][2] = -> TRY { -> directoryTarget=Environment.getExternalStorageDirectory()+"/"+directoryImg+"/"@ -> directoryTargetFile=new File(directoryTarget,)@ } CATCH(Exception) { -> Log.w(cgSettings.tag,"Database wasn't backed up: "+e.toString(),)@ }
results[https://github.com/InsaneMalkavian/SpeedLogger/blob/24663ac3bc47b44c6ed3903a66111d9cff7e1404/src/com/delin/speedlogger/Activities/XYChartBuilder.java][onClick][3] = -> TRY { -> file=new File(Environment.getExternalStorageDirectory(),"test"+++index+".png",)@ -> output=new FileOutputStream(file,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/vdubedout/BeautifulWidgets_SkinMixer_Android/blob/422f9dca33e1419a56505a99bf8c7459a55fbc6d/SkinMixerTest/src/com/andexp/skinmixer/test/ZipExtractorTest.java][setUp][2] = -> TRY {  -> testPath=Environment.getExternalStorageDirectory()+SDCardSkinPath.BASE_PATH@ -> deleteDir(new File(testPath,),)@ -> mZipExtractor=new ZipExtractor(testPath,)@ } CATCH(Exception) {}
results[https://github.com/henrichg/PhoneProfilesPlus/blob/c70d31e53bec6553bb85424697e2a79a810d42d6/src/sk/henrichg/phoneprofiles/DatabaseHandler.java][importDB][2] = -> TRY { -> sd=Environment.getExternalStorageDirectory()@ -> exportedDB=new File(sd,EXPORT_DBPATH+"/"+EXPORT_FILENAME,)@ } CATCH(Exception) { -> Log.e("DatabaseHandler.importDB",e.toString(),)@ }
results[https://github.com/iRail/BeTrains-for-Android/blob/dbc02eb9ca8dd1dfc5bcf4178bd9c0263ccd9c84/BeTrains-for-Android/src/tof/cv/mpp/Utils/Utils.java][getCachedConnections][9] = -> TRY { -> memory=Environment.getExternalStorageDirectory()@ -> dir=new File(memory.getAbsolutePath()+DIRPATH,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Pkmmte/ADDITS/blob/2489c2cafdc32e83823e1a31d60dbd636ae76d2d/ADDITS/src/com/pk/addits/data/Data.java][retrieveCommentFeed][3] = -> TRY { -> sdCard=Environment.getExternalStorageDirectory()@ -> dir=new File(sdCard.getAbsolutePath()+"/Android/data/"+PACKAGE_TAG+"/"+TEMP_TAG,)@ } CATCH(Exception) { -> Log.w("[CommentFeed] XML Parse Error",e,)@ }
results[https://github.com/fraggel/RecoveryExecuter/blob/6837213bd69910b898647e1f49b098327f243c54/src/com/fraggel/recoveryexecuter/pro/crearLista.java][showRestoreChooser][1] = -> TRY {  -> fff=new File(Environment.getExternalStorageDirectory().getPath()+"/clockworkmod/backup/",)@ -> types=fff.list()@ } CATCH(Exception) {}
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/core/tests/coretests/src/android/os/storage/AsecTests.java][mountMedia][6] = -> TRY {  -> mPath=Environment.getExternalStorageDirectory().toString()@ -> ret=getMs().mountVolume(mPath,)@ } CATCH(Exception) {}
results[https://github.com/IntersectAustralia/faims-android/blob/9ad52c167599a581d295a69d11b0737167266e59/spatialite-android-test/src/com/spatialite/test/SpatialiteRTreeTest.java][dbSetUp][1] = -> TRY {  -> db=new jsqlite.Database()@ -> db.open(Environment.getExternalStorageDirectory()+"/Download/testdb.sqlite",jsqlite.Constants.SQLITE_OPEN_CREATE,)@ -> db.spatialite_create()@ } CATCH(Exception) {}
results[https://github.com/ramesesinc/clfc/blob/bef13779cbfc75bea8836572586de527efa393c2/platform/android/test-tracker/src/com/example/testapp2/MobileBroadcastReceiver.java][lockApplication][2] = -> TRY { -> path=Environment.getExternalStorageDirectory().getAbsolutePath()+"/"@ -> file=new File(path,".trackerlock",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/k-code/k-car/blob/115d7f33b9f2586550fcb70d8028c861139f7d18/CopProject/Cop/src/main/java/pro/kornev/kcar/cop/services/support/UpdateService.java][update][1] = -> TRY { -> PATH=Environment.getExternalStorageDirectory()+"/Download"@ -> file=new File(PATH,)@ } CATCH(Exception) { -> log.putLog("Update error! "+e.getMessage(),)@ }
results[https://github.com/TomTasche/OpenDocument.droid/blob/2a3eaee6734571a06643472164ef870ec7031874/test/src/at/tomtasche/reader/test/DocumentParseTest.java][setUp][1] = -> TRY {  -> directory=Environment.getExternalStorageDirectory()@ -> textDirectory=new File(directory,"text",)@ -> spreadsheetDirectory=new File(directory,"spreadsheet",)@ -> presentationDirectory=new File(directory,"presentation",)@ } CATCH(Exception) {}
results[https://github.com/cs301w09/301_project/blob/881a8f4efc2304ac1af9d9e0865ae8c6defc08ef/src/ca/ualberta/utils/ApplicationUtil.java][copyPhotoToSDCard][1] = -> TRY {  -> f=new File(Environment.getExternalStorageDirectory().getPath()+"/SqlPhotoStorageTest/"+"img_"+++image_count+".jpg",)@ -> out=new FileOutputStream(f,)@ } CATCH(Exception) {}
results[https://github.com/rcg0/arc/blob/a8fde404b29ebf967fae0dae75947cb9d6cb0b1c/android application/arc/src/com/example/asdf/FileHelper.java][saveBitmap][1] = -> TRY { -> mBaseFolderPath=Environment.getExternalStorageDirectory()+"/ARC/"@ -> mFilePath=mBaseFolderPath+imageButton.getTag()@ } CATCH(Exception) { -> Log.e("Could not save",e.toString(),)@ }
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/75ac0ee72bc1731ad5db7fbbaf4bee4d1735fc89/src/es/prodevelop/gvsig/mini/activities/LayersActivity.java][showLoadFileAlert][1] = -> TRY { } ELSE { -> sdPath=Environment.getExternalStorageDirectory().getAbsolutePath()@ } CATCH(Exception) { -> log.log(Level.SEVERE,"onMenuItemSelected: ",e,)@ }
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/media/tests/MediaFrameworkTest/src/com/android/mediaframeworktest/stress/MediaRecorderStressTest.java][setUp][7] = -> TRY {  -> stressOutFile=new File(String.format("%s/%s",Environment.getExternalStorageDirectory(),MEDIA_STRESS_OUTPUT,),)@ -> mOutput=new BufferedWriter(new FileWriter(stressOutFile,true,),)@ } CATCH(Exception) {}
results[https://github.com/gameclosure/native-android/blob/b77c9b02289899fbe93406bb7a45f9e892d662ea/TeaLeaf/src/com/tealeaf/PhotoPicker.java][getCaptureImageTmpFile][1] = -> IF { -> TRY { -> captureImageTmpFile=File.createTempFile(".gc_tmpfile",".jpg",Environment.getExternalStorageDirectory(),)@captureImageTmpFile==null } CATCH(Exception) { -> logger.log(e,)@ } }
results[https://github.com/vitkin/aptoide-client/blob/2de8b5512e67f8730b2e74b0b2fefb651058ad19/src/cm/aptoide/pt/services/MainService.java][onTaskRemoved][2] = -> TRY { -> files=new File(Environment.getExternalStorageDirectory().getAbsolutePath()+"/.aptoide",).listFiles()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/nightscape/android-shuffle/blob/d02cb25a3f7f518f847dc3f9980fdbae9118a565/client/src/org/dodgybits/shuffle/android/preference/activity/PreferencesRestoreBackupActivity.java][doInBackground][4] = -> TRY { -> dir=Environment.getExternalStorageDirectory()@ -> backupFile=new File(dir,filename[0],)@ } CATCH(Exception) { -> message=getString(R.string.warning_restore_failed,e.getMessage(),)@ -> reportError(message,)@ }
results[https://github.com/AOKP/packages_providers_DownloadProvider/blob/f1736ece4daa1ac0ab4024bcba8994591bbeddc9/tests/src/com/android/providers/downloads/PublicApiFunctionalTest.java][setUp][14] = -> TRY {  -> mTestDirectory=new File(Environment.getExternalStorageDirectory()+File.separator+"download_manager_functional_test",)@ } ELSE { -> mTestDirectory.mkdir()@!(mTestDirectory.exists()) } CATCH(Exception) {}
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/b2a05ba4d6142bd8eccd7f5ff85ad24f70aedf3f/src/es/prodevelop/gvsig/mini/activities/LogFeedbackActivity.java][clearLogs][1] = -> TRY { -> f=new File(Environment.getExternalStorageDirectory()+"/"+Utils.APP_DIR+"/"+Utils.LOG_DIR,)@ -> files=f.listFiles()@ -> deleted=f.delete()@ } CATCH(Exception) { -> log.log(Level.SEVERE,"clearLogs",e,)@ }
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/420ddb63fa2db8643813ed460550704a7e03ef39/branches/src/es/prodevelop/gvsig/mini/activities/LayersActivity.java][showLoadFileAlert][2] = -> TRY { } ELSE { -> sdPath=Environment.getExternalStorageDirectory().getAbsolutePath()@ } CATCH(Exception) { -> log.error("onMenuItemSelected: ",e,)@ }
results[https://github.com/rmcc/android_packages_apps_Settings/blob/8d770c707b888d4e82f5ce04b8d0b550c263858b/src/com/android/settings/MediaFormat.java][run][5] = -> TRY { -> service.formatVolume(Environment.getExternalStorageDirectory().toString(),)@ } CATCH(Exception) { -> Log.w("MediaFormat","Unable to invoke IMountService.formatMedia()",)@ }
results[https://github.com/criseyes/crescendo/blob/5bd1056cb2eef02b84609f58343bb0852ce949f5/CLIENT/src/com/kaist/crescendo/manager/FileEmulator.java][parseJONtoString][1] = -> TRY { -> path=Environment.getExternalStorageDirectory().getAbsolutePath()@ -> jsonFile=new File(path+"/"+fileName,)@ } CATCH(Exception) { -> Log.v("FileErr","File error"+e.toString(),)@ }
results[https://github.com/openintents/openintents/blob/2d0a64ab42f44d30ab3d5f13c2be987956df627e/newsreader/NewsReader/src/org/openintents/lib/DownloadingFileWorker.java][downloadMediaToSdCard][1] = -> TRY { -> IF { -> return null@entity==null } -> sdcardpath=android.os.Environment.getExternalStorageDirectory().getAbsolutePath()@!(entity==null) } CATCH(Exception) { -> Log.e(TAG,"LoadingWorker.run",e,)@ }
results[https://github.com/davros-/frameworks_base/blob/5114db02d535ad6af0104735db1741874c3385bf/media/tests/MediaFrameworkTest/src/com/android/mediaframeworktest/stress/CameraStressTest.java][setUp][3] = -> TRY {  -> sdcard=Environment.getExternalStorageDirectory()@ -> stressImagesDirectory=new File(String.format("%s/%s",sdcard,CAMERA_STRESS_IMAGES_DIRECTORY,),)@ -> stressOutFile=new File(String.format("%s/%s",sdcard,CAMERA_STRESS_OUTPUT,),)@ } CATCH(Exception) {}
results[https://github.com/Rubusch/android/blob/b025466793c8f39c24352d10e4f4ac08d552b9d7/WSN04/src/edu/wsn/phoneusage/main/MainActivity.java][bt_resetAction][2] = -> TRY { -> sd=Environment.getExternalStorageDirectory()@ -> IF { -> backupDB=new File(sd,backupDBPath,)@sd.canWrite() } } CATCH(Exception) { -> Log.w(SystemInfo.TIG,TAG+" saving database failed",)@ }
results[https://github.com/wuggi/softwareengineering/blob/91e5fcdc786ab303d197c3ca1661465210f5fa39/Project/src/de/Psychologie/socialintelligence/AdminSettingsActivity.java][backupDatabase][2] = -> TRY { -> sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED,Uri.parse("file://"+Environment.getExternalStorageDirectory(),),),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/djcoin/svn2git_gvsig_mini/blob/c9283d9cecff35a940ca30741ef4173b4b0a72fe/src/src/es/prodevelop/gvsig/mini/map/TileFilesystemProvider.java][getSDDir][2] = -> TRY { -> IF { -> SD_DIR=Environment.getExternalStorageDirectory().getPath()@SD_DIR==null } } CATCH(Exception) { -> log.error(e,)@ }
results[https://github.com/rcg0/arc/blob/a8fde404b29ebf967fae0dae75947cb9d6cb0b1c/android application/arc/src/com/example/asdf/FileHelper.java][downloadData][1] = -> TRY { -> testDirectory=new File(Environment.getExternalStorageDirectory()+"/ARC/",)@ -> fos=new FileOutputStream(testDirectory+"/"+button.getTag(),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mandylu/android/blob/e2932b1294c349255087ef5891181f7b2a046819/com.quanleimu.test/src/com/baixing/activity/test/trackdata/PVTestCase.java][setUp][1] = -> TRY {  -> flag=new File(Environment.getExternalStorageDirectory()+"/baixing_debug_log_crl.dat",)@ -> IF { -> flag.createNewFile()@!(flag.exists()) } } CATCH(Exception) {}
results[https://github.com/IntersectAustralia/faims-android/blob/ec8d3d7a06a10613a1d774859b5913c78834523d/faims-android-app/src/au/org/intersect/faims/android/services/UpdateModuleDataService.java][doDownload][1] = -> TRY { -> moduleDir=Environment.getExternalStorageDirectory()+FaimsSettings.modulesDir+module.key@ -> dataDir=new File(moduleDir+"/"+this.getResources().getString(R.string.data_dir,),)@ } CATCH(Exception) { -> FLog.e("error updating module",e,)@ }
results[https://github.com/openintents/filemanager/blob/feb90079954321f18d0dbb80c30c95995222d02e/FileManagerTest/src/org/openintents/filemanager/test/TestFileManagerActivity.java][setUp][1] = -> TRY {  -> sdcardPath=Environment.getExternalStorageDirectory().getAbsolutePath()+'/'@ -> cleanDirectory(new File(sdcardPath+"oi-filemanager-tests",),)@ -> createDirectory(sdcardPath+"oi-filemanager-tests",)@ } CATCH(Exception) {}
results[https://github.com/brewersofthesource/wagic/blob/082721aa6ce6f4c14b2204f89dd377623a085c23/projects/mtg/Android/src/org/libsdl/app/SDLActivity.java][initStorage][1] = -> TRY { -> externalFilesDir=Environment.getExternalStorageDirectory()@ -> IF { -> internalPath=externalFilesDir.getAbsolutePath()+"/Wagic"@externalFilesDir!=null } } CATCH(Exception) { -> Log.e("SDL","An error occurred in setting up the storage locations.",)@ }
results[https://github.com/eziosoft/MultiWii_EZ_GUI/blob/4a00e7e99255593dfe43982b120b56927a3e957a/src/nav/NavActivity.java][onClick][1] = -> TRY { -> saveMission(Environment.getExternalStorageDirectory()+"/MultiWiiLogs/"+input.getText().toString()+".mission",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Mobisocial/dungbeetle/blob/2f3e1fc7df63b691623631601e2ea780ccd1e9d7/src/edu/stanford/mobisocial/dungbeetle/SettingsActivity.java][doInBackground][1] = -> TRY { -> extStorageDirectory=Environment.getExternalStorageDirectory().toString()+"/MusubiBackup/"@ -> backupDB=new File(extStorageDirectory,DBHelper.DB_NAME,)@ -> fileDirectory=new File(extStorageDirectory,)@ } CATCH(Exception) { -> Log.e(TAG,"Failure backing up to SD card",e,)@ }
results[https://github.com/DiUS/resilience-android/blob/960d93c4fb9c1263268f9645490da2a5b0b6306f/resilience-test/src/test/java/au/com/dius/resilience/test/persistence/ParsePhotoRepositoryTest.java][testSave][1] = -> TRY {  -> photoFile=new File(Environment.getExternalStorageDirectory().getPath()+"/test_image.jpg",)@ -> out=new FileOutputStream(photoFile,)@ -> photo=new Photo(photoFile,)@ } CATCH(Exception) {}
results[https://github.com/dzo/packages_apps_camera/blob/7f3e3d21d5c332afe8f235509c793e924122cf7b/src/com/android/camera/VideoCamera.java][getAvailableStorage][9] = -> TRY { } ELSE { -> storageDirectory=Environment.getExternalStorageDirectory().toString()@ -> stat=new StatFs(storageDirectory,)@ } CATCH(Exception) { -> Log.e(TAG,"Fail to access sdcard",ex,)@ }
results[https://github.com/sticksoft/ADCPU-16Emu/blob/30e1aea607a3ea39820e0b3faf7e8debf9f6ffd8/src/uk/co/sticksoft/adce/DirectoryBrowserActivity.java][navigateTo][1] = -> TRY { -> IF { -> path=Environment.getExternalStorageDirectory().getAbsolutePath()+File.separatorChar+"ADCPU"@ } -> currentDirectory=new File(path,)@ } CATCH(Exception) { -> finish()@ }
results[https://github.com/iGio90/android_frameworks_base/blob/c2c778533288efb45107521eee9fcab82892fc9e/media/tests/MediaFrameworkTest/src/com/android/mediaframeworktest/stress/MediaPlayerStressTest.java][testVideoPlayback][6] = -> TRY {  -> playbackOutput=new File(Environment.getExternalStorageDirectory(),PLAYBACK_RESULT,)@ -> output=new BufferedWriter(new FileWriter(playbackOutput,true,),)@ -> IF { -> return @children==null } } CATCH(Exception) {}
results[https://github.com/kms77/EscapeIRAndro/blob/db0b610fccc56c88f547d2a1d13073394dfaa37b/src/fr/esipe/game/escapeir/ExportActivity.java][exportLevel][1] = -> TRY { -> dest=Environment.getExternalStorageDirectory().getAbsolutePath()+File.separator+levelName+".zip"@ -> System.out.println(dest,)@ -> Utils.zipFile(value,dest,)@ } CATCH(Exception) { -> Toast.makeText(ExportActivity.this,"Error",Toast.LENGTH_SHORT,).show()@ }
results[https://github.com/Mobisocial/dungbeetle/blob/2f3e1fc7df63b691623631601e2ea780ccd1e9d7/src/edu/stanford/mobisocial/dungbeetle/SettingsActivity.java][doInBackground][1] = -> TRY { -> extStorageDirectory=Environment.getExternalStorageDirectory().toString()+"/MusubiBackup/"@ -> IF { -> throw new RuntimeException("Backup database not found",)@!(newDb.exists()) } } CATCH(Exception) { -> Log.e(TAG,"Failure restoring from SD card",e,)@ }
results[https://github.com/spacecaker/android_frameworks_base_CSM9.1/blob/a4ee5974d66e944f3fa0466ea794deacb3f32975/services/java/com/android/server/MountService.java][run][2] = -> TRY { -> IF { -> notifyVolumeStateChange(null,Environment.getExternalStorageDirectory().getPath(),VolumeState.NoMedia,VolumeState.Mounted,)@ } } CATCH(Exception) { -> Slog.e(TAG,"Boot-time mount exception",ex,)@ }
results[https://github.com/dyoo/phonegap/blob/c13ee9637f32fbde3f46ed73f4ef4f9c256c64c0/android/project/src/com/phonegap/demo/DirectoryManager.java][getFreeDiskSpace][25] = -> IF { -> TRY { -> path=Environment.getExternalStorageDirectory()@ -> stat=new StatFs(path.getPath(),)@ } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/nguillaumin/osmtracker-android/blob/10cb736ecd9b58f925ffebd3d76bc73fdabebf39/tests/src/me/guillaumin/android/osmtracker/test/gpx/ExportTrackTaskTest.java][setUp][1] = -> TRY {  -> trackFile=new File(Environment.getExternalStorageDirectory(),"osmtracker/gpx-test.gpx",)@ -> IF { -> Assert.assertTrue(trackFile.delete(),)@trackFile.exists() } } CATCH(Exception) {}
results[https://github.com/davros-/frameworks_base/blob/da9165e10f476bc46f990e1d63a0f63dcbadbc26/tests/DumpRenderTree/src/com/android/dumprendertree/LayoutTestsAutoTest.java][<init>][7] = -> TRY { -> externalDir=Environment.getExternalStorageDirectory()@ -> resultsPassedFile=new File(externalDir,"layout_tests_passed.txt",)@ -> resultsFailedFile=new File(externalDir,"layout_tests_failed.txt",)@ -> resultsIgnoreResultFile=new File(externalDir,"layout_tests_ignored.txt",)@ -> noExpectedResultFile=new File(externalDir,"layout_tests_nontext.txt",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/zhoulzhou/IPCPlayer/blob/ccacfcc74df9cb2a338a39ea7bde0e991d9bbe50/src/com/example/ipcplayer/activity/FileActivity.java][write][1] = -> TRY { -> IF { -> sdCardDir=Environment.getExternalStorageDirectory()@ -> targetFile=new File(sdCardDir.getCanonicalPath()+FILE_NAME,)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/zhoulzhou/IPCPlayer/blob/ccacfcc74df9cb2a338a39ea7bde0e991d9bbe50/src/com/example/ipcplayer/activity/FileActivity.java][read][1] = -> TRY { -> IF { -> sdCardDir=Environment.getExternalStorageDirectory()@ -> fis=new FileInputStream(sdCardDir.getCanonicalPath()+FILE_NAME,)@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/asksven/AndroidCommon/blob/7937fd900ebb520cf52d6df95552508d6c344cb4/src/com/asksven/android/common/utils/DataStorage.java][LogToFile][2] = -> TRY { -> root=Environment.getExternalStorageDirectory()@ -> IF { -> dumpFile=new File(root,fileName,)@root.canWrite() } } CATCH(Exception) { -> Log.e(TAG,"Exception: "+e.getMessage(),)@ }
results[https://github.com/mattl/fm/blob/33e0dc79fce656f208bb86e803c83d649e797cbe/clients/libredroid/src/fm/libre/droid/LibreDroid.java][doInBackground][1] = -> TRY { -> root=Environment.getExternalStorageDirectory()@ -> musicDir=new File(root,"Music",)@ } CATCH(Exception) { -> res.add(false,)@ -> res.add(getString(R.string.download_failed,song.title,)+ex.getMessage(),)@ }
results[https://github.com/prey/prey-android-client/blob/b49fb09f2fb4a0783f188174b3fa006888f9aa23/src/com/prey/activities/SimpleVideoActivity.java][sendVideo][1] = -> TRY { -> uniqueOutFile=Environment.getExternalStorageDirectory().toString()+"/videooutput.mp4"@ -> file=new File(uniqueOutFile,)@ } CATCH(Exception) { -> PreyLogger.e("Error causa:"+e.getMessage()+e.getMessage(),e,)@ }
results[https://github.com/parmalazs/schonherz/blob/a8c2956d3d4b69a6c9f7c79fd440ae1c4c0d3c04/FlottaKezelo/src/com/schonherz/classes/SDCardUtil.java][getAvailableSpaceInMegaBytes][1] = -> TRY { -> stat=new StatFs(Environment.getExternalStorageDirectory().getPath(),)@ -> availableSpace=stat.getAvailableBlocks()*stat.getBlockSize()/1048576@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sasq64/droidsound/blob/6be69f52c901fa689d7536c9aa31ba0624a07f6a/tests/src/com/ssb/droidsound/test/PackTest.java][setUp][1] = -> TRY {  -> f=Environment.getExternalStorageDirectory()@ -> tempDir=new File(f,"packtest"+System.nanoTime(),)@ -> IF { -> throw new RuntimeException()@!(tempDir.mkdir()) } } CATCH(Exception) {}
results[https://github.com/mjdenham/and-bible/blob/0c0f1a8eb172db6792f08afa1a9cd360dd75f0f6/AndBible/experiments/SwordApi.java][initialise][2] = -> TRY { -> IF { -> sdcard=Environment.getExternalStorageDirectory()@ -> CWProject.setHome("jsword.home",sdcard.getPath()+"/jsword","JSword",)@ } } CATCH(Exception) { -> log.error("Error initialising",e,)@ }
results[https://github.com/JohnMurray/smilcloud/blob/bc64ef0a32490dba8f2a6494b92ef1da6f53fc1a/src/edu/nku/cs/csc440/team2/provider/MessageProvider.java][getMessageById][1] = -> TRY { -> fi=new File(Environment.getExternalStorageDirectory()+"/tempfile.xml",)@ -> fi.createNewFile()@ -> fop=new FileOutputStream(fi,)@ -> msg=new Message(fi,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/bazookan/Quiz_app/blob/0c29f1331552f7768b960bc70677ae5cac2923ed/src/com/example/quiz/DBhandling.java][exportDB][1] = -> TRY { -> sd=Environment.getExternalStorageDirectory()@ -> IF { -> backupDB=new File(sd,backupDBPath,)@sd.canWrite() } } CATCH(Exception) { -> Log.d("Debug_dbhandling_export","Exception => "+e.toString(),)@ }
results[https://github.com/koush/AndroidAsync/blob/f64d6efdd803528c6b904c2f489fbfea2cf6e8be/AndroidAsyncTest/src/com/koushikdutta/async/test/MultipartTests.java][testUpload][1] = -> TRY {  -> dummy=new File(Environment.getExternalStorageDirectory(),"AndroidAsync/dummy.txt",)@ -> dummy.getParentFile().mkdirs()@ -> fout=new FileOutputStream(dummy,)@ -> body.addFilePart("my-file",dummy,)@ } CATCH(Exception) {}
results[https://github.com/leeivan/mobile-ecommerce-android-education/blob/5665e1ecd0b8b25490a8325bea240a7813094344/mcommerce-sample-android/src/com/google/mcommerce/sample/android/chapter10/AccelerometerRecordToFileActivity.java][onCreate][1] = -> TRY { -> filename=Environment.getExternalStorageDirectory().getAbsolutePath()+"/accel.log"@ -> mLog=new BufferedWriter(new FileWriter(filename,true,),)@ } CATCH(Exception) { -> Log.e(TAG,"Unable to initialize the logfile",)@ -> e.printStackTrace()@ -> finish()@ }
results[https://github.com/gusterwoei/Nissan/blob/cb296e92ee1d76f7aff8016e59c6ca0ecdc2ce76/src/com/guster/nissan/fragment/StockDetailsFragment.java][onCreateView][1] = -> IF { -> TRY { -> sd=Environment.getExternalStorageDirectory()@ -> IF { -> dest=new File(sd+"/"+destLocation,)@sd.canWrite() } } CATCH(Exception) { -> ex.printStackTrace()@ } }
results[https://github.com/zfdang/asm-android-client-for-newsmth/blob/c73f20ded4f30617df9192d15d08717f7af5ea27/src/com/athena/asm/util/CrashHandler.java][saveCrashInfo2File][2] = -> TRY { -> IF { -> path=Environment.getExternalStorageDirectory().getPath()+"/aSM/crash/"@ -> dir=new File(path,)@ -> fos=new FileOutputStream(path+fileName,)@ } } CATCH(Exception) { -> Log.e(TAG,"an error occured while writing file...",e,)@ }
results[https://github.com/carnero/cgeo-original/blob/185ed6c8e7e725ad2397b5505b776a567b4a6c66/src/carnero/cgeo/cgData.java][restoreDatabase][2] = -> TRY { -> fileSource=Environment.getExternalStorageDirectory()+"/"+directoryImg+"/cgeo.sqlite"@ -> fileSourceFile=new File(fileSource,)@ -> IF { -> return false@fileSourceFile.exists()==false } -> input=new FileInputStream(fileSource,)@!(fileSourceFile.exists()==false) } CATCH(Exception) { -> Log.w(cgSettings.tag,"Database wasn't restored: "+e.toString(),)@ }
results[https://github.com/svenoaks/funwithmusic/blob/dde9f5878b9eb4ef56e52d0d1346c568a4fe9e2f/GN_Music_SDK_Android_3_2_0_144/src/com/customer/example/GracenoteMusicID.java][run][1] = -> TRY { -> bundleFilePath=Environment.getExternalStorageDirectory().getAbsolutePath()+"/bundle161.b"@ -> out=new FileOutputStream(bundleFilePath,)@ -> cacheStatus=config.loadCache(bundleFilePath,)@ -> bundlefile=new File(bundleFilePath,)@ } CATCH(Exception) { -> Log.e(LOG_TAG,e.toString(),)@ }
results[https://github.com/charlestontelles/INN372-android/blob/511a616653c2757f9459609f541dcab241b54900/SolarPowerCalcAndroid/src/au/edu/qut/inn372/greenhat/activity/TabbedOutputActivity.java][exportPDF][1] = -> TRY { -> IF { -> file=Environment.getExternalStorageDirectory().getPath()+FILE@ } -> PdfWriter.getInstance(document,new FileOutputStream(file,),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/anisimovdenis2009/AntRepo/blob/1f91de46eaa2e53c2524279cbbc011474075fd1a/src/com/app/ant/app/ServiceLayer/Synchronizer.java][receiveUpdateApk][1] = -> TRY {  -> downloadPath=Environment.getExternalStorageDirectory()+"/download/"@ -> outputFile=new File(downloadPath,apkFileName,)@ -> outputFileBuffer=new File(downloadPath,downloadFileName,)@ -> success=downloadFile(http,request,downloadPath,downloadFileName,true,)@ -> LOOP { -> success=downloadFile(http,request,downloadPath,downloadFileName,false,)@!(success)&&counter>0 } } CATCH(Exception) {}
results[https://github.com/fraggel/RecoveryExecuter/blob/b5e7f19bd5e5ea86ce6d6c647b3c9cbe194c8674/src/com/fraggel/recoveryexecuter/pro/MainActivity.java][onCreate][1] = -> TRY { -> sdCard=Environment.getExternalStorageDirectory()@ -> rutaTmp=new File(sdCard.getPath()+"/RecoveryExecuter/",)@ -> IF { -> tmpSD=sdCard.getPath()@sdCard!=null } } CATCH(Exception) { -> new REException(e,)@ }
results[https://github.com/PaperAirplane-Dev-Team/Music-Share-Android/blob/78dc81d7f6d43cccc2f645decfb4477ffc830ea9/src/com/paperairplane/music/share/Main.java][refreshMusicList][1] = -> TRY { -> sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED,Uri.parse("file://"+Environment.getExternalStorageDirectory().getAbsolutePath(),),),)@ } CATCH(Exception) { -> e.printStackTrace()@ -> setContentView(R.layout.empty,)@ }
results[https://github.com/mikegr/android-shuffle/blob/8f3dbaf91f59e181f75a06a443f77a01e31fa6fa/client/src/org/dodgybits/android/shuffle/activity/preferences/PreferencesCreateBackupActivity.java][doInBackground][4] = -> TRY { } ELSE { -> dir=Environment.getExternalStorageDirectory()@ -> backupFile=new File(dir,filename[0],)@ } CATCH(Exception) { -> message=getString(R.string.warning_backup_failed,e.getMessage(),)@ -> reportError(message,)@ }
results[https://github.com/AndroidImageProcessing/AndroidOpenCVforHackathons/blob/00c57368e88a28d0e20db688bb4ba049eec954f0/android/src/ca/ilanguage/rhok/imageupload/service/TakePicture.java][onActivityResult][1] = -> IF { -> TRY { -> sd=Environment.getExternalStorageDirectory()@ } CATCH(Exception) { -> Toast.makeText(getApplicationContext(),"Result picture wasn't copied, but it's in the Camera folder: "+getPath(myPicture,),Toast.LENGTH_LONG,).show()@ } }
results[https://github.com/bazaarvoice/bv-android-sdk/blob/b3c06733e3164b7f71cc37c5596c07319d53dac1/Sample Apps/ReviewSubmissionExample/src/com/bazaarvoice/example/reviewsubmission/CameraUtils.java][createTemporaryFile][1] = -> TRY {  -> tempDir=Environment.getExternalStorageDirectory()@ -> tempDir=new File(tempDir.getAbsolutePath()+"/bv-temp/",)@ -> IF { -> tempDir.mkdir()@!(tempDir.exists()) } -> return File.createTempFile(part,ext,tempDir,)@ } CATCH(Exception) {}
results[https://github.com/henrichg/PhoneProfiles/blob/f848fac240cc4248c2f76a0e2ab2707d379c6c24/src/sk/henrichg/phoneprofiles/DatabaseHandler.java][exportDB][2] = -> TRY { -> sd=Environment.getExternalStorageDirectory()@ -> exportedDB=new File(sd,GlobalData.EXPORT_PATH+"/"+EXPORT_DBFILENAME,)@ -> IF { -> exportDir=new File(sd,GlobalData.EXPORT_PATH,)@ } } CATCH(Exception) { -> Log.e("DatabaseHandler.exportDB",e.toString(),)@ }
results[https://github.com/umbrahan/TreasuresGleaner/blob/2b53054205ae832a1160cca7b30d23089e66da75/android/src/com/crazyamber/core/Logger.java][_openLogFile][7] = -> TRY { -> logpath=_context.getFilesDir().getAbsolutePath()+"/"@ -> pathes.add(logpath,)@ -> logpath=Environment.getExternalStorageDirectory().getAbsolutePath()+"/"@ -> pathes.add(logpath,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/dennischen/daily-money/blob/2d65256e53008c57fd337b43155d6ea1ea4cd42f/dailymoney/src/com/bottleworks/dailymoney/DesktopItemLoader.java][testCSV][1] = -> TRY { } ELSE { -> sd=Environment.getExternalStorageDirectory()@ -> folder=new File(sd,"bwDailyMoney",)@ } CATCH(Exception) { -> GUIs.longToast(context,"error "+x.getMessage(),)@ -> x.printStackTrace()@ }
results[https://github.com/YuhangGe/kankan/blob/ed1c6bc19c8ab6009695319cb44b206c32469d2c/app_android/src/android/kankan/activity/ActivityApplyActivity.java][doCropPhoto][1] = -> TRY { -> pictureFileDir=new File(Environment.getExternalStorageDirectory(),"/upload",)@ -> IF { -> pictureFileDir.mkdirs()@!(pictureFileDir.exists()) } -> picFile=new File(pictureFileDir,"upload.jpeg",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/androidarmv6/android_device_samsung_msm7x27-common/blob/f55f9c217786c3387fdf15d586a509702a842ae0/GalaxyParts/src/com/cyanogenmod/settings/device/GetLogTask.java][doInBackground][1] = -> TRY { -> dumpFilePath=Environment.getExternalStorageDirectory().getAbsolutePath()+"/"+dumpFileName@ -> outputStreamWriter.write("dumpstate > "+dumpFilePath+"\n",)@ -> outputStreamWriter.write("bzip2 -9 "+dumpFilePath+"\n",)@ -> return mContext.getText(R.string.bug_report_success,)+" SD card > "+dumpFileName+".bz2"@ } CATCH(Exception) { -> return mContext.getText(R.string.bug_report_failed,).toString()@ }
