results[https://github.com/jlaloi/TrayPass/blob/aa6d1558f9da5d992c7b4a9c32df48935ab6fae2/src/main/java/traypass/tools/ToolFTP.java][connect][2] = -> TRY {  -> url=new URL("ftp://"+user+":"+password+"@"+host+":"+port+"/"+targetFile+";type=i",)@ -> m_client=url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/SecurisationSiteGVI/securisation-site-gvi/blob/f5c2c253e5266b745b8afcf94002edc28bae7231/src/physique/io/CameraDriverSonyImpl.java][piloterCameraHaut][19] = -> TRY {  -> u=new URL("http://"+ip+"/command/ptzf.cgi?Move=up,8",)@ -> connection=(URLConnection) u.openConnection()@ } CATCH(Exception) {}
results[https://github.com/daisy-consortium/pipeline-mod-braille/blob/7e73cde0a8f719d60efc96c9698cdcef2e1eaf49/liblouis-calabash/src/main/java/org/daisy/pipeline/liblouis/calabash/TranslateFileProvider.java][unpackIniFile][8] = -> TRY {  -> iniFile.openConnection()@ -> reader=iniFile.openStream()@ } CATCH(Exception) {}
results[https://github.com/capedwarf/capedwarf-blue/blob/585c2b2c6f6a4e57a2267d1df5bfd90640cf8f8e/testsuite/src/test/java/org/jboss/test/capedwarf/testsuite/secure/test/SecureTest.java][testSecurePing][2] = -> TRY {  -> uc=new URL(url,"secure",).openConnection()@ -> conn=(HttpURLConnection) uc@ } CATCH(Exception) {}
results[https://github.com/Y3PP3R/AP2DX/blob/79daa77edb07ccf683c515de21f72cf132947ead/java/AP2DX/lib/jmockit/main/test/mockit/ClassLoadingAndJREMocksTest.java][mockURLAndURLConnectionUsingMockParameterAndMockField][1] = -> TRY {  -> conn=url.openConnection()@ -> assertSame(mockConnection,conn,)@ } CATCH(Exception) {}
results[https://github.com/okey666/BBC-News-Reader/blob/4ef5795a45bb8653e0630cba0e9d86d2698129cb/src/com/digitallizard/bbcnewsreader/resource/web/ImageDownloader.java][getImage][5] = -> TRY {  -> connection=url.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/xwiki/xwiki-commons/blob/7ed47fcdde1b15d1ed7867354c4ccb1c64d67811/xwiki-commons-core/xwiki-commons-classloader/src/test/java/org/xwiki/classloader/internal/protocol/attachmentjar/AttachmentURLStreamHandlerTest.java][testAttachmentJarURLWithEncodedChars][1] = -> TRY {  -> url=new URL(null,"attachmentjar://some%20page",(URLStreamHandler) this.handler,)@ -> url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/fornwall/eclipsescript/blob/6e46777802aaec6ee1cdade10cca7fefa61831a1/src/org/eclipsescript/util/JavaUtils.java][readURL][2] = -> TRY {  -> uc=url.openConnection()@ -> return readURLConnection(uc,)@ } CATCH(Exception) {}
results[https://github.com/abbyysdk/ocrsdk.com/blob/f7fb832ef9e7126367181efd9080911f501ea1e9/Java/Abbyy.Ocrsdk.client/src/com/abbyy/ocrsdk/Client.java][openGetConnection][2] = -> TRY {  -> connection=(HttpURLConnection) url.openConnection()@ -> setupAuthorization(connection,)@ } CATCH(Exception) {}
results[https://github.com/RvonMassow/xDoc/blob/0254e9ce3972b634f8b02ade04442499430c2938/org.eclipse.xtext.xdoc.tests/xtend-gen/org/eclipse/xtext/xdoc/ParserTest.java][testLink][1] = -> TRY {  -> connection=url.openConnection()@ -> Assert.assertNotNull(connection,)@ } CATCH(Exception) {}
results[https://github.com/Y3PP3R/AP2DX/blob/79daa77edb07ccf683c515de21f72cf132947ead/java/AP2DX/lib/jmockit/main/test/mockit/ClassLoadingAndJREMocksTest.java][mockURLAndHttpURLConnectionUsingMockParameters][1] = -> TRY {  -> conn=(HttpURLConnection) mockUrl.openConnection()@ -> assertSame(mockHttpConnection,conn,)@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/net/URLConnection/UNCTest.java][main][3] = -> TRY {  -> url=new URL(args[0],)@ -> conn=url.openConnection()@ -> conn.setRequestProperty("User-Agent","Java",)@ } CATCH(Exception) {}
results[https://github.com/sonatype/maven-reference-en/blob/ca21ce893236eefd8dde5e7b659962f92af42b2d/examples/ch-custom/simple-weather/src/main/java/org/sonatype/mavenbook/weather/YahooRetriever.java][retrieve][117] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/DomoTop/DomoTop/blob/a68bd34899db71c695ee09236ab912a73a60620f/Product/Controller/test/org/openremote/controller/rest/ListPanelIDsTest.java][testBrokenPanelXMLStructureNotWellFormatted2][5] = -> TRY {  -> panelList=new URL(RESTTests.containerURL+RESTAPI_PANELS_URI,)@ -> connection=(HttpURLConnection) panelList.openConnection()@ -> RESTTests.assertHttpResponse(connection,Constants.HTTP_RESPONSE_INVALID_PANEL_XML,RESTTests.ASSERT_BODY_CONTENT,Constants.MIME_APPLICATION_XML,Constants.CHARACTER_ENCODING_UTF8,)@ } CATCH(Exception) {}
results[https://github.com/uDig/udig-platform/blob/fae0b31d673f218d5474c6cbdbc78749e8703d41/plugins/net.refractions.udig.catalog.wmt/src/net/refractions/udig/catalog/internal/wmt/wmtsource/ww/LayerSet.java][getRootElementFromUrl][3] = -> TRY {  -> connection=url.openConnection()@ -> dom=builder.build(connection.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/BelieveROM/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/net/URLStreamHandlerFactoryTest.java][testCreateURLStreamHandler][39] = -> TRY {  -> url=new URL("http://android.com/",)@ -> connection=url.openConnection()@ -> assertTrue(connection instanceof Handler.HandlerURLConnection,)@ } CATCH(Exception) {}
results[https://github.com/niloc132/mauve-gwt/blob/200cef61c0606333348ce5c43ed2b8417e675025/gnu/testlet/java/net/URLConnection/URLConnectionTest.java][test_DefaultRequestProperty][1] = -> TRY { -> url=new URL("http://sources.redhat.com/mauve/testarea/index.html",)@ -> conn=url.openConnection()@ } CATCH(Exception) { -> harness.fail("Error in test_DefaultRequestProperty  - 1 "+" should not have raised exception here ",)@ }
results[https://github.com/egonw/pathvisio/blob/af58ae201d0b4b419dfad2e243bbe74aa274c50d/src/wikipathways/org/wikipathways/applet/gui/GenMappExporter.java][doExport][3] = -> TRY {  -> con=pwUrl.openConnection()@ -> pathway.readFromXml(con.getInputStream(),true,)@ } CATCH(Exception) {}
results[https://github.com/square/okhttp/blob/8508ae98fd2fc176996acdc50221803b0c226624/mockwebserver/src/test/java/com/google/mockwebserver/CustomDispatcherTest.java][testSimpleDispatch][3] = -> TRY {  -> url=mockWebServer.getUrl("/",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/newtonik/preppa/blob/30ae40b4168d3132630f424f6610482df9203f5c/lib/tapestry-src-5.0.18/tapestry-core/src/test/java/org/apache/tapestry5/internal/services/ComponentInstantiatorSourceImplTest.java][readDTM][3] = -> TRY {  -> connection=url.openConnection()@ -> connection.connect()@ -> return connection.getLastModified()@ } CATCH(Exception) {}
results[https://github.com/kingargyle/exist-1.4.x/blob/09d678fd8a58728dd51005c63b942f1ab6541ebc/test/src/org/exist/validation/TestTools.java][insertDocumentToURL][2] = -> TRY {  -> url=new URL(target,)@ -> connection=url.openConnection()@ -> os=connection.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/java/net/ResponseCache/B6181108.java][<init>][10] = -> TRY {  -> url=new URL(urlWithSpace,)@ -> urlc=url.openConnection()@ -> i=(HttpURLConnection) urlc.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/srnsw/xena/blob/8e19788ceb5f18d32d53017a5fc60bc2b3024de9/xena/ext/src/xalan-j_2_7_1/samples/servlet/ApplyXSLT.java][toAcceptLanguageConnection][5] = -> TRY {  -> tempConnection=url.openConnection()@ -> tempConnection.setRequestProperty("Accept-Language",request.getHeader("Accept-Language",),)@ } CATCH(Exception) {}
results[https://github.com/sorcersoft/sorcer/blob/27ba7a1c5438c6bce824e7f31428db6d6a0d7832/tests/int-tests/src/test/java/junit/sorcer/util/bdb/objects/SorcerDatabaseTest.java][sdbURL][8] = -> TRY {  -> sbdUrl=new URL("sbd://myIterface/name#dataContext=2345",)@ -> obj=sbdUrl.openConnection().getContent()@ } CATCH(Exception) {}
results[https://github.com/daisy-consortium/pipeline-mod-braille/blob/f0acbd82f15b02e4a07670da19d13d3def704276/pipeline-braille-utils/common-java/src/main/java/org/daisy/pipeline/braille/ResourceLookup.java][readProperties][1] = -> TRY { -> url.openConnection()@ -> reader=url.openStream()@ } CATCH(Exception) { -> throw new RuntimeException("Could not read properties file "+url,e,)@ }
results[https://github.com/Appverse/appverse-mobile/blob/2d4ab3af983fd61807b5b6deacf3f03a5be99e5f/appverse-platform-android/src/com/gft/unity/android/AndroidNet.java][tryConnection][1] = -> TRY { -> url.openConnection().connect()@ } CATCH(Exception) { -> LOG.Log(SystemLogger.Module.PLATFORM,"tryConnection warning",ex,)@ }
results[https://github.com/uditrugman/openjdk8-jdk/blob/05e3dd0aa660864619dab1a22f621ce009b82480/test/java/net/URL/HandlerLoop.java][main][3] = -> TRY {  -> url=new URL("file:///bogus/index.html",)@ -> System.out.println("url = "+url,)@ -> url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/cuckoo03/repository/blob/6697b49e8b3c1ddf5e6c964757eb65789a3e8a8f/java_networking/src/com/Exam10_4DaumSearch.java][main][9] = -> TRY { -> url=new URL(u,)@ -> conn=url.openConnection()@ -> httpUrlConn=(HttpURLConnection) conn@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/arjunroy/cinder_base/blob/9066cfe9886ac131c34d59ed0e2d287b0e3c0087/tests/CoreTests/android/core/URLTest.java][request][6] = -> TRY {  -> connection=url.openConnection()@ -> connection.connect()@ -> input=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-boot/blob/dcd120c47784ef683b29bb40401306f03bddee04/spring-launcher/src/test/java/org/springframework/launcher/jar/RandomAccessJarFileTest.java][getUrlStream][6] = -> TRY {  -> url=jarFile.getUrl()@ -> url.openConnection()@ -> url.openStream()@ } CATCH(Exception) {}
results[https://github.com/kencochrane/raven-java/blob/42c385b2c5a78e3a10e7f28188e6d4ad0c130b29/raven/src/test/java/net/kencochrane/raven/stub/SentryStub.java][connnectTo][2] = -> TRY { -> test=new URL(url,path,)@ -> return (HttpURLConnection) test.openConnection()@ } CATCH(Exception) { -> throw new IllegalStateException("Couldn't open a connection to the path '"+path+"' in '"+url+"'",e,)@ }
results[https://github.com/mgylling/epub-testsuite/blob/a218ff434bc401219b262dbc54407ecc8bbcc6b7/util/java/src/org/idpf/epub/testsuite/XOMUtil.java][download][2] = -> TRY {  -> url=uri.toURL()@ -> url.openConnection()@ -> reader=url.openStream()@ } CATCH(Exception) {}
results[https://github.com/wholeplatform/whole/blob/25ab4bb78cd95e2a351abdaf176cda6d3d310cb9/org.whole.lang/src/org/whole/lang/codebase/URLPersistenceProvider.java][delete][1] = -> TRY {  -> connection=url.openConnection()@ -> IF { -> httpConnection=(HttpURLConnection) connection@connection instanceof HttpURLConnection -> return code==HttpURLConnection.HTTP_OK||code==HttpURLConnection.HTTP_ACCEPTED||code==HttpURLConnection.HTTP_NO_CONTENT@connection instanceof HttpURLConnection } } CATCH(Exception) {}
results[https://github.com/signed/sandboxes/blob/8f3bb8bf35822e10cd004bbd8a8fa191710a738e/sandbox-javafx/src/test/java/javafx/QuickTest.java][file][3] = -> TRY {  -> url=new URL("file:///tmp/",)@ -> connection=url.openConnection()@ -> connection.connect()@ } CATCH(Exception) {}
results[https://github.com/escidoc/escidoc-core/blob/3de0ed1dd286670c514fe0e0f65381db826d404d/integration-tests/src/test/java/de/escidoc/core/test/EscidocRestSoapTestsBase.java][getTemplateAsString][4] = -> TRY {  -> con=(HttpURLConnection) path.openConnection()@ -> con.setRequestMethod("GET",)@ -> is=con.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/bladesilent/Harmony/blob/ebd49a241bf2858d7ea505d2ffa86eaba64b64c0/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/net/JarURLConnectionTest.java][test_getMainAttributes][2] = -> TRY {  -> u=new URL("jar:"+BASE+"!/swt.dll",)@ -> juc=(JarURLConnection) u.openConnection()@ -> a=juc.getMainAttributes()@ } CATCH(Exception) {}
results[https://github.com/Paxle/Paxle/blob/f3b4d2913a5a4f3b288215a091cba8c9eb425743/bundles/CharsetDetector/src/org/paxle/charset/impl/CharsetDetector.java][readMimeTypeSet][1] = -> TRY { -> connection=url.openConnection()@ -> connectionIn=connection.getInputStream()@ } CATCH(Exception) { -> this.logger.warn("Unable to read inspectable mimeTypes from "+url,e,)@ }
results[https://github.com/xebialabs/overthere/blob/fb635b6c69b407555e113e2b07078124c2db35dd/src/main/java/com/xebialabs/winrm/connector/JdkHttpConnector.java][sendMessage][2] = -> TRY { -> urlConnection=targetURL.openConnection()@ -> con=(HttpURLConnection) urlConnection@ -> is=urlConnection.getInputStream()@ } CATCH(Exception) { -> throw new WinRMRuntimeIOException("send message on "+targetURL+" error ",requestDocument,responseDocument,e,)@ }
results[https://github.com/Graylog2/graylog2-server/blob/e4b83fb0a6fb6dc27ce7fee6e9a79738774fdc13/src/main/java/org/graylog2/plugins/PluginInstaller.java][downloadAndCopyJar][2] = -> TRY {  -> jar=new URL(url,)@ -> jar.openConnection()@ -> reader=jar.openStream()@ } CATCH(Exception) {}
results[https://github.com/radekolesiak/gwtapp/blob/0c68c610d811321eefe7fb17bc6e0a4a7397fc4e/extension/user/srv/src/main/java/org/gwtapp/extension/user/server/service/ReCaptchaServiceImpl.java][getURL][1] = -> TRY { -> url=new URL(RECAPTCHA_URL+"?"+s,)@ -> connection=(HttpURLConnection) url.openConnection()@ } CATCH(Exception) { -> log.error("",e,)@ }
results[https://github.com/gilsondev/jsf2-api/blob/124d212e7273567eb42a4ba457241c9b39572cdd/jsf-ri/test/com/sun/faces/application/resource/TestResourceHandlerImpl.java][getBytes][5] = -> TRY {  -> c=url.openConnection()@ -> c.setUseCaches(false,)@ -> in=c.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/stigkj/one-jar/blob/0e6c12dac78a231fb4c86b639a5ebd5a04f9d8c7/example/com/simontuffs/onejar/example/main/Test.java][testContentType][1] = -> TRY {  -> url=new URL(uri,)@ -> connection=url.openConnection()@ -> contenttype=connection.getContentType()@ } CATCH(Exception) {}
results[https://github.com/barchart/barchart-udt/blob/701dbf7ac44e82ab4fed5a3ed531add03b8320a7/barchart-udt-core/src/main/java/com/barchart/udt/lib/RES.java][fileConnection][2] = -> TRY {  -> url=file.toURI().toURL()@ -> connection=url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/systests/jaxws/src/test/java/org/apache/cxf/systest/provider/datasource/DataSourceProviderTest.java][createConnection][1] = -> TRY {  -> url=new URL("http://localhost:9000/test/foo",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.setDoOutput(true,)@ } CATCH(Exception) {}
results[https://github.com/ansell/bioportal/blob/f785095f27dab833d1c2aa213387b5f662fd1da7/src/java/org/ncbo/stanford/util/loader/LoaderUtils.java][getContentLength][1] = -> TRY {  -> url=new URL(url_location,)@ -> uc=url.openConnection()@ -> contentLength=uc.getContentLength()@ } CATCH(Exception) {}
results[https://github.com/ansell/bioportal/blob/f785095f27dab833d1c2aa213387b5f662fd1da7/src/java/org/ncbo/stanford/util/loader/LoaderUtils.java][getLastModifiedDate][1] = -> TRY {  -> url=new URL(url_location,)@ -> uc=url.openConnection()@ -> lastModified=uc.getLastModified()@ } CATCH(Exception) {}
results[https://github.com/facetoe/JReader/blob/f21fdea190af5b1fe7bf1b54406ebbd0217deaae/src/com/facetoe/jreader/githubapi/GitHubAPI.java][sendRequest][1] = -> TRY {  -> System.out.println(url.toString(),)@ -> connection=(HttpsURLConnection) url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/wyona/yanel/blob/e8c11ff0ef7d626a5f811efec2d403c57e971a1a/src/realms/welcome-admin/yanel/resources/update-webapp/src/java/org/wyona/yanel/impl/resources/updateFinder/utils/WarFetcher.java][downloadUpdateWar][1] = -> TRY {  -> updateWarUrl=new URL("jar:"+updateLink+"!/",)@ -> URLcon=(JarURLConnection) updateWarUrl.openConnection()@ -> jar=URLcon.getJarFile()@ } CATCH(Exception) {}
results[https://github.com/vista-novo/fhir/blob/ff1186dfa3c425904efd20d968ff323ccea37064/build/tools/java/org.hl7.fhir.instance/src/org/hl7/fhir/instance/client/FHIRSimpleClient.java][makeClient][1] = -> TRY {  -> client=(HttpURLConnection) new URL(baseUrl+tail,).openConnection()@ -> client.addRequestProperty("accept","text/xml",)@ } CATCH(Exception) {}
results[https://github.com/brachior/platform_libcore/blob/0b26c7b2263a591b135e230231a331e3c0f123b8/luni/src/test/java/tests/api/java/net/JarURLConnectionTest.java][test_getInputStream_DeleteJarFileUsingURLConnection][30] = -> TRY {  -> url=new URL("jar:file:"+jarFileName+"!/"+entry,)@ -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ -> is=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/apache/oltu/blob/391c6ef2c16b694804b8e141fb38f02de119c96b/oauth-2.0/integration-tests/src/test/java/org/apache/oltu/oauth2/integration/ResourceTest.java][testResourceAccessHeaderNoToken][19] = -> TRY {  -> url=new URL(Common.RESOURCE_SERVER+Common.PROTECTED_RESOURCE_HEADER,)@ -> c=url.openConnection()@ -> IF { -> httpURLConnection=(HttpURLConnection) c@c instanceof HttpURLConnection } } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-boot/blob/2098e23fca3858e218f055373665fb1cf2188fdc/spring-boot-load/src/test/java/org/springframework/boot/load/jar/RandomAccessJarFileTests.java][getEntryUrlStream][3] = -> TRY {  -> url=new URL(this.jarFile.getUrl(),"1.dat",)@ -> url.openConnection()@ -> stream=url.openStream()@ } CATCH(Exception) {}
results[https://github.com/billstclair/loomclient/blob/72ac2aa32d454de56cd7751cb439bfd61a6f0a95/java/cc/loom/LoomClient.java][fetchURLString][3] = -> TRY { -> url=new URL(address,)@ -> connection=url.openConnection()@ -> in=new InputStreamReader(connection.getInputStream(),)@ } CATCH(Exception) { -> return "()"@ }
results[https://github.com/fake666/namnam/blob/8b6921757ded24929e67e3a12fee8a11c5e9e4e9/java/namnamparser/src/de/metalab/namnam/parser/util/XPathUtil.java][getHtmlUrlNode][1] = -> TRY {  -> url=new URL(sUrl,)@ -> con=url.openConnection()@ -> src=new InputSource(con.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/XYAOSP/libcore/blob/ca8ae42fd6a787757897a680108bdcf7b0d37f13/luni/src/test/java/libcore/net/http/DiskResponseCacheTest.java][testResponseCacheCallbackApis][25] = -> TRY {  -> url=server.getUrl("/",)@ -> connection=url.openConnection()@ -> assertEquals(body,readAscii(connection,),)@ } CATCH(Exception) {}
results[https://github.com/mevansjr/FSO/blob/41c4e3e9c2e327987e6d4f9565024b181e70709e/JAVA 2/Week 3/ContentServiceApp/src/com/markevansjr/fragmentapp/WebStuff.java][getURLStringResponse][6] = -> TRY { -> conn=url.openConnection()@ -> bin=new BufferedInputStream(conn.getInputStream(),)@ } CATCH(Exception) { -> Log.e("URL RESPONSE ERROR","getURLStringResponse",)@ }
results[https://github.com/woggle/mesos-old/blob/6168de123773c2cd97d1194603283ea168994289/frameworks/hadoop-0.20.2/src/hdfs/org/apache/hadoop/hdfs/tools/DFSck.java][run][7] = -> TRY {  -> path=new URL(url.toString(),)@ -> connection=path.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/dfc8b8654ff5f69a082ba2381b0f3f887e462374/ManalithBot/src/main/java/org/manalith/ircbot/plugin/DistroPkgFinder/StreamDownloader.java][setUrlConnection][2] = -> TRY { -> url=new URL(protocol,host,filename,)@ -> urlConn=url.openConnection()@ } CATCH(Exception) { -> System.out.println(e.getMessage(),)@ }
results[https://github.com/sidseth/h2-container-reuse/blob/42757420a5bc18d2de95069e5cf86b7cbc1d588c/hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/webapp/TestWebApp.java][getResponseCode][9] = -> TRY { -> c=(HttpURLConnection) new URL(url,).openConnection()@ -> return c.getResponseCode()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/arquillian/arquillian_deprecated/blob/54d35ff1bbb8fbf4f1131a95720567d351db746b/containers/tomcat-embedded-6/src/test/java/org/jboss/arquillian/container/tomcat/embedded_6/TomcatEmbeddedInContainerTestCase.java][shouldBeAbleToInvokeServletInDeployedWebApp][13] = -> TRY {  -> url=new URL(HELLO_WORLD_URL,)@ -> in=url.openConnection().getInputStream()@ -> len=in.read(buffer,)@ } CATCH(Exception) {}
results[https://github.com/sublima/sublima/blob/f75ba2c8ad795a18d88200fc03e806da4a2d9b3d/blocks/sublima-query/src/test/java/com/computas/sublima/query/integrationtest/SparqlResultsTest.java][testSPARQLquery][1] = -> TRY {  -> url=new URL(JOSEKI_URL+JOSEKI_ACTION+URLEncoder.encode(SPARQL_QUERY,"UTF-8",),)@ -> huc=(HttpURLConnection) url.openConnection()@ -> bodyInputStream=huc.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/test/java/net/CookieHandler/CookieHandlerTest.java][<init>][5] = -> TRY {  -> url=new URL(uri,)@ -> http=(HttpURLConnection) url.openConnection()@ -> respCode=http.getResponseCode()@ -> http.disconnect()@ } CATCH(Exception) {}
results[https://github.com/penSecIT/commons-vfs/blob/50421355d646c1b1019928095d0afc9fd8cf20bf/tags/vfs-1.0-RC3/src/test/org/apache/commons/vfs/impl/test/VfsClassLoaderTests.java][testLoadResource][7] = -> TRY {  -> resource=loader.getResource("read-tests/file1.txt",)@ -> assertNotNull(resource,)@ -> urlCon=resource.openConnection()@ -> assertSameURLContent(FILE1_CONTENT,urlCon,)@ } CATCH(Exception) {}
results[https://github.com/oxhead/decoupled-hadoop/blob/5327935d210a7c7f89b56f8a3e30b7ba6e73c519/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestSSLHttpServer.java][readOut][2] = -> TRY {  -> conn=(HttpsURLConnection) url.openConnection()@ -> conn.setSSLSocketFactory(clientSslFactory.createSSLSocketFactory(),)@ -> in=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/TranquilMarmot/spaceout/blob/113fcc4a8169622cda4236cd730f3e415e20a069/src/launcher/RSS2AWT.java][getRSSFeed][10] = -> TRY { -> url=new URL(rssUrl,)@ -> con=url.openConnection()@ -> stream=con.getInputStream()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Chrriis/DJ-Native-Integration/blob/4943adb688a29a8c226a692f5448f0d6c6aeb89a/DJTweak/src/chrriis/dj/data/DataUtil.java][getImageData][1] = -> TRY { -> openConnection=imageURL.openConnection()@ -> openConnection.setDefaultUseCaches(false,)@ -> in=openConnection.getInputStream()@ } CATCH(Exception) { -> throw new IllegalStateException("Could not get the image data!",e,)@ }
results[https://github.com/fbierhaus/hackathon/blob/ff423b14cea067a3857c18a403bb7667b1de2e24/client/TVNight/src/com/hackathon/tvnight/api/GetShowList.java][getList][1] = -> TRY { -> url=new URL(query,)@ -> conn=(HttpURLConnection) url.openConnection()@ -> response=sendRequest(conn,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/allminewuwei/BensDeals/blob/1542ae105a8f9699c82304cda3ae1861f66d8339/src/net/bensdeals/network/core/RemoteFeedRequestTask.java][doInBackground][1] = -> TRY { -> url=new URL(path,)@ -> conn=url.openConnection()@ -> inputStream=conn.getInputStream()@ } CATCH(Exception) { -> ALog.e(e,)@ }
results[https://github.com/gingi/kbase-ui-common/blob/d71a0c41d151738b58e083e9c3649e4b1180703e/kbase_labs/src/us/kbase/rpc/Caller.java][setup_call][1] = -> TRY { -> conn=(HttpURLConnection) urlobj.openConnection()@ -> conn.setDoOutput(true,)@ -> conn.setRequestMethod("POST",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerResourceCreatedOutsideBookTest.java][testGetBook123][3] = -> TRY {  -> url=new URL(endpointAddress,)@ -> connect=url.openConnection()@ -> connect.addRequestProperty("Accept","application/xml",)@ -> in=connect.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/openplans/OpenTripPlanner/blob/56fbbe39ddb3d753f579003dcf637a9196d74155/opentripplanner-graph-builder/src/main/java/org/opentripplanner/graph_builder/impl/ned/NEDDownloader.java][downloadFile][3] = -> TRY { -> downloadUrl=new URL("http://extract.cr.usgs.gov/axis2/services/DownloadService/getData?downloadID="+token,)@ -> connection=downloadUrl.openConnection()@ -> httpconnection=(HttpURLConnection) connection@ -> istream=connection.getInputStream()@ } CATCH(Exception) { -> throw new RuntimeException("Error getting data from USGS Download Server while downloading",e,)@ }
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarInputStreamTest.java][test_getNextJarEntry][2] = -> TRY {  -> is=new URL(jarName,).openConnection().getInputStream()@ -> jis=new JarInputStream(is,)@ } CATCH(Exception) {}
results[https://github.com/tizzit/tizzit/blob/7e783782acfbbcd2bbf4d8a256ac9641b9f38f4a/tizzit-richclient/src/test/java/de/juwimm/cms/client/util/test/UrlValidatorTest.java][testValidateInvalidUrl][1] = -> TRY {  -> url=createStrictMock(URL.class,)@ -> expectStrictNew(URL.class,"http://"+testLink,).andReturn(url,)@ -> url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/arquillian/arquillian-container-tomcat/blob/045e425da6519ead0d1238becd3ed47dfdc56e49/tomcat-remote-6/src/test/java/org/jboss/arquillian/container/tomcat/remote_6/TomcatRemoteInContainerTestCase.java][shouldBeAbleToInvokeServletInDeployedWebApp][2] = -> TRY {  -> url=new URL(contextRoot,"Test",)@ -> in=url.openConnection().getInputStream()@ -> len=in.read(buffer,)@ } CATCH(Exception) {}
results[https://github.com/medcafe/medCafe/blob/6207d6f488aee222f95a7ab61816b6a28bfcb233/src/org/mitre/medcafe/util/hDataRepository.java][main][2] = -> TRY {  -> url=new URL(args[0],)@ -> conn=url.openConnection()@ -> p=(Patient) u.unmarshal(conn.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/test/com/sun/net/httpserver/bugs/HeadTest.java][runClient][1] = -> TRY {  -> conn=(HttpURLConnection) new URL(urlStr,).openConnection()@ -> conn.setRequestMethod("HEAD",)@ -> status=conn.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/gf-metro/jaxws/blob/e5311778ebda7492c79bc78e018e3255834637e8/jaxws-ri/tests/unit/testcases/server/endpoint/client/EndpointExecutorTest.java][getHttpStatusCode][3] = -> TRY {  -> url=new URL(address+"?wsdl",)@ -> con=(HttpURLConnection) url.openConnection()@ -> con.connect()@ -> return con.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/xebialabs/overthere/blob/109bb9a626ef56d901cfc1446069aaeef7ca0d03/overthere/src/main/java/com/xebialabs/overthere/winrm/connector/JdkHttpConnector.java][sendMessage][1] = -> TRY { -> urlConnection=targetURL.openConnection()@ -> con=(HttpURLConnection) urlConnection@ -> logger.debug("send message to {}:request {}",targetURL,requestDocAsString,)@ -> is=urlConnection.getInputStream()@ } CATCH(Exception) { -> throw new WinRMRuntimeIOException("send message on "+targetURL+" error ",requestDocument,responseDocument,e,)@ }
results[https://github.com/chirino/cloudmix/blob/bfc4e7977fbd5dbb4f0deb9fbf9b5d803509f9aa/org.fusesource.cloudmix.agent.dir.webapp/src/test/java/org/fusesource/cloudmix/agent/webapp/WebappTest.java][getHttpConnection][1] = -> TRY {  -> url=new URL(target,)@ -> connection=url.openConnection()@ -> connection.setDoOutput(doOutput,)@ -> assertTrue(connection instanceof HttpURLConnection,)@ -> return (HttpURLConnection) connection@ } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/test/sun/net/www/http/HttpClient/MultiThreadTest.java][doRequest][1] = -> TRY {  -> url=new URL(uri+"?foo="+reqnum,)@ -> http=(HttpURLConnection) url.openConnection()@ -> in=http.getInputStream()@ -> http.disconnect()@ } CATCH(Exception) {}
results[https://github.com/nterry/jclouds/blob/b11148a974815aa5b4fac135fa7d7bc695e16d5d/aws/s3/core/src/test/java/org/jclouds/aws/s3/S3ConnectionIntegrationTest.java][testCopyUrl][1] = -> TRY {  -> url=new URL(httpStreamUrl,)@ -> connection=url.openConnection()@ -> length=connection.getContentLength()@ -> input=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/gem/openquake-packages/blob/bcc4eb8d4181be79bfbeca5cb786fbe7a2247b0b/openshalite/src/org/opensha/commons/util/FileUtils.java][loadObjectFromURL][1] = -> TRY { -> uc=url.openConnection()@ -> tis=new ObjectInputStream((InputStream) uc.getContent(),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/BatooOrg/BatooJPA/blob/2f395e21b2b32ed24db5ae4f13da2370c5bb175d/batoo-jpa/src/main/java/org/batoo/common/util/BatooUtils.java][ga][1] = -> TRY {  -> obj=new URL(url,)@ -> con=(HttpURLConnection) obj.openConnection()@ -> con.setRequestProperty("User-Agent",ua,)@ -> return con.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/727cf815a250f9a2305f3b377f8f0450b9820bd9/tests/test-integration/src/test/java/org/eclipse/jetty/test/DefaultHandlerTest.java][testGET_URL][3] = -> TRY {  -> url=new URL("http://localhost:"+serverPort+"/tests/alpha.txt",)@ -> conn=url.openConnection()@ -> conn.connect()@ -> in=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/Top-Q/jsystem/blob/442f8e439d673acdeb4eb80494d9eec9bcff77c6/jsystem-core-projects/jsystemCore/src/main/java/jsystem/utils/UploadRunner.java][validateUrl][1] = -> TRY { -> _url=new URL(url,)@ -> _url.openConnection().connect()@ } CATCH(Exception) { -> log.log(Level.FINE,"Failed validating url "+url,e,)@ }
results[https://github.com/SINTEF-9012/ThingML/blob/46aa8896c6d7328ddbfc0e0a5a9b724e126b9900/org.thingml.coaphttp/src/main/java/org/thingml/utils/http/SecuredSensAppHelper.java][getSensorDetails][2] = -> TRY {  -> c=(HttpsURLConnection) target.openConnection()@ -> in=new BufferedReader(new InputStreamReader(c.getInputStream(),),)@ } CATCH(Exception) {}
results[https://github.com/peixere/gotom/blob/4011c772fabd4f79150f9d3fea354c3388e1bed9/commons/cn.gotom.commons/src/main/java/cn/gotom/util/StringUtils.java][getHtml][1] = -> TRY { -> conn=(HttpURLConnection) url.openConnection()@ -> isr=new InputStreamReader(conn.getInputStream(),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/LATC/sandbox/blob/385945e7783a56140d8337b984bb5e3fdb054aa6/latc-platform/runtime/trunk/src/com/deri/latc/utility/TestHTTP.java][test][1] = -> TRY { -> con=(HttpURLConnection) new URL(URLName,).openConnection()@ -> con.setRequestMethod("GET",)@ } CATCH(Exception) { -> message=e.getMessage()@ }
results[https://github.com/bladesilent/Harmony/blob/ebd49a241bf2858d7ea505d2ffa86eaba64b64c0/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/net/JarURLConnectionTest.java][test_getAttributes][1] = -> TRY {  -> u=new URL("jar:"+BASE+"!/swt.dll",)@ -> juc=(JarURLConnection) u.openConnection()@ -> a=juc.getJarEntry().getAttributes()@ } CATCH(Exception) {}
results[https://github.com/jortizcs/sfs_applications/blob/2e9285cee8cbf32a636530317c55e7395558ebd0/LocSenseFingerPrint/src/sfs/lib/CurlOps.java][getConfigObjStrFromUrl][1] = -> TRY {  -> conn=(HttpURLConnection) new URL(configTinyURL,).openConnection()@ -> conn.setInstanceFollowRedirects(false,)@ -> loc=conn.getHeaderField("Location",)@ } CATCH(Exception) {}
results[https://github.com/ramesesinc/clfc/blob/76a455147b43f41650d39005e15571a7dd90c6cf/build/test-platform-clfc/test/test/NewEmptyJUnitTest2.java][test0][1] = -> TRY {  -> url=new URL("http://localhost/downloads/modules/core/osiris2-client-themes.jar",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> dt=conn.getLastModified()@ -> conn.disconnect()@ } CATCH(Exception) {}
results[https://github.com/jumpa/geogebra/blob/cca46c5e83a2c934c126322a87ca6ecdb3a45969/geogebra/geogebra/util/Util.java][existsHttpURL][1] = -> TRY { -> con=(HttpURLConnection) url.openConnection()@ -> con.setRequestMethod("HEAD",)@ -> return con.getResponseCode()==HttpURLConnection.HTTP_OK@ } CATCH(Exception) { -> Application.debug("Exception: existsHttpURL: "+url,)@ }
results[https://github.com/EaseTech/easytest-core/blob/685b24cf00dd3ee7e52b5fc3124f0ab4892462eb/src/main/java/org/easetech/easytest/io/UrlResource.java][exists][1] = -> TRY { -> con=(HttpURLConnection) URL.openConnection()@ -> con.setRequestMethod("HEAD",)@ -> return con.getResponseCode()==HttpURLConnection.HTTP_OK@ } CATCH(Exception) { -> Log.debug("Exception occured while trying to find whether the resource exists or not ",e,)@ }
results[https://github.com/jibrankhan/Domination/blob/61b5a67eeaf03e996aeb97a16f8f49307c028e9e/Domination/src_swing/net/yura/domination/tools/mapeditor/MapsTools.java][getCategories][1] = -> TRY { -> conn=new URL(MapChooser.CATEGORIES_PAGE,).openConnection()@ -> in=conn.getInputStream()@ } CATCH(Exception) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/ikeji/openjdk7-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/test/java/net/URLConnection/HttpContinueStackOverflow.java][<init>][1] = -> TRY {  -> url=new URL("http","localhost",s.getLocalPort(),"anything.html",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/bigbrother82/android-test/blob/eeeed1aa9d93e06fe4597aaefde906dbc4b2648b/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/HttpURLConnectionTest.java][setUp][3] = -> TRY { -> url=new URL(Support_Configuration.hTTPURLyahoo,)@ -> uc=(HttpURLConnection) url.openConnection()@ } CATCH(Exception) { -> fail("Exception during setup : "+e.getMessage(),)@ }
results[https://github.com/flotpk/geoserver/blob/19d720f6ae97dcff008479aa1dc42def359d375b/src/security/cas/src/main/java/org/geoserver/security/web/cas/CasConnectionPanel.java][testURL][1] = -> TRY {  -> url=new URL(urlString,)@ -> con=(HttpURLConnection) url.openConnection()@ -> con.getInputStream().close()@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/test/sun/net/www/http/ChunkedInputStream/ChunkedEncodingTest.java][client][1] = -> TRY {  -> url=new URL(u,)@ -> urlc=url.openConnection()@ -> dis=new DigestInputStream(urlc.getInputStream(),clientDigest,)@ } CATCH(Exception) {}
results[https://github.com/camsys/onebusaway-nyc/blob/e4180a8f7059bece4a7307445eb2955841e1cfe2/onebusaway-nyc-util/src/main/java/org/onebusaway/nyc/util/impl/RestApiLibrary.java][getContentsOfUrlAsString][1] = -> TRY {  -> conn=requestUrl.openConnection()@ -> conn.setConnectTimeout(connectionTimeout,)@ -> conn.setReadTimeout(readTimeout,)@ -> inStream=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/bobmcwhirter/vfs/blob/c85e0c6b3933ef900f6203e210fcceb0f74547e3/src/test/java/org/jboss/test/virtual/test/JARVirtualFileHandlerUnitTestCase.java][getRealJarEntry][1] = -> TRY {  -> url=getRootResource(name,)@ -> url=JarUtils.createJarURL(url,)@ -> c=(JarURLConnection) url.openConnection()@ -> jarFile=c.getJarFile()@ } CATCH(Exception) {}
