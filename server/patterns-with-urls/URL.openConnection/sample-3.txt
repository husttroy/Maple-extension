results[https://github.com/SecurisationSiteGVI/securisation-site-gvi/blob/f5c2c253e5266b745b8afcf94002edc28bae7231/src/physique/io/CameraDriverSonyImpl.java][piloterCameraHaut][19] = -> TRY {  -> u=new URL("http://"+ip+"/command/ptzf.cgi?Move=up,8",)@ -> connection=(URLConnection) u.openConnection()@ } CATCH(Exception) {}
results[https://github.com/sonatype/maven-reference-en/blob/fb36577fb4faded19a13d77611c809fa89cab5c4/examples/ch06/simple-parent/simple-weather/src/main/java/com/sonatype/maven/weather/YahooRetriever.java][retrieve][117] = -> TRY {  -> conn=new URL(url,).openConnection()@ -> return conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/net/URLConnection/UNCTest.java][main][3] = -> TRY {  -> url=new URL(args[0],)@ -> conn=url.openConnection()@ -> conn.setRequestProperty("User-Agent","Java",)@ } CATCH(Exception) {}
results[https://github.com/pacerom/libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/net/URLStreamHandlerFactoryTest.java][testCreateURLStreamHandler][39] = -> TRY {  -> url=new URL("http://android.com/",)@ -> connection=url.openConnection()@ -> assertTrue(connection instanceof Handler.HandlerURLConnection,)@ } CATCH(Exception) {}
results[https://github.com/DomoTop/DomoTop/blob/a68bd34899db71c695ee09236ab912a73a60620f/Product/Controller/test/org/openremote/controller/rest/ListPanelIDsTest.java][testBrokenPanelXMLStructureNotWellFormatted2][5] = -> TRY {  -> panelList=new URL(RESTTests.containerURL+RESTAPI_PANELS_URI,)@ -> connection=(HttpURLConnection) panelList.openConnection()@ -> RESTTests.assertHttpResponse(connection,Constants.HTTP_RESPONSE_INVALID_PANEL_XML,RESTTests.ASSERT_BODY_CONTENT,Constants.MIME_APPLICATION_XML,Constants.CHARACTER_ENCODING_UTF8,)@ } CATCH(Exception) {}
results[https://github.com/sorcersoft/sorcer/blob/17d4425b73c9703cc3bf483cedf91df916611e13/iGrid/modules/sorcer-tests/src/test/java/junit/sorcer/util/bdb/objects/SorcerDatabaseTest.java][sdbURL][8] = -> TRY {  -> sbdUrl=new URL("sbd://myIterface/name#context=2345",)@ -> obj=sbdUrl.openConnection().getContent()@ } CATCH(Exception) {}
results[https://github.com/CyanMobile/android_frameworks_base_cyanmobile/blob/04958af4a6c5a2a5399594690e12eed1429b9fd5/tests/CoreTests/android/core/URLTest.java][testMalformedUrl][10] = -> TRY {  -> url=new URL("http://www.google.com/cgi-bin/myscript?g={United+States}+Borders+Mexico+{Climate+change}+Marketing+{Automotive+industry}+News+Health+Internet",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> status=conn.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/niloc132/mauve-gwt/blob/200cef61c0606333348ce5c43ed2b8417e675025/gnu/testlet/java/net/URLConnection/URLConnectionTest.java][test_DefaultRequestProperty][1] = -> TRY { -> url=new URL("http://sources.redhat.com/mauve/testarea/index.html",)@ -> conn=url.openConnection()@ } CATCH(Exception) { -> harness.fail("Error in test_DefaultRequestProperty  - 1 "+" should not have raised exception here ",)@ }
results[https://github.com/Graylog2/graylog2-server/blob/266244b5e721e0cf3a79bbef3701b2a034924666/graylog2-server/src/main/java/org/graylog2/plugins/PluginInstaller.java][downloadAndCopyJar][2] = -> TRY {  -> jar=new URL(url,)@ -> jar.openConnection()@ -> reader=jar.openStream()@ } CATCH(Exception) {}
results[https://github.com/kingargyle/exist-1.4.x/blob/09d678fd8a58728dd51005c63b942f1ab6541ebc/test/src/org/exist/validation/TestTools.java][insertDocumentToURL][2] = -> TRY {  -> url=new URL(target,)@ -> connection=url.openConnection()@ -> os=connection.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/stigkj/one-jar/blob/0e6c12dac78a231fb4c86b639a5ebd5a04f9d8c7/example/com/simontuffs/onejar/example/main/Test.java][testContentType][1] = -> TRY {  -> url=new URL(uri,)@ -> connection=url.openConnection()@ -> contenttype=connection.getContentType()@ } CATCH(Exception) {}
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/systests/jaxws/src/test/java/org/apache/cxf/systest/provider/datasource/DataSourceProviderTest.java][createConnection][1] = -> TRY {  -> url=new URL("http://localhost:9000/test/foo",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> conn.setDoOutput(true,)@ } CATCH(Exception) {}
results[https://github.com/inovex/jconvert/blob/0da59d02bc09c1b6be5792fcf9d27a135cab64d4/src/com/edsdev/jconvert/util/Http.java][getPage][9] = -> TRY { -> authURL=new URL(urlToGet,)@ -> uc=authURL.openConnection()@ -> huc=(HttpURLConnection) uc@!(!(uc instanceof HttpURLConnection)) } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ansell/bioportal/blob/f785095f27dab833d1c2aa213387b5f662fd1da7/src/java/org/ncbo/stanford/util/loader/LoaderUtils.java][getContentLength][1] = -> TRY {  -> url=new URL(url_location,)@ -> uc=url.openConnection()@ -> contentLength=uc.getContentLength()@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/05e3dd0aa660864619dab1a22f621ce009b82480/test/java/net/URL/HandlerLoop.java][main][3] = -> TRY {  -> url=new URL("file:///bogus/index.html",)@ -> System.out.println("url = "+url,)@ -> url.openConnection()@ } CATCH(Exception) {}
results[https://github.com/signed/sandboxes/blob/8f3bb8bf35822e10cd004bbd8a8fa191710a738e/sandbox-javafx/src/test/java/javafx/QuickTest.java][testName][3] = -> TRY {  -> url=new URL("http://localhost:8018",)@ -> connection=url.openConnection()@ -> connection.connect()@ } CATCH(Exception) {}
results[https://github.com/bladesilent/Harmony/blob/ebd49a241bf2858d7ea505d2ffa86eaba64b64c0/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/net/JarURLConnectionTest.java][test_getMainAttributes][2] = -> TRY {  -> u=new URL("jar:"+BASE+"!/swt.dll",)@ -> juc=(JarURLConnection) u.openConnection()@ -> a=juc.getMainAttributes()@ } CATCH(Exception) {}
results[https://github.com/ansell/bioportal/blob/f785095f27dab833d1c2aa213387b5f662fd1da7/src/java/org/ncbo/stanford/util/loader/LoaderUtils.java][getLastModifiedDate][1] = -> TRY {  -> url=new URL(url_location,)@ -> uc=url.openConnection()@ -> lastModified=uc.getLastModified()@ } CATCH(Exception) {}
results[https://github.com/radekolesiak/gwtapp/blob/0c68c610d811321eefe7fb17bc6e0a4a7397fc4e/extension/user/srv/src/main/java/org/gwtapp/extension/user/server/service/ReCaptchaServiceImpl.java][getURL][1] = -> TRY { -> url=new URL(RECAPTCHA_URL+"?"+s,)@ -> connection=(HttpURLConnection) url.openConnection()@ } CATCH(Exception) { -> log.error("",e,)@ }
results[https://github.com/wyona/yanel/blob/e8c11ff0ef7d626a5f811efec2d403c57e971a1a/src/realms/welcome-admin/yanel/resources/update-webapp/src/java/org/wyona/yanel/impl/resources/updateFinder/utils/WarFetcher.java][downloadUpdateWar][1] = -> TRY {  -> updateWarUrl=new URL("jar:"+updateLink+"!/",)@ -> URLcon=(JarURLConnection) updateWarUrl.openConnection()@ -> jar=URLcon.getJarFile()@ } CATCH(Exception) {}
results[https://github.com/vista-novo/fhir/blob/ff1186dfa3c425904efd20d968ff323ccea37064/build/tools/java/org.hl7.fhir.instance/src/org/hl7/fhir/instance/client/FHIRSimpleClient.java][makeClient][1] = -> TRY {  -> client=(HttpURLConnection) new URL(baseUrl+tail,).openConnection()@ -> client.addRequestProperty("accept","text/xml",)@ } CATCH(Exception) {}
results[https://github.com/brachior/platform_libcore/blob/0b26c7b2263a591b135e230231a331e3c0f123b8/luni/src/test/java/tests/api/java/net/JarURLConnectionTest.java][test_getInputStream_DeleteJarFileUsingURLConnection][102] = -> TRY {  -> url=new URL("jar:file:"+jarFileName+"!/"+entry,)@ -> conn=url.openConnection()@ -> conn.setUseCaches(false,)@ -> is=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/apache/oltu/blob/391c6ef2c16b694804b8e141fb38f02de119c96b/oauth-2.0/integration-tests/src/test/java/org/apache/oltu/oauth2/integration/ResourceTest.java][testResourceAccessHeaderNoToken][61] = -> TRY {  -> url=new URL(Common.RESOURCE_SERVER+Common.PROTECTED_RESOURCE_HEADER,)@ -> c=url.openConnection()@ -> IF { -> httpURLConnection=(HttpURLConnection) c@c instanceof HttpURLConnection } } CATCH(Exception) {}
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSSoapBookTest.java][getHttpInputStream][6] = -> TRY {  -> url=new URL(endpointAddress,)@ -> connect=url.openConnection()@ -> connect.addRequestProperty("Accept","application/xml,text/plain",)@ -> return connect.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/billstclair/loomclient/blob/72ac2aa32d454de56cd7751cb439bfd61a6f0a95/java/cc/loom/LoomClient.java][fetchURLString][6] = -> TRY { -> url=new URL(address,)@ -> connection=url.openConnection()@ -> in=new InputStreamReader(connection.getInputStream(),)@ } CATCH(Exception) { -> return "()"@ }
results[https://github.com/fake666/namnam/blob/8b6921757ded24929e67e3a12fee8a11c5e9e4e9/java/namnamparser/src/de/metalab/namnam/parser/util/XPathUtil.java][getHtmlUrlNode][3] = -> TRY {  -> url=new URL(sUrl,)@ -> con=url.openConnection()@ -> src=new InputSource(con.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/jortizcs/sfs_applications/blob/43ccd7d2ceb26f6e7a099416761611d7cbae23fd/mobile_audit/src/mobile/SFS/CurlOps.java][getConfigObjStrFromUrl][5] = -> TRY {  -> conn=(HttpURLConnection) new URL(configTinyURL,).openConnection()@ -> conn.setInstanceFollowRedirects(false,)@ -> loc=conn.getHeaderField("Location",)@ } CATCH(Exception) {}
results[https://github.com/taycleed/Meaning-Finder/blob/2eefe4049703d96e55fe8a34a8e103e786b0007c/Meaning Finder/src/org/bigcamp4edu/meaningfinder/XmlParser.java][getListText][33] = -> TRY { -> url=new URL(DB.listUrl+"?ic=100&userId="+Var.userId,)@ -> uc=url.openConnection()@ -> in=uc.getInputStream()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/skuzzle/polly/blob/0404fd377b1b768b0507bd6794e9562dde51b198/projects/de.skuzzle.polly.plugin.dyndns/src/polly/dyndns/core/PublicIpFinder.java][run][1] = -> TRY { -> url=new URL(API_URL,)@ -> connection=url.openConnection()@ } CATCH(Exception) { -> logger.error("Error while retrieving current public API",e,)@ -> e.printStackTrace()@ }
results[https://github.com/woggle/mesos-old/blob/6168de123773c2cd97d1194603283ea168994289/frameworks/hadoop-0.20.2/src/hdfs/org/apache/hadoop/hdfs/tools/DFSck.java][run][15] = -> TRY {  -> path=new URL(url.toString(),)@ -> connection=path.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/cmccabe/hadoop/blob/fda683bf06f52e3c0999fec65d994f9f74fb3c50/hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/webapp/TestWebApp.java][getResponseCode][32] = -> TRY { -> c=(HttpURLConnection) new URL(url,).openConnection()@ -> return c.getResponseCode()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/jclouds/jclouds/blob/b11148a974815aa5b4fac135fa7d7bc695e16d5d/aws/s3/core/src/test/java/org/jclouds/aws/s3/S3ConnectionIntegrationTest.java][testCopyUrl][11] = -> TRY {  -> url=new URL(httpStreamUrl,)@ -> connection=url.openConnection()@ -> length=connection.getContentLength()@ -> input=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/arquillian/arquillian_deprecated/blob/54d35ff1bbb8fbf4f1131a95720567d351db746b/containers/tomcat-embedded-6/src/test/java/org/jboss/arquillian/container/tomcat/embedded_6/TomcatEmbeddedInContainerTestCase.java][shouldBeAbleToInvokeServletInDeployedWebApp][29] = -> TRY {  -> url=new URL(HELLO_WORLD_URL,)@ -> in=url.openConnection().getInputStream()@ -> len=in.read(buffer,)@ } CATCH(Exception) {}
results[https://github.com/sublima/sublima/blob/f75ba2c8ad795a18d88200fc03e806da4a2d9b3d/blocks/sublima-query/src/test/java/com/computas/sublima/query/integrationtest/SparqlResultsTest.java][testSPARQLquery][2] = -> TRY {  -> url=new URL(JOSEKI_URL+JOSEKI_ACTION+URLEncoder.encode(SPARQL_QUERY,"UTF-8",),)@ -> huc=(HttpURLConnection) url.openConnection()@ -> bodyInputStream=huc.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/test/java/net/CookieHandler/CookieHandlerTest.java][<init>][12] = -> TRY {  -> url=new URL(uri,)@ -> http=(HttpURLConnection) url.openConnection()@ -> respCode=http.getResponseCode()@ -> http.disconnect()@ } CATCH(Exception) {}
results[https://github.com/mess110/detection/blob/88d230b36eb05673e531c1d3e4d7de5cba6b6f11/clients/java/detect_wrapper/src/detect/api/DetectWrapper.java][executeHttpGet][1] = -> TRY {  -> url=new URL(BASE_URL+uri,)@ -> con=(HttpURLConnection) url.openConnection()@ -> con.setRequestMethod("GET",)@ -> is=con.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/arjunroy/cinder_dalvik/blob/d3c6d366379142d0784ab5fe973a939d462aca28/libcore/luni/src/test/java/org/apache/harmony/luni/tests/java/net/HttpURLConnectionTest.java][setUp][14] = -> TRY { -> url=new URL(Support_Configuration.hTTPURLyahoo,)@ -> uc=(HttpURLConnection) url.openConnection()@ } CATCH(Exception) { -> fail("Exception during setup : "+e.getMessage(),)@ }
results[https://github.com/apache/harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/archive/src/test/java/org/apache/harmony/archive/tests/java/util/jar/JarInputStreamTest.java][test_ConstructorLjava_io_InputStream][4] = -> TRY {  -> is=new URL(jarName,).openConnection().getInputStream()@ -> jis=new JarInputStream(is,)@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/sun/net/www/http/HttpClient/MultiThreadTest.java][doRequest][3] = -> TRY {  -> url=new URL(uri+"?foo="+reqnum,)@ -> http=(HttpURLConnection) url.openConnection()@ -> in=http.getInputStream()@ -> http.disconnect()@ } CATCH(Exception) {}
results[https://github.com/fbierhaus/hackathon/blob/ff423b14cea067a3857c18a403bb7667b1de2e24/client/TVNight/src/com/hackathon/tvnight/api/GetShowList.java][getList][3] = -> TRY { -> url=new URL(query,)@ -> conn=(HttpURLConnection) url.openConnection()@ -> response=sendRequest(conn,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/allminewuwei/BensDeals/blob/1542ae105a8f9699c82304cda3ae1861f66d8339/src/net/bensdeals/network/core/RemoteFeedRequestTask.java][doInBackground][3] = -> TRY { -> url=new URL(path,)@ -> conn=url.openConnection()@ -> inputStream=conn.getInputStream()@ } CATCH(Exception) { -> ALog.e(e,)@ }
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/com/sun/net/httpserver/bugs/HeadTest.java][runClient][3] = -> TRY {  -> conn=(HttpURLConnection) new URL(urlStr,).openConnection()@ -> conn.setRequestMethod("HEAD",)@ -> status=conn.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/thomasbecker/jetty-7/blob/500f91bbce51c00a9b3db88c461b40c2e982c6ed/tests/test-integration/src/test/java/org/eclipse/jetty/test/DefaultHandlerTest.java][testGET_URL][7] = -> TRY {  -> url=new URL("http://localhost:"+serverPort+"/tests/alpha.txt",)@ -> conn=url.openConnection()@ -> conn.connect()@ -> in=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/ninowalker/opentripplanner-svn/blob/ef3fb17ff41beb9969bf8c00c40f0deb713fdcc6/opentripplanner-graph-builder/src/main/java/org/opentripplanner/graph_builder/impl/ned/NEDDownloader.java][downloadFile][5] = -> TRY { -> downloadUrl=new URL("http://igskmncnwb010.cr.usgs.gov/axis2/services/DownloadService/getData?downloadID="+token,)@ -> connection=downloadUrl.openConnection()@ -> httpconnection=(HttpURLConnection) connection@ -> istream=connection.getInputStream()@ } CATCH(Exception) { -> throw new RuntimeException("Error getting data from USGS Download Server while downloading",e,)@ }
results[https://github.com/RvonMassow/xDoc/blob/30a9a9ff5630fba4a1b2ea6fcd9d30862e88eb02/org.eclipse.xtext.xdoc.tests/src/org/eclipse/xtext/xdoc/tests/ParserTest.java][testLink][1] = -> TRY {  -> url=new URL(link.getUrl(),)@ -> c=url.openConnection()@ -> assertNotNull(c,)@ } CATCH(Exception) {}
results[https://github.com/okey666/BBC-News-Reader/blob/c77c0ea6c795ec0d546e66cae6aeadb1d409dbec/src/com/digitallizard/bbcnewsreader/resource/web/HtmlParser.java][getPage][4] = -> TRY {  -> url=new URL(stringUrl,)@ -> connection=url.openConnection()@ -> connection.setRequestProperty("User-Agent",USER_AGENT,)@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/niloc132/mauve-gwt/blob/200cef61c0606333348ce5c43ed2b8417e675025/gnu/testlet/java/net/URLConnection/URLConnectionTest.java][test_allowUserInteractions][1] = -> TRY { -> url=new URL("http://sources.redhat.com/mauve/testarea/index.html",)@ -> conn=url.openConnection()@ -> bool=conn.getAllowUserInteraction()@ } CATCH(Exception) { -> harness.fail("Error in test_allowUserInteractions  - 3 "+" should not have raised  exception here ",)@ }
results[https://github.com/apache/stanbol/blob/c8faf1d3007d343ca1403335a6c597586c2325b3/fise/query-rendering/src/eu/iksproject/fise/interaction/QueryManager.java][uploadFile][1] = -> TRY { -> url=new URL("http://"+serverHost+":"+serverPort+"/content",)@ -> conn=url.openConnection()@ -> chr=new ClientHttpRequest(conn,username,password,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/LATC/24-7-platform/blob/f71c17a53b38ffacbf18d2104f7221b55fe3802a/latc-platform/runtime/trunk/src/com/deri/latc/utility/TestHTTP.java][test][2] = -> TRY { -> con=(HttpURLConnection) new URL(URLName,).openConnection()@ -> con.setRequestMethod("GET",)@ } CATCH(Exception) { -> message=e.getMessage()@ }
results[https://github.com/sublima/sublima/blob/f75ba2c8ad795a18d88200fc03e806da4a2d9b3d/blocks/sublima-query/src/test/java/com/computas/sublima/query/integrationtest/SparqlResultsTest.java][testConnection][2] = -> TRY {  -> url=new URL(JOSEKI_URL+"search",)@ -> huc=(HttpURLConnection) url.openConnection()@ -> assertEquals("Cannot connect to "+JOSEKI_URL+"search",huc.getResponseCode(),huc.HTTP_OK,)@ } CATCH(Exception) {}
results[https://github.com/mauriciotogneri/hextrategic/blob/3ac4e8339a5b2783708d4df64c63279cab1144c8/src/com/hextrategic/splash/Login.java][tokenValid][1] = -> TRY { -> url=new URL("https://www.googleapis.com/oauth2/v1/userinfo?access_token="+token,)@ -> con=(HttpURLConnection) url.openConnection()@ -> serverCode=con.getResponseCode()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/cytoscape/cytoscape2/blob/8d306dd2e2f93fc41ca4e67fda2713454feeb533/src/cytoscape/unitTests/AllTests.java][suite][4] = -> TRY { -> url=new URL(urlStr,)@ -> jarConnection=(JarURLConnection) url.openConnection()@ -> thisJar=jarConnection.getJarFile()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/medcafe/medCafe/blob/6207d6f488aee222f95a7ab61816b6a28bfcb233/src/org/mitre/medcafe/util/hDataRepository.java][main][2] = -> TRY {  -> url=new URL(args[0],)@ -> conn=url.openConnection()@ -> p=(Patient) u.unmarshal(conn.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/gf-metro/jaxws/blob/e5311778ebda7492c79bc78e018e3255834637e8/jaxws-ri/tests/unit/testcases/server/endpoint/client/EndpointExecutorTest.java][getHttpStatusCode][5] = -> TRY {  -> url=new URL(address+"?wsdl",)@ -> con=(HttpURLConnection) url.openConnection()@ -> con.connect()@ -> return con.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/chirino/cloudmix/blob/bfc4e7977fbd5dbb4f0deb9fbf9b5d803509f9aa/org.fusesource.cloudmix.agent.dir.webapp/src/test/java/org/fusesource/cloudmix/agent/webapp/WebappTest.java][getHttpConnection][3] = -> TRY {  -> url=new URL(target,)@ -> connection=url.openConnection()@ -> connection.setDoOutput(doOutput,)@ -> assertTrue(connection instanceof HttpURLConnection,)@ -> return (HttpURLConnection) connection@ } CATCH(Exception) {}
results[https://github.com/CS340Group/hit/blob/780106df5784395ff284d629c5b948f9797b8649/src/model/productidentifier/ProductIdentifierSearchUPCDotCom.java][identify][1] = -> TRY { -> url=new URL(urlCat,)@ -> urlConnection=url.openConnection()@ -> inputStream=urlConnection.getInputStream()@ } CATCH(Exception) { -> return handoff(barcode,)@ }
results[https://github.com/BatooOrg/BatooJPA/blob/2f395e21b2b32ed24db5ae4f13da2370c5bb175d/batoo-jpa/src/main/java/org/batoo/common/util/BatooUtils.java][ga][1] = -> TRY {  -> obj=new URL(url,)@ -> con=(HttpURLConnection) obj.openConnection()@ -> con.setRequestProperty("User-Agent",ua,)@ -> return con.getResponseCode()@ } CATCH(Exception) {}
results[https://github.com/Top-Q/jsystem/blob/442f8e439d673acdeb4eb80494d9eec9bcff77c6/jsystem-core-projects/jsystemCore/src/main/java/jsystem/utils/UploadRunner.java][validateUrl][1] = -> TRY { -> _url=new URL(url,)@ -> _url.openConnection().connect()@ } CATCH(Exception) { -> log.log(Level.FINE,"Failed validating url "+url,e,)@ }
results[https://github.com/eclipse/webtools.common.tests/blob/768907ad05babd513d13d1d2d8c7985e04f83eb4/tests/org.eclipse.wst.common.tests/commontests/org/eclipse/wst/common/tests/PlatformModuleURLTest.java][testURLResolve][1] = -> TRY {  -> url=new URL("platform:/module:/MyModule/META-INF/ejb-jar.xml",)@ -> conx=url.openConnection()@ -> System.out.println(conx.getURL(),)@ } CATCH(Exception) {}
results[https://github.com/jonasberglund/skrubb_DAT255/blob/5bf28457ecba362bf21065fbd4f5c5b2ba324c26/H-sektionen/src/Test/InfoTest.java][serverConnectionTest][1] = -> TRY { -> url=new URL(Constants.SERVER_ADDRESS,)@ -> conn=url.openConnection()@ -> conn.connect()@ } CATCH(Exception) { -> fail("Could not connect to server",)@ }
results[https://github.com/flotpk/geoserver/blob/1cee34deb2670e5e76ff0bca975103c0f9e0cf4e/src/web/security/src/main/java/org/geoserver/security/web/auth/CasConnectionPanel.java][testURL][4] = -> TRY {  -> url=new URL(urlString,)@ -> con=(HttpURLConnection) url.openConnection()@ -> con.getInputStream().close()@ } CATCH(Exception) {}
results[https://github.com/bladesilent/Harmony/blob/ebd49a241bf2858d7ea505d2ffa86eaba64b64c0/classlib/modules/luni/src/test/api/common/org/apache/harmony/luni/tests/java/net/JarURLConnectionTest.java][test_getAttributes][2] = -> TRY {  -> u=new URL("jar:"+BASE+"!/swt.dll",)@ -> juc=(JarURLConnection) u.openConnection()@ -> a=juc.getJarEntry().getAttributes()@ } CATCH(Exception) {}
results[https://github.com/ramesesinc/clfc/blob/76a455147b43f41650d39005e15571a7dd90c6cf/build/test-platform-clfc/test/test/NewEmptyJUnitTest2.java][test0][1] = -> TRY {  -> url=new URL("http://localhost/downloads/modules/core/osiris2-client-themes.jar",)@ -> conn=(HttpURLConnection) url.openConnection()@ -> dt=conn.getLastModified()@ -> conn.disconnect()@ } CATCH(Exception) {}
results[https://github.com/IKANOW/Infinit.e/blob/0bceb797613bace34f49fc56531efde20069beda/core/infinit.e.harvest.library/src/com/ikanow/infinit/e/harvest/test/TestSecurityManager.java][testLocalJavaAfterLocalJavascriptTest][2] = -> TRY { -> myURL=new URL("http://localhost:8184/auth/login/ping/ping",)@ -> urlConnect=myURL.openConnection()@ -> is=urlConnect.getInputStream()@ } CATCH(Exception) { -> fail()@ }
results[https://github.com/jibrankhan/Domination/blob/61b5a67eeaf03e996aeb97a16f8f49307c028e9e/Domination/src_swing/net/yura/domination/tools/mapeditor/MapsTools.java][getCategories][1] = -> TRY { -> conn=new URL(MapChooser.CATEGORIES_PAGE,).openConnection()@ -> in=conn.getInputStream()@ } CATCH(Exception) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/aajackson/Creepers/blob/6506abb52b59c59933656597e54eb89079f2ef6e/desktop/myfavs_desktop_client/src/myfavsCC.java][logIn][1] = -> TRY {  -> urlsrc=new URL(temp,)@ -> urlconn=urlsrc.openConnection()@ -> urlconn.connect()@ -> getCookie(urlconn,)@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/ac3faf88491f55369fb6b83f77fbb75557ed3bf4/test/sun/net/www/http/ChunkedInputStream/ChunkedEncodingTest.java][client][3] = -> TRY {  -> url=new URL(u,)@ -> urlc=url.openConnection()@ -> dis=new DigestInputStream(urlc.getInputStream(),clientDigest,)@ } CATCH(Exception) {}
results[https://github.com/fywb251/bsl_impc_android/blob/6768bad80aa302bb749a2b16223d1f029e20fba6/cube-android/src/com/foreveross/chameleon/imagemanager/AsyncImageManager.java][createURLConnection][1] = -> TRY {  -> urlCon=(HttpURLConnection) new URL(url,).openConnection()@ -> urlCon.setConnectTimeout(CONNECT_TIME_OUT,)@ -> urlCon.setReadTimeout(READ_TIME_OUT,)@ } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/sun/security/ssl/com/sun/net/ssl/internal/ssl/ProtocolVersion/HttpsProtocols.java][doClientSide][1] = -> TRY {  -> url=new URL("https://localhost:"+serverPort+"/",)@ -> urlc=(HttpURLConnection) url.openConnection()@ -> System.out.println("response is "+urlc.getResponseCode(),)@ } CATCH(Exception) {}
results[https://github.com/eea/eionet.datadict/blob/f08afdbc63e2f8910ebf2cfee49c81b00b86ae59/src/main/java/eionet/util/HttpUploader.java][main][1] = -> TRY { -> url=new URL("http://localhost:8080/datadict/public/kala.doc",)@ -> httpConn=(HttpURLConnection) url.openConnection()@ -> in=url.openStream()@ } CATCH(Exception) { -> e.printStackTrace(System.out,)@ }
results[https://github.com/fake666/namnam/blob/8377e64329bf0bf4a12b965ad88b00a151091b62/java/namnamparser/src/org/bytewerk/namnam/parser/util/XPathUtil.java][getHtmlUrlNode][3] = -> TRY {  -> url=new URL(sUrl,)@ -> con=url.openConnection()@ -> buffer=new BufferedInputStream(con.getInputStream(),)@ } CATCH(Exception) {}
results[https://github.com/alkarinv/BattleArena/blob/2af644f28a6529bd0d47e4a4159d74b05848da0e/src/tests/test/mc/alk/arena/WebPluginLogger.java][run][2] = -> TRY { -> dataurl=new URL(sb.toString(),)@ -> dataurl.openConnection()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Krill/red-elephant/blob/4f4d694f48303bccb3da683ce6f815d1d6e19b7c/src/Statistics/Statistics.java][openUrl][1] = -> TRY { -> url=new URL("http://jpv-net.dyndns.org:1337/red_elephant/submitt_score.php",)@ -> return url.openConnection()@ } CATCH(Exception) { -> System.out.println("Error loading url",)@ -> e.printStackTrace()@ }
results[https://github.com/nuxeo/org.eclipse.ecr/blob/647f25df66f3672832a82ec30071c84dda57a1e1/plugins/org.eclipse.ecr.automation.core/src/org/eclipse/ecr/automation/core/operations/blob/PostBlob.java][run][1] = -> TRY {  -> target=new URL(url,)@ -> conn=target.openConnection()@ -> conn.setDoOutput(true,)@ -> out=conn.getOutputStream()@ } CATCH(Exception) {}
results[https://github.com/dukeboard/kevoree-corelibrary/blob/8ab28a5cd8d83914fa996626afe6fe2fba0d2adf/javase/org.kevoree.library.javase.nanohttp/src/main/java/org/kevoree/library/nanohttp/NanoRestGroup.java][pullModel][1] = -> TRY {  -> url=new URL(urlPath,)@ -> conn=url.openConnection()@ -> conn.setConnectTimeout(2000,)@ -> inputStream=conn.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/resteasy/Resteasy/blob/8b6c2c12b977db031a4b1c6e7b408a306f45778c/jaxrs/resteasy-jaxrs/src/main/java/org/jboss/resteasy/client/core/executors/URLConnectionClientExecutor.java][createConnection][1] = -> TRY {  -> uri=request.getUri()@ -> connection=(HttpURLConnection) new URL(uri,).openConnection()@ -> connection.setRequestMethod(httpMethod,)@ } CATCH(Exception) {}
results[https://github.com/medcafe/medCafe/blob/fb823d65d63d7f20ce1e1fbbbeec4610c7fa4485/src/org/mitre/medcafe/repositories/hDataRepository.java][getMedications][1] = -> TRY { -> url=new URL(hDataUrl+"/hData-REST/resources/hDataRecord/patient/medications/IBU-200-12312.xml",)@ -> conn=url.openConnection()@ -> p=(Medication) u.unmarshal(conn.getInputStream(),)@ } CATCH(Exception) { -> log.log(Level.SEVERE,"Error retrieving patient "+patientId,e,)@ }
results[https://github.com/dnt5020/IST440W-Android-App/blob/89c4d8f2ac291c2fab9a32f74c14e1e215e7ea4b/TheLuvExchange/src/com/theluvexchange/android/Weather_Main.java][setImage][1] = -> TRY { -> url=new URL(loc,)@ -> conn=url.openConnection()@ -> conn.connect()@ -> is=conn.getInputStream()@ } CATCH(Exception) { -> Log.e("TheLuvExchange","WeatherImageError",e,)@ }
results[https://github.com/greg-pe/platform_libcore/blob/09fec8d6f75c933984d31195c0efcb686eff46c6/luni/src/test/java/org/apache/harmony/crypto/tests/javax/crypto/CipherTest.java][test_wrap_java_security_Key][2] = -> TRY {  -> certName=Support_Resources.getURL("test.cert",)@ -> is=new URL(certName,).openConnection().getInputStream()@ -> cert=cf.generateCertificate(is,)@ } CATCH(Exception) {}
results[https://github.com/Pkmmte/ADDITS/blob/1ebc4c76693dd9129fdbbaeff3523b8a89391a6b/ADDITS/src/com/pk/addits/Data.java][downloadFeed][1] = -> TRY { -> updateURL=new URL(FEED_URL,)@ -> conn=updateURL.openConnection()@ -> is=conn.getInputStream()@ -> is=conn.getInputStream()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/UnicornButter/libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/tests/api/javax/net/ssl/HttpsURLConnectionTest.java][test_getCipherSuite][5] = -> TRY {  -> url=new URL("https://localhost:55555",)@ -> connection=(HttpsURLConnection) url.openConnection()@ -> TRY { -> connection.getCipherSuite()@ } } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/com/sun/net/httpserver/Test2.java][main][1] = -> TRY {  -> url=new URL("http://localhost:"+server.getAddress().getPort()+"/test/foo.html",)@ -> urlc=(HttpURLConnection) url.openConnection()@ -> is=urlc.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/apache/harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/luni/src/test/impl/common/org/apache/harmony/luni/tests/internal/net/www/protocol/http/PersistenceTest.java][testIncorrectUsage][1] = -> TRY {  -> c=(HttpURLConnection) new URL("http://localhost:"+port,).openConnection()@ -> c.setDoOutput(true,)@ -> c.setRequestMethod("GET",)@ -> is=c.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/OpenIotOrg/openiot/blob/ab006c734941776297172389f1bc1d67fd7f17ea/modules/x-gsn/src/main/java/org/openiot/gsn/wrappers/HttpGetAndroidWrapper.java][parseXML][1] = -> TRY { -> url=new URL(urlPath,)@ -> conn=url.openConnection()@ -> doc=builder.parse(conn.getInputStream(),)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jortizcs/sfs_applications/blob/862ed1a4b3019815644e9fa9240351a8cbd22699/ConnAccessSampler/src/sfs/lib/CurlOps.java][getConfigObjStrFromUrl][1] = -> TRY {  -> conn=(HttpURLConnection) new URL(configTinyURL,).openConnection()@ -> conn.setConnectTimeout(timeout,)@ -> conn.setInstanceFollowRedirects(false,)@ -> loc=conn.getHeaderField("Location",)@ } CATCH(Exception) {}
results[https://github.com/wsot/platform_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/tests/api/javax/net/ssl/HttpsURLConnectionTest.java][test_getPeerPrincipal][3] = -> TRY {  -> url=new URL("https://localhost:55555",)@ -> connection=(HttpsURLConnection) url.openConnection()@ -> TRY { -> connection.getPeerPrincipal()@ } } CATCH(Exception) {}
results[https://github.com/mrgatesjunior/platform_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/tests/api/javax/net/ssl/HttpsURLConnectionTest.java][test_getLocalCertificates][4] = -> TRY {  -> url=new URL("https://localhost:55555",)@ -> connection=(HttpsURLConnection) url.openConnection()@ -> TRY { -> connection.getLocalCertificates()@ } } CATCH(Exception) {}
results[https://github.com/nkhoang/ja12sec02jav/blob/c3691f7f4d5429b7c160c49618c86414103aa89b/gea/src/main/java/com/nkhoang/gae/service/impl/VocabularyServiceImpl.java][checkWordExistence][1] = -> TRY { -> url=new URL(urlLink+word,)@ -> connection=(HttpURLConnection) url.openConnection()@ -> connection.setRequestMethod("GET",)@ -> is=connection.getInputStream()@ } CATCH(Exception) { -> LOG.error("Error fetching word using URL: "+urlLink+word,e,)@ }
results[https://github.com/XYAOSP/libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/tests/api/javax/net/ssl/HttpsURLConnectionTest.java][test_getServerCertificates][2] = -> TRY {  -> url=new URL("https://localhost:55555",)@ -> connection=(HttpsURLConnection) url.openConnection()@ -> TRY { -> connection.getServerCertificates()@ } } CATCH(Exception) {}
results[https://github.com/pacerom/libcore/blob/b3e2cc46ae3a0bdbff39313b1d17bee1763d18c8/luni/src/test/java/libcore/java/net/URLConnectionTest.java][testUrlWithSpaceInHost][1] = -> TRY {  -> urlConnection=new URL("http://and roid.com/",).openConnection()@ -> TRY { -> urlConnection.getInputStream()@ } } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/test/sun/net/www/protocol/http/WebGet.java][url][2] = -> TRY {  -> url=new URL(urls,)@ -> ins=url.openConnection().getInputStream()@ -> reader=new BufferedReader(new InputStreamReader(ins,),)@ } CATCH(Exception) {}
results[https://github.com/vstorm83/platform/blob/6dbb352cbf4d81cdd26fdc97f6d721a10a6d60ef/portlet/exoadmin/src/main/java/org/exoplatform/applicationregistry/util/ModelDataMapper.java][saveThumbnail][1] = -> TRY {  -> url=new URL(u,)@ -> conn=url.openConnection()@ -> is=conn.getInputStream()@ -> contentNode.setProperty("jcr:mimeType",conn.getContentType(),)@ } CATCH(Exception) {}
results[https://github.com/iac/TestCenter/blob/c2aff0811242ed18c48477b2d2cda29ff61b276d/src/com/sendori/testcenter/action/AdserverURLvalidationAction.java][hitAppURlandParse][1] = -> TRY { -> url=new URL(URLbean.getAppURL(),)@ -> uc=url.openConnection()@ -> connection=(HttpURLConnection) uc@ } CATCH(Exception) { -> LOGGER.error(exp.getMessage(),exp,)@ }
results[https://github.com/cejug/cejug-classifieds/blob/53611eb92ea387f5702c55cd4ca248117ceb9b9a/cejug-classifieds-richfaces/src/main/java/net/java/dev/cejug/classifieds/richfaces/view/RegistrationClientBean.java][emailValidation][1] = -> TRY { -> url=new URL("http://fgaucho.dyndns.org:8080/cejug-classifieds-login-rest/check?email="+email,)@ -> cn=(HttpURLConnection) url.openConnection()@ -> IF { -> return false@cn.getResponseCode()!=200 } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/adtworker/iWatch/blob/482f59e6e9953e109df6bcc7ad8c77dbb8999f5f/src/com/adtworker/mail/service/data/ImgManager.java][getBitMapFromUrl][1] = -> TRY { -> u=new URL(url,)@ -> conn=(HttpURLConnection) u.openConnection()@ -> conn.setConnectTimeout(5*1000,)@ -> is=conn.getInputStream()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/wubs/485-Project/blob/8b93750e4660de3ef4d8dc7c221948473d6dd020/pa6/backend/src/hdfs/org/apache/hadoop/hdfs/tools/DFSck.java][run][1] = -> TRY {  -> path=new URL(url.toString(),)@ -> SecurityUtil.fetchServiceTicket(path,)@ -> connection=path.openConnection()@ -> stream=connection.getInputStream()@ } CATCH(Exception) {}
results[https://github.com/markkerzner/FreeEed/blob/5dda7915d084b2ef2503d4ecb0af30b704b17015/freeeed-processing/src/main/java/org/freeeed/services/UriParser.java][readUri][1] = -> TRY { -> url=new URL(uriStr,)@ -> con=url.openConnection()@ -> in=new BufferedInputStream(con.getInputStream(),)@ } CATCH(Exception) { -> e.printStackTrace(System.out,)@ }
results[https://github.com/SpaceManiac/Glowstone/blob/b5dca8f76e595800ed1efd64f813fde5f16a897b/src/main/java/net/glowstone/net/handler/EncryptionKeyResponseHandler.java][run][1] = -> TRY { -> url=new URL(postURL,)@ -> conn=url.openConnection()@ -> is=conn.getInputStream()@ } CATCH(Exception) { -> session.disconnect("Internal error during authentication",)@ -> GlowServer.logger.log(Level.SEVERE,"Error in authentication thread",e,)@ }
results[https://github.com/SamMobile/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/tests/api/javax/net/ssl/HttpsURLConnectionTest.java][test_getLocalPrincipal][1] = -> TRY {  -> url=new URL("https://localhost:55555",)@ -> connection=(HttpsURLConnection) url.openConnection()@ -> TRY { -> connection.getLocalPrincipal()@ } } CATCH(Exception) {}
results[https://github.com/frostwire/frostwire-desktop/blob/90eacf1ef657a5664fd9b5e2e84d819091f9ea3c/common/vuze/azureus2/src/org/gudy/azureus2/core3/tracker/client/impl/bt/TrackerLoadTester.java][announce][1] = -> TRY { -> url=new URL(strUrl,)@ -> con=url.openConnection()@ -> con.connect()@ -> con.getContent()@ } CATCH(Exception) { -> e.printStackTrace()@ }
