results[https://github.com/cytoscape/cytoscape-impl/blob/4bd0c5707c210f096070c57d00b2213729027a39/command-executor-impl/src/main/java/org/cytoscape/command/internal/tunables/DoubleTunableHandler.java][processArg][15] = -> TRY {  -> return Double.parseDouble(arg,)@ } CATCH(Exception) {}
results[https://github.com/roalex/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/sqlite/OldFunctionContextTest.java][testSet_resultDouble][52] = -> TRY {  -> assertEquals(testD.testDouble,Double.parseDouble(val,),)@ } CATCH(Exception) {}
results[https://github.com/shantanusharma/weka/blob/1f95a87c26bece411d64c799d89d74ff9afff44d/weka/src/main/java/weka/core/pmml/Array.java][valueDouble][4] = -> TRY {  -> return Double.parseDouble(value(index,),)@ } CATCH(Exception) {}
results[https://github.com/gems-uff/oceano/blob/3ca5f2367549f47612ce2bc14a0f2b1d9a336e02/util/src/main/java/br/uff/ic/oceano/util/NumberUtil.java][parseDouble][3] = -> TRY { -> return Double.parseDouble(value,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/openplanets/plato/blob/e940c090e642adbea36adc7a72cbc1011eea91db/planning-core/src/main/java/eu/scape_project/pw/planning/xml/plan/NumericTransformerThresholdFactory.java][createObject][3] = -> TRY {  -> return Double.parseDouble(arg0.getValue("value",),)@ } CATCH(Exception) {}
results[https://github.com/PetarV-/CSTIA-Ticks/blob/2d30b6129ce16d60ad995bb935ed4b3e66069f1f/Java/Tick-1star/InspectDouble.java][main][3] = -> TRY {  -> d=Double.parseDouble(args[0],)@ -> bits=Double.doubleToLongBits(d,)@ } CATCH(Exception) {}
results[https://github.com/sammthomson/semafor/blob/0349e9f43629e5875cce7f1971e0e7b23b6547e9/src/main/java/edu/cmu/cs/lti/ark/fn/identification/training/ConvertAlphabetFile.java][main][1] = -> TRY {  -> threshold=(args.length>=5)?Double.parseDouble(args[4].trim(),):DEFAULT_THRESHOLD@ } CATCH(Exception) {}
results[https://github.com/johdah/Weka/blob/84e3977632e3229542e39d4b6284cdc9a5a68c59/src/main/java/weka/core/pmml/Array.java][valueSparseDouble][3] = -> TRY {  -> return Double.parseDouble(actualValue(indexOfIndex,),)@ } CATCH(Exception) {}
results[https://github.com/dongpd/ecms/blob/6071ea381006e1207feed489ca3cd81964800a34/exo.ecm.wcm.connector.fckeditor/src/main/java/org/exoplatform/wcm/connector/fckeditor/DriverConnector.java][createUploadFileResponse][5] = -> TRY {  -> return fileUploadHandler.upload(uploadId,contentType,Double.parseDouble(contentLength,),inputStream,currentFolderNode,language,limit,)@ } CATCH(Exception) {}
results[https://github.com/INBio/Threat-Modeling-System/blob/b7322a25b7ddff62bd0668330f81e32b265baaaa/modeling-web/src/main/java/org/inbio/modeling/web/controller/IntervalsController.java][calculateDensity][1] = -> TRY {  -> conversionRate=Double.parseDouble(configManager.retrieveResolution(),)@ } CATCH(Exception) {}
results[https://github.com/itru/timesheet/blob/e99d076df8d9d2b44b165434365a34ef88ccdacc/src/main/java/com/aplana/timesheet/service/PlanEditExcelReportService.java][setCellValueAsDouble][1] = -> TRY {  -> doubleCellValue=Double.parseDouble(cellValue,)@ -> cell.setCellValue(doubleCellValue,)@ } CATCH(Exception) {}
results[https://github.com/brooklyncentral/brooklyn/blob/5c13c3b62a72dacf2b728637c5c03e32a41b04da/extra/src/main/java/brooklyn/policy/followthesun/FollowTheSunParameters.java][parseDouble][2] = -> TRY { -> d=Double.parseDouble(text,)@ } CATCH(Exception) { -> LOG.warn("Illegal double value '"+text+"', using default "+defaultValue+": "+e,e,)@ }
results[https://github.com/vandurme/jerboa/blob/235d83e05c5650cec34a34e758361da571b4a166/src/main/java/edu/jhu/jerboa/counting/TOMB.java][main][3] = -> TRY {  -> base=Double.parseDouble(args[0],)@ -> tomb=new TOMB(10000,3,4,base,)@ } CATCH(Exception) {}
results[https://github.com/jalkanen/speed4j/blob/3cc5d25e2957a0fdc3f44f07ecd3beb0c88100ca/src/main/java/com/ecyrd/speed4j/util/SetterUtil.java][set][1] = -> TRY {  -> val=Double.parseDouble(value,)@ -> m.invoke(obj,val,)@ } CATCH(Exception) {}
results[https://github.com/Top-Q/jsystem/blob/442f8e439d673acdeb4eb80494d9eec9bcff77c6/jsystem-core-projects/jsystemCommon/src/main/java/jsystem/extensions/analyzers/csv/CheckMinMaxAnalyzer.java][process][2] = -> TRY {  -> current=Double.parseDouble(toAnalyze[getColumnToAnalyzeIndex()],)@ } CATCH(Exception) {}
results[https://github.com/Monomachus/Jason.NET/blob/23d9c8233e0262777ac1fffe1fcbfdf9b05d8dbd/jason/asSyntax/NumberTermImpl.java][<init>][2] = -> TRY { -> t=Double.parseDouble(sn,)@ } CATCH(Exception) { -> logger.log(Level.SEVERE,"Error setting number term value from "+sn,e,)@ }
results[https://github.com/jnaithani/genetic-programming/blob/4fe84af9a6f01423d0a73b4b0423a0ea080b320f/src/utilities/Settings.java][getFitnessThreshold][5] = -> TRY {  -> prop=settings.getProperty(PROP_FITNESS_THRESHOLD,)@ -> return Double.parseDouble(prop,)@ } CATCH(Exception) {}
results[https://github.com/soartech/soar/blob/1e3ad50b497c11982dde07a9c26fdb9c8fa8a252/SoarSuite/Tools/SoarJavaDebugger/src/general/JavaElementXML.java][getAttributeDoubleThrows][7] = -> TRY {  -> val=getAttributeThrows(name,)@ -> doubleVal=Double.parseDouble(val,)@ } CATCH(Exception) {}
results[https://github.com/ettrema/clyde/blob/4e95da452130db5d00a2559eb5ca8723a129fa61/clyde-core/src/main/java/com/ettrema/web/Scratch.java][main][2] = -> TRY {  -> dd=Double.parseDouble("0.0",)@ -> bd=new BigDecimal(dd,)@ } CATCH(Exception) {}
results[https://github.com/Patre/Energy-saving-in-sensors--networks/blob/5fd926c1fa47b40e0ad3827cebaab689149b50f3/wsnet/utils/replay/replay.java][conversionDouble][9] = -> TRY { -> tmp=Double.parseDouble(chaine,)@ } CATCH(Exception) { -> System.out.println("Error while converting "+chaine+" to double...",)@ }
results[https://github.com/aurelf/avrora/blob/9e0f079acddb7c2d663cc3db48909573bbcecaee/src/cck/util/Option.java][set][2] = -> TRY { -> value=java.lang.Double.parseDouble(val,)@ } CATCH(Exception) { -> parseError(name,"double",val,)@ }
results[https://github.com/cytoscape/cytoscape-impl/blob/4bd0c5707c210f096070c57d00b2213729027a39/command-executor-impl/src/main/java/org/cytoscape/command/internal/tunables/BoundedDoubleTunableHandler.java][processArg][1] = -> TRY {  -> value=Double.parseDouble(arg,)@ -> bi.setValue(value,)@ } CATCH(Exception) {}
results[https://github.com/openGDA/gda-epics/blob/3d30438d6ffbae3a9091ddf80eddd40744312392/uk.ac.gda.epics.client/src/uk/ac/gda/epics/client/views/CameraViewController.java][setROISizeY][1] = -> TRY {  -> roiModel1.setSizeY((int) Double.parseDouble(sizeY,),)@ } CATCH(Exception) {}
results[https://github.com/openGDA/gda-epics/blob/3d30438d6ffbae3a9091ddf80eddd40744312392/uk.ac.gda.epics.client/src/uk/ac/gda/epics/client/views/CameraViewController.java][setROISizeX][1] = -> TRY {  -> roiModel1.setSizeX((int) Double.parseDouble(sizeX,),)@ } CATCH(Exception) {}
results[https://github.com/dwr/opengs/blob/9363b4d6ec564ac340222f99e441c8de05b0e7ab/src/server/phase/ChangePIPPhase.java][init][2] = -> TRY {  -> changePip=Double.parseDouble(props.getProperty("Galaxy.PIP.Change","0.0",),)@ } CATCH(Exception) {}
results[https://github.com/mersad00/TUMRentability/blob/fc8a6fec1601cca36477228c6bc12d20bacd1ddf/Rentability/app/controllers/Rentability.java][saveEditedOffer][2] = -> TRY { -> offer.price=Double.parseDouble(price,)@ } CATCH(Exception) { -> flash.error("Sorry an error occured, please try again!",)@ }
results[https://github.com/openGDA/gda-epics/blob/3d30438d6ffbae3a9091ddf80eddd40744312392/uk.ac.gda.epics.client/src/uk/ac/gda/epics/client/views/CameraViewController.java][setProcOffset][1] = -> TRY {  -> procModel1.setOffset(Double.parseDouble(offset,),)@ } CATCH(Exception) {}
results[https://github.com/openGDA/gda-epics/blob/3d30438d6ffbae3a9091ddf80eddd40744312392/uk.ac.gda.epics.client/src/uk/ac/gda/epics/client/views/CameraViewController.java][setProcScale][1] = -> TRY {  -> procModel1.setScale(Double.parseDouble(scale,),)@ } CATCH(Exception) {}
results[https://github.com/redlinesmedia/em-server/blob/0daa6f84a93e6be13aa8bf713d00e22807131a57/src/org/openedit/entermedia/modules/MediaSearchModule.java][rangeSearch][1] = -> TRY {  -> rangeString=inReq.findValue("range",)@ -> range=Double.parseDouble(rangeString,)@ } CATCH(Exception) {}
results[https://github.com/PonySDK/PonySDK/blob/4bfa5685c48b62fcf4d40eb9a8c6e16a5faa6355/ponysdk/src-core/main/java/com/ponysdk/ui/server/form/validator/DoubleFieldValidator.java][isADouble][1] = -> TRY { -> Double.parseDouble(value,)@ } CATCH(Exception) { -> return ValidationResult.newFailedValidationResult(ERROR_MESSAGE,)@ }
results[https://github.com/openGDA/gda-epics/blob/3d30438d6ffbae3a9091ddf80eddd40744312392/uk.ac.gda.epics.client/src/uk/ac/gda/epics/client/views/CameraViewController.java][setROIStartY][1] = -> TRY {  -> roiModel1.setStartY((int) Double.parseDouble(startY,),)@ } CATCH(Exception) {}
results[https://github.com/openGDA/gda-epics/blob/3d30438d6ffbae3a9091ddf80eddd40744312392/uk.ac.gda.epics.client/src/uk/ac/gda/epics/client/views/CameraViewController.java][setROIStartX][1] = -> TRY {  -> roiModel1.setStartX((int) Double.parseDouble(startX,),)@ } CATCH(Exception) {}
results[https://github.com/evilsocket/dsploit/blob/1404fc1ad04dcab6789a5b4bbae3b27d281731c1/dSploit/src/it/evilsocket/dsploit/net/Target.java][<init>][1] = -> TRY {  -> parts=serialized.split("\\|",3,)@ -> severity=Double.parseDouble(parts[1],)@ } CATCH(Exception) {}
results[https://github.com/kendzi/kendzi3d/blob/133b563346afb33aa26ea01d8a031eb9b5391f6c/kendzi3d-plugin/src/main/java/kendzi/josm/kendzi3d/util/expression/SimpleDoubleExpressionParser.java][evalueDouble][2] = -> TRY { -> return Double.parseDouble(expression,)@ } CATCH(Exception) { -> throw new RuntimeException("unknown function or double value: "+expression,e,)@ }
results[https://github.com/uDig/udig-platform/blob/349340250a93a231ae44ba69b78c7b895ff84bd5/plugins/org.locationtech.udig.catalog.wmt/src/org/locationtech/udig/catalog/internal/wmt/wmtsource/ww/QuadTileSet.java][getNumericValueFromChild][3] = -> TRY {  -> return Double.parseDouble(bboxChild.getChildText("Value",),)@ } CATCH(Exception) {}
results[https://github.com/sn3d/lime-mvc/blob/b20baa81889bd3196b5c9fd285b035381da0be75/src/org/zdevra/guice/mvc/convertors/DoubleConvertor.java][convert][1] = -> TRY { -> return Double.parseDouble(stringValue,)@ } CATCH(Exception) { -> throw new IllegalConversionException("A conversion from the '"+stringValue+"' to the double failed",)@ }
results[https://github.com/boutroslab/web-cellhts2/blob/4bdc9b596d9e53cb190685d074c41be37b4254a9/src/main/java/cellHTS/classes/StringFunctions.java][parseDouble][1] = -> TRY { -> return Double.parseDouble(input,)@ } CATCH(Exception) { -> return new Double(0,)@ }
results[https://github.com/adempiere/adempiere/blob/0e1c23efa173cae3a9c9779adf8a94850f5212c4/base/src/org/compiere/util/AmtInWords_PT.java][getAmtInWords][1] = -> TRY {  -> vlr=amount.replaceAll(",",".",)@!(amount==null) -> valor=Double.parseDouble(vlr,)@!(amount==null) } CATCH(Exception) {}
results[https://github.com/eclipse/vjet.all/blob/080b6fe24584b3dd84b5c35fd6b2ffe90b2f3037/core/test/org.eclipse.vjet.test.core.javatojs/src/org/eclipse/vjet/dsf/javatojs/tests/data/datatype/DoubleWrapperSrc.java][doubleWrapperMthd][2] = -> TRY {  -> v_valueOf=Double.valueOf(v_str,)@ -> v_parseDouble=Double.parseDouble(v_str,)@ } CATCH(Exception) {}
results[https://github.com/DawnScience/dawn-ui/blob/b7e7af720022a336466d7df4d12dfee0035feba0/org.dawb.workbench.plotting/src/org/dawb/workbench/plotting/tools/fitting/FunctionFittingTool.java][modifyText][2] = -> TRY { -> accuracy=Double.parseDouble(accurasyValueText.getText(),)@ } CATCH(Exception) { -> logger.debug("Had a problem whilst passing the accurasy String",e,)@ }
results[https://github.com/pwendell/mesos/blob/6168de123773c2cd97d1194603283ea168994289/frameworks/hadoop-0.20.2/src/contrib/vaidya/src/java/org/apache/hadoop/vaidya/DiagnosticTest.java][getSuccessThreshold][59] = -> TRY {  -> x=Double.parseDouble(XMLUtils.getElementValue("SuccessThreshold",this._testConfigElement,),)@ -> return truncate(x,)@ } CATCH(Exception) {}
results[https://github.com/AerodyneLabs/HABtk/blob/e8016d50c37ebbc6f70788a9cf4eaffcc9c7258c/src/com/aerodynelabs/habtk/prediction/ElevationService.java][getElevation][1] = -> TRY { -> alt=scanner.findInLine("[0-9.]+",)@ -> elev=Double.parseDouble(alt,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sgolodetz/hesperus/blob/54fb19ebfbc2cecbee1e3a3b761120bc45d9af78/MapEditor/trunk/Brushes/LightBrush.java][actionPerformed][3] = -> TRY { -> falloffRadius=Double.parseDouble(falloffField.getText(),)@ } CATCH(Exception) { -> System.err.println("Warning: Invalid colour components or falloff radius",)@ }
results[https://github.com/wjsl/accumulo/blob/af9a1216a1853a7bd6e89ab581fadaf682cb69a0/src/core/src/main/java/org/apache/accumulo/core/util/shell/commands/SleepCommand.java][execute][2] = -> TRY {  -> secs=Double.parseDouble(cl.getArgs()[0],)@ -> Thread.sleep((long) secs*1000,)@ } CATCH(Exception) {}
results[https://github.com/samarjit/mywapama/blob/f4a80de7fe23b88bb5165f6d0b1a1b9f97412189/editor/test/jsunit/java/source_core/net/jsunit/version/JsUnitWebsiteVersionGrabber.java][grabVersion][10] = -> TRY {  -> string=StreamUtility.readAllFromStream(url.openStream(),)@ -> return Double.parseDouble(string,)@ } CATCH(Exception) {}
results[https://github.com/radekolesiak/gwtapp/blob/4336c15e5fc4499d13af849cf5282377731d2d11/startapp/app/src/main/java/org/gwtapp/startapp/client/ui/delegated/DoubleBox.java][convertToX][1] = -> TRY { -> doubleValue=Double.parseDouble(value,)@ -> state.setText("OK: "+doubleValue,)@ } CATCH(Exception) { -> state.setText("Invalid value: "+value,)@ }
results[https://github.com/duckweed/fitnesse-verify-only/blob/18ab1ba9281ee6002d3155490e7056f5f80aaf26/src/fitnesse/slim/SlimServiceTestBase.java][versionNumberShouldBeDetected][4] = -> TRY {  -> slimVersion=Double.parseDouble(SlimVersion.VERSION,)@ -> assertEquals(slimVersion,slimClient.getServerVersion(),.0001,)@ } CATCH(Exception) {}
results[https://github.com/alexbud/vkontakte/blob/14ac8263df71f744f95b7b44212ec1f26f0a9770/reseller-huuto/src/test/java/com/abudko/reseller/huuto/query/service/list/html/city/CityHtmlListParserTest.java][testCurrentPrice][5] = -> currentPrice=queryResponse.getCurrentPrice()@ -> TRY { -> Double.parseDouble(currentPrice,)@ } CATCH(Exception) { -> fail("Unable to parse current price "+currentPrice,)@ }
results[https://github.com/dongpd/ecms/blob/9a49e0beefe5f1dec8f3a9b003e94a4b79511753/exo-ecms-core-connector/src/main/java/org/exoplatform/ecm/connector/fckeditor/FCKCoreRESTConnector.java][uploadFile][4] = -> TRY {  -> currentNode=(Node) session.getItem(currentFolder,)@ -> return fileUploadHandler.upload(uploadId,contentType,Double.parseDouble(contentLength,),inputStream,currentNode,language,)@ } CATCH(Exception) {}
results[https://github.com/uDig/udig-platform/blob/349340250a93a231ae44ba69b78c7b895ff84bd5/plugins/org.locationtech.udig.tools.jgrass/src/org/locationtech/udig/tools/jgrass/featuremovieview/FeatureMovieView.java][updateZoomBuffer][4] = -> text=zoomBufferText.getText()@ -> TRY { -> zoomBuffer=Double.parseDouble(text,)@ } CATCH(Exception) { -> zoomBufferText.setText(zoomBuffer+"",)@ }
results[https://github.com/geoserver/geoserver-history/blob/7362c77064e098f8aa0513a141036b7f991cada4/src/wms/src/test/java/org/geoserver/kml/KMLNetworkLinkTransformerTest.java][testEncodeAsOverlay][8] = -> TRY {  -> value=xpath.evaluate("//kml/Folder/LookAt/altitude",dom,)@ -> assertEquals(1.5768778343115222E7,Double.parseDouble(value,),1E-5,)@ } CATCH(Exception) {}
results[https://github.com/kozo2/cytoscape2/blob/d324d255aca1310d8748c2344ce92df9c1f43557/src/cytoscape/visual/ui/ObjectPlacerControl.java][getOffset][8] = -> TRY { -> d=Double.parseDouble(jtf.getText(),)@ } CATCH(Exception) { -> jtf.setText("0",)@ }
results[https://github.com/tdunning/mahout/blob/a6b5d14013a237a8bcd236be8e29e428bdeb6796/core/src/main/java/org/apache/mahout/cf/taste/hadoop/item/RecommenderJob.java][run][10] = -> TRY {  -> threshold=(hasOption("threshold",))?Double.parseDouble(getOption("threshold",),):RowSimilarityJob.NO_THRESHOLD@ } CATCH(Exception) {}
results[https://github.com/alexbud/vkontakte/blob/55560bfc2ece85c12df1e7918f9096deefc1bf24/reseller-huuto/src/test/java/com/abudko/reseller/huuto/query/service/list/html/HtmlListParserTest.java][testParseSize][3] = -> size=queryResponse.getSize()@ -> TRY { -> Double.parseDouble(size,)@ } CATCH(Exception) { -> fail("Unable to parse size "+size,)@ }
results[https://github.com/kia/FitGoodies/blob/7b3ee1ce45d1bddc47362f4ea9795c7cc56adaa6/src/main/java/fitgoodies/parsers/ScientificDoubleParser.java][parse][3] = -> TRY {  -> value=Double.parseDouble(s,)@ -> tolerance=precision(s,)@ -> return new ScientificDouble(value,tolerance,)@ } CATCH(Exception) {}
results[https://github.com/mmalina/jbosstools-integration-tests-non-soa/blob/b35aff40c3a0d4946aa66c7227a7e3031c6e8a8c/tests/org.jboss.tools.ui.bot.ext/src/org/jboss/tools/ui/bot/ext/Timing.java][<clinit>][4] = -> TRY { -> multiplier=Double.parseDouble(System.getProperty(TestConfigurator.SWTBOTEXT_DELAY_MULTIPLIER,"1.0",),)@ } CATCH(Exception) { -> log.error("Unable to parse TestConfigurator.SWTBOTEXT_DELAY_MULTIPLIER",ex,)@ }
results[https://github.com/alexbud/vkontakte/blob/55560bfc2ece85c12df1e7918f9096deefc1bf24/reseller-huuto/src/test/java/com/abudko/reseller/huuto/query/service/list/html/HtmlListParserTest.java][testParseFullPrice][3] = -> fullPrice=fullPriceQueryResponse.getFullPrice()@ -> TRY { -> Double.parseDouble(fullPrice,)@ } CATCH(Exception) { -> fail("Unable to parse full price "+fullPrice,)@ }
results[https://github.com/DanB91/USU-BUGCATCHER/blob/4264bc32dbf1c9cbd042bcf4898e4c0c6fbacfdf/Problems/Converter/src/Converter_Bug7.java][main][1] = -> TRY { -> num=Double.parseDouble(args[0],)@ -> answer=convertSecsToTime(num,)@ } CATCH(Exception) { -> System.out.println("Error: Bad Input",)@ }
results[https://github.com/droolsjbpm/drools-wb/blob/f6a71c22548b876a3db6d572d29d9ae388c64263/drools-wb-screens/drools-wb-guided-scorecard-editor/drools-wb-guided-scorecard-editor-client/src/main/java/org/drools/workbench/screens/guided/scorecard/client/widget/GuidedScoreCardEditor.java][update][1] = -> TRY { -> d=Double.parseDouble(value,)@ -> object.setPartialScore(d,)@ } CATCH(Exception) { -> partialScoreCell.clearViewData(object,)@ }
results[https://github.com/akuhn/codemap/blob/f20808fb8a3b8cc089eba1c0b549b3bc3c86dab1/flowmap_to_swt_dep_prefuse_1_10_05/extensions/edu/berkeley/guir/prefusex/layout/ScatterplotLayout.java][getCoord][1] = -> value=item.getAttribute(attr,)@ -> TRY { -> return Double.parseDouble(value,)@ } CATCH(Exception) { -> System.err.println("Attribute \""+attr+"\" is not a valid numerical value.",)@ }
results[https://github.com/Aulie/Freerider/blob/9d1f7e0ff3655b7f07c5156243396c7e7877a0d3/Freerider/src/no/ntnu/idi/socialhitchhiking/map/MapRoute.java][setDistanceInKilometers][1] = -> TRY { -> df=new DecimalFormat("#.##",)@ -> formatted=Double.parseDouble(df.format(distKM,),)@ } CATCH(Exception) { -> formatted=(int) distKM@ }
results[https://github.com/terraframe/Runway-SDK/blob/67d1c346f13932edbf5b8cded75c23d76da8d782/runwaysdk-test/src/main/java/com/runwaysdk/business/EntityGenTest.java][testSetDouble][1] = -> TRY {  -> businessDAO=BusinessDAO.get(id,)@ -> out=Double.parseDouble(businessDAO.getValue("aDouble",),)@ } CATCH(Exception) {}
results[https://github.com/exoplatform/ks/blob/8757d24e85ba5fab8828b95b08e4b339f65c2de1/eXoApplication/poll/webapp/src/main/java/org/exoplatform/poll/webui/UIPoll.java][getInfoVote][4] = -> TRY {  -> LOOP { -> tmp=Double.parseDouble(string,)@ -> string=""+(double) t*100/size@ } } CATCH(Exception) {}
results[https://github.com/uDig/udig-platform/blob/349340250a93a231ae44ba69b78c7b895ff84bd5/plugins/org.locationtech.udig.style.advanced/src/org/locationtech/udig/style/advanced/common/styleattributeclasses/RuleWrapper.java][setMaxScale][3] = -> TRY { -> rule.setMaxScaleDenominator(Double.parseDouble(maxScale,),)@ } CATCH(Exception) { -> rule.setMaxScaleDenominator(Double.POSITIVE_INFINITY,)@ }
results[https://github.com/PonySDK/PonySDK/blob/0a376cdd169b84f493d4f7912fa8da4183e663ed/ponysdk/src-core/main/java/com/ponysdk/ui/server/form2/validator/DoubleFieldValidator.java][isADouble][1] = -> TRY { -> Double.parseDouble(value,)@ } CATCH(Exception) { -> return ValidationResult.newFailedValidationResult(PString.get("validator.error.double",),)@ }
results[https://github.com/Data2Semantics/d2s-tools/blob/cb4ab534880c978b5fbe7ffb65c47549eaedb474/kernelexperiments/src/main/java/org/data2semantics/exp/molecules/MoleculeExperiment.java][getGraphLabel][1] = -> TRY { -> ret=reader.readLine()@ -> return Double.parseDouble(ret,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/Longor1996/TaleCraft/blob/51404269f3722900ba77acfd760eed93ffee7ab3/src/minecraft/taleCraft/commands/RIntegerCommand.java][parseDouble][1] = -> TRY { -> return Double.parseDouble(stringValue,)@ } CATCH(Exception) { -> TCCore.sendChat(commandSender,EnumChatFormatting.RED+"Error while parsing Paramter '"+stringValue+"': "+e.getLocalizedMessage(),)@ }
results[https://github.com/BrianDiao/fatworm/blob/bdf736cacb822169cf9f99dd087986c84cebd37f/Judger/src/adapter/ProcessQuery.java][readScore][2] = -> TRY { -> s=br.readLine()@ -> return Double.parseDouble(s,)@ } CATCH(Exception) { -> System.err.println("score file not found!",)@ }
results[https://github.com/and146/SPLAT-ARI/blob/dd5a41620f2739930b8fbe8ea74bacfb77088bef/diva/src/main/diva/sketch/recognition/SceneBuilder.java][buildCompositeElement][2] = -> TRY {  -> conf=elt.getAttribute(CONFIDENCE_TAG,)@ -> confidence=(conf==null)?1:Double.parseDouble(conf,)@ -> return _db.addComposite(data,confidence,children,names,)@ } CATCH(Exception) {}
results[https://github.com/grzes314/LSM/blob/0a191756b53e0289134e82195409599d0d247cf2/NBfiles/src/finance/parameters/ConcreteParamsIO.java][read][1] = -> TRY {  -> line=br.readLine()@ -> r=Double.parseDouble(line.trim(),)@ } CATCH(Exception) {}
results[https://github.com/kazkus/noquarter/blob/7a493efaf127ca03272245a3ac8a311fb197a0d0/src/main/java/us/kazk/noquarter/event/EventAnalyzer.java][main][1] = -> TRY {  -> price=Double.parseDouble(args[0],)@ -> days=Integer.parseInt(args[1],)@ -> finder=new ActualCloseEventFinder(price,"-",)@ } CATCH(Exception) {}
results[https://github.com/DanB91/USU-BUGCATCHER/blob/46e0b5dbad3b0a438301e7a76b090da40a099e0f/Problems/Encoder/src/Encoder_Oracle.java][main][1] = -> TRY { -> shift=Double.parseDouble(args[1],)@ -> encrypted=encrypt(toEncrypt,shift,)@ } CATCH(Exception) { -> System.out.println("Error: Bad Input",)@ }
results[https://github.com/colombbus/tangara/blob/4d2b0e4401e92b2dfd66c11493bdd68a544a04eb/software/src/main/java/org/colombbus/tangara/Configuration.java][getDouble][1] = -> TRY { -> value=getProperty(property,)@ -> return Double.parseDouble(value,)@ } CATCH(Exception) { -> displayError("Failed to load double property "+property,)@ }
results[https://github.com/easel/reconnoiter/blob/84a43ccc3aeb8816cab280c4a4c6cb68a805112d/src/java/com/omniti/reconnoiter/event/NoitStatus.java][<init>][1] = -> TRY {  -> super(parts,)@ -> duration=Double.parseDouble(parts[6],)@ -> time=timeToLong(parts[2],)@ } CATCH(Exception) {}
results[https://github.com/OTSim/OTSim/blob/b7a90cb36afd81986f30dc6842fba776742ebb96/src/nl/tudelft/otsim/GeoObjects/VMS.java][setTime_w][1] = -> TRY {  -> setTime(Double.parseDouble(Planar.fixRadix(newTime,),),)@ } CATCH(Exception) {}
results[https://github.com/pdaquino/EECS568/blob/62914faadde3988f35d6b6da590dbba6237aec5d/ps2/eecs568/java/src/april/util/ParameterGUI.java][actionPerformed][2] = -> TRY { -> v=Double.parseDouble(textField.getText(),)@ -> setDoubleValue(v,true,)@ } CATCH(Exception) { -> setDoubleValue(value,false,)@ }
results[https://github.com/tpcstld/Jetris/blob/3532f790ec8c24d504d79c9a29e97acc1e531d36/src/com/tpcstld/jetris/MainGame.java][getDoubleFromSettings][1] = -> TRY { -> return Double.parseDouble(settings.getString(text,String.valueOf(variable,),),)@ } CATCH(Exception) { -> System.err.println("Error getting "+text+". Reverting to default value.",)@ }
results[https://github.com/ransford/mspsim/blob/1c569e3697ec43306cc1ef09243b095dca516702/se/sics/mspsim/cli/CommandContext.java][getArgumentAsDouble][2] = -> arg=getArgument(index,)@ -> TRY { -> return Double.parseDouble(arg,)@ } CATCH(Exception) { -> err.println("Illegal number format: "+getArgument(index,),)@ }
results[https://github.com/xiebozhi/Muni/blob/2722ed978d33cc7d932fb48250262b00eea26dfc/src/com/teamglokk/muni/Muni.java][parseD][1] = -> TRY { -> rtn=Double.parseDouble(num,)@ } CATCH(Exception) { -> this.getLogger().warning(num+" is not a number: "+e.getMessage(),)@ }
results[https://github.com/timduru/platform-libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/sqlite/OldDatabaseTest.java][testCreate_function][4] = -> TRY {  -> sinusVal=Double.parseDouble(val,)@ -> assertTrue(Math.round(funcVal,)==Math.round(sinusVal,),)@ } CATCH(Exception) {}
results[https://github.com/baron/weka/blob/cdb45adc27fb087fb8e773a95a1dd55435180862/src/main/java/weka/classifiers/rules/ConjunctiveRule.java][setOptions][10] = -> TRY {  -> minNoString=Utils.getOption('M',options,)@ -> IF { -> m_MinNo=Double.parseDouble(minNoString,)@minNoString.length()!=0 } } CATCH(Exception) {}
results[https://github.com/and146/SPLAT-ARI/blob/dd5a41620f2739930b8fbe8ea74bacfb77088bef/jsky/src/main/jsky/util/gui/JTextFieldDouble.java][actionPerformed][1] = -> s=(String) event.getActionCommand()@ -> TRY { -> dd=Double.parseDouble(s,)@ -> jt.setText(dd,)@ } CATCH(Exception) { -> jt.setText(s,)@ }
results[https://github.com/fiji/TrakEM2/blob/7c3aaf93f3ee447166fe962d010d19a78e8fdcce/ini/trakem2/utils/OptionPanel.java][getNumber][2] = -> TRY {  -> check(numeric_fields,index,)@ -> return Double.parseDouble(numeric_fields.get(index,).getText(),)@ } CATCH(Exception) {}
results[https://github.com/masternerdguy/High-Albedo/blob/1a1b250f3936934dfb94be3f9993d4473106c963/src/gdi/OverviewWindow.java][roundTwoDecimal][1] = -> TRY { -> twoDForm=new DecimalFormat("#.##",)@ -> return Double.parseDouble(twoDForm.format(d,),)@ } CATCH(Exception) { -> System.out.println("Not a Number",)@ }
results[https://github.com/weishengshui/posserver/blob/9cf4181f7efab1b60637b7dc4b1b111217f93020/main/src/test/java/com/chinarewards/qqadidas/main/privilegeexchange/PrivilegeExchangeProtocolTest.java][test_NOTSPENDING_AMOUNT_MORE_THAN_600][1] = -> TRY {  -> tip=cdkey+"本次消费"+amount+"元，即刻享受100元折扣优惠，折扣后实际支付为"+Double.parseDouble(amount,)-100+"元。本券打印后仅限当次使用。即日起至6月19日止。"@ -> test_PRIVILEGE(cdkey,amount,result,TITLE,tip,)@ -> q.setParameter(1,cdkey,)@ -> q.setParameter(1,cdkey,)@ } CATCH(Exception) {}
results[https://github.com/baron/weka/blob/f65a4cd58ff576e776172ca9319dd0a898a20d2e/weka/src/main/java/weka/core/pmml/NormDiscrete.java][<init>][2] = -> TRY {  -> mapMissing=normDisc.getAttribute("mapMissingTo",)@ -> IF { -> m_mapMissingTo=Double.parseDouble(mapMissing,)@mapMissing!=null&&mapMissing.length()>0 } } CATCH(Exception) {}
results[https://github.com/iwabuchiken/freemind/blob/622a395c32dd0b0024412b11642aea1558b36386/freemind/freemind/main/Tools.java][nt][1] = -> nextToken=pTokenizer.nextToken()@ -> TRY { -> return Double.parseDouble(nextToken,)@ } CATCH(Exception) { -> freemind.main.Resources.getInstance().logException(e,)@ }
results[https://github.com/cloudera/lucene-solr/blob/323e99287d01cafd6b64f3386662ceba8c585419/solr/solrj/src/java/org/apache/solr/common/params/SolrParams.java][getDouble][1] = -> val=get(param,)@ -> TRY { -> return (val==null)?def:Double.parseDouble(val,)@ } CATCH(Exception) { -> throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,ex.getMessage(),ex,)@ }
results[https://github.com/sudarshang/lucene-solr/blob/a171c8b6e82c8ff02739b52fc33135c9186bf94c/solr/src/common/org/apache/solr/common/params/SolrParams.java][getFieldDouble][3] = -> val=getFieldParam(field,param,)@ -> TRY { -> return (val==null)?def:Double.parseDouble(val,)@ } CATCH(Exception) { -> throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,ex.getMessage(),ex,)@ }
results[https://github.com/meineerde/reconnoiter/blob/c81b4d9aee5060368676cfbbd7e8145d47bcea03/src/java/com/omniti/reconnoiter/event/NoitStatus.java][<init>][1] = -> TRY {  -> super(parts,)@ -> id=extended_id_split(parts[3],)@ -> duration=Double.parseDouble(parts[6],)@ -> time=timeToLong(parts[2],)@ } CATCH(Exception) {}
results[https://github.com/uDig/udig-platform/blob/fae0b31d673f218d5474c6cbdbc78749e8703d41/plugins/eu.udig.style.advanced/src/eu/udig/style/advanced/common/styleattributeclasses/RuleWrapper.java][setMinScale][1] = -> TRY { -> rule.setMinScaleDenominator(Double.parseDouble(minScale,),)@ } CATCH(Exception) { -> rule.setMinScaleDenominator(Double.parseDouble(DEFAULT_MINSCALE,),)@ }
results[https://github.com/Starlink/starjava/blob/380ffeac72b31676502d05c6fdb2b7a3a077cae7/jsky/src/main/jsky/catalog/TablePlotSymbol.java][_compileExpressions][1] = -> TRY { -> _sizeVal=Double.parseDouble(_size,)@ } CATCH(Exception) { -> TRY { -> _sizeExpr=new JavaExpr("(double)"+_size,this,)@ } }
results[https://github.com/Warkst/PastaHouse/blob/672f3162429be34b7a793cd53ca4b8a3058447c3/PastaHouse/src/gui/ingredients/dialogs/PrintDialog.java][quantityOutletKeyReleased][1] = -> TRY { -> Double.parseDouble(quantityOutlet.getText(),)@ -> quantityOutlet.setForeground(Color.black,)@ } CATCH(Exception) { -> quantityOutlet.setForeground(Color.red,)@ }
results[https://github.com/soartech/soar/blob/f35a0530d20772ea149bb9ca9b5c87117a843fbe/SoarSuite/soar-java/soar-debugger/src/main/java/general/JavaElementXML.java][getAttributeDoubleDefault][2] = -> TRY {  -> val=this.getAttribute(name,)@ -> IF { -> return defaultValue@val==null } -> doubleVal=Double.parseDouble(val,)@!(val==null) } CATCH(Exception) {}
results[https://github.com/LSTS/neptus/blob/4d58343c2f0b754328d5bc72f465001d443238c5/src/pt/lsts/neptus/mp/templates/RowsTemplate.java][parseDepths][1] = -> TRY {  -> parts=depths.split("[ ,]",)@ -> LOOP { -> depths[i]=Double.parseDouble(parts[i],)@i<parts.length } } CATCH(Exception) {}
results[https://github.com/mdmzero0/JSatTrak/blob/f2bd2942980b2ed04688cd375859eca2e9bafcfa/src/jsattrak/gui/JCoverageDialog.java][saveSettings][1] = -> TRY { -> ele=Double.parseDouble(minElevTextField.getText(),)@ -> ca.setElevationLimit(ele,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/punitshah163/VisioLine/blob/49dc79adb4f73eb15cd6de2c25935363585a622d/libs/core_javadoc/src/processing/data/JSONArray.java][getDouble][1] = -> object=this.get(index,)@ -> TRY { -> return (object instanceof Number)?(Number) object.doubleValue():Double.parseDouble((String) object,)@ } CATCH(Exception) { -> throw new RuntimeException("JSONArray["+index+"] is not a number.",)@ }
results[https://github.com/jeromerobert/jCAE/blob/1d508573646d6b192529200ecf27d9f60135ed30/vtk-amibe/src/org/jcae/vtk/UNVParser.java][readUnit][1] = -> TRY { -> unite=st.nextToken()@ -> unite=unite.replace('D','E',)@ -> unit=Double.parseDouble(unite,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/eraldoluis/Large-Margin-Structured-Perceptron/blob/be3d508cc66765713cf860b5fef2ac66c31cafb4/src/br/pucrio/inf/learn/structlearning/generative/driver/TrainSemiSupervisedHmm.java][main][1] = -> TRY {  -> numIterations=Integer.parseInt(args[++arg],)@ -> smoothing=Double.parseDouble(args[++arg],)@ -> System.out.println(String.format("Unsupervised training HMM model with the following parameters:\n"+"	Supervised train file: %s\n"+"	Unsupervised train file: %s\n"+"	Observation feature: %s\n"+"	State feature: %s\n"+"	Model file: %s\n"+"	# iterations: %d\n"+"	Smoothing: %f\n",trainFileNameS,trainFileNameU,observationFeatureLabel,stateFeatureLabel,modelFileName,numIterations,smoothing,),)@ } CATCH(Exception) {}
results[https://github.com/marcust/j-wings/blob/aa253288ad7106206e998584e403ba9669d2d3fb/wings/demo/wingset/JavaScriptListenerExample.java][parseNumber][1] = -> text=field.getText().trim()@ -> TRY { -> result=Double.parseDouble(text,)@ } CATCH(Exception) { -> field.setBackground(Color.RED,)@ }
