results[https://github.com/joseignaciosg/TPProtos2cuat2012/blob/c36be7813bcc0d18153faf29bb301db6ec131e69/src/main/java/service/AbstractSockectService.java][onConnectionClosed][3] = -> TRY {  -> out.close()@ } CATCH(Exception) {}
results[https://github.com/eliask/SDP2011-Robotniks/blob/ccd6bfea5c2e8dd2dce61ad3b1669fd47fc1e9cf/communication/lejos_nxj/projects/samples/TimeTest/TimeTest.java][<init>][2] = -> TRY {  -> outs=sock.getDataOutputStream()@ -> outs.close()@ } CATCH(Exception) {}
results[https://github.com/conceptstailored/NCSU-GBS-Pipeline/blob/d16978268678f9fa8958e60cdd43d64937a912d5/TASSEL_20121011/maizegenetics/src/net/maizegenetics/gbs/tagdist/TagsByTaxaUtils.java][closeIOStreams][2] = -> TRY { -> outputStream.close()@ } CATCH(Exception) { -> System.out.println("Caught exception while opening input & output files in TagsByTaxaUtils: "+e,)@ }
results[https://github.com/apache/activemq/blob/c50c1f5dad28c724be7f3a17bac509a260e7e986/activemq-core/src/test/java/org/apache/activemq/openwire/NumberRangesWhileMarshallingTest.java][testMaxFrameSize][5] = -> TRY {  -> ds.writeInt(endOfStreamMarker,)@ -> ds.close()@ } CATCH(Exception) {}
results[https://github.com/pjordan/tac-aa/blob/d29b48c4b6d4fbbb6312d69acaa6d4b79cb7f14a/tasim/src/main/java/se/sics/isl/tact/TACTConnection.java][doClose][1] = -> TRY { -> output.close()@ } CATCH(Exception) { -> log.log(Level.SEVERE,fullName+": could not close connection",e,)@ }
results[https://github.com/conceptstailored/NCSU-GBS-Pipeline/blob/d16978268678f9fa8958e60cdd43d64937a912d5/TASSEL_20121011/maizegenetics/src/net/maizegenetics/gbs/util/CompareGenosBetweenHapMapFilesPlugin.java][closeOutputFile][1] = -> TRY { -> fw.close()@ } CATCH(Exception) { -> throw new IllegalArgumentException("Unable to close your output report file: "+e,)@ }
results[https://github.com/gabrovski/knowevo/blob/04857f7d235cbaf9be121a36d9174e00abf95672/java/knowevo/src/knowevo/springbox/vizster/VizsterDBStreamBuilder.java][close][1] = -> TRY { -> dos.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/shantanusharma/weka/blob/b384e4ba7321fbc8606efef23a2a0bf0e28dbf1a/weka/experiment/OutputZipper.java][finished][9] = -> TRY {  -> IF { -> m_zipOut.close()@m_zipOut!=null } } CATCH(Exception) {}
results[https://github.com/apurtell/hadoop/blob/6d9ad85d83a2eef348177f5fb5db5faa4e3d1ae1/src/test/core/org/apache/hadoop/io/TestMapWritable.java][testMultipleCallsToReadFieldsAreSafe][349] = -> TRY {  -> dos=new DataOutputStream(baos,)@ -> m.write(dos,)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/anbangr/trusted-mr/blob/61596c7f46a9934b813185a597e818b0c98abf38/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/UtilsForTests.java][createTmpFileDFS][57] = -> TRY {  -> file=FileSystem.create(dfs,URIPATH,permission,)@ -> file.writeBytes(input,)@ -> file.close()@ } CATCH(Exception) {}
results[https://github.com/apurtell/hadoop/blob/46702790df8d61c18ba8ace768cc7bc6b7318c0a/hadoop-mapreduce/src/test/mapred/org/apache/hadoop/mapred/TestMiniMRDFSSort.java][testPartitioner][60] = -> TRY {  -> f=fs.create(inFile,)@ -> f.writeBytes("blah blah blah\n",)@ -> f.close()@ } CATCH(Exception) {}
results[https://github.com/svn2github/protostuff/blob/d33102574a1a19a0edb7cb0732e4e4d8accee3d0/protostuff-me/src/test/java/com/dyuproject/protostuff/me/StringSerializerTest.java][checkFixedDelimited][4] = -> TRY {  -> dout=new DataOutputStream(out,)@ -> dout.writeUTF(str,)@ -> dout.close()@ } CATCH(Exception) {}
results[https://github.com/visad/visad/blob/acc98a7de5a76ae52aaadf00d1f3e2996a920946/deps/src/dods/trunk/dap/UIntTest.java][main][4] = -> TRY {  -> sink=new DataOutputStream(fp,)@ -> b.sendIt(sink,)@ -> sink.close()@ } CATCH(Exception) {}
results[https://github.com/rhusar/HornetQ-oldmigration/blob/7e7966e7bcbc90c4987a0156034703ba3e0f5c46/src/main/org/jboss/jms/message/JBossMessage.java][beforeSend][3] = -> TRY {  -> daos=new DataOutputStream(baos,)@ -> writePayload(daos,)@ -> daos.close()@ } CATCH(Exception) {}
results[https://github.com/apache/chukwa/blob/ed0c27460eb57906f04932d1ae21ddaf4506d59b/src/main/java/org/apache/hadoop/chukwa/datacollection/writer/SocketTeeWriter.java][close][1] = -> TRY { -> out.close()@ } CATCH(Exception) { -> log.debug(ExceptionUtil.getStackTrace(e,),)@ }
results[https://github.com/rhusar/HornetQ-oldmigration/blob/675ecfcba9197bf52c71e642c1a7ce3f601ebb1d/tests/src/org/jboss/test/messaging/jms/String64KLimitTest.java][testSafeWriteReadUTFTest2][6] = -> TRY {  -> dos=new DataOutputStream(bos,)@ -> SafeUTF.safeWriteUTF(dos,s,)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/cmccabe/hadoop/blob/53ed400a307d92c5bbe12c4e1eaadf48791a9e30/src/test/mapred/org/apache/hadoop/tools/rumen/TestRumenJobTraces.java][testJobConfigurationParsing][37] = -> TRY {  -> jobConfStream=lfs.create(jobConfPath,)@ -> jConf.writeXml(jobConfStream,)@ -> jobConfStream.close()@ } CATCH(Exception) {}
results[https://github.com/apache/activemq-apollo/blob/dd9001d9dfa3ab5e36c3f2d235421a82a68d509c/activemq-openwire/src/test/java/org/apache/activemq/openwire/DataFileGeneratorTestSupport.java][testGenerateAndReParsingIsTheSame][3] = -> TRY {  -> ds=new DataOutputStream(buffer,)@ -> openWireformat.marshal(expected,ds,)@ -> ds.close()@ } CATCH(Exception) {}
results[https://github.com/Zab-38/NXT-Lejos/blob/545853bd9d26add59c3732da4f8cb68f0ea09810/LejosSamples/src/org/lejos/sample/timetest/TimeTest.java][<init>][1] = -> TRY {  -> outs=new DataOutputStream(sock.getOutputStream(),)@ -> outs.close()@ } CATCH(Exception) {}
results[https://github.com/joristork/robots/blob/290aca56a87e4145c6ee3a5ebf517cb0ddcf46cc/sander/robotica/IPv6/TCPStreamDemo/TCPClient-onDesktop/src/org/sunspotworld/demo/TCPClient.java][run][1] = -> TRY { -> tout=sendConn.openDataOutputStream()@ -> tout.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/madiator/HadoopUSC/blob/7e8c4514f948e14197b7d350966a38ed3b553efc/src/test/org/apache/hadoop/hdfs/TestZeroSizeFile.java][testRecoverZeroChecksumFile][1] = -> TRY {  -> outs=new DataOutputStream(new FileOutputStream(metaPath,false,),)@ -> outs.close()@ } CATCH(Exception) {}
results[https://github.com/apache/activemq/blob/b0c2a40fb979829ceca2ca51858ca67269bd5992/activemq-core/src/test/java/org/apache/activemq/command/ActiveMQTextMessageTest.java][setContent][2] = -> TRY {  -> dataOut=new DataOutputStream(baos,)@ -> MarshallingSupport.writeUTF8(dataOut,text,)@ -> dataOut.close()@ } CATCH(Exception) {}
results[https://github.com/xerial/genome-weaver-align/blob/c7ce1c2ee96d93d2bac17b9c340ba5bfa4e8fca3/align/src/test/java/org/utgenome/weaver/align/ACGTSequenceTest.java][save][3] = -> TRY {  -> out=new DataOutputStream(b,)@ -> s.saveTo(out,)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/toonn/SilverSurfer/blob/6f8e5f40cacaf014a8d61f41f7fe1c82477aba60/SilverSurferPC/src/communication/Communicator.java][closeRobotConnection][1] = -> TRY {  -> dos.writeInt(Command.CLOSE_CONNECTION,)@ -> dos.flush()@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/wubs/485-Project/blob/3686f123d2fdaf434afa9e50a50e424a71d515b4/pa6/hadoop/src/test/org/apache/hadoop/mapred/TestMiniMRWithDFSWithDistinctUsers.java][uploadJobFiles][9] = -> TRY {  -> confOut=FileSystem.create(fs,confLocation,perm,)@ -> conf.writeXml(confOut,)@ -> confOut.close()@ } CATCH(Exception) {}
results[https://github.com/francisliu/hbase_namespace/blob/18973af443e8c6424c978364e2d0db2a5abe1286/hbase-server/src/test/java/org/apache/hadoop/hbase/TestSerialization.java][testKeyValue][2] = -> TRY {  -> dos=new DataOutputStream(baos,)@ -> l=KeyValue.write(kv,dos,)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/gbehrmann/autobahn/blob/4d663503e40d6bc64597ddf526a4bb628b21282f/IDM/src/main/java/net/geant/autobahn/ospf/LinkSerializer.java][main][2] = -> TRY {  -> oos=new DataOutputStream(baos,)@ -> LinkSerializer.serializeLink(oos,link,)@ -> oos.close()@ } CATCH(Exception) {}
results[https://github.com/stumbleupon/hbase/blob/6209c7e7ac71b1b62f7f53f6fddee92ce430d460/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java][testRegionCacheDeSerialization][9] = -> TRY {  -> dos=new DataOutputStream(fos,)@ -> table.serializeRegionInfo(dos,)@ -> dos.flush()@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/SSabev/SDPCode/blob/d87154182fcd41e509347c8481020f866a531770/NXT/DuoNXT.java][shutdown][4] = -> IF { -> TRY { -> dataOut.close()@ } CATCH(Exception) { -> LCD.drawString("Shutdown exception",0,0,)@ } }
results[https://github.com/oxhead/decoupled-hadoop/blob/fda683bf06f52e3c0999fec65d994f9f74fb3c50/hadoop-mapreduce/src/test/mapred/org/apache/hadoop/mapred/lib/TestChainMapReduce.java][testChain][249] = -> TRY {  -> file=fs.create(new Path(inDir,"part-0",),)@!(!(fs.mkdirs(inDir,))) -> file.writeBytes("1\n2\n",)@!(!(fs.mkdirs(inDir,))) -> file.close()@!(!(fs.mkdirs(inDir,))) } CATCH(Exception) {}
results[https://github.com/apache/activemq/blob/a95c6dba1baef600fb97e0ffa9f468796a8da768/activemq-unit-tests/src/test/java/org/apache/activemq/openwire/DataFileGeneratorTestSupport.java][generateInputStream][6] = -> TRY {  -> ds=new DataOutputStream(os,)@ -> openWireformat.marshal(createObject(),ds,)@ -> ds.close()@ } CATCH(Exception) {}
results[https://github.com/johnugeorge/distributed/blob/597f43e6a7d9d4b546ca76b399858e0e0894cbab/Fast_Copy_HDFS/src/test/org/apache/hadoop/hdfs/TestDFSRename.java][testRename][15] = -> TRY {  -> aa_out=fs.create(aa,)@ -> aa_out.writeBytes("something",)@ -> aa_out.writeBytes(" more",)@ -> aa_out.close()@ } CATCH(Exception) {}
results[https://github.com/jogjayr/InTEL-Project/blob/e168d5cd82a74616c1980a3d26a7230f5752e438/AppletLoader/src/edu/gatech/statics/applet/AppletLoader.java][writeVersionFile][2] = -> TRY {  -> dos=new DataOutputStream(new FileOutputStream(file,),)@ -> dos.writeFloat(version,)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/fcrepo/fcrepo-before33/blob/61df3d0bae0a5e8cc06698ed546fd9d464228cab/src/test/java/fedora/test/api/TestRESTAPI.java][testAddDatastream][16] = -> TRY {  -> os=new DataOutputStream(new FileOutputStream(temp,),)@ -> os.write(42,)@ -> os.close()@ } CATCH(Exception) {}
results[https://github.com/panbasten/BA/blob/79bfeb4e4a713119961a9db63c30b0e66897e6db/kettle/kettle-core/src/main/java/org/pentaho/di/core/row/RowMeta.java][extractData][1] = -> TRY { -> dataOutputStream=new DataOutputStream(byteArrayOutputStream,)@ -> metadata.writeData(dataOutputStream,row,)@ -> dataOutputStream.close()@ } CATCH(Exception) { -> throw new RuntimeException("Error serializing row to byte array",e,)@ }
results[https://github.com/solo123/yz-reader/blob/01b441dd562c3b14504404982114fd7d8f18d519/src/com/yazo/application/biz/RmsManager.java][saveUserID][1] = -> TRY { -> dos=new DataOutputStream(bos,)@ -> dos.writeUTF(userid,)@ -> dos.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/opower/itext/blob/c3d67a5a41af7a7580b73f0ef6a269205a8f324d/src/com/lowagie/tools/arguments/LPR.java][close][1] = -> TRY { -> out.close()@ } CATCH(Exception) { -> System.out.println("Errror while closing printerport",)@ -> System.out.println(e.getMessage(),)@ }
results[https://github.com/eclipse/emf/blob/942c099f3f5aa8e6ef6d9d1bc4d752fbd74894ca/plugins/org.eclipse.emf.rap.edit.ui/src/org/eclipse/emf/edit/ui/provider/ExtendedImageRegistry.java][generateGIF][6] = -> TRY { -> writer=new DataOutputStream(outputStream,)@ -> writer.write(content,0,result,)@ -> writer.close()@ } CATCH(Exception) { -> exception.printStackTrace()@ }
results[https://github.com/apache/activemq/blob/0bbc0acb840941f81822900609eaae9da28f3cc2/activemq-core/src/test/java/org/apache/activemq/openwire/BooleanStreamTest.java][assertMarshalBooleans][4] = -> TRY {  -> ds=new DataOutputStream(buffer,)@ -> bs.marshal(ds,)@ -> ds.writeInt(endOfStreamMarker,)@ -> ds.close()@ } CATCH(Exception) {}
results[https://github.com/funambol-mirror/funambol-client-sdk/blob/733643136b55fb2c3a62d2d0f88aed9f6b8439c1/v10/syncml/src/test/com/funambol/syncml/spds/SyncMLSourceConfigTest.java][testSerializeDeserialize][6] = -> TRY {  -> fos=new DataOutputStream(new FileOutputStream(tempFile,),)@ -> syncSourceConfig.serialize(fos,)@ -> fos.close()@ } CATCH(Exception) {}
results[https://github.com/jiachunyu/VehicleTerminalSimulator/blob/cca1e7be6ee55e43d184f2c88a5719d71396ff0e/src/com/chrhc/vehicleterminalsimulator/protocol/ByteArrayWriter.java][writeByteArray][1] = -> TRY {  -> dataOutput=new DataOutputStream(byteArrayOutput,)@ -> doWriteByteArray(dataOutput,)@ -> dataOutput.flush()@ -> dataOutput.close()@ } CATCH(Exception) {}
results[https://github.com/ontometrics/ontokettle/blob/c43394264b42bd2705f7c6599a92c02d154d5f5b/src/be/ibridge/kettle/trans/step/streamlookup/RowData.java][extractData][4] = -> TRY { -> dataOutputStream=new DataOutputStream(byteArrayOutputStream,)@ -> row.writeData(dataOutputStream,)@ -> dataOutputStream.close()@ } CATCH(Exception) { -> throw new RuntimeException("Error serializing row to byte array: "+row,e,)@ }
results[https://github.com/jiachunyu/VehicleTerminalSimulator/blob/a4cc10fd12cecc0401a14048013074d1998e4d43/src/com/chrhc/vehicleterminalsimulator/protocol/ByteArrayCreator.java][buildByteArray][2] = -> TRY {  -> dataOutput=new DataOutputStream(byteArrayOutput,)@ -> doBuildByteArray(dataOutput,)@ -> dataOutput.flush()@ -> dataOutput.close()@ } CATCH(Exception) {}
results[https://github.com/FreakyPenguin/elexis-hilotec-base/blob/a03ec9ac9020af9ee6cd14b2cf9cc1a46863f035/elexis-simpletext/src/ch/elexis/textplugin/ElexisTextPlugin.java][storeToByteArray][3] = -> TRY { -> out=new DataOutputStream(bout,)@ -> editor.page.writeTo(out,)@ -> out.close()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/cloudsmith/org.eclipse.emf/blob/e3e6f6b81520770777345ce561a7e5da58d5ab30/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java][generateGIF][4] = -> TRY { -> writer=new DataOutputStream(outputStream,)@ -> writer.write(content,0,result,)@ -> writer.close()@ } CATCH(Exception) { -> CodeGenEcorePlugin.INSTANCE.log(exception,)@ }
results[https://github.com/calytrix/portico/blob/6e72cceb0075591254d6e5d81298499bd58c2ec3/codebase/src-java/portico/org/portico/impl/hla1516/types/DoubleTimeInterval.java][encode][4] = -> TRY { -> stream=new DataOutputStream(byteStream,)@ -> stream.writeDouble(this.time,)@ -> stream.close()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/calytrix/portico/blob/a6fb268dfd35a01cde6c208a4be2b23648595c54/codebase/src/java/portico/org/portico/impl/hla1516e/types/LongTime.java][encode][1] = -> TRY { -> stream=new DataOutputStream(byteStream,)@ -> stream.writeLong(this.time,)@ -> stream.close()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/lang/System/Versions.java][checkClassVersion][3] = -> TRY {  -> dos=new DataOutputStream(new FileOutputStream(classFile,),)@ -> dos.writeLong(0xCafeBabel<<32+minor<<16+major,)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/jmesnil/hornetq-old/blob/4c76755d6369e420839d3c9404c6958dd15e5ba3/src/main/org/jboss/messaging/newcore/impl/MessageImpl.java][getHeaderBytes][6] = -> TRY {  -> oos=new DataOutputStream(bos,)@ -> StreamUtils.writeMap(oos,headers,true,)@ -> oos.close()@ } CATCH(Exception) {}
results[https://github.com/apache/activemq/blob/8012f2851120d5ebf840d0a4bbecc222f77369c3/activemq-core/src/test/java/org/apache/activemq/openwire/DataFileGeneratorTestSupport.java][generateControlFile][6] = -> TRY {  -> ds=new DataOutputStream(os,)@ -> openWireformat.marshal(createObject(),ds,)@ -> ds.close()@ } CATCH(Exception) {}
results[https://github.com/KommuSoft/ParallelHyFlex/blob/790f32df6b125295cdc145cbaa3e6311a7e2c249/ParallelHyFlex/src/parallelhyflex/pushsenders/PushSenderBase.java][generatePacket][1] = -> TRY { -> dos=new DataOutputStream(baos,)@ -> solution.write(dos,)@ -> dos.close()@ } CATCH(Exception) { -> Communication.Log(e,)@ }
results[https://github.com/apolit/creomobile/blob/1a76c70c5a7aff29469b5c0e84e220fcdd987564/Components/src/com/creocode/components/options/Options1.java][create][2] = -> TRY {  -> dout=new DataOutputStream(bout,)@ -> dout.writeUTF(recordName,)@ -> dout.writeUTF(value,)@ -> dout.close()@ } CATCH(Exception) {}
results[https://github.com/conceptstailored/NCSU-GBS-Pipeline/blob/d16978268678f9fa8958e60cdd43d64937a912d5/TASSEL_20121011/maizegenetics/src/net/maizegenetics/gbs/pipeline/UFastqToTagCountPlugin.java][closeOut][1] = -> TRY { -> dos.flush()@ -> dos.close()@ } CATCH(Exception) { -> System.out.println(e.toString(),)@ }
results[https://github.com/thomasjungblut/thomasjungblut-common/blob/dce041053233a06cdc0275532fbfc84b02b83c6e/test/de/jungblut/classification/nn/MultiLayerPerceptronTest.java][testSerialization][1] = -> TRY {  -> out=new DataOutputStream(new FileOutputStream(tmp,),)@ -> MultilayerPerceptron.serialize(mlp,out,)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/rnentjes/Simple-persistence/blob/b3d5c3b964638ecac1c7c8fe5d5f02f7d3073b90/test/nl/astraeus/persistence/serialize/TestSerializer.java][writeObjectTest][1] = -> TRY {  -> dos=new DataOutputStream(fos,)@ -> ser.writeSingleObject(dos,new SimpleObject(),)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/apache/zookeeper/blob/188020595311a03f73c0d3b87bfd6925e1803e6d/src/java/test/org/apache/zookeeper/server/quorum/WatchLeakTest.java][createValidateSessionPacket][1] = -> TRY {  -> dos=new DataOutputStream(baos,)@ -> dos.writeLong(SESSION_ID,)@ -> dos.writeInt(3000,)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/funambol-mirror/funambol-client-sdk/blob/29807f96908e3eaa820ab364310965bcf454af85/v911/examples/jsync/src/com/funambol/jsync/JSync.java][run][1] = -> TRY { -> dos=new DataOutputStream(os,)@ -> sc.serialize(dos,)@ -> dos.close()@ } CATCH(Exception) { -> Log.error(TAG_LOG,"Exception while synchronizing",e,)@ }
results[https://github.com/madananshul/ActiveRDMA/blob/11e7789b832aaeb8374b200065205949652456ca/src/client/Client.java][exchange][1] = -> TRY { -> out=new DataOutputStream(b,)@ -> op.write(out,)@ -> out.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/osmwp/MeMoPlayer/blob/9fe0f79c2039655899456166c7bc8330800d4b81/java/src/memoplayer/File.java][close][1] = -> IF { -> TRY { -> m_dos.close()@m_dos!=null } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/YongJiang/org.eclipse.birt.engine/blob/05990fd7ca5eb8c8efc871407bd98773d21ce8d8/plugins/org.eclipse.birt.report.engine/src/org/eclipse/birt/report/engine/internal/document/v2/ReportContentWriterV2.java][close][1] = -> IF { -> TRY { -> stream.close()@stream!=null } CATCH(Exception) { -> logger.log(Level.SEVERE,"Failed in close the writer",ex,)@ } }
results[https://github.com/Morgan-Allen/Presidium/blob/4a363fc84823853e96a86a63fcd6624df26b75ad/src/game/common/Session.java][finish][1] = -> TRY {  -> IF { -> out.flush()@out!=null -> out.close()@out!=null } } CATCH(Exception) {}
results[https://github.com/CCM-Modding/Nucleum-Omnium/blob/8a6e3073e6b7991c265b9aa78243b549a4dbff34/src/main/java/ccm/nucleumOmnium/helpers/NetworkHelper.java][nbtToByteArray][1] = -> stream=new DataOutputStream(streambyte,)@ -> TRY { -> writeNBTTagCompound(nbtTagCompound,stream,)@ -> stream.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/dilipgudlur/Localization/blob/bafab77e22e196d06b30d09c5f42961cfb62f3b4/src/edu/cmu/pandaa/stream/RawAudioFileStream.java][close][1] = -> TRY { -> IF { -> dos.close()@dos!=null } } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/FlansMods/FlansMod/blob/ca4c1e7d0a1567d88ebd68f5d4cc1a55bda723f6/src/minecraft/co/uk/flansmods/common/network/PacketReload.java][buildReloadPacket][1] = -> data=new DataOutputStream(bytes,)@ -> TRY { -> data.write(packetID,)@ -> data.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/yanbincode/yb/blob/60b32a9e1436f41a5c180e6333e6aba4b88bc15a/yb-j2se/src/main/java/j2se/net/socket/TcpClient.java][client][2] = -> TRY {  -> dos=new DataOutputStream(out,)@ -> dos.writeUTF("hi server",)@ -> dos.flush()@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/kzimnicki/RefactorThisName/blob/5eaec331962d56a9f1b37ce70d05915be796c1de/dvbtCC/src/main/java/VLC.java][sendPost][1] = -> TRY {  -> wr=new DataOutputStream(con.getOutputStream(),)@ -> wr.flush()@ -> wr.close()@ } CATCH(Exception) {}
results[https://github.com/genepi/pig-gene/blob/9f53e4a3dfdbfb2cfcbea8ea494e3065f7f12b89/AuswertTestdat/lib/hadoop_src/test/org/apache/hadoop/hdfs/TestClientBlockVerification.java][setupCluster][1] = -> TRY {  -> os=fs.create(TEST_FILE,)@ -> LOOP { -> os.write(data,)@ } -> os.close()@ } CATCH(Exception) {}
results[https://github.com/mattparks/Starcraft-2/blob/703d79d87912758c86ccb0497076f63bc58f14bf/src/minecraft/codechicken/nei/config/ConfigSet.java][saveNBT][5] = -> TRY { -> dout=new DataOutputStream(new FileOutputStream(nbtFile,),)@ -> NBTBase.writeNamedTag(nbt,dout,)@ -> dout.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/io/OutputStream/WriteParams.java][main][3] = -> TRY {  -> dos=new DataOutputStream(new MyOutputStream(),)@ -> doTest(dos,)@ -> doTest1(dos,)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/utwente-db/neogeo/blob/e3b09c2826119d7aed68881e297079ef3a344baa/neogeo-twitter-server/src/main/java/nl/utwente/db/twitter/server/HttpUtils.java][postTweet][20] = -> TRY {  -> wr=new DataOutputStream(con.getOutputStream(),)@ -> wr.writeBytes(urlParameters,)@ -> wr.flush()@ -> wr.close()@ } CATCH(Exception) {}
results[https://github.com/sunsuk7tp/MyCassandra/blob/0a14549a1893247063668d407d50248614e701dc/MyCassandra-0.2.1/test/unit/org/apache/cassandra/db/CommitLogTest.java][testRecoveryWithBadSizeArgument][6] = -> TRY {  -> dout=new DataOutputStream(out,)@ -> dout.writeInt(size,)@ -> dout.writeLong(checksum,)@ -> dout.write( new byte[],)@ -> dout.close()@ } CATCH(Exception) {}
results[https://github.com/ForgeEssentials/ForgeEssentialsMain/blob/836f7cca27e9819615377c345321deafe00e0fc7/src/client/java/com/ForgeEssentials/client/network/PacketPermNodeList.java][<init>][3] = -> stream=new DataOutputStream(streambyte,)@ -> TRY { -> stream.write(packetID,)@ -> stream.writeBytes("REQUEST",)@ -> stream.close()@ } CATCH(Exception) { -> ForgeEssentialsClient.feclientlog.info("Error creating packet PermNodeList",)@ }
results[https://github.com/monnetproject/bliss/blob/3b7b346494ec4e60831a4dea5a1328b7c72170b9/betalm/src/test/java/eu/monnetproject/bliss/betalm/CompileModelTest.java][testMain][1] = -> TRY {  -> out=new DataOutputStream(new FileOutputStream(tmpFreqFile,),)@ -> out.writeInt(0,)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/xerial/genome-weaver-align/blob/fa90de73a8733ff346e58a091a20e2dbf78ee05c/genome-weaver-align/src/test/java/org/utgenome/weaver/align/RSBitVectorTest.java][save][4] = -> TRY {  -> out=new DataOutputStream(new BufferedOutputStream(new FileOutputStream(tmp,),),)@ -> v.saveTo(out,)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/pgalex/OSMViewer/blob/b8b140aaf015257ba861f82d937f0d0682f77c49/test/LineDrawStyleTest.java][fileTest][11] = -> TRY { -> output=new DataOutputStream(new FileOutputStream(TEST_FILE_NAME,),)@ -> writingStyle.writeToStream(output,)@ -> output.close()@ } CATCH(Exception) { -> fail()@ }
results[https://github.com/pgalex/OSMViewer/blob/0881342aca3c91aa6224e7af615c5e69a7460dad/test/drawingStylesTests/PolygonFillersFactoryTest.java][colorFillerReadingWritingTest][3] = -> TRY { -> output=new DataOutputStream(new FileOutputStream(IOTester.TEST_FILE_NAME,),)@ -> PolygonFillersFactory.writeFillerToSream(writingFiller,output,)@ -> output.close()@ } CATCH(Exception) { -> fail()@ }
results[https://github.com/KommuSoft/ParallelHyFlex/blob/c4dd656edbadda4b568f345578c1b1271251ac66/ParallelHyFlex/test/parallelhyflex/problems/threesat/ThreeSatWritableEnforceableConstraint2Test.java][testSerializeDeserialize][4] = -> TRY {  -> LOOP { -> dos=new DataOutputStream(baos,)@ -> tswec.write(dos,)@ -> dos.close()@ } } CATCH(Exception) {}
results[https://github.com/peixere/gotom/blob/4011c772fabd4f79150f9d3fea354c3388e1bed9/cn.gotom.commons/src/main/java/cn/gotom/comm/channel/ChannelImpl.java][close][2] = -> TRY { -> IF { -> out.close()@out!=null } } CATCH(Exception) { -> log.warn("close["+this.getId()+"]",ex,)@ }
results[https://github.com/lishid/Orebfuscator/blob/9355fae508521639043f1e867f1ec5c67064c65e/src/lishid/orebfuscator/cache/ObfuscatedChunkCache.java][setHash][2] = -> TRY { -> stream=ObfuscatedRegionFileCache.getOutputStream(hashPath,x,z,)@ -> NBTCompressedStreamTools.a(nbt,(DataOutput) stream,)@ -> stream.close()@ } CATCH(Exception) { -> Orebfuscator.log("Error writting Orebfuscator Chunk cache hash: "+e.getMessage(),)@ }
results[https://github.com/jmesnil/hornetq-old/blob/74f5d147870c1c0c30c901459d32a5fca50bb439/src/main/org/jboss/messaging/core/plugin/JDBCPersistenceManager.java][mapToBytes][3] = -> TRY {  -> IF { -> return null@map==null||map.isEmpty() } -> oos=new DataOutputStream(bos,)@!(map==null||map.isEmpty()) -> StreamUtils.writeMap(oos,map,true,)@!(map==null||map.isEmpty()) -> oos.close()@!(map==null||map.isEmpty()) } CATCH(Exception) {}
results[https://github.com/comsince/Demo/blob/c139870905166a8a4c196c38faa9c86c5c122083/SocketServer/src/com/comsince/socket/ServerOneDownload.java][sendFile][1] = -> TRY {  -> LOOP { -> out.write(buf,0,len,)@(len=in.read(buf,))>=0 -> out.flush()@ } -> out.close()@ } CATCH(Exception) {}
results[https://github.com/ning/killbill/blob/06475a2ced4ef74179567fdcccd914efc49e137d/usage/src/test/java/com/ning/billing/usage/timeline/codec/TestSampleCoder.java][testScan][5] = -> TRY {  -> dataOutputStream=new DataOutputStream(outputStream,)@ -> sampleCoder.encodeSample(dataOutputStream,sample,)@ -> sampleCoder.encodeSample(dataOutputStream,new RepeatSample<Short>(3,sample,),)@ -> dataOutputStream.close()@ } CATCH(Exception) {}
results[https://github.com/movingmt/hic/blob/a7e46dec2bffb7e0e20b36482f99da1ea8b720e2/src/ssvr/SenderR.java][getGramMesg][1] = -> CATCH(Exception) { -> TRY { -> bank_xout.close()@ } CATCH(Exception) { -> bank_xS.close()@ -> System.out.println("��� ���� �߻��Ͽ� MEGA BOX ���������� �����Ͽ����ϴ�",)@ } }
results[https://github.com/thedeann/mytcp/blob/0ad4b4009a3a7f2673c790d8cea940636cfcd7a5/MyTCPProject/src/edu/mst/cs/server/ServerThread.java][close][1] = -> IF { -> TRY { -> mOutput.flush()@ -> mOutput.close()@ } CATCH(Exception) { -> System.out.println("Exception: "+e,)@ } }
results[https://github.com/MMS-Projects/copyit-server/blob/12d1307efe44252eb1b7fcf7145cbd809db43234/src/main/java/net/mms_projects/copy_it/server/push/android/GCMRunnable.java][run][3] = -> TRY { -> outputstream=new DataOutputStream(conn.getOutputStream(),)@ -> outputstream.writeBytes(output_json,)@ -> outputstream.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/sorcersoft/sorcer/blob/dd308089f8ed7c7a54af6d06f1caaf7b4fe261d5/iGrid/modules/sorcer/src/sorcer/util/dbas/HttpTestServer.java][service][1] = -> TRY { -> dataOut=new DataOutputStream(out,)@ -> dataOut.writeBytes("Hi",)@ -> dataOut.flush()@ -> dataOut.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/bogeblad/infoglue/blob/a1561d57235e4d78b95dbe66d00d53b6d5632f5d/src/java/org/infoglue/cms/io/FileHelper.java][writeUTF8ToFileSpecial][2] = -> TRY {  -> dos=new DataOutputStream(new FileOutputStream(file,isAppend,),)@ -> dos.writeBytes(text,)@ -> dos.flush()@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/ggaavv/Equinox-Clock/blob/9e608d815e839c614f1d4eec83c557608ecaa87b/contiki-2.5/tools/cooja/java/se/sics/cooja/plugins/LogScriptEngine.java][append][1] = -> TRY { -> out=new BufferedWriter(fstream,)@ -> out.write(msg,)@ -> out.close()@ } CATCH(Exception) { -> logger.warn("Test append failed: "+filename+": "+e.getMessage(),)@ }
results[https://github.com/shutterstock/tungsten-replicator/blob/c24e02722d0f4d6933d48def64673d4286ea7f15/commons/test/java/com/continuent/tungsten/commons/io/BufferedFileDataInputTest.java][testInputWaitAvailable][1] = -> TRY {  -> dos=new DataOutputStream(fos,)@ -> dos.writeInt(0,)@ -> dos.writeInt(1,)@ -> dos.flush()@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/pgalex/OSMViewer/blob/7f3d41420a10d5cb8c47b696f7971c58e9ec3086/test/drawingStyleTests/TestDrawingStylesContainer.java][nullLengthReadingWritingTest][4] = -> TRY { -> output=new DataOutputStream(new FileOutputStream(IOTester.TEST_FILE_NAME,),)@ -> writeStylesToStream(writingStyles,output,)@ -> output.close()@ } CATCH(Exception) { -> fail()@ }
results[https://github.com/monnetproject/bliss/blob/7b2c5b7dcf02ff8371583b6c4b6330354f6a6767/experiments/src/main/java/eu/monnetproject/bliss/experiments/Downsample.java][main][1] = -> TRY {  -> out=new DataOutputStream(CLIOpts.openOutputAsMaybeZipped(outFile,),)@!(!(opts.verify(FilterAndSplitCorpus.class,))) -> downsample(corpusIn,out,downsample*2,)@!(!(opts.verify(FilterAndSplitCorpus.class,))) -> out.flush()@!(!(opts.verify(FilterAndSplitCorpus.class,))) -> out.close()@!(!(opts.verify(FilterAndSplitCorpus.class,))) } CATCH(Exception) {}
results[https://github.com/mattparks/Starcraft-2/blob/703d79d87912758c86ccb0497076f63bc58f14bf/src/minecraft/codechicken/nei/NEIServerConfig.java][saveWorldCompound][2] = -> TRY { -> dout=new DataOutputStream(new FileOutputStream(worldSaveFile,),)@ -> NBTBase.writeNamedTag(worldCompound,dout,)@ -> dout.close()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/FlansMods/FlansMod/blob/ca4c1e7d0a1567d88ebd68f5d4cc1a55bda723f6/src/minecraft/co/uk/flansmods/common/network/PacketVehicleKey.java][buildKeyPacket][2] = -> data=new DataOutputStream(bytes,)@ -> TRY { -> data.write(packetID,)@ -> data.writeInt(key,)@ -> data.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/apache/chukwa/blob/4ec79ec47c778ea3fa83edb59ed3c501fef7623b/src/test/java/org/apache/hadoop/chukwa/datacollection/writer/TestSocketTee.java][testSocketTee][1] = -> TRY {  -> dos=new DataOutputStream(s.getOutputStream(),)@ -> dos.write(SocketTeeWriter.WRITABLE+" datatype=dt3\n".getBytes(),)@ -> dos.close()@ } CATCH(Exception) {}
results[https://github.com/apache/chukwa/blob/4ec79ec47c778ea3fa83edb59ed3c501fef7623b/src/test/java/org/apache/hadoop/chukwa/validationframework/interceptor/ChunkDumper.java][close][2] = -> LOOP { -> dos=hash.get(key,)@ -> TRY { -> dos.close()@ } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/axDev-JDK/jdk/blob/3e3e391a959df5a1d0406a67c6b39efd11897d97/test/java/net/URLConnection/ResendPostBody.java][execute][2] = -> TRY {  -> OutStream=new DataOutputStream(conURL.getOutputStream(),)@ -> OutStream.write(b,0,b.length,)@ -> OutStream.flush()@ -> OutStream.close()@ } CATCH(Exception) {}
results[https://github.com/FlansMods/FlansMod/blob/81c76ab1703022a189c288dc88dff7d25913b184/src/minecraft/co/uk/flansmods/common/network/PacketMGFire.java][buildMGFirePacket][1] = -> data=new DataOutputStream(bytes,)@ -> TRY { -> data.write(packetID,)@ -> data.writeBoolean(held,)@ -> data.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/jbosstm/narayana/blob/3ea8b35a743598158ec313180ce8b0d9fbd16115/blacktie/jatmibroker-xatmi/src/test/java/org/jboss/narayana/blacktie/jatmibroker/core/server/TestSocketServer.java][test][2] = -> TRY {  -> outs=new DataOutputStream(socket.getOutputStream(),)@ -> send(outs,sid,correlationId,rcode,toSend,flags,rval,toReplyTo,type,subtype,)@ -> send(outs,sid,correlationId,1,toSend,1,1,"test",type,subtype,)@ -> outs.close()@ } CATCH(Exception) {}
results[https://github.com/FlansMods/FlansMod/blob/ca4c1e7d0a1567d88ebd68f5d4cc1a55bda723f6/src/minecraft/co/uk/flansmods/common/network/PacketDriveableCrafting.java][buildCraftingPacket][1] = -> data=new DataOutputStream(bytes,)@ -> TRY { -> data.write(packetID,)@ -> data.writeUTF(s,)@ -> data.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/pbeaman/persistit/blob/10b259d3c0b72a7c5882268df9128b9cdf51d5a4/src/main/java/com/persistit/TreeBuilder.java][saveSortVolume][1] = -> TRY {  -> dos=new DataOutputStream(new BufferedOutputStream(new FileOutputStream(file,),STREAM_SIZE,),)@ -> saver=new SortStreamSaver(_persistit,dos,)@ -> dos.close()@ } CATCH(Exception) {}
