results[https://github.com/shkschneider/android_Skeleton/blob/384ec5aff012cc41ecaed4df50b400f7a965d0b8/src/me/shkschneider/skeleton/helpers/ApplicationHelper.java][icon] = -> TRY { -> packageManager=SkeletonApplication.CONTEXT.getPackageManager()@ -> IF { -> return null@packageManager==null } -> applicationInfo=packageManager.getApplicationInfo(packageName(),0,)@!(packageManager==null) -> IF { -> return null@applicationInfo==null && !(packageManager==null) } -> return applicationInfo.loadIcon(packageManager,)@!(packageManager==null) && !(applicationInfo==null) } CATCH { }
results[https://github.com/shkschneider/android_Skeleton/blob/d3c26bc5d3cdf33621fd35c01d7315eedda8fe72/libs/library/src/me/shkschneider/skeleton/helper/AndroidHelper.java][icon] = -> IF { -> return null@context==null } -> TRY { -> packageManager=context.getPackageManager()@!(context==null) -> IF { -> return null@packageManager==null && !(context==null) } -> applicationInfo=packageManager.getApplicationInfo(packageName(context,),0,)@!(packageManager==null) && !(context==null) -> IF { -> return null@applicationInfo==null && !(packageManager==null) && !(context==null) } -> return applicationInfo.loadIcon(packageManager,)@!(packageManager==null) && !(applicationInfo==null) && !(context==null) } CATCH { }
results[https://github.com/OpenEtna/android_packages_apps_Settings/blob/49e8d2e90b5239b116fecf2b0d634935496bc3f9/src/com/android/settings/fuelgauge/PowerUsageDetail.java][fillPackagesSection] = -> IF { -> return @uid<1 } -> packagesParent=(ViewGroup) findViewById(R.id.packages_section,)@!(uid<1) -> IF { -> return @packagesParent==null && !(uid<1) } -> inflater=getLayoutInflater()@!(packagesParent==null) && !(uid<1) -> pm=getPackageManager()@!(packagesParent==null) && !(uid<1) -> defaultActivityIcon=pm.getDefaultActivityIcon()@!(packagesParent==null) && !(uid<1) -> mPackages=pm.getPackagesForUid(uid,)@!(packagesParent==null) && !(uid<1) -> IF { -> return @!(packagesParent==null) && mPackages==null||mPackages.length<2 && !(uid<1) } -> LOOP { -> TRY { -> ai=pm.getApplicationInfo(mPackages[i],0,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> label=ai.loadLabel(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> icon=defaultActivityIcon@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> IF { -> mPackages[i]=label.toString()@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) && label!=null } -> IF { -> icon=ai.loadIcon(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && ai.icon!=0 && !(mPackages==null||mPackages.length<2) } -> item=(ViewGroup) inflater.inflate(R.layout.power_usage_package_item,null,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> packagesParent.addView(item,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView=(TextView) item.findViewById(R.id.label,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView.setText(mPackages[i],)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) } CATCH { } }
results[https://github.com/haneul/appfence_packages_apps_Settings/blob/49e8d2e90b5239b116fecf2b0d634935496bc3f9/src/com/android/settings/fuelgauge/PowerUsageDetail.java][fillPackagesSection] = -> IF { -> return @uid<1 } -> packagesParent=(ViewGroup) findViewById(R.id.packages_section,)@!(uid<1) -> IF { -> return @packagesParent==null && !(uid<1) } -> inflater=getLayoutInflater()@!(packagesParent==null) && !(uid<1) -> pm=getPackageManager()@!(packagesParent==null) && !(uid<1) -> defaultActivityIcon=pm.getDefaultActivityIcon()@!(packagesParent==null) && !(uid<1) -> mPackages=pm.getPackagesForUid(uid,)@!(packagesParent==null) && !(uid<1) -> IF { -> return @!(packagesParent==null) && mPackages==null||mPackages.length<2 && !(uid<1) } -> LOOP { -> TRY { -> ai=pm.getApplicationInfo(mPackages[i],0,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> label=ai.loadLabel(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> icon=defaultActivityIcon@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> IF { -> mPackages[i]=label.toString()@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) && label!=null } -> IF { -> icon=ai.loadIcon(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && ai.icon!=0 && !(mPackages==null||mPackages.length<2) } -> item=(ViewGroup) inflater.inflate(R.layout.power_usage_package_item,null,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> packagesParent.addView(item,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView=(TextView) item.findViewById(R.id.label,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView.setText(mPackages[i],)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) } CATCH { } }
results[https://github.com/daproy/android_packages_apps_Settings/blob/49e8d2e90b5239b116fecf2b0d634935496bc3f9/src/com/android/settings/fuelgauge/PowerUsageDetail.java][fillPackagesSection] = -> IF { -> return @uid<1 } -> packagesParent=(ViewGroup) findViewById(R.id.packages_section,)@!(uid<1) -> IF { -> return @packagesParent==null && !(uid<1) } -> inflater=getLayoutInflater()@!(packagesParent==null) && !(uid<1) -> pm=getPackageManager()@!(packagesParent==null) && !(uid<1) -> defaultActivityIcon=pm.getDefaultActivityIcon()@!(packagesParent==null) && !(uid<1) -> mPackages=pm.getPackagesForUid(uid,)@!(packagesParent==null) && !(uid<1) -> IF { -> return @!(packagesParent==null) && mPackages==null||mPackages.length<2 && !(uid<1) } -> LOOP { -> TRY { -> ai=pm.getApplicationInfo(mPackages[i],0,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> label=ai.loadLabel(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> icon=defaultActivityIcon@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> IF { -> mPackages[i]=label.toString()@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) && label!=null } -> IF { -> icon=ai.loadIcon(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && ai.icon!=0 && !(mPackages==null||mPackages.length<2) } -> item=(ViewGroup) inflater.inflate(R.layout.power_usage_package_item,null,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> packagesParent.addView(item,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView=(TextView) item.findViewById(R.id.label,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView.setText(mPackages[i],)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) } CATCH { } }
results[https://github.com/ronhuang/FileManager/blob/18a18425d41cbb42b072a3cb2b9219fa6cacaa8f/src/org/openintents/filemanager/DirectoryScanner.java][getDrawableForMimetype] = -> IF { -> return null@mimetype==null } -> pm=context.getPackageManager()@!(mimetype==null) -> IF { -> path=file.getPath()@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) -> pInfo=pm.getPackageArchiveInfo(path,PackageManager.GET_ACTIVITIES,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) -> IF { -> return aInfo.loadIcon(pm,)@pInfo!=null && !(mimetype==null) && mimetype.equals(MIME_APK,) } } -> iconResource=mMimeTypes.getIcon(mimetype,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) -> IF { -> TRY { -> ret=pm.getResourcesForApplication(context.getPackageName(),).getDrawable(iconResource,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && iconResource>0 } CATCH { } CATCH { } } -> data=FileUtils.getUri(file,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && !(ret!=null) -> intent=new Intent(Intent.ACTION_VIEW,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && !(ret!=null) -> intent.setDataAndType(data,mimetype,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && !(ret!=null) -> lri=pm.queryIntentActivities(intent,PackageManager.MATCH_DEFAULT_ONLY,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && !(ret!=null) -> IF { -> index=lri.size()-1@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && lri!=null&&lri.size()>0 && !(ret!=null) -> ri=lri.get(index,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && lri!=null&&lri.size()>0 && !(ret!=null) -> return ri.loadIcon(pm,)@!(mimetype==null) && !(mimetype.equals(MIME_APK,)) && lri!=null&&lri.size()>0 && !(ret!=null) }
results[https://github.com/mariotaku/twidere/blob/1d36e89505925b6072e4491b7272458cbbbc4fb7/src/org/mariotaku/twidere/activity/RequestPermissionsActivity.java][loadInfo] = -> pm=getPackageManager()@ -> TRY { -> info=pm.getApplicationInfo(pname,PackageManager.GET_META_DATA,)@ -> meta=info.metaData@ -> IF { -> return @meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,)) } -> mIconView.setImageDrawable(info.loadIcon(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mNameView.setText(info.loadLabel(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> desc=info.loadDescription(pm,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setText(desc,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setVisibility((isEmpty(desc,))?View.GONE:View.VISIBLE,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> permissions=mPermissions=meta.getInt(METADATA_KEY_PERMISSIONS,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mCallingPackage=pname@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> IF { } ELSE { -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } } } CATCH { }
results[https://github.com/mariotaku/twidere/blob/7e1421092aeb81e431c3e043ff5068dd38ef31d7/src/org/mariotaku/twidere/activity/support/RequestPermissionsActivity.java][loadInfo] = -> pm=getPackageManager()@ -> TRY { -> info=pm.getApplicationInfo(pname,PackageManager.GET_META_DATA,)@ -> meta=info.metaData@ -> IF { -> return @meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,)) } -> mIconView.setImageDrawable(info.loadIcon(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mNameView.setText(info.loadLabel(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> desc=info.loadDescription(pm,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setText(desc,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setVisibility((isEmpty(desc,))?View.GONE:View.VISIBLE,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> permissions=mPermissions=meta.getInt(METADATA_KEY_PERMISSIONS,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mCallingPackage=pname@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> IF { } ELSE { -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } } } CATCH { }
results[https://github.com/openintents/filemanager/blob/f8f3fd3bcb9ebb3fcca3776d05dff415ebb65516/FileManager/src/org/openintents/filemanager/ThumbnailLoader.java][getDrawableForMimetype] = -> IF { -> return null@holder.getMimeType()==null } -> pm=context.getPackageManager()@!(holder.getMimeType()==null) -> IF { -> path=holder.getFile().getPath()@!(holder.getMimeType()==null) && holder.getMimeType().equals(MIME_APK,) -> pInfo=pm.getPackageArchiveInfo(path,PackageManager.GET_ACTIVITIES,)@!(holder.getMimeType()==null) && holder.getMimeType().equals(MIME_APK,) -> IF { -> return aInfo.loadIcon(pm,)@!(holder.getMimeType()==null) && pInfo!=null && holder.getMimeType().equals(MIME_APK,) } } -> iconResource=MimeTypes.newInstance(context,).getIcon(holder.getMimeType(),)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) -> IF { -> TRY { -> ret=pm.getResourcesForApplication(context.getPackageName(),).getDrawable(iconResource,)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && iconResource>0 } CATCH { } CATCH { } } -> IF { -> return null@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && "*/*".equals(holder.getMimeType(),) && !(ret!=null) } -> data=FileUtils.getUri(holder.getFile(),)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && !("*/*".equals(holder.getMimeType(),)) && !(ret!=null) -> intent=new Intent(Intent.ACTION_VIEW,)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && !("*/*".equals(holder.getMimeType(),)) && !(ret!=null) -> intent.setDataAndType(data,holder.getMimeType(),)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && !("*/*".equals(holder.getMimeType(),)) && !(ret!=null) -> lri=pm.queryIntentActivities(intent,PackageManager.MATCH_DEFAULT_ONLY,)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && !("*/*".equals(holder.getMimeType(),)) && !(ret!=null) -> IF { -> index=(mUseBestMatch)?0:lri.size()-1@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && !("*/*".equals(holder.getMimeType(),)) && lri!=null&&lri.size()>0 && !(ret!=null) -> ri=lri.get(index,)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && !("*/*".equals(holder.getMimeType(),)) && lri!=null&&lri.size()>0 && !(ret!=null) -> return ri.loadIcon(pm,)@!(holder.getMimeType()==null) && !(holder.getMimeType().equals(MIME_APK,)) && !("*/*".equals(holder.getMimeType(),)) && lri!=null&&lri.size()>0 && !(ret!=null) }
results[https://github.com/camperdave/packages_apps_settings/blob/49e8d2e90b5239b116fecf2b0d634935496bc3f9/src/com/android/settings/fuelgauge/PowerUsageDetail.java][fillPackagesSection] = -> IF { -> return @uid<1 } -> packagesParent=(ViewGroup) findViewById(R.id.packages_section,)@!(uid<1) -> IF { -> return @packagesParent==null && !(uid<1) } -> inflater=getLayoutInflater()@!(packagesParent==null) && !(uid<1) -> pm=getPackageManager()@!(packagesParent==null) && !(uid<1) -> defaultActivityIcon=pm.getDefaultActivityIcon()@!(packagesParent==null) && !(uid<1) -> mPackages=pm.getPackagesForUid(uid,)@!(packagesParent==null) && !(uid<1) -> IF { -> return @!(packagesParent==null) && mPackages==null||mPackages.length<2 && !(uid<1) } -> LOOP { -> TRY { -> ai=pm.getApplicationInfo(mPackages[i],0,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> label=ai.loadLabel(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> icon=defaultActivityIcon@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> IF { -> mPackages[i]=label.toString()@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) && label!=null } -> IF { -> icon=ai.loadIcon(pm,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && ai.icon!=0 && !(mPackages==null||mPackages.length<2) } -> item=(ViewGroup) inflater.inflate(R.layout.power_usage_package_item,null,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> packagesParent.addView(item,)@!(packagesParent==null) && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView=(TextView) item.findViewById(R.id.label,)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) -> labelView.setText(mPackages[i],)@!(packagesParent==null) && i<mPackages.length && !(uid<1) && !(mPackages==null||mPackages.length<2) } CATCH { } }
