results[https://github.com/mariotaku/twidere/blob/1d36e89505925b6072e4491b7272458cbbbc4fb7/src/org/mariotaku/twidere/activity/RequestPermissionsActivity.java][loadInfo] = -> pm=getPackageManager()@ -> TRY { -> info=pm.getApplicationInfo(pname,PackageManager.GET_META_DATA,)@ -> meta=info.metaData@ -> IF { -> return @meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,)) } -> mIconView.setImageDrawable(info.loadIcon(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mNameView.setText(info.loadLabel(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> desc=info.loadDescription(pm,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setText(desc,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setVisibility((isEmpty(desc,))?View.GONE:View.VISIBLE,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> permissions=mPermissions=meta.getInt(METADATA_KEY_PERMISSIONS,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mCallingPackage=pname@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> IF { } ELSE { -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } } } CATCH { }
results[https://github.com/mariotaku/twidere/blob/7e1421092aeb81e431c3e043ff5068dd38ef31d7/src/org/mariotaku/twidere/activity/support/RequestPermissionsActivity.java][loadInfo] = -> pm=getPackageManager()@ -> TRY { -> info=pm.getApplicationInfo(pname,PackageManager.GET_META_DATA,)@ -> meta=info.metaData@ -> IF { -> return @meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,)) } -> mIconView.setImageDrawable(info.loadIcon(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mNameView.setText(info.loadLabel(pm,),)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> desc=info.loadDescription(pm,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setText(desc,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mDescriptionView.setVisibility((isEmpty(desc,))?View.GONE:View.VISIBLE,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> permissions=mPermissions=meta.getInt(METADATA_KEY_PERMISSIONS,)@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> mCallingPackage=pname@!(meta==null||!(meta.getBoolean(METADATA_KEY_EXTENSION,))) -> IF { } ELSE { -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } -> IF { } } } CATCH { }
results[https://github.com/KeiferMiller/InkBar/blob/7fbb3e9223eebb12da9fa928cc9b3449ed9f450f/lib/JakeWharton-ActionBarSherlock-736ef08/library/src/com/actionbarsherlock/internal/widget/ActionBarView.java][<init>] = -> super(context,attrs,defStyle,)@ -> LayoutInflater.from(context,).inflate(R.layout.abs__action_bar,this,true,)@ -> attrsActionBar=context.obtainStyledAttributes(attrs,R.styleable.SherlockTheme,defStyle,0,)@ -> appInfo=context.getApplicationInfo()@ -> pm=context.getPackageManager()@ -> mTitleLayout=(TextView) findViewById(R.id.abs__action_bar_title,)@ -> titleTextStyle=attrsActionBar.getResourceId(R.styleable.SherlockTheme_abTitleTextStyle,0,)@ -> IF { -> mTitleLayout.setTextAppearance(context,titleTextStyle,)@titleTextStyle!=0 } -> mTitle=attrsActionBar.getString(R.styleable.SherlockTheme_abTitle,)@ -> IF { -> setTitle(mTitle,)@mTitle!=null } -> mSubtitleLayout=(TextView) findViewById(R.id.abs__action_bar_subtitle,)@ -> subtitleTextStyle=attrsActionBar.getResourceId(R.styleable.SherlockTheme_abSubtitleTextStyle,0,)@ -> IF { -> mSubtitleLayout.setTextAppearance(context,subtitleTextStyle,)@subtitleTextStyle!=0 } -> mSubtitle=attrsActionBar.getString(R.styleable.SherlockTheme_abSubtitle,)@ -> IF { -> setSubtitle(mSubtitle,)@mSubtitle!=null } -> mLogo=attrsActionBar.getDrawable(R.styleable.SherlockTheme_abLogo,)@ -> mIcon=attrsActionBar.getDrawable(R.styleable.SherlockTheme_abIcon,)@ -> IF { -> mIcon=appInfo.loadIcon(pm,)@mIcon==null&&context instanceof Activity } -> customViewResourceId=attrsActionBar.getResourceId(R.styleable.SherlockTheme_abCustomNavigationLayout,0,)@ -> IF { -> setCustomView(customViewResourceId,)@customViewResourceId!=0 } -> mDivider=attrsActionBar.getDrawable(R.styleable.SherlockTheme_abDivider,)@ -> setDisplayOptions(attrsActionBar.getInteger(R.styleable.SherlockTheme_abDisplayOptions,DEFAULT_DISPLAY_OPTIONS,),)@ -> setNavigationMode(attrsActionBar.getInteger(R.styleable.SherlockTheme_abNavigationMode,DEFAULT_NAVIGATION_MODE,),)@ -> attrsActionBar.recycle()@ -> mLogoNavItem=new ActionMenuItem(context,0,android.R.id.home,0,0,mTitle,)@
results[https://github.com/DarkPA/android_packages_apps_Settings/blob/b2b9312b70bbde51fbae485ee83b59bbded8c98c/src/com/android/settings/net/UidDetailProvider.java][buildUidDetail] = -> res=mContext.getResources()@ -> pm=mContext.getPackageManager()@ -> detail.label=pm.getNameForUid(uid,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.process_kernel_label,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.data_usage_uninstalled_apps,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> cm=(ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE,)@ -> detail.label=res.getString(Utils.getTetheringLabel(cm,),)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> packageNames=pm.getPackagesForUid(uid,)@ -> length=(packageNames!=null)?packageNames.length:0@ -> TRY { -> IF { -> info=pm.getApplicationInfo(packageNames[0],0,)@length==1 -> detail.label=info.loadLabel(pm,).toString()@length==1 -> detail.icon=info.loadIcon(pm,)@length==1 } ELSE { -> IF { -> detail.detailLabels= new CharSequence[]@length>1 && !(length==1) -> i=0@length>1 && !(length==1) -> LOOP { -> packageName=packageNames[i]@length>1 && !(length==1) && i<length -> packageInfo=pm.getPackageInfo(packageName,0,)@length>1 && !(length==1) && i<length -> appInfo=pm.getApplicationInfo(packageName,0,)@length>1 && !(length==1) && i<length -> detail.detailLabels[i]=appInfo.loadLabel(pm,).toString()@length>1 && !(length==1) && i<length -> IF { -> detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo,).toString()@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 -> detail.icon=appInfo.loadIcon(pm,)@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 } -> ++i@length>1 && !(length==1) && i<length } } } } CATCH { } -> IF { -> detail.label=Integer.toString(uid,)@TextUtils.isEmpty(detail.label,) }
results[https://github.com/RootzBoat/android_packages_apps_Settings/blob/b2b9312b70bbde51fbae485ee83b59bbded8c98c/src/com/android/settings/net/UidDetailProvider.java][buildUidDetail] = -> res=mContext.getResources()@ -> pm=mContext.getPackageManager()@ -> detail.label=pm.getNameForUid(uid,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.process_kernel_label,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.data_usage_uninstalled_apps,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> cm=(ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE,)@ -> detail.label=res.getString(Utils.getTetheringLabel(cm,),)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> packageNames=pm.getPackagesForUid(uid,)@ -> length=(packageNames!=null)?packageNames.length:0@ -> TRY { -> IF { -> info=pm.getApplicationInfo(packageNames[0],0,)@length==1 -> detail.label=info.loadLabel(pm,).toString()@length==1 -> detail.icon=info.loadIcon(pm,)@length==1 } ELSE { -> IF { -> detail.detailLabels= new CharSequence[]@length>1 && !(length==1) -> i=0@length>1 && !(length==1) -> LOOP { -> packageName=packageNames[i]@length>1 && !(length==1) && i<length -> packageInfo=pm.getPackageInfo(packageName,0,)@length>1 && !(length==1) && i<length -> appInfo=pm.getApplicationInfo(packageName,0,)@length>1 && !(length==1) && i<length -> detail.detailLabels[i]=appInfo.loadLabel(pm,).toString()@length>1 && !(length==1) && i<length -> IF { -> detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo,).toString()@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 -> detail.icon=appInfo.loadIcon(pm,)@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 } -> ++i@length>1 && !(length==1) && i<length } } } } CATCH { } -> IF { -> detail.label=Integer.toString(uid,)@TextUtils.isEmpty(detail.label,) }
results[https://github.com/rmgeren/packages_apps_Settings/blob/b2b9312b70bbde51fbae485ee83b59bbded8c98c/src/com/android/settings/net/UidDetailProvider.java][buildUidDetail] = -> res=mContext.getResources()@ -> pm=mContext.getPackageManager()@ -> detail.label=pm.getNameForUid(uid,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.process_kernel_label,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.data_usage_uninstalled_apps,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> cm=(ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE,)@ -> detail.label=res.getString(Utils.getTetheringLabel(cm,),)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> packageNames=pm.getPackagesForUid(uid,)@ -> length=(packageNames!=null)?packageNames.length:0@ -> TRY { -> IF { -> info=pm.getApplicationInfo(packageNames[0],0,)@length==1 -> detail.label=info.loadLabel(pm,).toString()@length==1 -> detail.icon=info.loadIcon(pm,)@length==1 } ELSE { -> IF { -> detail.detailLabels= new CharSequence[]@length>1 && !(length==1) -> i=0@length>1 && !(length==1) -> LOOP { -> packageName=packageNames[i]@length>1 && !(length==1) && i<length -> packageInfo=pm.getPackageInfo(packageName,0,)@length>1 && !(length==1) && i<length -> appInfo=pm.getApplicationInfo(packageName,0,)@length>1 && !(length==1) && i<length -> detail.detailLabels[i]=appInfo.loadLabel(pm,).toString()@length>1 && !(length==1) && i<length -> IF { -> detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo,).toString()@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 -> detail.icon=appInfo.loadIcon(pm,)@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 } -> ++i@length>1 && !(length==1) && i<length } } } } CATCH { } -> IF { -> detail.label=Integer.toString(uid,)@TextUtils.isEmpty(detail.label,) }
results[https://github.com/davros-/platform_packages_apps_Settings/blob/d033869795b94deb126dff7eef6fbf28a904cc87/src/com/android/settings/net/UidDetailProvider.java][buildUidDetail] = -> res=mContext.getResources()@ -> pm=mContext.getPackageManager()@ -> detail.label=pm.getNameForUid(uid,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.process_kernel_label,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.data_usage_uninstalled_apps,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> cm=(ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE,)@ -> detail.label=res.getString(Utils.getTetheringLabel(cm,),)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> packageNames=pm.getPackagesForUid(uid,)@ -> length=(packageNames!=null)?packageNames.length:0@ -> TRY { -> IF { -> info=pm.getApplicationInfo(packageNames[0],0,)@length==1 -> detail.label=info.loadLabel(pm,).toString()@length==1 -> detail.icon=info.loadIcon(pm,)@length==1 } ELSE { -> IF { -> detail.detailLabels= new CharSequence[]@length>1 && !(length==1) -> i=0@length>1 && !(length==1) -> LOOP { -> packageName=packageNames[i]@length>1 && !(length==1) && i<length -> packageInfo=pm.getPackageInfo(packageName,0,)@length>1 && !(length==1) && i<length -> appInfo=pm.getApplicationInfo(packageName,0,)@length>1 && !(length==1) && i<length -> detail.detailLabels[i]=appInfo.loadLabel(pm,).toString()@length>1 && !(length==1) && i<length -> IF { -> detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo,).toString()@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 -> detail.icon=appInfo.loadIcon(pm,)@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 } -> ++i@length>1 && !(length==1) && i<length } } } } CATCH { } -> IF { -> detail.label=Integer.toString(uid,)@TextUtils.isEmpty(detail.label,) }
results[https://github.com/cerebrum-android/android_packages_apps_Settings/blob/eefa61ed2e8583f659e868f3057f195d7cb2bb11/src/com/android/settings/net/UidDetailProvider.java][buildUidDetail] = -> res=mContext.getResources()@ -> pm=mContext.getPackageManager()@ -> detail.label=pm.getNameForUid(uid,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.process_kernel_label,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.data_usage_uninstalled_apps,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> cm=(ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE,)@ -> detail.label=res.getString(Utils.getTetheringLabel(cm,),)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> packageNames=pm.getPackagesForUid(uid,)@ -> length=(packageNames!=null)?packageNames.length:0@ -> TRY { -> IF { -> info=pm.getApplicationInfo(packageNames[0],0,)@length==1 -> detail.label=info.loadLabel(pm,).toString()@length==1 -> detail.icon=info.loadIcon(pm,)@length==1 } ELSE { -> IF { -> detail.detailLabels= new CharSequence[]@length>1 && !(length==1) -> i=0@length>1 && !(length==1) -> LOOP { -> packageName=packageNames[i]@length>1 && !(length==1) && i<length -> packageInfo=pm.getPackageInfo(packageName,0,)@length>1 && !(length==1) && i<length -> appInfo=pm.getApplicationInfo(packageName,0,)@length>1 && !(length==1) && i<length -> detail.detailLabels[i]=appInfo.loadLabel(pm,).toString()@length>1 && !(length==1) && i<length -> IF { -> detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo,).toString()@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 -> detail.icon=appInfo.loadIcon(pm,)@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 } -> ++i@length>1 && !(length==1) && i<length } } } } CATCH { } -> IF { -> detail.label=Integer.toString(uid,)@TextUtils.isEmpty(detail.label,) }
results[https://github.com/AndroidDeveloperAlliance/platform_packages_apps_Settings/blob/2708e9701a7a9f9598b26b2e92fedc0cf6ff5b66/src/com/android/settings/net/UidDetailProvider.java][buildUidDetail] = -> res=mContext.getResources()@ -> pm=mContext.getPackageManager()@ -> detail.label=pm.getNameForUid(uid,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.process_kernel_label,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.data_usage_uninstalled_apps,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> cm=(ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE,)@ -> detail.label=res.getString(Utils.getTetheringLabel(cm,),)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> packageNames=pm.getPackagesForUid(uid,)@ -> length=(packageNames!=null)?packageNames.length:0@ -> TRY { -> IF { -> info=pm.getApplicationInfo(packageNames[0],0,)@length==1 -> detail.label=info.loadLabel(pm,).toString()@length==1 -> detail.icon=info.loadIcon(pm,)@length==1 } ELSE { -> IF { -> detail.detailLabels= new CharSequence[]@length>1 && !(length==1) -> i=0@length>1 && !(length==1) -> LOOP { -> packageName=packageNames[i]@length>1 && !(length==1) && i<length -> packageInfo=pm.getPackageInfo(packageName,0,)@length>1 && !(length==1) && i<length -> appInfo=pm.getApplicationInfo(packageName,0,)@length>1 && !(length==1) && i<length -> detail.detailLabels[i]=appInfo.loadLabel(pm,).toString()@length>1 && !(length==1) && i<length -> IF { -> detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo,).toString()@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 -> detail.icon=appInfo.loadIcon(pm,)@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 } -> ++i@length>1 && !(length==1) && i<length } } } } CATCH { } -> IF { -> detail.label=Integer.toString(uid,)@TextUtils.isEmpty(detail.label,) }
results[https://github.com/TrasUI/old_Settings/blob/b2b9312b70bbde51fbae485ee83b59bbded8c98c/src/com/android/settings/net/UidDetailProvider.java][buildUidDetail] = -> res=mContext.getResources()@ -> pm=mContext.getPackageManager()@ -> detail.label=pm.getNameForUid(uid,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.process_kernel_label,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> detail.label=res.getString(R.string.data_usage_uninstalled_apps,)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> cm=(ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE,)@ -> detail.label=res.getString(Utils.getTetheringLabel(cm,),)@ -> detail.icon=pm.getDefaultActivityIcon()@ -> packageNames=pm.getPackagesForUid(uid,)@ -> length=(packageNames!=null)?packageNames.length:0@ -> TRY { -> IF { -> info=pm.getApplicationInfo(packageNames[0],0,)@length==1 -> detail.label=info.loadLabel(pm,).toString()@length==1 -> detail.icon=info.loadIcon(pm,)@length==1 } ELSE { -> IF { -> detail.detailLabels= new CharSequence[]@length>1 && !(length==1) -> i=0@length>1 && !(length==1) -> LOOP { -> packageName=packageNames[i]@length>1 && !(length==1) && i<length -> packageInfo=pm.getPackageInfo(packageName,0,)@length>1 && !(length==1) && i<length -> appInfo=pm.getApplicationInfo(packageName,0,)@length>1 && !(length==1) && i<length -> detail.detailLabels[i]=appInfo.loadLabel(pm,).toString()@length>1 && !(length==1) && i<length -> IF { -> detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo,).toString()@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 -> detail.icon=appInfo.loadIcon(pm,)@length>1 && !(length==1) && i<length && packageInfo.sharedUserLabel!=0 } -> ++i@length>1 && !(length==1) && i<length } } } } CATCH { } -> IF { -> detail.label=Integer.toString(uid,)@TextUtils.isEmpty(detail.label,) }
