results[https://github.com/tfreese/misc/blob/5658cfd02316ae365d6158747900a77c8a4d0aa6/de.freese.sonstiges/src/main/java/de/freese/sonstiges/pipes/SortThread.java][run] = -> IF { -> TRY { -> quicksort(listOfWords,0,numwords-1,)@ -> LOOP { -> this.out.println(listOfWords[i],)@this.out!=null&&this.in!=null && i<numwords } -> this.out.close()@this.out!=null&&this.in!=null } }
results[https://github.com/tfreese/misc/blob/4ed69a90fdf15a98393a04ed2ade3ffe4f2605c6/sonstiges/src/main/java/de/freese/sonstiges/pipes/SortThread.java][run] = -> IF { -> TRY { -> quicksort(listOfWords,0,numwords-1,)@ -> LOOP { -> this.out.println(listOfWords[i],)@this.out!=null&&this.in!=null && i<numwords } -> this.out.close()@this.out!=null&&this.in!=null } }
results[https://github.com/jeyboy/MUSIC/blob/e16e5628e11b4d5dcec9b964e939f8ce9bf8c46d/src/service_threads/Trasher.java][save] = -> TRY { -> wri=IOOperations.GetWriter(Constants.trashpath,true,false,)@ -> LOOP { -> wri.println(f.ToString(),)@ } } -> IF { -> wri.close()@wri!=null }
results[https://github.com/tfreese/misc/blob/5658cfd02316ae365d6158747900a77c8a4d0aa6/de.freese.sonstiges/src/main/java/de/freese/sonstiges/pipes/ReverseThread.java][run] = -> IF { -> TRY { -> LOOP { -> this.out.println(reverseIt(input,),)@this.out!=null&&this.in!=null && (input=this.in.readLine())!=null -> this.out.flush()@this.out!=null&&this.in!=null } -> this.out.close()@this.out!=null&&this.in!=null } }
results[https://github.com/overturetool/overture/blob/6c514000ef128c113ed7a36958eedb5df5b647fd/core/interpreter/src/main/java_/org/overture/interpreter/messages/rtlog/RTLogger.java][dump] = -> IF { -> LOOP { -> logfile.println(event.getMessage(),)@logfile!=null } -> logfile.flush()@logfile!=null -> IF { -> logfile.close()@logfile!=null } }
results[https://github.com/overturetool/overture/blob/0bac41677f18bfa90d12138c70570813df882746/core/interpreterV2/src/main/java/org/overturetool/vdmj/messages/rtlog/RTLogger.java][dump] = -> IF { -> LOOP { -> logfile.println(event.getMessage(),)@logfile!=null } -> logfile.flush()@logfile!=null -> IF { -> logfile.close()@logfile!=null } }
results[https://github.com/dukeboard/kevoree-genetic/blob/56728688f66bfc28d9e54c814053758d3382ff06/MOEAFramework-1.17/test/org/moeaframework/analysis/sensitivity/SobolAnalysisTest.java][save] = -> TRY {  -> TRY { -> writer=new PrintWriter(file,)@ -> LOOP { -> writer.println(data[i],)@i<data.length } } FINALLY { -> IF { -> writer.close()@writer!=null } } } CATCH {}
results[https://github.com/dukeboard/kevoree-genetic/blob/77c7edf64964a205c33331e43e8baae1946972c0/MOEAFramework-1.18/src/main/java/org/moeaframework/algorithm/pisa/State.java][set] = -> TRY {  -> LOOP { -> TRY { -> writer=new PrintWriter(new FileWriter(file,),)@ -> writer.print(state,)@ } FINALLY { -> IF { -> writer.close()@writer!=null } } } } CATCH {}
results[https://github.com/camunda/camunda-bpm-platform/blob/cf1e57b40cb34df45ff8b94f5cd74ff1038b1b79/webapps/cycle/cycle-sql/src/main/java/org/camunda/bpm/cycle/SchemaExport.java][export] = -> TRY { -> writer=new PrintWriter(outFile,)@ -> LOOP { -> writer.print(formatter.format(string,)+"\n"+delimiter+"\n",)@ } } FINALLY { -> IF { -> writer.close()@writer!=null } }
results[https://github.com/camunda/camunda-bpm-platform/blob/62d0ecf376ed9236890d13f67d45d34abcb367e2/cycle-sql/src/main/java/com/camunda/fox/cycle/SchemaExport.java][export] = -> TRY { -> writer=new PrintWriter(outFile,)@ -> LOOP { -> writer.print(formatter.format(string,)+"\n"+delimiter+"\n",)@ } } FINALLY { -> IF { -> writer.close()@writer!=null } }
