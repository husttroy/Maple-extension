results[https://github.com/ftiasch/acm-icpc/blob/d617a3bf1c01c8567085fe54b9e092fa42193f49/codeforces/425-codeforces-round-243/D/Main.java][run] = -> TRY { -> writer.println(result,)@ } -> writer.close()@
results[https://github.com/ftiasch/acm-icpc/blob/7a5057fd58dde5c742d8eeff474f366290c1e2f7/sgu/p318/Solution.java][run] = -> TRY { -> writer.println(answer,)@ } -> writer.close()@
results[https://github.com/ftiasch/acm-icpc/blob/ef9ad017c1531b0be8b1c580f79cd8ea4b7e6f3d/sgu/p390/Solution.java][run] = -> TRY { -> writer.println(count(LENGTH,0,0,0,0,).total,)@ } -> writer.close()@
results[https://github.com/ftiasch/acm-icpc/blob/729f629e5a635f1f5e80293de3ce857586bdaf93/codeforces/338-codeforces-round-196/B/Solution.java][run] = -> TRY { -> writer.println(answer,)@ } -> writer.close()@
results[https://github.com/ftiasch/acm-icpc/blob/0d4a5e08b0d796cb4401489d17c3fcf3148a563d/sgu/p365/Solution.java][run] = -> TRY { -> n=reader.nextInt()@ -> writer.println(answer,)@ } -> writer.close()@
results[https://github.com/newtonik/preppa/blob/30ae40b4168d3132630f424f6610482df9203f5c/lib/tapestry-src-5.0.18/tapestry-component-report/src/main/java/org/apache/tapestry/mojo/ComponentReport.java][writeArgumentsFile] = -> TRY {  -> TRY { -> pw=new PrintWriter(fileName,)@ -> LOOP { -> pw.println(arg,)@ } -> pw.close()@ } } CATCH {}
results[https://github.com/feuyeux/quiland/blob/cca933dcdc434ad76f0d55f0d151114cf2d2afe1/java/air-io/src/main/java/feuyeux/io/bio/tcp/BIOTCPClient.java][close] = -> TRY {  -> TRY { -> writer.println(ENV.QUIT,)@ } -> writer.close()@ } CATCH {}
results[https://github.com/RomRaider/assembla.flat/blob/0f74497c6cdb64083b2c9322dc68781cba9c7304/tags/0.5.1/src/com/romraider/util/RomServer.java][write] = -> pw=new PrintWriter(os,true,)@ -> TRY { -> pw.println(rom,)@ } FINALLY { -> pw.close()@ }
results[https://github.com/StevenRS11/DimDoors/blob/43ff30f3f585f86c833353425d80de8680b54bf9/src/main/java/StevenDimDoors/mod_pocketDim/DeathTracker.java][writeToFile] = -> TRY { -> writer=new PrintWriter(filePath,)@ -> LOOP { -> writer.println(username,)@ } -> writer.close()@ }
results[https://github.com/RomRaider/assembla.flat/blob/894377b9caffe4e4c856a9dacdf2b1797f5a59ec/branches/dev_xmlmerge/src/com/romraider/util/RomServer.java][write] = -> pw=new PrintWriter(os,true,)@ -> TRY { -> pw.println(rom,)@ } FINALLY { -> pw.close()@ }
