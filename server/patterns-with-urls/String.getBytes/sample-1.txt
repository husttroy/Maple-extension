results[https://github.com/movingmt/hic/blob/a7e46dec2bffb7e0e20b36482f99da1ea8b720e2/src/ssvr/SenderR.java][parseKfbHeader][26] = -> TRY {  -> byteArray=req.getBytes()@ } CATCH(Exception) {}
results[https://github.com/svn2github/sakai-kernel/blob/fde90ddd0bb1d76ca7d6866c9fa26d504b14fa40/tags/kernel-1.0.6/kernel-util/src/test/java/org/sakaiproject/util/UTF8Test.java][setUp][124] = -> TRY {  -> utf8bytes=utf8ResourceName.getBytes()@ -> utf8ResourceName=new String(utf8bytes,"UTF-8",)@ } CATCH(Exception) {}
results[https://github.com/elight/the_grinder/blob/c1329936bba1880ba16ee9f841517d7625c474d8/grinder-http/src/test/java/net/grinder/plugin/http/tcpproxyfilter/TestConnectionHandlerImplementation.java][testRequestBinaryBody][13] = -> TRY {  -> buffer=message.getBytes()@ -> System.arraycopy(buffer,0,buffer3,0,buffer.length,)@ } CATCH(Exception) {}
results[https://github.com/rtreffer/smack/blob/38b1acc8a1048de8ebb12498e9364ca6521f0120/test-unit/org/jivesoftware/smackx/bytestreams/socks5/Socks5ClientTest.java][shouldCloseSocketIfServerRepliesWithError][46] = -> TRY {  -> address=digest.getBytes()@ -> out.write(address,)@ } CATCH(Exception) {}
results[https://github.com/epronk/fitnesse/blob/e27c17eef220e6bba556cc2b63d62d018ad36831/src/fitnesse/http/ChunkedResponse.java][addTrailingHeader][1] = -> TRY {  -> sender.send(header.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/dustin/snippets/blob/7179872f0eb4dba746e70379a6816dfa875fa7ed/java/java/servlet/photo/PhotoSecurity.java][getDigest][9] = -> TRY {  -> dataB=input.getBytes()@ -> md.update(dataB,)@ } CATCH(Exception) {}
results[https://github.com/fcrepo/fcrepo-historical/blob/96c4797cf94e9b580e77eca3a3c6d5a1dd86612f/fedorarepo-client/fedorarepo-admin-client/src/main/java/fedora/client/test/PerformanceTests.java][runModifyDatastreamByValue][14] = -> TRY {  -> apim.modifyDatastreamByValue(pid,"XDS1",null,"New Label","text/xml",null,dsContent.getBytes(),null,null,"Modify Datastream Test",false,)@ } CATCH(Exception) {}
results[https://github.com/DealerDotCom/grinder/blob/274aa90e08dfa3cd0a4bc9733b684629b97c1689/source/tests-src/net/grinder/plugin/http/tcpproxyfilter/TestConnectionHandlerImplementation.java][testWithBadResponseMessages][74] = -> TRY {  -> buffer=message.getBytes()@ -> handler.handleRequest(buffer,buffer.length,)@ } CATCH(Exception) {}
results[https://github.com/raptium/coursework/blob/a3c95ddaf60dfacb688fa6a0cb5c5a30e3cee935/IEG4180/project4/JStreamClient/src/org/cuhk/csc4180/jStreamClient/LibHTTP/HttpRequest.java][parse][3] = -> TRY {  -> parse(str.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/dongpd/ecms/blob/d18056d81b0c4a61f0f3167dc351f3ba233c1942/exo-ecms-core/exo-ecms-core-webui/src/main/java/org/exoplatform/ecm/resolver/StringResourceResolver.java][getInputStream][75] = -> TRY {  -> return new ByteArrayInputStream(templateData.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/jose-acevedoflores/git-workspace/blob/d6380a2700d1d032342db9b517801915ed89ee10/#arc_thenewboston/src/udp/server/UDPClient.java][<init>][5] = -> TRY {  -> sendData=sentence.getBytes()@ -> sendPacket=new DatagramPacket(sendData,sendData.length,IPAddress,9876,)@ } CATCH(Exception) {}
results[https://github.com/bcopeland/hbase-thrift/blob/f337b62adc185c17ff369b96a3249a8594bdccdf/src/test/java/org/apache/hadoop/hbase/TestSerialization.java][testKeyValue2][9] = -> TRY {  -> row=name.getBytes()@ -> kv=new KeyValue(row,fam,qf,ts,val,)@ } CATCH(Exception) {}
results[https://github.com/geoserver/geoserver-history/blob/818c03559568dc62d427494334f4819253c55716/src/main/src/test/java/org/geoserver/test/GeoServerAbstractTestSupport.java][putAsServletResponse][6] = -> TRY {  -> return putAsServletResponse(path,(body!=null)?body.getBytes():(byte[]) null,contentType,)@ } CATCH(Exception) {}
results[https://github.com/vadimbobrov/hdup/blob/4c17d4b800c0bd9f6bbc86c6abbec27cb1cb6b7b/src/main/java/com/os/rest/exchange/ByteHelper.java][newByteBuffer][4] = -> TRY {  -> return ByteBuffer.wrap(string.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/apache/webservices-axiom/blob/e04903900b3362b6cfa20e0176b3bd17d58885a5/modules/axiom-api/src/test/java/org/apache/axiom/attachments/impl/BufferUtilsTest.java][testByteArrayDataSourceBackedDataHandlerExceedLimit][1] = -> TRY {  -> b=str.getBytes()@ -> bads=new ByteArrayDataSource(b,"text/plain",)@ } CATCH(Exception) {}
results[https://github.com/funambol-mirror/funambol-client-sdk/blob/29807f96908e3eaa820ab364310965bcf454af85/v911/syncml/src/test/com/funambol/syncml/client/FileObjectOutputStreamTest.java][testMediumObject2][4] = -> TRY {  -> item=prologue+new String(bodyBytes,)+epilogue@ -> itemBytes=item.getBytes()@ } CATCH(Exception) {}
results[https://github.com/mjeanroy/springhub/blob/2637bd2951f42e2382abd249f2dffcfa1bc72f6b/spring-web/src/main/java/com/mick8569/springhub/commons/crypto/Crypto.java][generateAESKey][3] = -> TRY {  -> return new SecretKeySpec(secret.getBytes(),AES,)@ } CATCH(Exception) {}
results[https://github.com/taktod/myLib/blob/fdcb654cfc090f60cbf73084c95dfeb59265573b/myLib.media.flv/src/main/java/com/ttProject/media/flv/amf/Amf0Value.java][makeMapElementBuffer][3] = -> TRY {  -> nameBytes=name.getBytes()@ -> buffer.put(nameBytes,)@ } CATCH(Exception) {}
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/security/src/test/api/java/org/apache/harmony/security/tests/java/security/Signature2Test.java][test_update$BII][2] = -> TRY {  -> bytes=MESSAGE.getBytes()@ -> sig.update(bytes,0,bytes.length,)@ } CATCH(Exception) {}
results[https://github.com/Mobicents/mediaserver/blob/f841c6bdd0b577ae3873c1544e8c2bd26cbafc88/mgcp/mgcp/stack/src/test/java/org/mobicents/protocols/mgcp/stack/test/MessageHandlerTest.java][testNoPiggyDismount][4] = -> TRY {  -> rawByte=message.getBytes()@ -> messages=handler.piggyDismount(rawByte,rawByte.length,)@ } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/727cf815a250f9a2305f3b377f8f0450b9820bd9/jetty-server/src/test/java/org/eclipse/jetty/server/RequestTest.java][testMultiPart][2] = -> TRY {  -> request="GET /foo/x.html HTTP/1.1\r\n"+"Host: whatever\r\n"+"Content-Type: multipart/form-data; boundary=\"AaB03x\"\r\n"+"Content-Length: "+multipart.getBytes().length+"\r\n"+"\r\n"+multipart@ -> responses=_connector.getResponses(request,)@ } CATCH(Exception) {}
results[https://github.com/flotpk/geoserver/blob/89284fd92eb6fd4804eda8f8818d779e3d36c4ef/src/main/src/test/java/org/geoserver/test/GeoServerAbstractTestSupport.java][put][6] = -> TRY {  -> return put(path,body.getBytes(),contentType,)@ } CATCH(Exception) {}
results[https://github.com/shutterstock/tungsten-replicator/blob/300163b82f289d0429d31a4344b40ad18115d5c5/replicator/test/java/com/continuent/tungsten/replicator/thl/log/LogFileTest.java][testReadWrite][1] = -> TRY {  -> testBytes1=testData1.getBytes()@ -> record1=new LogRecord(firstPos,testBytes1,LogRecord.CRC_TYPE_NONE,0,)@ } CATCH(Exception) {}
results[https://github.com/specify/specify/blob/d22051c8791cdd53af6c85843f221c8f6d800d80/src/edu/ku/brc/helpers/Encryption.java][main][3] = -> TRY {  -> inputBytes=input.getBytes()@ -> ciphertext=encrypt(inputBytes,passwordChars,)@ } CATCH(Exception) {}
results[https://github.com/MIPS/external-robolectric/blob/bbe542b2c2b9d5ffc4d8a856e149c8220d0430cb/test/com/xtremelabs/robolectric/util/SQLiteTest.java][setUp][3] = -> TRY {  -> byteData=byteString.getBytes()@ -> values.put("byte_data",byteData,)@ } CATCH(Exception) {}
results[https://github.com/roghughe/captaindebug/blob/e9802262e5669d4711cdf23e5de855dcc7c6bf94/state-machine/src/test/java/com/captaindebug/statemachine/tweettohtml/CaptureTagTest.java][testHashTagCaptureWithSpaceTerminator][2] = -> TRY {  -> bytes=expected.getBytes()@ -> assertEquals(expected,resultString,)@ } CATCH(Exception) {}
results[https://github.com/esoeproject/esoeproject/blob/e06b76aca67544aa673e25368e8b84b723a2dfc0/spepjava/tests/regression/com/qut/middleware/spep/servlet/AuthenticationServletTest.java][setUp][3] = -> TRY {  -> this.authnRequest=new String("This is an authn request.",).getBytes()@ } CATCH(Exception) {}
results[https://github.com/rafalkrupinski/jetty/blob/727cf815a250f9a2305f3b377f8f0450b9820bd9/jetty-server/src/test/java/org/eclipse/jetty/server/HttpServerTestBase.java][testUnreadInput][1] = -> TRY {  -> content="This is a loooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"ooooooooooooooooooooooooooooooooooooooooooooo"+"oooooooooooonnnnnnnnnnnnnnnnggggggggg content"+new String(fill,)@ -> bytes=content.getBytes()@ } CATCH(Exception) {}
results[https://github.com/ibissource/iaf/blob/6429c10091a8fd038e4e5a6326b6e73bd6627fdb/adapterframework/src/main/java/nl/nn/adapterframework/util/FileHandler.java][go][3] = -> TRY {  -> listResult=dx.getDirList()@ -> return listResult.getBytes()@ } CATCH(Exception) {}
results[https://github.com/ravihuang/ATE4D/blob/5d39c1177d2471e17f7f3d830eab827515d6c781/src/ate/ua/AIoHandlerAdapter.java][sendData][2] = -> TRY {  -> return sendData(session,s.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-vfs/blob/2b17a9e46e4655bc332fdde66803ab2fab69e444/core/src/main/java/org/apache/commons/vfs2/util/DefaultCryptor.java][encrypt][10] = -> TRY {  -> input=plainKey.getBytes()@ -> ctLength=cipher.update(input,0,input.length,cipherText,0,)@ } CATCH(Exception) {}
results[https://github.com/ib84/HypergraphDB-Mirror/blob/b819beccd2071236f7a1352dc78407313e3d8606/storage/hazelstore/src/java/org/hypergraphdb/storage/hazelstore/HGConverter.java][convertStringtoByteArray][1] = -> TRY { -> return s.getBytes()@ } CATCH(Exception) { -> throw new HGException("Error when converting String to Byte"+ioEx,)@ }
results[https://github.com/epronk/fitnesse/blob/e27c17eef220e6bba556cc2b63d62d018ad36831/src/fitnesse/runner/XmlResultFormatter.java][writeDocumentHeader][1] = -> TRY {  -> tail=xmlText.substring(endIndex,)@ -> tailBytes=tail.getBytes()@ } CATCH(Exception) {}
results[https://github.com/apache/chukwa/blob/4ec79ec47c778ea3fa83edb59ed3c501fef7623b/src/test/java/org/apache/hadoop/chukwa/datacollection/adaptor/TestUDPAdaptor.java][testUDP][8] = -> TRY {  -> buf=STR.getBytes()@ -> p=new DatagramPacket(buf,buf.length,)@ } CATCH(Exception) {}
results[https://github.com/webx/citrus/blob/b1232187abc63af455e98c2d31aadf115b4a53a0/common/util/src/test/java/com/alibaba/citrus/util/templatelite/TemplateVisitTests.java][render_methodNotFound_forText][1] = -> TRY {  -> loadTemplate(s.getBytes(),"test.txt",1,0,0,)@ } CATCH(Exception) {}
results[https://github.com/crow-misia/ermaster.old/blob/fe9f5aeb4dfc252c8e0bd90529e64822a31f1d96/org.insightech.er/src/org/insightech/er/util/PasswordCrypt.java][encrypt][1] = -> TRY {  -> input=password.getBytes()@ -> encrypted=cipher.doFinal(input,)@ } CATCH(Exception) {}
results[https://github.com/naur/research/blob/57342d7d0e998b67fbc052b86011182341f50ceb/naure-repositories/src/main/java/org.naure.repositories/util/JsonUtil.java][serialize][1] = -> TRY {  -> json=mapper.writeValueAsString(src,)@ -> return json.getBytes()@ } CATCH(Exception) {}
results[https://github.com/andrewphorn/ClassiCube-Client/blob/6b9bd6ca9cb919e6af0dd05d18e29c8c793f749c/src/main/java/com/mojang/minecraft/Minecraft.java][getHash][1] = -> TRY {  -> urlBytes=urlString.getBytes()@ -> hashBytes=md.digest(urlBytes,)@ } CATCH(Exception) {}
results[https://github.com/Berico-Technologies/Event-Bus/blob/3b2160f346cec3f6a2d83672d8a8f194557d91bc/event-bus-rabbit/src/main/java/pegasus/eventbus/rabbitmq/SimpleCryptoImpl.java][encrypt][1] = -> TRY {  -> return encrypt(rawKey,s.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/barchart/barchart-feed-ddf/blob/2fd322a4121aa2fb46b300f3b4cf607aa709c267/barchart-feed-ddf-datalink/src/test/java/com/barchart/feed/ddf/datalink/provider/TestMsgDeframerDDF.java][decode][2] = -> TRY {  -> array=text.getBytes()@ -> source=ChannelBuffers.copiedBuffer(array,)@ } CATCH(Exception) {}
results[https://github.com/terraframe/Runway-SDK/blob/4e1a50a6e89369a0ea61403f3dc6ca0aef06f5a8/runwaysdk-test/src/main/java/com/runwaysdk/vault/VaultTest.java][runFailure][1] = -> TRY {  -> file.putFile(input.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/yanbincode/yb/blob/60b32a9e1436f41a5c180e6333e6aba4b88bc15a/yb-j2se/src/main/java/j2se/net/socket/UdpClient.java][client][1] = -> TRY {  -> buf=content.getBytes()@ -> packet=new DatagramPacket(buf,buf.length,address,)@ } CATCH(Exception) {}
results[https://github.com/synthetos/tgFX/blob/c553fac36c7cb2151d27de7e483c9e2984598475/src/tgfx/SerialDriver.java][priorityWrite][1] = -> TRY {  -> serialPort.writeBytes(str.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/ebayopensource/turmeric-runtime/blob/c4483bfcfc641f866b6a638fd8ae3f350f3c1774/integration-tests/SOATests/src/test/java/org/ebayopensource/turmeric/runtime/tests/protocolprocessor/soap/SOAPAutoDetectionTest.java][soap11WithoutHeaderForProtocol][4] = -> TRY {  -> httpPayloadData=body.getBytes()@ -> request.setRawData(httpPayloadData,)@ } CATCH(Exception) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/a4ec42b84e44781582e981291b7c8af02194774b/SpagoBIProject/src/it/eng/spagobi/analiticalmodel/execution/service/SaveDocumentAction.java][getTemplateContent][1] = -> TRY {  -> temp=q.updateWorksheetTemplate(wkDefinition,query,smartFilterValuesString,templCont,)@ -> content=temp.getBytes()@ } CATCH(Exception) {}
results[https://github.com/benetech/martus-android/blob/392f83d9edb80a3eec09982df869b42d598c244a/matrus-android/src/org/martus/common/test/TestPacket.java][testLoadFromInvalidPacket][1] = -> TRY {  -> xmlErrorBytes=xmlError.getBytes()@ -> verifyLoadException(xmlErrorBytes,expected,)@ } CATCH(Exception) {}
results[https://github.com/lzz313/tdc/blob/b253aab99f9754770d1cf0fcea54d254a9fe44a7/src/main/java/com/udpwork/ssdb/SSDB.java][get][1] = -> TRY {  -> return get(key.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/dgarnier/MDSplus/blob/2b4f4981d822f07255ba0d5bbaea4132b53094f9/javadispatcher/jServer.java][writeAnswer][2] = -> TRY { -> answerMsg=answer.getBytes()@ } CATCH(Exception) { -> System.err.println("Error sending answer: "+exc,)@ }
results[https://github.com/pruiz/signserver/blob/db914f1bf5e7f0d5febbac774d328ff673420596/signserver/modules/SignServer-Module-TSA/test/org/signserver/module/tsa/MSAuthCodeTimeStampSignerTest.java][testProcessDataSHA1withRSA][3] = -> TRY {  -> testProcessDataWithAlgo("SHA1withRSA",SHA1_OID,REQUEST_DATA.getBytes(),false,)@ } CATCH(Exception) {}
results[https://github.com/gf-metro/jaxws/blob/8518453ade6a1948a495a54141c2e32c8efb641d/jaxws-ri/tests/unit-rearch/src/client/dispatch/null_jaxb/client/DispatchHelloClientTest.java][testNOParamSOAPMessage][1] = -> TRY {  -> bytes=helloSM.getBytes()@ -> source=makeStreamSource(helloSM,)@ } CATCH(Exception) {}
results[https://github.com/jrecursive/mecha/blob/a68398e165c672aa50086571a7ed1b0b81c611f8/src/java/mecha/db/MDB.java][getBucket][2] = -> TRY {  -> return getBucket(partition,bucket.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/ulewo/mycode/blob/526aa803287b5c4e258408d474c5a19bace88dc9/netty/src/com/netty/MessageEncoder.java][encode][2] = -> TRY {  -> res=(String) msg@!(!(msg instanceof String)) -> data=res.getBytes()@!(!(msg instanceof String)) -> buf.writeBytes(data,)@!(!(msg instanceof String)) } CATCH(Exception) {}
results[https://github.com/ios-driver/ios-driver/blob/2e9c40cb4554951d0d598d91459d88e719653b9e/server/src/main/java/org/uiautomation/ios/wkrdp/message/BaseIOSWebKitMessage.java][<init>][1] = -> TRY {  -> bytes=rawMessage.getBytes()@ -> rootDict=(NSDictionary) XMLPropertyListParser.parse(bytes,)@ } CATCH(Exception) {}
results[https://github.com/datacite/mds/blob/49ad00647be44b1b5c4770e967f8614bd73d67d6/src/test/java/org/datacite/mds/util/UtilsTest.java][formatXML][1] = -> TRY {  -> bytes=xml.getBytes()@ -> return Utils.formatXML(bytes,)@ } CATCH(Exception) {}
results[https://github.com/apache/oodt/blob/8e9ba08f33f3ad9dccb53ee00a4d7d5292712a51/commons/src/test/org/apache/oodt/commons/ConfigurationTest.java][setUp][1] = -> TRY {  -> doc=TEST_DOC.getBytes()@ -> out.write(doc,0,doc.length,)@ } CATCH(Exception) {}
results[https://github.com/htien/mantech/blob/57e301ed473b5c2e2e0598adba45bb91e900f54b/springnet-git/src/main/java/net/lilylnx/springnet/util/crypto/HashCryptor.java][verify][2] = -> TRY {  -> plainTextInBytes=plainText.getBytes()@ -> return HashUtilsV1.verifyhash(plainTextInBytes,hashedTextInBytes,algor,)@ } CATCH(Exception) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIJasperReportEngine/JavaSource/it/eng/spagobi/engines/jasperreport/JasperReportRunner.java][getImagesBase64Bytes][1] = -> TRY { -> bytes=message.getBytes()@ } CATCH(Exception) { -> logger.error("Error while producing byte64 encoding of the report images",e,)@ }
results[https://github.com/os890/wink_patches/blob/46e2b1640c2bd450bcb19c76c51cb878de1d03f9/wink-server/src/test/java/org/apache/wink/server/internal/providers/entity/SourceProviderTest.java][testDomWithDTDEntityExpansionAttack2][1] = -> TRY {  -> SOURCE_BYTES=SOURCE.getBytes()@ -> request=MockRequestConstructor.constructMockRequest("POST","/source/domwithdtd","application/xml","application/xml",SOURCE_BYTES,)@ } CATCH(Exception) {}
results[https://github.com/workhabitinc/dandy/blob/83ac7c534f57b43a3bcc35b4b3507207651b15d5/dandy-api/src/test/java/org/workhabit/drupal/api/site/impl/DrupalSiteContextImplTest.java][testSaveFile][1] = -> TRY {  -> drupalSiteContext.saveFile(filedata.getBytes(),filename,)@ } CATCH(Exception) {}
results[https://github.com/jgurtowski/jnomics-manager/blob/4b0b25d4a8d0aa7e6dd96782ceb287d0e8e63cee/core/src/main/java/edu/cshl/schatz/jnomics/ob/FixedKmerWritable.java][set][1] = -> TRY {  -> set(a.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/bladesilent/Harmony/blob/73c10023ad7f61382f0ace1a2f98d0874fd3fdf9/classlib/modules/jndi/src/test/java/org/apache/harmony/jndi/tests/javax/naming/ldap/StartTlsRequestTest.java][testCreateExtendedResponse004][1] = -> TRY {  -> t0=ID.getBytes()@ -> x=(StartTlsResponse) str.createExtendedResponse(ID,t0,t1,t2,)@ } CATCH(Exception) {}
results[https://github.com/marklogic/recordloader/blob/bdf1333271c85b68b48b74c44d54e874250fef61/src/java/com/marklogic/ps/TestCipher.java][main][1] = -> TRY {  -> key=password.getBytes()@ -> desKeySpec=new DESKeySpec(key,)@ } CATCH(Exception) {}
results[https://github.com/lzz313/tdc/blob/b253aab99f9754770d1cf0fcea54d254a9fe44a7/src/main/java/com/udpwork/ssdb/SSDB.java][del][1] = -> TRY {  -> del(key.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/liucong/jms4cxf2/blob/d56cb4fb7e9ae649d1f9b79c3d0d96a2b123f52f/rt/frontend/jaxrs/src/test/java/org/apache/cxf/jaxrs/provider/JSONProviderTest.java][testReadListOfDerivedTypes][1] = -> TRY {  -> bytes=data.getBytes()@ -> books2Object=p.readFrom((Class) Books2.class,null,null,null,null,new ByteArrayInputStream(bytes,),)@ } CATCH(Exception) {}
results[https://github.com/aaronpoweruser/android_libcore/blob/0b26c7b2263a591b135e230231a331e3c0f123b8/support/src/test/java/tests/support/Support_Xml.java][domOf][4] = -> TRY {  -> stream=new ByteArrayInputStream(xml.getBytes(),)@ -> return builder.parse(stream,)@ } CATCH(Exception) {}
results[https://github.com/bitrepository/reference/blob/49e87a4e285e26274ac381ccabb912a342aa18e7/bitrepository-integration/src/main/java/dk/bitmagasin/common/MockupXmlDocument.java][retrieveValidatedDocument][1] = -> TRY {  -> is=new ByteArrayInputStream(content.getBytes(),)@ -> return reader.read(is,)@ } CATCH(Exception) {}
results[https://github.com/ebayopensource/turmeric-runtime/blob/9754b87a62e4f621455d41cc0696cbfde515b99b/integration-tests/SOATests/src/test/java/org/ebayopensource/turmeric/runtime/tests/common/cachepolicy/CachePolicyTest.java][testCachePlcyHolder_1op_success][1] = -> TRY {  -> stream=new ByteArrayInputStream(xmlbuf.getBytes(),)@ -> holder=CachePolicyHolder.loadCachePolicy(stream,"blha",SOAConstants.CACHE_POLICY_SCHEMA,)@ } CATCH(Exception) {}
results[https://github.com/InsomniaAOSP/platform_libcore/blob/4d9d276d01aee9255fec5eaae93827d3af306d34/luni/src/test/java/tests/api/javax/net/ssl/SSLServerSocketTest.java][getKeyManagers][5] = -> TRY {  -> keys=(useBKS)?SERVER_KEYS_BKS:SERVER_KEYS_JKS@ -> bytes=Base64.decode(keys.getBytes(),)@ -> inputStream=new ByteArrayInputStream(bytes,)@ } CATCH(Exception) {}
results[https://github.com/SomethingExplosive/android_libcore/blob/adf25974a44503066df61cc0be515395fd7253b6/luni/src/test/java/tests/api/javax/net/ssl/HandshakeCompletedEventTest.java][test_getPeerCertificateChain][2] = -> TRY {  -> bis=new ByteArrayInputStream(certificate.getBytes(),)@ -> xc=X509Certificate.getInstance(bis,)@ } CATCH(Exception) {}
results[https://github.com/eclipse/linuxtools/blob/99cfe57c1eb03e84062b1b15c8606f4425c7f9df/changelog/org.eclipse.linuxtools.changelog.tests/src/org/eclipse/linuxtools/changelog/core/formatters/tests/GNUFormatTest.java][newChangeLogEntryForNewAuthorOnSameDay][1] = -> TRY {  -> newFileInputStream=new ByteArrayInputStream(content.getBytes(),)@ -> changelogFile=project.addFileToProject(changelogPath,"ChangeLog",newFileInputStream,)@ } CATCH(Exception) {}
results[https://github.com/kitkatandroid/JLS36G_base/blob/d9793ebbef58d0e842c8222c1067928d778f22f1/services/tests/servicestests/src/com/android/server/updates/CertPinInstallReceiverTest.java][createKey][1] = -> TRY {  -> derKey=Base64.decode(TEST_KEY.getBytes(),Base64.DEFAULT,)@ -> keySpec=new PKCS8EncodedKeySpec(derKey,)@ } CATCH(Exception) {}
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/libcore/luni/src/test/java/tests/security/cert/X509Certificate2Test.java][setUp][8] = -> TRY {  -> bais=new ByteArrayInputStream(base64certCorrect.getBytes(),)@ -> cert=(X509Certificate) cf.generateCertificate(bais,)@ } CATCH(Exception) {}
results[https://github.com/seasarorg/s2robot/blob/1761042b2aefa3536eac15cd4b2dead53439246b/s2robot/src/test/java/org/seasar/robot/transformer/impl/TextTransformerTest.java][test_transform_html][3] = -> TRY {  -> data=new String("<html><body>xyz</body></html>",).getBytes()@ -> bais=new ByteArrayInputStream(data,)@ } CATCH(Exception) {}
results[https://github.com/willuhn/jameica/blob/f04cd6790ee477d949633e178e6f8dcd9530efbf/src/de/willuhn/jameica/gui/parts/TablePart.java][getID][1] = -> TRY {  -> s=sb.toString()@!(this.id!=null) -> this.id=Checksum.md5(s.getBytes(),)@!(this.id!=null) } CATCH(Exception) {}
results[https://github.com/WindowsAzure/azure-sdk-for-java/blob/940a8b699907f613d6ffae61e623fe98a328f293/microsoft-azure-api/src/test/java/com/microsoft/windowsazure/services/media/implementation/StatusLineTest.java][testCanCreateStatus][1] = -> TRY {  -> byteArrayInputStream=new ByteArrayInputStream(httpResponse.getBytes(),)@ -> dataSource=new InputStreamDataSource(byteArrayInputStream,"defaultContentType",)@ } CATCH(Exception) {}
results[https://github.com/dongpd/ecms/blob/0033e77194ac4c35d17a03c707d476ce82cfd54b/exo-ecms-core-services/src/main/java/org/exoplatform/services/cms/impl/BaseResourceLoaderService.java][addResource][1] = -> TRY {  -> in=new ByteArrayInputStream(text.getBytes(),)@ -> addResource(resourcesHome,name,in,)@ } CATCH(Exception) {}
results[https://github.com/enachb/mesos/blob/9e4b96d1e52898adc0fcdd3313909b7883d3ab68/src/third_party/zookeeper-3.3.1/src/java/test/org/apache/zookeeper/test/FLEZeroWeightTest.java][setUp][3] = -> TRY {  -> is=new ByteArrayInputStream(config.getBytes(),)@ -> qp.load(is,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/nci-report-writer/blob/3903e0942ed1856721cba1288b80f2a49f7a961c/software/ncireportwriter/src/java/gov/nih/nci/evs/reportwriter/formatter/TabFormatterFileOutputStream.java][write][1] = -> TRY {  -> text=super.write(text,)@ -> _out.write(text.getBytes(),)@ } CATCH(Exception) {}
results[https://github.com/OWASP/OWASP-Proxy/blob/ac49d3413d1548e3b5164c16f1502dbd74e14e31/test/org/owasp/webscarab/io/ChunkedInputStreamTest.java][testRead][1] = -> TRY {  -> is=new ChunkedInputStream(new ByteArrayInputStream(sample.getBytes(),),)@ } CATCH(Exception) {}
results[https://github.com/mrgatesjunior/platform_libcore/blob/8f7341440cf447efc91739bdc4ad24ce4957e83b/luni/src/test/java/libcore/java/security/cert/CertificateFactoryTest.java][test_generateCertificate_InputStream_Offset_Correct][2] = -> TRY {  -> valid=VALID_CERTIFICATE_PEM.getBytes()@ -> System.arraycopy(valid,0,doubleCertificateData,0,valid.length,)@ -> System.arraycopy(valid,0,doubleCertificateData,valid.length,valid.length,)@ } CATCH(Exception) {}
results[https://github.com/CleverCloud/Quercus/blob/711081620746ae850298806d6be7b844d0e5e6da/modules/quercus/src/com/caucho/quercus/lib/db/PostgresModule.java][pg_put_line][1] = -> TRY { -> dataArray=data.getBytes()@ } CATCH(Exception) { -> log.log(Level.FINE,ex.toString(),ex,)@ }
results[https://github.com/picketlink2/federation/blob/9dc2a8bcb713e6e4e9c4377607be96c2d274492d/picketlink-core/src/test/java/org/picketlink/test/identity/federation/web/saml/handlers/SAML2InResponseToVerificationHandlerUnitTestCase.java][getResponseTypeFromString][1] = -> TRY {  -> is=new ByteArrayInputStream(responseString.getBytes(),)@ -> return saml2Response.getResponseType(is,)@ } CATCH(Exception) {}
results[https://github.com/mlundblad/bc-java/blob/158b54fbacb8926df0e74086e95900924c862b6e/src/test/java/org/bouncycastle/cms/test/SunProviderTest.java][testSHA1WithRSAEncapsulated][1] = -> TRY {  -> msg=new CMSProcessableByteArray(TEST_MESSAGE.getBytes(),)@ -> s=gen.generate(msg,true,"SunRsaSign",)@ } CATCH(Exception) {}
results[https://github.com/NCIP/cagrid2/blob/54508f1794ec4509a1e50c4676de292110a4bded/cagrid-gaards/cagrid-gaards-api/src/main/java/org/cagrid/gaards/saml/encoding/SAMLUtils.java][stringToSAMLAssertion][1] = -> TRY {  -> saml=new SAMLAssertion(new ByteArrayInputStream(str.getBytes(),),)@ } CATCH(Exception) {}
results[https://github.com/Rudin-Informatik/ch.ri.DynamicServlet/blob/2a73eed390687e1b9dd4d54c95969c8afba92f77/src/test/java/ch/ri/dynamicservlet/test/RestSubjectTest.java][onPut][1] = -> TRY {  -> context.setContent(subject.getBytes(),)@ -> context.setContentType("text/html",)@ } CATCH(Exception) {}
results[https://github.com/i2p/i2p.i2p-bote/blob/9989940693dfad1276abc3970fc6f705070d25ea/test/i2p/bote/packet/EncryptedEmailPacketTest.java][setUp][1] = -> TRY {  -> content=message.getBytes()@ -> plaintextPacket=new UnencryptedEmailPacket(new ByteArrayInputStream(content,),messageId,fragmentIndex,I2PBotePacket.MAX_DATAGRAM_SIZE,)@ } CATCH(Exception) {}
results[https://github.com/mlundblad/bc-java/blob/158b54fbacb8926df0e74086e95900924c862b6e/src/test/java/org/bouncycastle/jce/provider/test/CipherStreamTest.java][runTest][2] = -> TRY {  -> bIn=new ByteArrayInputStream(lCode.getBytes(),)@ -> cIn=new CipherInputStream(bIn,in,)@ } CATCH(Exception) {}
results[https://github.com/uq-eresearch/lorestore/blob/41d0bada0f2a652f7dcb0ef2754ea0dad65f6de4/src/test/java/net/metadata/auselit/lorestore/servlet/OACControllerTest.java][saveRecordToStore][1] = -> TRY {  -> in=new ByteArrayInputStream(recordXML.getBytes(),)@ -> response=(OREResponse) controller.post(in,)@ } CATCH(Exception) {}
results[https://github.com/jdeolive/geotools-old/blob/97b14eb255fde485167564918296606c13160b47/modules/library/jdbc/src/test/java/org/geotools/jdbc/JDBCTestSetup.java][run][1] = -> TRY {  -> run(new ByteArrayInputStream(input.getBytes(),),)@ } CATCH(Exception) {}
results[https://github.com/gf-metro/jaxws/blob/3c981bcf41a11f02a49a65d04c59c940f9a68e56/jaxws-ri/tests/unit-rearch/src/whitebox/message/saaj/client/SAAJMessageTester.java][writeMessage][1] = -> TRY {  -> writeMessage(new ByteArrayInputStream(infoset.getBytes(),),)@ } CATCH(Exception) {}
results[https://github.com/congnt/exogtn/blob/d6e86c80e5944b604cb68f1305e4ec8227a8730c/webui/portal/src/main/java/org/exoplatform/portal/webui/portal/UIContainerList.java][toContainer][1] = -> TRY {  -> is=new ByteArrayInputStream(xml.getBytes(),)@ -> return (Container) uctx.unmarshalDocument(is,null,)@ } CATCH(Exception) {}
results[https://github.com/ikeji/openjdk7-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/java/security/cert/CertPathValidator/OCSP/FailoverToCRL.java][generateCertificateStore][1] = -> TRY {  -> is=new ByteArrayInputStream(crlStr.getBytes(),)@ -> crls=cf.generateCRLs(is,)@ } CATCH(Exception) {}
results[https://github.com/fprates/iocaste/blob/e1fecf4772560b5038e18492393609c197726441/src/core/classes/org/iocaste/core/Convesion.java][execute][1] = -> TRY {  -> is=new ByteArrayInputStream(xml.getBytes(),)@ -> document=builder.parse(is,)@ } CATCH(Exception) {}
results[https://github.com/Trecena/trecena-core/blob/7778be4bb391f083a19c30e2b88f988ed1a5a262/tests/src/org/trecena/controller/api/ActivityXmlHTTPTest.java][testDeleteActivity][1] = -> TRY {  -> source=new ByteArrayInputStream(activity.getBytes(),)@ -> request=new PutMethodWebRequest(apiUrl+"/activities",source,"application/xml",)@ } CATCH(Exception) {}
results[https://github.com/kkopacz/org.agiso.tempel/blob/48e4541340efeabf994bfafd160278dea09cf131/org.agiso.tempel/org.agiso.tempel.core/src/main/java/org/agiso/tempel/core/XStreamTempelFileProcessor.java][process][1] = -> TRY {  -> process(new ByteArrayInputStream(xmlString.getBytes(),),entryProcessor,)@ } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-boot/blob/2c05e9f1500377becc4f71698a3d8da38851382f/spring-zero-core/src/test/java/org/springframework/zero/context/test/EnableConfigurationPropertiesTests.java][getProperties][1] = -> TRY {  -> return PropertiesLoaderUtils.loadProperties(new ByteArrayResource(values.getBytes(),),)@ } CATCH(Exception) {}
results[https://github.com/apache/directory-server/blob/ee9d2dead5c9e4d9e8b3595c8eef97c7b0a23121/backend/tools/src/test/org/apache/eve/tools/schema/AttributeTypeParserTest.java][testParser][1] = -> TRY {  -> attributeTypeData="# adding a comment  \n"+"attributetype ( 2.5.4.2 NAME 'knowledgeInformation'\n"+"        DESC 'RFC2256: knowledge information'\n"+"        EQUALITY caseIgnoreMatch\n"+"        SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{32768} )"@ -> in=new ByteArrayInputStream(attributeTypeData.getBytes(),)@ -> lexer=new antlrOpenLdapSchemaLexer(in,)@ } CATCH(Exception) {}
results[https://github.com/mrgatesjunior/platform_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/io/OldAndroidInputStreamReaderTest.java][testUtf8][1] = -> TRY {  -> aa=new ByteArrayInputStream(str.getBytes(),)@ -> a=new InputStreamReader(aa,)@ } CATCH(Exception) {}
results[https://github.com/europeana/Europeana-Cloud/blob/b15e28712ef0c43dc65735dc3983ee92b86fafe6/services/mcs/mcs-persistent-impl/src/test/java/eu/europeana/cloud/service/mcs/persistent/swift/SwiftContentDAOTest.java][testDeleteContent][1] = -> TRY {  -> is=new ByteArrayInputStream(content.getBytes(),)@ -> result=instance.putContent(objectId,is,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/cagrid-core/blob/de7678f6d3bbb5a95f6b5cfd21aea2f2dc617f36/caGrid/projects/dorian/src/org/cagrid/gaards/dorian/policy/PolicyUtils.java][stringToHostAgreement][1] = -> TRY {  -> ha=new HostAgreement(new ByteArrayInputStream(str.getBytes(),),)@ } CATCH(Exception) {}
