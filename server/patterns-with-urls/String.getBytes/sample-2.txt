results[https://github.com/jgsavola/tiraht/blob/8521d6a3c94d7a15b42cd354d78419eaff827150/test/tiraht/lz78/LZ78ByteTrieCompressorTest.java][testDictFillUpResetIllegalSize][45] = -> TRY {  -> sourceBytes=sourceStr.getBytes("US-ASCII",)@ } CATCH(Exception) {}
results[https://github.com/apache/derby/blob/28dc366eb6cb39ddb58e4837215686aaa80b18eb/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java][init][1] = -> TRY {  -> att_srvrlslv=prdId+"/"+myPVH.getVersionBuildString(true,)@ -> prdIdBytes_=prdId.getBytes(DEFAULT_ENCODING,)@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/acbdb0ade569a980d025ec2b09f528c0bc1a29cd/test/sun/security/pkcs11/MessageDigest/DigestKAT.java][s][35] = -> TRY { -> return s.getBytes("UTF8",)@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/thomasbecker/jetty-spdy/blob/a70bbc004ddcf5c1229d38522b527290251a9d4b/jetty-websocket/src/test/java/org/eclipse/jetty/websocket/WebSocketGeneratorD07Test.java][testOneBufferMasked][56] = -> TRY {  -> bytes=string.getBytes(StringUtil.__UTF8,)@ -> _generator.addFrame((byte) 0x8,(byte) 0x04,bytes,0,bytes.length,)@ } CATCH(Exception) {}
results[https://github.com/sdugit/dalvik_7025/blob/38da5f685e572c154e5b0ed73a5ae56b96d4a320/libcore/archive/src/test/java/org/apache/harmony/archive/tests/java/util/zip/DeflaterInputStreamTest.java][setUp][110] = -> TRY {  -> is=new ByteArrayInputStream(testStr.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/apache/derby/blob/ffac5c3de398cb6f0b407abd378675b6d7e39344/java/testing/org/apache/derbyTesting/functionTests/tests/lang/AnsiSignatures.java][blob_Blob_String][1] = -> TRY {  -> return new StringColumnVTI.SimpleBlob(a.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/AbinashBishoyi/FreeRapid-Plugins/blob/56887d443e6a00f4b36f645f3390c1db9499938b/src/channel5/cz/vity/freerapid/plugins/services/channel5/Channel5FileRunner.java][putAmf3String][11] = -> TRY {  -> b=s.getBytes("UTF-8",)@ -> buf.put(b,)@ } CATCH(Exception) {}
results[https://github.com/tap-git/tap/blob/6537585a4bafa5c80352fce92866435744addd01/src/test/java/tap/formats/tapproto/TapfileTests.java][writeRawBytes][1] = -> TRY {  -> stream.writeRawBytes(data.getBytes(ASCII,),)@ } CATCH(Exception) {}
results[https://github.com/jpcaruana/jsynthlib/blob/661d8508edd061969ac151616b6165faf0a34bb0/JSynthLib/synthdrivers/OberheimMatrix/OberheimMatrixBankDriver.java][setPatchName][4] = -> TRY { -> namebytes=name.getBytes("US-ASCII",)@ -> (Patch) p.sysex[start+5]=(byte) namebytes[0]%16@ -> (Patch) p.sysex[start+6]=(byte) namebytes[0]/16@ -> (Patch) p.sysex[start+7]=(byte) namebytes[1]%16@ -> (Patch) p.sysex[start+8]=(byte) namebytes[1]/16@ -> (Patch) p.sysex[start+9]=(byte) namebytes[2]%16@ -> (Patch) p.sysex[start+10]=(byte) namebytes[2]/16@ -> (Patch) p.sysex[start+11]=(byte) namebytes[3]%16@ -> (Patch) p.sysex[start+12]=(byte) namebytes[3]/16@ -> (Patch) p.sysex[start+13]=(byte) namebytes[4]%16@ -> (Patch) p.sysex[start+14]=(byte) namebytes[4]/16@ -> (Patch) p.sysex[start+15]=(byte) namebytes[5]%16@ -> (Patch) p.sysex[start+16]=(byte) namebytes[5]/16@ -> (Patch) p.sysex[start+17]=(byte) namebytes[6]%16@ -> (Patch) p.sysex[start+18]=(byte) namebytes[6]/16@ -> (Patch) p.sysex[start+19]=(byte) namebytes[7]%16@ -> (Patch) p.sysex[start+20]=(byte) namebytes[7]/16@ } CATCH(Exception) { -> ErrorMsg.reportError("Error","Error in Matrix1000 Bank Driver",e,)@ }
results[https://github.com/beppec56/MediaInfoLib-git_svn/blob/fb086d89237300e370f0dccf0e9c19cb4f91ca1b/Source/MediaInfoDLL/MediaInfoDLL.JNative.java][createPointer][6] = -> TRY {  -> array=value.getBytes("UTF-8",)@ -> valuePointer.setMemory(array,)@ } CATCH(Exception) {}
results[https://github.com/HongKing/xukea/blob/1a4652a3b7f7b24a3e895af8ce41c52d797a7429/xukea.common/src/com/xukea/common/util/crypto/Base64.java][encode][7] = -> TRY {  -> msgby=source.getBytes("UTF-8",)@ -> enchr=Base64.encode(msgby,)@ } CATCH(Exception) {}
results[https://github.com/vyloy/lnvc/blob/38625c0c7f2c0e5c562bcd3cea11043a281b6a54/lcm/src/com/lorent/util/StringUtil.java][isoStrToGBK][18] = -> TRY {  -> return new String(str.getBytes("ISO-8859-1",),"GBK",)@ } CATCH(Exception) {}
results[https://github.com/Kaain/PaperFly/blob/e3840f28aa8c8aa08f2220e14a22a5c582b085b5/PaperFly/src/main/java/de/fhb/mi/paperfly/auth/DESEncryption.java][<init>][13] = -> TRY {  -> keyAsBytes=myEncryptionKey.getBytes(UNICODE_FORMAT,)@ -> myKeySpec=new DESKeySpec(keyAsBytes,)@ } CATCH(Exception) {}
results[https://github.com/epronk/fitnesse/blob/e27c17eef220e6bba556cc2b63d62d018ad36831/src/fit/FitServer.java][establishConnection][19] = -> TRY {  -> bytes=httpRequest.getBytes("UTF-8",)@ -> socketOutput.write(bytes,)@ } CATCH(Exception) {}
results[https://github.com/abdulazeezsk/netvogue/blob/173084126b6abafa7686bf04e9cd93d5eebe7e2b/Server/netvogue-image-persistence/src/main/java/org/netvogue/server/aws/core/FileManager.java][setKey][5] = -> TRY {  -> keyBytes=AWSSecretKey.getBytes("UTF8",)@ -> signingKey=new SecretKeySpec(keyBytes,"HmacSHA1",)@ } CATCH(Exception) {}
results[https://github.com/patrickhartling/protobuf/blob/aedacaf88c7405dacdddaeff8bd8c16995b35207/java/src/test/java/com/google/protobuf/TextFormatTest.java][bytes][67] = -> TRY {  -> return ByteString.copyFrom(str.getBytes("ISO-8859-1",),)@ } CATCH(Exception) {}
results[https://github.com/thkoch2001/jamwiki/blob/5ed327de3cd9a8390060806d49150562bd6a30ac/src/java/org/jamwiki/utils/Encryption.java][encrypt64][6] = -> TRY {  -> unencryptedBytes=unencryptedString.getBytes("UTF8",)@!(!(StringUtils.hasText(unencryptedString,))) -> return encrypt64(unencryptedBytes,)@!(!(StringUtils.hasText(unencryptedString,))) } CATCH(Exception) {}
results[https://github.com/picketlink/picketlink-idm/blob/f988e6e0d67979a0b659673b555120b91eff5d6b/picketlink-idm-ldap/src/main/java/org/picketlink/idm/impl/store/ldap/PBEEncoder.java][encode64][11] = -> TRY {  -> secretBytes=secret.getBytes("UTF-8",)@ -> encoding=cipher.doFinal(secretBytes,)@ } CATCH(Exception) {}
results[https://github.com/srnsw/xena/blob/8e19788ceb5f18d32d53017a5fc60bc2b3024de9/xena/ext/src/javahelp/jhMaster/JSearch/client/com/sun/java/help/search/BtreeDict.java][fetch][5] = -> TRY {  -> bytes=key.getBytes("UTF8",)@ -> System.arraycopy(bytes,0,Key,0,bytes.length,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/caarray-docs/blob/839840227655aba2fd4703dabd74cd8ab5962f28/analysis_and_design/prototypes/caupload/applet/src/test/java/wjhk/jupload2/upload/helper/ByteArrayEncoderHTTPTest.java][setUp][4] = -> TRY {  -> this.encoding=this.byteArrayEncoderHTTP.getEncoding()@ -> this.target=testCase.getBytes(this.encoding,)@ } CATCH(Exception) {}
results[https://github.com/ttron/lab/blob/8e5b87a6d50b46fe212da99a143fd44cdf38e528/MINA-2/src/core/org/apache/mina/proxy/handlers/http/ntlm/NTLMResponses.java][ntlmHash][3] = -> TRY {  -> unicodePassword=password.getBytes("UnicodeLittleUnmarked",)@ -> return md4.digest(unicodePassword,)@ } CATCH(Exception) {}
results[https://github.com/spullara/oauth/blob/6e41b1f5f6ba14b3f4f4849e82b34032d57b500f/src/test/java/net/oauth/OAuthClientTest.java][testInvokeMessage][15] = -> TRY {  -> data=new String( new char[],)@ -> utf8=data.getBytes("UTF-8",)@ } CATCH(Exception) {}
results[https://github.com/chalstrick/jgit/blob/86759c23c2fa0c5cbbc82d224e72a7742423c8fb/org.eclipse.jgit.junit/src/org/eclipse/jgit/junit/TestRepository.java][blob][8] = -> TRY {  -> return blob(content.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/axDev-JDK/jdk/blob/27804e25becca83ba5bf4ae3f89cb27c1cd45d61/src/share/classes/sun/net/ftp/impl/FtpClient.java][isASCIISuperset][7] = -> TRY {  -> chkS="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"+"abcdefghijklmnopqrstuvwxyz-_.!~*'();/?:@&=+$,"@ -> b=chkS.getBytes(encoding,)@ -> return java.util.Arrays.equals(b,chkB,)@ } CATCH(Exception) {}
results[https://github.com/LSTS/neptus/blob/4d58343c2f0b754328d5bc72f465001d443238c5/src/pt/lsts/neptus/comm/iridium/IridiumCommand.java][serializeFields][1] = -> TRY {  -> out.writePlaintext(command,)@ -> return command.getBytes("ISO-8859-1",).length+2@ } CATCH(Exception) {}
results[https://github.com/apache/httpcore/blob/d58e876a5b88fff272a5284c2fc1f2506f53079a/core/src/test/java/org/apache/http/entity/TestStringEntity.java][testBasics][7] = -> TRY {  -> httpentity=new StringEntity(s,HTTP.ISO_8859_1,)@ -> bytes=s.getBytes(HTTP.ISO_8859_1,)@ } CATCH(Exception) {}
results[https://github.com/rhusar/HornetQ-oldmigration/blob/d8da6170e4d71449e91ae887b4bbb8afc17d35d3/tests/src/org/jboss/messaging/core/journal/impl/test/unit/SequentialFileFactoryTestBase.java][testOpenClose][5] = -> TRY {  -> bytes1=s1.getBytes("UTF-8",)@ -> bb1=ByteBuffer.wrap(bytes1,)@ } CATCH(Exception) {}
results[https://github.com/jmcc0nn3ll/jetty-project/blob/c0a1227af328c53b5e48d659d0e811283f62350e/modules/server/jetty-server/src/main/java/org/mortbay/io/Portable.java][getBytes][19] = -> TRY { -> return s.getBytes(StringUtil.__ISO_8859_1,)@ } CATCH(Exception) { -> return s.getBytes()@ }
results[https://github.com/panbasten/BA/blob/79bfeb4e4a713119961a9db63c30b0e66897e6db/kettle/kettle-base/src/main/java/org/pentaho/di/cluster/SlaveServer.java][sendXML][1] = -> TRY {  -> content=xml.getBytes(Const.XML_ENCODING,)@ -> post=getSendByteArrayMethod(content,service,)@ } CATCH(Exception) {}
results[https://github.com/coderplay/h2-bitmap/blob/2a36176b594aa57cb2f8f7290df4b647ec39b431/h2/src/main/org/h2/util/StringUtils.java][utf8Encode][6] = -> TRY { -> return s.getBytes(Constants.UTF8,)@ } CATCH(Exception) { -> throw DbException.convert(e,)@ }
results[https://github.com/Jasig/java-cas-client/blob/0d83afcc979b0b072850d34135c346c436ae7a99/cas-client-core/src/test/java/org/jasig/cas/client/util/CommonUtilsTests.java][testGetResponseFromServer][1] = -> TRY {  -> server.content=RESPONSE.getBytes(server.encoding,)@ -> assertEquals(RESPONSE,responsedContent,)@ } CATCH(Exception) {}
results[https://github.com/jintrone/TurkSnet/blob/e6bcc83a2a3ed454e2290e633e6f4a862d71670c/src/main/java/edu/mit/cci/turkit/util/U.java][md5][1] = -> TRY {  -> return md5(s.getBytes("UTF8",),)@ } CATCH(Exception) {}
results[https://github.com/apache/incubator-ambari/blob/5e79481e9d7e55aa523f9850453931ffb44f681b/ambari-server/src/main/java/org/apache/ambari/server/security/encryption/AESEncryptor.java][encrypt][6] = -> TRY {  -> bytes=encrypt.getBytes("UTF8",)@ -> atom=encrypt(bytes,)@ } CATCH(Exception) {}
results[https://github.com/ThatGuyOverTher/Frost/blob/a57d8d5f4f84f39c0254bda1c226034120d3e6a5/frost-wot/source/frost/fcp/fcp07/freetalk/FcpFreetalkConnection.java][sendCommandPutMessage][1] = -> TRY {  -> contentBytes=content.getBytes("UTF-8",)@ -> sendMessageAndData(msg,contentBytes,)@ } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-integration/blob/44ddbb8f929c9f9f15da66cf87458783259cfce5/org.springframework.integration.http/src/test/java/org/springframework/integration/http/DefaultInboundRequestMapperTests.java][testProcessMessageWithDollar][3] = -> TRY {  -> bytes=SIMPLE_STRING.getBytes("utf-8",)@ -> request.setContent(bytes,)@ } CATCH(Exception) {}
results[https://github.com/codefollower/Lealone/blob/10b550d2a36bf049cc4559b1a32c8f4729355fb0/yourbase-common/src/main/java/com/codefollower/yourbase/util/DataUtils.java][utf8Encode][2] = -> TRY { -> return s.getBytes(Constants.UTF8,)@ } CATCH(Exception) { -> throw newIllegalArgumentException("UTF-8 not supported",e,)@ }
results[https://github.com/apache/tomcat70/blob/80bb56e009c080ba196226faf54f2e6daa1ec61a/test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java][doTestBasic][2] = -> TRY {  -> base64auth=Base64.encodeBase64String(credentials.getBytes(B2CConverter.ISO_8859_1,),)@ } CATCH(Exception) {}
results[https://github.com/ontometrics/ontokettle/blob/c63bb742737a1d552dcae91e7246b20f9d2ce248/src/be/ibridge/kettle/cluster/SlaveServer.java][sendXML][1] = -> TRY {  -> content=xml.getBytes(Const.XML_ENCODING,)@ -> entity=new ByteArrayRequestEntity(content,)@ } CATCH(Exception) {}
results[https://github.com/spring-projects/spring-integration/blob/3d27d780849f87ea9f57b1fa14276a744b1e961e/org.springframework.integration.xml/src/test/java/org/springframework/integration/xml/transformer/XsltPayloadTransformerTest.java][getXslResource][9] = -> TRY {  -> return new ByteArrayResource(xsl.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/Metaswitch/jsip/blob/eb529c5249ffe7b1e758531daabd31376251ce76/src/test/unit/gov/nist/javax/sip/multipartmime/MultipartMimeParserTest.java][testMultiPartMimeMarshallingAndUnMarshallingWithExtraHeaders][2] = -> TRY {  -> content=contentString2.getBytes("UTF-8",)@ -> request.setContent(content,contentType,)@ } CATCH(Exception) {}
results[https://github.com/trendrr/java-oss-lib/blob/ae6e9fdea313e4afa70191a216cd474ba4a839cc/src/com/trendrr/oss/FileHelper.java][saveString][2] = -> TRY {  -> saveBytes(filename,text.getBytes("utf-8",),)@ } CATCH(Exception) {}
results[https://github.com/ewcmsfree/ewcms/blob/5287cf02a84be9cbfae8eb4337e85a8472c6174a/src/main/java/com/ewcms/content/particular/model/ParticularContent.java][setDetail][7] = -> TRY { -> detailByte=detail.getBytes("UTF-8",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/apache/derby/blob/28dc366eb6cb39ddb58e4837215686aaa80b18eb/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java][writeString][1] = -> TRY {  -> msgBytes=msg.getBytes(DEFAULT_ENCODING,)@ -> commandOs.write(msgBytes,0,msgBytes.length,)@ } CATCH(Exception) {}
results[https://github.com/benetech/martus-android/blob/392f83d9edb80a3eec09982df869b42d598c244a/matrus-android/src/org/martus/common/test/TestFieldDataPacket.java][testLoadFromXmlSimple][5] = -> TRY {  -> bytes=simpleFieldDataPacket.getBytes("UTF-8",)@ -> in=new ByteArrayInputStreamWithSeek(bytes,)@ } CATCH(Exception) {}
results[https://github.com/sirthias/parboiled/blob/4dd8157ccb6fea2c8b13632bc217e0cdcc7e56c6/test/org/parboiled/test/TestUtils.java][computeCRC][7] = -> TRY {  -> buf=text.getBytes("UTF8",)@ -> crc32.update(buf,)@ } CATCH(Exception) {}
results[https://github.com/pierre/serialization/blob/0ab40a5d996ca6af07a82d2f433b2a5d9c3bf342/smile/src/test/java/com/ning/metrics/serialization/event/TestSmileEnvelopeEvent.java][testBytesVsString][1] = -> TRY {  -> fromString=serializedString.getBytes(SmileEnvelopeEvent.CHARSET,)@ -> Assert.assertEquals(fromString,serializedBytes,)@ } CATCH(Exception) {}
results[https://github.com/apache/juddi/blob/0f9a14df34b5b4c8537041af70b4338f75bfc9ba/juddi-examples/uddi-createbulk/src/uddi/createbulk/DES.java][<init>][6] = -> TRY {  -> arrayBytes=myEncryptionKey.getBytes(UNICODE_FORMAT,)@ -> ks=new DESedeKeySpec(arrayBytes,)@ } CATCH(Exception) {}
results[https://github.com/mit-cml/appinventor-sources/blob/ee99c53f86b0f3f3a73727b0a5a97b35ec0a2756/appinventor/appengine/tests/com/google/appinventor/shared/properties/json/JSONUtilTest.java][save][5] = -> TRY {  -> json="{\"Text\":"+JSONUtil.toJson(propertyValue,)+"}"@ -> return json.getBytes(StorageUtil.DEFAULT_CHARSET,)@ } CATCH(Exception) {}
results[https://github.com/richfaces/richfaces/blob/76f9f853ca7d79ca3044d326012c61b23c7e2b28/impl/src/main/java/org/ajax4jsf/util/base64/Codec.java][decode][5] = -> TRY {  -> src=str.getBytes("UTF8",)@ -> utf8=decode(src,)@ } CATCH(Exception) {}
results[https://github.com/robworth/patientview/blob/04a56d4f68bee5edc202759671d11e2bb7d5bb6b/patientview-parent/radar/src/main/java/org/patientview/radar/util/TripleDes.java][decrypt][2] = -> TRY {  -> messageBytes=message.getBytes("UTF-8",)@ -> return decrypt(messageBytes,)@ } CATCH(Exception) {}
results[https://github.com/iipc/openwayback/blob/c9ebafeeef4884c8e5bb21c2f5fa0ddbee8723c5/wayback-core/src/test/java/org/archive/wayback/archivalurl/ArchivalUrlSAXRewriteReplayRendererTest.java][testDoneFlagSetForFrameset][3] = -> TRY {  -> payloadBytes=payload.getBytes("UTF-8",)@ -> payloadResource=createTestHtmlResource(payloadBytes,)@ } CATCH(Exception) {}
results[https://github.com/waarp/WaarpCommon/blob/1bb1c11a7c41d91ebbf41ecf1192bc2fb5480dfb/src/main/java/org/waarp/common/crypto/KeyObject.java][cryptToHex][1] = -> TRY {  -> return cryptToHex(plaintext.getBytes(WaarpStringUtils.UTF8,),)@ } CATCH(Exception) {}
results[https://github.com/jazzlly/Notes/blob/2b412eb8c53e63924cb7f6afe781bed3ffb851e6/computer.science/languages/java/security/java.sec.src/src/org/zlex/chapter05_1/Base64Coder.java][encode][2] = -> TRY {  -> b=data.getBytes(ENCODING,)@ -> return encoder.encodeBuffer(b,)@ } CATCH(Exception) {}
results[https://github.com/DealerDotCom/grinder/blob/6ff7f31c59dfb62efc928c3a14dc77ce2f6139db/grinder-core/src/test/java/net/grinder/plugin/http/tcpproxyfilter/TestConnectionHandlerImplementation.java][testRequestMultipartFormBody][11] = -> TRY {  -> buffer=message.getBytes("UTF-8",)@ -> handler.handleRequest(buffer,buffer.length,)@ } CATCH(Exception) {}
results[https://github.com/apache/httpcore/blob/b36d2e5e9c94f2da365f81957bf9c2e4f23d4ea3/httpcore/src/test/java/org/apache/http/impl/io/TestSessionInOutBuffers.java][testReadLineFringeCase1][1] = -> TRY {  -> tmp=s.getBytes(Consts.ASCII,)@ -> inbuffer1=new SessionInputBufferMock(tmp,128,)@ } CATCH(Exception) {}
results[https://github.com/ravn/jt400/blob/f8a34574bdc5262a8f43a88f702932a4f2a32a0e/cvsroot/src/com/ibm/as400/access/UserQueue.java][enqueue][1] = -> TRY {  -> valueBytes=value.getBytes("IBM-037",)@ -> impl_.enqueue(handle_,null,valueBytes,)@ } CATCH(Exception) {}
results[https://github.com/peacekeeper/personaldatastore/blob/ccb0ce266810ffc10000ea08d710817bc6af95bf/pds.web.tools/src/main/java/pds/web/tools/util/X509CertificateUtils.java][commaSeparatedBytesFromPemData][1] = -> TRY {  -> derData=Base64.decodeBase64(pemData.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/leandrocruz/Xingu/blob/18942162e338d888814ff9e56f3e3b74e2c247e1/node/commons/src/main/java/xingu/node/commons/protocol/PojoEncoder.java][toByteArray][1] = -> TRY {  -> encoded=codec.encode(obj,)@ -> return encoded.getBytes(CharsetUtil.UTF_8,)@ } CATCH(Exception) {}
results[https://github.com/jmorille/android/blob/028659c238ee48ad7583f196c2220db7da618d90/src/eu/ttbox/geoping/core/crypto/RsaEncrypter.java][encrypt][1] = -> TRY {  -> data=str.getBytes("UTF-8",)@ -> cipherData=encrypt(pubKey,data,)@ } CATCH(Exception) {}
results[https://github.com/UweTrottmann/QuickDic-Dictionary/blob/965f40b0d5ff95af3e63c9e138b76830540f7ddf/jars/icu4j-4_8_1_1/main/tests/core/src/com/ibm/icu/dev/test/charsetdet/TestCharsetDetector.java][_testIBM424_he_rtl][3] = -> TRY {  -> bytes=s.getBytes("IBM424",)@ -> det.setText(bytes,)@ } CATCH(Exception) {}
results[https://github.com/trendrr/java-oss-lib/blob/0ad208deda76fe0a0a927210de3daa07b780a7b2/src/main/com/trendrr/oss/strest/models/DefaultStrestRequest.java][setContent][1] = -> TRY {  -> this.setContent(ContentEncoding.STRING,content.getBytes("utf8",),)@ } CATCH(Exception) {}
results[https://github.com/ravn/jt400/blob/f8a34574bdc5262a8f43a88f702932a4f2a32a0e/cvsroot/src/com/ibm/as400/access/UserIndex.java][findEntries][2] = -> TRY {  -> keyBytes=key.getBytes("IBM-037",)@!(entryLengthAttribute_!=FIXED_LENGTH_ENTRIES) -> impl_.findEntries(handle_,outputBuffer,findOptionBytes,keyBytes,)@!(entryLengthAttribute_!=FIXED_LENGTH_ENTRIES) } CATCH(Exception) {}
results[https://github.com/gatein/gatein-portal/blob/ccfbc006380ba0f99fa504d45f92aeffc20366ea/component/portal/src/main/java/org/gatein/portal/encoder/EncoderService.java][encode64][1] = -> TRY {  -> secretBytes=secret.getBytes("UTF-8",)@ -> return PBEUtils.encode64(secretBytes,cipherAlgorithm,cipherKey,cipherSpec,)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-compress/blob/c82fb00b5daf555cf10b95251c4aebacc4a0453b/src/test/java/org/apache/commons/compress/archivers/TarTestCase.java][testTarArchiveLongNameCreation][1] = -> TRY {  -> bytes=name.getBytes(CharsetNames.UTF_8,)@ -> entry=new TarArchiveEntry(name,)@ } CATCH(Exception) {}
results[https://github.com/sourcesense/modeshape-stone/blob/53f8a077db5e0241896d9f1528a32014c7d02fea/modeshape-graph/src/test/java/org/modeshape/graph/property/basic/InMemoryBinaryTest.java][setUp][2] = -> TRY {  -> validByteArrayContent=this.validStringContent.getBytes("UTF-8",)@ -> binary=new InMemoryBinary(validByteArrayContent,)@ } CATCH(Exception) {}
results[https://github.com/fanhongtao/JDK/blob/f271f0571be580c3991242f1c7ea7aface0d96c6/src/com/sun/jmx/snmp/daemon/SnmpInformRequest.java][constructPduPacket][1] = -> TRY { -> reqpdu.community=communityString.getBytes("8859_1",)@ } CATCH(Exception) { -> reason=e.getMessage()@ }
results[https://github.com/ttron/lab/blob/8e5b87a6d50b46fe212da99a143fd44cdf38e528/HttpCore-4.2/httpcore/src/test/java/org/apache/http/impl/io/TestSessionBuffers.java][testReadLineFringeCase1][2] = -> TRY {  -> tmp=s.getBytes("US-ASCII",)@ -> inbuffer1=new SessionInputBufferMock(tmp,128,params,)@ } CATCH(Exception) {}
results[https://github.com/bobmcwhirter/jboss-messaging/blob/1a7527d4d3b297d4cdc3fb5ff1cfcdb2af2e2ee1/tests/src/org/jboss/messaging/tests/unit/core/journal/impl/SequentialFileFactoryTestBase.java][testOpenClose][1] = -> TRY {  -> bytes1=s1.getBytes("UTF-8",)@ -> bb1=factory.wrapBuffer(bytes1,)@ } CATCH(Exception) {}
results[https://github.com/epronk/fitnesse/blob/e27c17eef220e6bba556cc2b63d62d018ad36831/src/fitnesse/components/ContentBuffer.java][append][1] = -> TRY {  -> bytes=value.getBytes("UTF-8",)@ -> return append(bytes,)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-fileupload/blob/32bd8e9d7d03517c0c553eedec2a4bf3ae808c34/src/test/java/org/apache/commons/fileupload/ServletFileUploadTest.java][parseParameterMap][1] = -> TRY {  -> bytes=text.getBytes("US-ASCII",)@ -> request=new MockHttpServletRequest(bytes,CONTENT_TYPE,)@ } CATCH(Exception) {}
results[https://github.com/apache/httpcore/blob/29db891e443d7da783fc5a2162ef8fb707bcad7b/module-nio/src/test/java/org/apache/http/nio/TestNIOHttpTransmitterAndReceiver.java][testInvalidInput][1] = -> TRY {  -> tmp=s.getBytes("US-ASCII",)@ -> receiver1=new NIOHttpDataReceiverMockup(tmp,)@ } CATCH(Exception) {}
results[https://github.com/liangqi/xqwizard/blob/003775bbba5a73355c7078131511464e22acf62e/ELEEYE/codec/Sim2Trad/src/Sim2Trad.java][gb2Big5][2] = -> TRY {  -> return new String(gb.getBytes("BIG5",),)@ } CATCH(Exception) {}
results[https://github.com/rhusar/HornetQ-oldmigration/blob/a8897c8a8d5b12ac29d1c423510841c42e6406cb/tests/integration-tests/src/test/java/org/hornetq/tests/integration/stomp/StompTestBase.java][sendMessage][4] = -> TRY {  -> sendMessage(msg.getBytes("UTF-8",),propertyName,propertyValue,queue,)@ } CATCH(Exception) {}
results[https://github.com/waarp/WaarpCommon/blob/1bb1c11a7c41d91ebbf41ecf1192bc2fb5480dfb/src/main/java/org/waarp/common/crypto/KeyObject.java][crypt][1] = -> TRY {  -> return crypt(plaintext.getBytes(WaarpStringUtils.UTF8,),)@ } CATCH(Exception) {}
results[https://github.com/0xdata/h2o/blob/57283f70ca450815de1a9e855ad280328c6d9ef9/hadoop/src/main/java/water/hadoop/AbstractMessage.java][writeString][1] = -> TRY {  -> b=str.getBytes("UTF-8",)@ -> writeBytes(s,b,)@ } CATCH(Exception) {}
results[https://github.com/membrane/service-proxy/blob/c19d822dbca68622e750c6b7dc552c54798fc5a1/core/src/main/java/com/predic8/membrane/core/interceptor/administration/DynamicAdminPageInterceptor.java][respond][1] = -> TRY {  -> return createResponse(200,"OK",page.getBytes(Constants.UTF_8_CHARSET,),MimeType.TEXT_HTML_UTF8,)@ } CATCH(Exception) {}
results[https://github.com/vivosys/jasypt/blob/e6c8943cbbe07df2b469c448826a3dd724c4c1c8/jasypt/src/test/java/org/jasypt/digest/StandardHexadecimalStringDigesterTest.java][testDigest][1] = -> TRY {  -> saltByteArray=saltString.getBytes("UTF-8",)@ -> fixedSaltGen.setSalt(saltByteArray,)@ } CATCH(Exception) {}
results[https://github.com/Cloudname/cloudname/blob/bf8ec5a085cdb3e8ba35b2c50f0ff466cc3b5b68/cn/src/integrationtest/java/org/cloudname/zk/ZkCloudnameIntegrationTest.java][testCoordinateListenerCoordinateOutOfSync][1] = -> TRY {  -> byteArray=source.getBytes(Util.CHARSET_NAME,)@ -> zk.setData("/cn/cell/user/service/1/status",byteArray,-1,)@ } CATCH(Exception) {}
results[https://github.com/webx/citrus/blob/b1232187abc63af455e98c2d31aadf115b4a53a0/common/util/src/test/java/com/alibaba/citrus/util/io/OutputEngineTests.java][init][1] = -> TRY {  -> charData=StringUtil.repeat("中华民国",1024/16*100,)@ -> data=charData.getBytes("UTF-8",)@ } CATCH(Exception) {}
results[https://github.com/jboss-fuse/fuse/blob/e3648e64230d342de339ea7d2bccdccacfb7a28c/fabric-camel/src/main/java/org/fusesource/fabric/camel/FabricPublisherEndpoint.java][start][1] = -> TRY {  -> group.join(child.getBytes("UTF-8",),)@ } CATCH(Exception) {}
results[https://github.com/epronk/fitnesse/blob/e27c17eef220e6bba556cc2b63d62d018ad36831/src/fitnesse/components/FitProtocol.java][writeData][1] = -> TRY {  -> bytes=data.getBytes("UTF-8",)@ -> writeData(bytes,output,)@ } CATCH(Exception) {}
results[https://github.com/Root-Box/libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/io/OldInputStreamReaderTest.java][setUp][1] = -> TRY {  -> in=new ByteArrayInputStream(source.getBytes("UTF-8",),)@ -> reader=new InputStreamReader(in,"UTF-8",)@ } CATCH(Exception) {}
results[https://github.com/momoplan/Android/blob/404b93cb4c74a53ca6afbb2bb2b06b3a26735fa8/Ruyicai_General/v4.2.0/src/com/ruyicai/util/ToolsAesCrypt.java][encrypt2Bytes][1] = -> TRY { -> raw=sKey.getBytes("UTF-8",)@ -> skeySpec=new SecretKeySpec(raw,"AES",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/frostwire/frostwire-android/blob/08b4ce8de0ba4b471334495ef59bed41e3a3eebf/common/components/jdownloader/jd/nutils/encoding/Encoding.java][UTF8Encode][1] = -> TRY { -> return new String(str.getBytes("UTF-8",),)@ } CATCH(Exception) { -> Log.exception(e,)@ }
results[https://github.com/TheCollective/android_frameworks_base/blob/c02d1a855a882e77ef855f36eb9eda40eb35b214/graphics/java/android/renderscript/Allocation.java][createFromString][1] = -> TRY { -> allocArray=str.getBytes("UTF-8",)@ -> alloc.copyFrom(allocArray,)@ } CATCH(Exception) { -> throw new RSRuntimeException("Could not convert string to utf-8.",)@ }
results[https://github.com/SamMobile/android_libcore/blob/60cf2c30f267662068ad48cefb7ffcf87c6fa0b9/luni/src/test/java/tests/api/javax/net/ssl/HostnameVerifierTest.java][testSubjectAltName][3] = -> TRY {  -> in=new ByteArrayInputStream(cert.getBytes("UTF-8",),)@ -> x509=(X509Certificate) cf.generateCertificate(in,)@ } CATCH(Exception) {}
results[https://github.com/DawnScience/dawn-common/blob/a04dfd4cb1279aa52c689ac7392f3af0a80da2b6/org.dawb.common.util/src/org/dawb/common/util/list/PrimitiveArrayEncoder.java][compress][1] = -> TRY { -> input=expanded.getBytes("US-ASCII",)@ -> compresser.setInput(input,)@ } CATCH(Exception) { -> ne.printStackTrace()@ }
results[https://github.com/choclover/StudentPalSvr/blob/353955ebaed4b38642ecc736e8461629c0fddf22/src/studentpal/model/codec/ResponseMsgEncoder.java][encode][1] = -> TRY {  -> msgStr=(String) message@ -> msgBytes=msgStr.getBytes(charset.toString(),)@ -> buffer.put(msgBytes,)@ } CATCH(Exception) {}
results[https://github.com/benetech/martus-android/blob/392f83d9edb80a3eec09982df869b42d598c244a/matrus-android/src/org/martus/common/packet/Packet.java][digestOneLine][1] = -> TRY {  -> engine.digest(packetType.getBytes("UTF-8",),)@ -> engine.digest(newlineBytes,)@ } CATCH(Exception) {}
results[https://github.com/apache/commons-codec/blob/21d7caa09a2f0e4565670204e20301f9f8d71ed2/src/test/org/apache/commons/codec2/net/QuotedPrintableCodecTest.java][testDecodeObjects][1] = -> TRY {  -> decoded=(String) qpcodec.decode((Object) plain,)@ -> plainBA=plain.getBytes("UTF-8",)@ -> decodedBA=(byte[]) qpcodec.decode((Object) plainBA,)@ } CATCH(Exception) {}
results[https://github.com/serba/zapcat/blob/775cdc0e34b237eff51975f71f798fdab2a3b4ce/src/org/kjkoster/zapcat/util/Base64.java][encode][1] = -> TRY { -> stringArray=string.getBytes(charset,)@ } CATCH(Exception) { -> stringArray=string.getBytes()@ } -> stringArray=zeroPad(stringArray.length+paddingCount,stringArray,)@
results[https://github.com/SVMP/android_libcore/blob/21643b11ea824e0e4e65a5437a57abed2052ff7a/luni/src/test/java/libcore/java/io/OldAndroidInputStreamReaderTest.java][testAscii][1] = -> TRY {  -> aa=new ByteArrayInputStream(str.getBytes("ISO8859_1",),)@ -> a=new InputStreamReader(aa,"ISO8859_1",)@ } CATCH(Exception) {}
results[https://github.com/knowitall/reverb/blob/a4daf4fe8de27cec968930e4418e24c4f010f5bb/src/test/java/edu/washington/cs/knowitall/extractor/conf/LabeledBinaryExtractionReaderTest.java][testReadExtractions][1] = -> TRY {  -> in=new ByteArrayInputStream(inputString.getBytes("UTF-8",),)@ -> reader=new LabeledBinaryExtractionReader(in,)@ } CATCH(Exception) {}
results[https://github.com/apache/jspwiki/blob/23a40b8115d1f24ad0c811497b74b8c940f9cb4d/jspwiki-war/src/test/java/org/apache/wiki/util/FileUtilTest.java][testJDKString][1] = -> TRY {  -> res=new String(src.getBytes("ISO-8859-1",),"ISO-8859-1",)@ -> assertEquals(src,res,)@ } CATCH(Exception) {}
results[https://github.com/thenickname/org.eclipse.rap.tools/blob/953f378ebb69fa62b67711098acfc5fd40f06fdc/tests/org.eclipse.rap.ui.launch.rwt.test/src/org/eclipse/rap/ui/internal/launch/rwt/delegate/WebXmlProvider_Test.java][testProvideWithProvidedWebXml][1] = -> TRY {  -> webXml=createFile(project,"web.xml",webXmlContent,)@ -> webXmlContentBytes=webXmlContent.getBytes("utf-8",)@ -> AssertUtil.assertEquals(webXmlContentBytes,providedWebXmlBytes,)@ } CATCH(Exception) {}
results[https://github.com/sonatype/JGit/blob/a2a756d92f5bb397aa014fcfe6f5f0ac174949f2/org.spearce.jgit.test/tst/org/spearce/jgit/revwalk/RevWalkTestCase.java][blob][1] = -> TRY {  -> return rw.lookupBlob(ow.writeBlob(content.getBytes(Constants.CHARACTER_ENCODING,),),)@ } CATCH(Exception) {}
results[https://github.com/apache/httpcore/blob/1def2a721451b3b528265b3fd8db2ca4a04620f5/httpcore/src/test/java/org/apache/http/entity/TestInputStreamEntity.java][testWriteToUnknownLength][1] = -> TRY {  -> bytes=message.getBytes(Consts.ISO_8859_1,)@ -> instream=new ByteArrayInputStream(bytes,)@ -> Assert.assertEquals(message,s,)@ } CATCH(Exception) {}
results[https://github.com/benschi11/Alt_F4/blob/db8a036f89847dc74fc3f5737362cab51ad8b871/framework/src/play/mvc/results/RenderJson.java][apply][1] = -> TRY { -> response.out.write(json.getBytes("utf-8",),)@ } CATCH(Exception) { -> throw new UnexpectedException(e,)@ }
results[https://github.com/koordinates/geonetwork/blob/71038bb6a2be5292da242867d464f853e6d6e898/web/src/main/java/org/fao/geonet/kernel/mef/MEF2Exporter.java][formatData][1] = -> TRY {  -> data=Xml.getString(md,)@ -> binData=data.getBytes("UTF-8",)@ -> return new ByteArrayInputStream(binData,)@ } CATCH(Exception) {}
results[https://github.com/ekirkilevics/Spring/blob/03517871a63e8f8079a2b2c4904cf0525eba582e/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorTests.java][resolveArgumentTypeVariable][1] = -> TRY {  -> this.servletRequest.setContent(content.getBytes("UTF-8",),)@ -> this.servletRequest.setContentType(MediaType.APPLICATION_JSON_VALUE,)@ } CATCH(Exception) {}
