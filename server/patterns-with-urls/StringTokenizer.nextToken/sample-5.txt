results[https://github.com/Parquet/parquet-mr/blob/951cd2f95aee57fff6ab84594669aad12e8f4e8e/redelm-column/src/main/java/redelm/parser/MessageTypeParser.java][nextToken] = -> LOOP { -> t=st.nextToken()@st.hasMoreTokens() -> IF { -> return t@!(isWhitespace(t,)) && st.hasMoreTokens() } }
results[https://github.com/julienledem/redelm/blob/951cd2f95aee57fff6ab84594669aad12e8f4e8e/redelm-column/src/main/java/redelm/parser/MessageTypeParser.java][nextToken] = -> LOOP { -> t=st.nextToken()@st.hasMoreTokens() -> IF { -> return t@!(isWhitespace(t,)) && st.hasMoreTokens() } }
results[https://github.com/julienledem/redelm/blob/73f69973d78bf1fae7c1aad661421b8bc955d20f/redelm-column/src/main/java/parquet/parser/MessageTypeParser.java][nextToken] = -> LOOP { -> t=st.nextToken()@st.hasMoreTokens() -> IF { -> return t@!(isWhitespace(t,)) && st.hasMoreTokens() } }
results[https://github.com/f1ori/yacy/blob/5bb80741505f9cfc545d55d39a1c56f5cdd51cc1/source/de/anomic/http/httpd.java][match] = -> st=new StringTokenizer(latch,",",)@ -> LOOP { -> pattern=st.nextToken()@st.hasMoreTokens() -> IF { -> return true@st.hasMoreTokens() && key.matches(pattern,) } }
results[https://github.com/Parquet/parquet-mr/blob/73f69973d78bf1fae7c1aad661421b8bc955d20f/redelm-column/src/main/java/parquet/parser/MessageTypeParser.java][nextToken] = -> LOOP { -> t=st.nextToken()@st.hasMoreTokens() -> IF { -> return t@!(isWhitespace(t,)) && st.hasMoreTokens() } }
results[https://github.com/guoliqiang/coding/blob/4e657c23e9c385981bff6bc45f8d04cfa01daa72/third_part/hadoop_src/hadoop-2.0.5-alpha-src/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java][isValidName] = -> tokens=new StringTokenizer(src,Path.SEPARATOR,)@ -> LOOP { -> element=tokens.nextToken()@tokens.hasMoreTokens() -> IF { -> return false@element.equals("..",)||element.equals(".",)||element.indexOf(":",)>=0 && tokens.hasMoreTokens() } }
results[https://github.com/lalithsuresh/Scaling-HDFS-NameNode/blob/b94281c3dc73b6841cf1de4fb3feb04db812502c/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java][isValidName] = -> tokens=new StringTokenizer(src,Path.SEPARATOR,)@ -> LOOP { -> element=tokens.nextToken()@tokens.hasMoreTokens() -> IF { -> return false@element.equals("..",)||element.equals(".",)||element.indexOf(":",)>=0 && tokens.hasMoreTokens() } }
results[https://github.com/apache/hadoop-common/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/common/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java][isValidName] = -> tokens=new StringTokenizer(src,Path.SEPARATOR,)@ -> LOOP { -> element=tokens.nextToken()@tokens.hasMoreTokens() -> IF { -> return false@element.equals("..",)||element.equals(".",)||element.indexOf(":",)>=0 && tokens.hasMoreTokens() } }
results[https://github.com/cmccabe/hadoop/blob/9a9fcf826d455aacdc24948300bdf3015302d0f5/common/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java][isValidName] = -> tokens=new StringTokenizer(src,Path.SEPARATOR,)@ -> LOOP { -> element=tokens.nextToken()@tokens.hasMoreTokens() -> IF { -> return false@element.equals("..",)||element.equals(".",)||element.indexOf(":",)>=0 && tokens.hasMoreTokens() } }
results[https://github.com/DevBoost/EMFText/blob/67da6c558660b8728e8cc0cec085e28f8f234943/EMFText Incubation/org.emftext.commons.jsglr/src-aspectj-runtime/org/aspectj/runtime/reflect/AdviceSignatureImpl.java][toAdviceName] = -> strTok=new StringTokenizer(methodName,"$",)@!(methodName.indexOf('$',)==-1) -> LOOP { -> token=strTok.nextToken()@strTok.hasMoreTokens() && !(methodName.indexOf('$',)==-1) -> IF { -> return token@strTok.hasMoreTokens() && token.startsWith("before",)||token.startsWith("after",)||token.startsWith("around",) && !(methodName.indexOf('$',)==-1) } }
