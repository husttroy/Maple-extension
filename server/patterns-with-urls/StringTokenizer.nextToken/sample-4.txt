results[https://github.com/admachina/AwesomestTeam-Communication-Aids/blob/5079a6e528dbf0b31854ef3f858aa58021bcc261/CommunicationAid/src/comm/aid/Utils.java][getNextSTToken] = -> IF { -> return st.nextToken()@st.hasMoreTokens() }
results[https://github.com/kato-takashi/books/blob/10bbb398da9d2236062339b3c074a80aa4d86729/designPatternJava/Interprenter/src/Context.java][nextToken] = -> IF { -> currentToken=tokenizer.nextToken()@tokenizer.hasMoreTokens() }
results[https://github.com/visage-lang/visage-compiler/blob/a424faf8e2b8ce636b9bbe36522f69645f9ac7d9/visagejdi/src/org/visage/tools/debug/tty/Commands.java][commandUntrace] = -> IF { -> modif=t.nextToken()@t.hasMoreTokens() }
results[https://github.com/axDev-JDK/jdk/blob/60851dd38de109b1eaf23fff4620a9ac629168bf/src/share/classes/com/sun/tools/example/debug/tty/Commands.java][commandUntrace] = -> IF { -> modif=t.nextToken()@t.hasMoreTokens() }
results[https://github.com/visage-lang/visage-compiler/blob/4b7f96287b42c4c7c09ee66e50a543ae304e6420/fxjdi/src/com/sun/visage/tools/debug/tty/Commands.java][commandUntrace] = -> IF { -> modif=t.nextToken()@t.hasMoreTokens() }
results[https://github.com/NCIP/catissue-dynamic-extensions/blob/381124caf4bee8d90a3263e1105888d5ca17a97d/software/DynamicExtensions/src/main/java/edu/common/dynamicextensions/xmi/importer/XMIImportProcessor.java][getNextToken] = -> IF { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() }
results[https://github.com/NCIP/catissue-dynamic-extensions/blob/e808738c3046f983f107de596c0fb43f2cb87825/software/DynamicExtentions/src/java/edu/common/dynamicextensions/xmi/importer/XMIImportProcessor.java][getNextToken] = -> IF { -> token=tokenizer.nextToken()@tokenizer.hasMoreTokens() }
results[https://github.com/uditrugman/openjdk8-jdk/blob/249ff22f64878a7eac7a4f62f92e7b706ed76c58/src/share/classes/com/sun/tools/example/debug/tty/Commands.java][commandUntrace] = -> IF { -> modif=t.nextToken()@t.hasMoreTokens() }
results[https://github.com/imr/Electric-VLSI/blob/4187fb89ee1ea4a4624463640ee75784913ec40e/electric/electric-core/src/main/java/com/sun/electric/tool/generator/PadGenerator.java][processCell] = -> IF { -> padframename=str.nextToken()@str.hasMoreTokens() -> return true@str.hasMoreTokens() }
results[https://github.com/admachina/AwesomestTeam-Communication-Aids/blob/0b4ddb346e19486369dc5e80d227b6a1122759fd/AndroidCode/CommunicationAid/src/comm/aid/Utils.java][getNextSTToken] = -> IF { -> return st.nextToken()@st.hasMoreTokens() }
