results[https://github.com/glo-ulaval/Architecture/blob/3c3c71505b199d5326be8af661d6f5d23546a193/schedulemanager/src/main/java/cours/ulaval/glo4003/utils/crawlers/HTMLLoader.java][load][1] = -> TRY {  -> return Jsoup.connect(uri,).get()@ } CATCH(Exception) {}
results[https://github.com/y2k/Spectator/blob/90c48015cd580a67acc0e8577e554903086aae55/src/net/itwister/spectator/model/impl/RssModelImpl.java][call][1] = -> TRY {  -> doc=Jsoup.connect(""+url,).userAgent(Constants.WEB_USER_AGENT,).get()@ } CATCH(Exception) {}
results[https://github.com/jeanroldao/java-web/blob/ebaf7669374a478a724fdf4a62e859fb6f37a443/WebMiner/src/com/jeanroldao/webminer/async/SentidoAsync.java][call][2] = -> TRY {  -> htmlSentido=Jsoup.connect("http://www.soul.com.br/site/itinerarios.php?sentido="+value,).timeout(SoulAsync.TIME_OUT,).get()@ } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/10c4b28d0dfb6d1161934fa534098b7e7d16431a/ManalithBot/src/main/java/org/manalith/ircbot/plugin/linuxpkgfinder/UbuntuPackageFinder.java][getLatestPkgName][1] = -> TRY {  -> doc=Jsoup.connect(url,).get()@ -> e=doc.select("select#distro>option",)@ } CATCH(Exception) {}
results[https://github.com/tiantiangao/pets/blob/209bd6b504d4b6f0648293754fa58f153107b22e/hachipets-web/src/test/java/com/gtt/pets/util/MediaInfoCrawler.java][getPage][3] = -> TRY { -> return Jsoup.connect(url,).get()@ } CATCH(Exception) { -> return getPage(url,)@ }
results[https://github.com/Zichsah/frpapp/blob/f68847fcdb9b0e431e3a60f23896c2a0f76ca4ac/FRPapp/src/phillykeyspots/frpapp/ResourcesFragment.java][Load][1] = -> TRY { -> doc=Jsoup.connect(url,).get()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/nicholasdelrio/VLC/blob/b083fab4dc02eedf46a73076eeb64d15780e4fb8/harvester/src/main/java/edu/utep/cybershare/vlc/build/source/NASAProjectsDownloader.java][download][2] = -> TRY { -> connection=Jsoup.connect(ACCESS_PROJECTS,)@ -> connection.timeout(TIMEOUT,)@ -> awardsHTML=connection.get()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/aommm/bibbla/blob/da67e8e967f8b59eb6e20aaf283cb4f4bb53d302/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/SearchJob.java][connect][1] = -> TRY {  -> r=Jsoup.connect(url,).method(Method.GET,).timeout(Backend.CONNECTION_TIMEOUT,).execute()@ } CATCH(Exception) {}
results[https://github.com/prasopes/showtime/blob/25c0754e69b753794cfa91fa25c4064b05343678/src/test/java/cz/stoupa/showtimes/imports/cinestar/CinestarShowingTest.java][setUp][2] = -> TRY {  -> doc=Jsoup.connect(serviceURL,).get()@ -> testObject=new CinestarPage(doc,injector.getInstance(CinestarPageScraper.class,),)@ } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/648725c2a4889ed2e7d6166ee52e686629600266/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/UbuntuPkgFinderRunner.java][getLatestPkgName][4] = -> TRY { -> doc=Jsoup.connect(url,).get()@ -> e=doc.select("select#distro>option",)@ } CATCH(Exception) { -> result=e.getMessage()@ }
results[https://github.com/rongjihuang/bc-framework/blob/52427c24f5e71deb7c4a3b07aa475d4e5b53d129/bc-test/src/test/java/cn/bc/test/jsoup/JsoupTest.java][test01][1] = -> TRY {  -> doc=Jsoup.connect("http://61.144.39.126/middle/WSMiddle.asmx?op=GetDriverTaxiQY",).userAgent("Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30",).get()@ -> System.out.println(doc,)@ } CATCH(Exception) {}
results[https://github.com/gemorra/FH-Nav-Dortmund/blob/faa601c36d4a52ba0c2c2736df8556e99f6752e4/src/FHNav/controller/CanteenBeanTest.java][getMenuKostbar][1] = -> TRY { -> doc=Jsoup.connect("http://www.stwdo.de/index.php?id=248",).get()@ -> tds=doc.select("table.SpeiseplanWoche",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/limingwei/li/blob/9d81ca2fd45fc30e6ffd1edfe86ed05c40c212b0/more/li/spider/Spider.java][getContent][1] = -> System.err.println(url,)@ -> TRY { -> return Jsoup.connect(url,).get()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/aommm/bibbla/blob/da67e8e967f8b59eb6e20aaf283cb4f4bb53d302/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/MyDebtJob.java][connect][3] = -> TRY {  -> r=Jsoup.connect(userUrl,).method(Method.GET,).cookies(session.getCookies(),).execute()@ } CATCH(Exception) {}
results[https://github.com/aommm/bibbla/blob/da67e8e967f8b59eb6e20aaf283cb4f4bb53d302/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/DetailedViewJob.java][connect][1] = -> TRY {  -> r=Jsoup.connect(originalBook.getUrl(),).method(Method.GET,).timeout(Backend.CONNECTION_TIMEOUT,).execute()@ } CATCH(Exception) {}
results[https://github.com/giavacms/giavacms/blob/77cc0dcdaa025726c3a66d29c3b615e18d085155/github/src/main/java/org/giavacms/githubcontent/util/GithubImporter.java][getContent][2] = -> TRY { -> doc=Jsoup.connect(url,).get()@ -> return doc.getElementsByTag("article",).html()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/radeklos/thesis/blob/8ae405e82e4eb5f5f1732bd5c717ad6c3619d72b/digger/src/main/java/cz/utb/caribou/digger/crawler/parser/Gemin.java][parseCriteria][1] = -> TRY {  -> LOOP { -> criteriaUrl=criteriaLink.attr("href",)@ -> criteriaDoc=Jsoup.connect(criteriaUrl,).get()@ } } CATCH(Exception) {}
results[https://github.com/aommm/bibbla/blob/da67e8e967f8b59eb6e20aaf283cb4f4bb53d302/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/LibInfoJob.java][step1][1] = -> TRY {  -> response=Jsoup.connect(url,).method(Method.GET,).timeout(5000,).execute()@ -> resultsDocument=response.parse()@ } CATCH(Exception) {}
results[https://github.com/gemorra/FH-Nav-Dortmund/blob/faa601c36d4a52ba0c2c2736df8556e99f6752e4/src/FHNav/controller/CanteenBeanTest.java][getMenuMensa][1] = -> TRY { -> doc=Jsoup.connect("http://www.stwdo.de/index.php?id=127",).get()@ -> tds=doc.select("table.SpeiseplanWoche",)@ -> tdss=doc.select("table.WochenSpecials",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/nicholasdelrio/VLC/blob/b083fab4dc02eedf46a73076eeb64d15780e4fb8/harvester/src/main/java/edu/utep/cybershare/vlc/build/source/NASAProjectsDownloader.java][populateProject][1] = -> System.out.println(projectPageLink,)@ -> TRY { -> connection=Jsoup.connect(projectPageLink,)@ -> connection.timeout(TIMEOUT,)@ -> projectHTML=connection.get()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/patrick848/CSU-App/blob/4350c782adadbbeb994e8f407298f10f0ac9fdd7/src/com/patmahoneyJR/csu/vikings/CampusNews.java][doInBackground][1] = -> TRY { -> doc=Jsoup.connect(URL,).get()@ } CATCH(Exception) { -> Toast.makeText(getApplicationContext(),"Couldn't fetch articles, try again later.",Toast.LENGTH_SHORT,).show()@ }
results[https://github.com/ridem/fr.lemet/blob/c557c13d6b72bb8dfc9fbe71ae03e026be12cec4/LeMet/src/fr/lemet/application/activity/alerts/GetPerturbations.java][data][1] = -> TRY { -> doc=Jsoup.connect("http://m.tcrm-metz.fr/trafic/perturbation",).get()@ -> ele=doc.select("div#content",)@ -> head=doc.head()@ } CATCH(Exception) { -> return e.toString()@ }
results[https://github.com/tomdong/borrow/blob/65f3a8212b8c6aa413e253bd8dd3adafa5e1bc49/src/com/intalker/borrow/isbn/parser/OpenISBNBookInfoParser.java][parse][1] = -> TRY { -> doc=Jsoup.connect(strURL,).get()@ -> elements=doc.getElementsByClass("PostHead",)@ -> elements=doc.getElementsByClass("Article",)@ -> elements=doc.getElementsByClass("div",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/limingwei/li/blob/7b824a6e1d7cc7300254883dde2c9fd5fb4f2463/edm/li/edm/spider/Demo.java][main][1] = -> TRY {  -> LOOP { -> document=Jsoup.connect(url,).timeout(20*1000,).get()@ -> dealElements=document.select("dl.item",)@ } } CATCH(Exception) {}
results[https://github.com/talshalti/rich-pagev0.1/blob/f8deafd7e56a27ddfe2de0968b19373a2f9aeb4f/appengine_server/src/com/owow/rich/apiHandler/QouraHandler.java][getData][1] = -> TRY {  -> res=Jsoup.connect(url,).timeout(5000,).ignoreHttpErrors(true,).followRedirects(true,).execute()@ -> d=res.parse()@ } CATCH(Exception) {}
results[https://github.com/CIDARLAB/igem-datasheet/blob/979128b165763a2d674600b1d7484d4bd709527a/XMLParser/src/xmlparser/poojXML.java][getPartDocument][3] = -> TRY { -> partDoc=Jsoup.connect("http://parts.igem.org/xml/part."+partName,).timeout(10000000,).parser(Parser.xmlParser(),).get()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/skylerb/online-id-checker/blob/d90ec6f1d9f2745ed131bcfda5cae8d2a882a33e/webapps/idcheck/WEB-INF/src/SocialNetworkAcces/LinkedinWrapper.java][findPossibleMatches][1] = -> TRY { -> doc=Jsoup.connect(getSearchPath(person,),).get()@ -> resultSet=doc.getElementById("result-set",)@ } CATCH(Exception) { -> System.out.println("Bad connection",)@ -> e.printStackTrace()@ }
results[https://github.com/anbv3/infoC/blob/a1c5fb883c4397cfde3c372cff515869c5391628/src/main/java/com/infoc/util/EconInfoCrawler.java][getStock][1] = -> TRY {  -> doc=Jsoup.connect("http://finance.naver.com/sise",).get()@ -> kospi=doc.select("#KOSPI_now",)@ -> kospi_change=doc.select("#KOSPI_change",)@ -> kosdaq=doc.select("#KOSDAQ_now",)@ -> kosdaq_change=doc.select("#KOSDAQ_change",)@ } CATCH(Exception) {}
results[https://github.com/sefirot/androidStuff/blob/56b22a9a5b3a6ac2edcad7bf95c7d85c9958e578/BerichtsheftApp/src/com/applang/berichtsheft/test/ExperimentalTests.java][testStations][2] = -> TRY {  -> uri=WeatherManager.siteUri("DE","10519","18Z",2012,12,31,1,)@ -> println(uri,)@ -> doc=Jsoup.connect(uri.toString(),).timeout(10000,).get()@ -> elements=doc.select("select[name=ind] > option",)@ } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/d64f553042296394ce4dbda6227d2aa937faf9bc/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/DebianPackageFinder.java][find][2] = -> url="http://packages.debian.org/search?keywords="+this.getKeyword()+"&searchon=names&suite=all&section=all"@ -> TRY { -> conn=Jsoup.connect(url,)@ -> conn.timeout(20000,)@ -> doc=conn.get()@ -> IF { -> return result@doc.select("#psearchres",).size()==0 } } CATCH(Exception) { -> result="오류: "+e.getMessage()@ }
results[https://github.com/dozedoff/aid/blob/b3aa8ffbddbc46efda840b5c2d3ce7e743ffedd6/src/board/FourChanStrategy.java][findBoards][3] = -> TRY { -> mainDocument=Jsoup.connect(siteUrl.toString(),).userAgent("Mozilla",).get()@ } CATCH(Exception) { -> url=siteUrl.toString()@ -> parseError(url,"frontpage",e,)@ } -> boards=mainDocument.select("div.column a.boardlink",)@
results[https://github.com/sefirot/androidStuff/blob/56b22a9a5b3a6ac2edcad7bf95c7d85c9958e578/BerichtsheftApp/src/com/applang/components/WeatherManager.java][parseSite][1] = -> uri=siteUri("PA",location,"all",dateParts,)@ -> BerichtsheftPlugin.print("connecting '%s'\n... ",uri,)@ -> TRY { -> doc=Jsoup.connect(uri.toString(),).timeout(100000,).get()@ } CATCH(Exception) { -> handleException(e,)@ }
results[https://github.com/anbv3/infoC/blob/9b0cc7869c9b6141efdbfa8f526d9405b902c5e2/src/main/java/com/infoc/util/TranslationParser.java][enToKr][2] = -> TRY { -> reqStr=en.replaceAll("“","'",)@ -> doc=Jsoup.connect(q,).userAgent("Mozilla",).data("q",reqStr,).post()@ -> ans=doc.text()@ } CATCH(Exception) { -> LOG.error("{}\n",en,e,)@ }
results[https://github.com/kwliou/SmartNature/blob/464743da86fe089b60728d3b6c82d41700fe54fb/src/edu/berkeley/cs160/smartnature/Encyclopedia.java][run][1] = -> searchURL="http://www.plantcare.com/encyclopedia/search.aspx?q="+Uri.encode(searchText,)@ -> TRY { -> doc=Jsoup.connect(searchURL,).execute().parse()@ -> resultBox=doc.getElementById("searchEncyclopedia",)@ } CATCH(Exception) { -> e.printStackTrace()@ -> runOnUiThread(new Runnable(),)@ }
results[https://github.com/mmx900/ManalithBot/blob/648725c2a4889ed2e7d6166ee52e686629600266/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/UbuntuPkgFinderRunner.java][run][4] = -> url="http://packages.ubuntu.com/search?keywords="+this.getKeyword()+"&searchon=names&suite="+latestPkgName+"&section=all"@ -> TRY { -> conn=Jsoup.connect(url,)@ -> conn.timeout(10000,)@ -> div=conn.get().select("#psearchres",)@ -> IF { -> return result@div.size()==0 } } CATCH(Exception) { -> result=e.getMessage()@ }
results[https://github.com/mmx900/ManalithBot/blob/10c4b28d0dfb6d1161934fa534098b7e7d16431a/ManalithBot/src/main/java/org/manalith/ircbot/plugin/linuxpkgfinder/DebianPackageFinder.java][find][1] = -> TRY { -> conn=Jsoup.connect(url,)@ -> conn.timeout(20000,)@ -> doc=conn.get()@ -> IF { -> return result@doc.select("#psearchres",).size()==0 } } CATCH(Exception) { -> logger.error(e.getMessage(),e,)@ -> result="오류: "+e.getMessage()@ }
results[https://github.com/aommm/bibbla/blob/da67e8e967f8b59eb6e20aaf283cb4f4bb53d302/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/RenewJob.java][connect][1] = -> TRY {  -> postData=new HashMap<String, String>()@ -> r=Jsoup.connect(userUrl,).method(Method.POST,).cookies(session.getCookies(),).data(postData,).execute()@ } CATCH(Exception) {}
results[https://github.com/anbv3/infoC/blob/a1c5fb883c4397cfde3c372cff515869c5391628/src/main/java/com/infoc/util/EconInfoCrawler.java][getCurrency][1] = -> TRY {  -> doc=Jsoup.connect("http://info.finance.naver.com/marketindex/",).get()@ -> usd=doc.select(".usd > .head_info > .value",)@ -> usdChange=doc.select(".usd > .head_info > .change",)@ -> usdDirection=doc.select(".usd > .head_info > .blind",)@ -> cny=doc.select(".cny > .head_info > .value",)@ -> cnyChange=doc.select(".cny > .head_info > .change",)@ -> cnyDirection=doc.select(".cny > .head_info > .blind",)@ } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/d64f553042296394ce4dbda6227d2aa937faf9bc/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/FedoraPackageFinder.java][find][1] = -> TRY { -> url="http://rpmfind.net/linux/rpm2html/search.php?query="+this.getKeyword()+"&submit=Search"@ -> conn=Jsoup.connect(url,)@ -> conn.timeout(5000,)@ -> tables=conn.get().select("table",)@ -> IF { -> return result@tables.size()<2 } } CATCH(Exception) { -> logger.error(e,)@ }
results[https://github.com/gckjdev/GroupBuy_Data_Fetcher/blob/d3d07153e5a445c835696b2eb0041375c99705db/src/com/orange/groupbuy/addressparser/GenericAddressParser.java][doParseAddress][1] = -> TRY { -> connection=Jsoup.connect(url,).timeout(RequestConstants.ADDRESS_PARSER_CONNECTION_TIMEOUT,)@ -> doc=connection.get()@ -> IF { -> find_common_add(doc,url,)@doc!=null } } CATCH(Exception) { -> log.error("<doParseAddress> url = "+url+" catch exception = "+e.toString(),e,)@ -> addList.clear()@ }
results[https://github.com/aommm/bibbla/blob/8d9e1875f997cec4853669623d69aa26b67d3231/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/LoginJob.java][getLoginForm][1] = -> TRY {  -> response=Jsoup.connect(url,).method(Method.GET,).timeout(Backend.CONNECTION_TIMEOUT,).execute()@ -> sessionCookies=response.cookies()@ -> html=response.parse()@ -> IF { -> throw new Exception("missing cookies/variables.",)@sessionVariables.get("lt",)==null||sessionCookies.get("JSESSIONID",)==null||sessionCookies.get("org.springframework.web.servlet."+"i18n.CookieLocaleResolver.LOCALE",)==null } } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/10c4b28d0dfb6d1161934fa534098b7e7d16431a/ManalithBot/src/main/java/org/manalith/ircbot/plugin/linuxpkgfinder/UbuntuPackageFinder.java][find][1] = -> TRY { -> conn=Jsoup.connect(url,)@ -> conn.timeout(10000,)@ -> div=conn.get().select("#psearchres",)@ -> IF { -> return result@div.size()==0 } } CATCH(Exception) { -> logger.error(e.getMessage(),e,)@ -> result="오류: "+e.getMessage()@ }
results[https://github.com/mmx900/ManalithBot/blob/648725c2a4889ed2e7d6166ee52e686629600266/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/FedoraPkgFinderRunner.java][run][1] = -> TRY { -> url="http://rpmfind.net/linux/rpm2html/search.php?query="+this.getKeyword()+"&submit=Search"@ -> conn=Jsoup.connect(url,)@ -> conn.timeout(5000,)@ -> tables=conn.get().select("table",)@ -> IF { -> return result@tables.size()<2 } } CATCH(Exception) { -> result=e.getMessage()@ -> e.printStackTrace()@ }
results[https://github.com/johnnyman727/NextUp-Android/blob/affdfa260a7992a4d97b95fc5bef6190e26b01a2/src/com/dotcom/nextup/yelp/YelpWebScrape.java][getYelpVenueInfo][1] = -> TRY { -> doc=Jsoup.connect(url,).get()@!(keys.get(0,)=="bad attribute name") } CATCH(Exception) { -> Log.v(TAG,"Exception: "+e.getMessage(),)@!(keys.get(0,)=="bad attribute name") } -> doc_string=doc.toString()@!(keys.get(0,)=="bad attribute name") -> IF { -> return webScrapeSpecificAttr(attr,keys,doc_smaller,)@i!=-1 && !(keys.get(0,)=="bad attribute name") } ELSE { -> return null@!(i!=-1) && !(keys.get(0,)=="bad attribute name") }
results[https://github.com/jeanroldao/java-web/blob/ebaf7669374a478a724fdf4a62e859fb6f37a443/WebMiner/src/com/jeanroldao/webminer/async/DiaAsync.java][call][1] = -> TRY {  -> sentido=linha.getSentido().getValue()@ -> dia=getValue()@ -> linhaEncoded=URLEncoder.encode(linha.getValue(),Charset.defaultCharset().displayName(),)@ -> htmlTabela=Jsoup.connect("http://www.soul.com.br/site/itinerarios.php?sentido="+sentido+"&linha="+linhaEncoded+"&dia="+dia,).timeout(SoulAsync.TIME_OUT,).get()@ } CATCH(Exception) {}
results[https://github.com/limingwei/li/blob/9d81ca2fd45fc30e6ffd1edfe86ed05c40c212b0/more/li/discuz/Discuz.java][post][2] = -> TRY {  -> map=new HashMap<String, String>()@ -> map.put("message","消息内容",)@ -> map.put("posttime","1350724284",)@ -> map.put("formhash","89b20919",)@ -> map.put("subject","",)@ -> document=Jsoup.connect(url,).data(map,).post()@ -> System.out.println(document,)@ } CATCH(Exception) {}
results[https://github.com/aommm/bibbla/blob/45b0c6e86f5132edc691ee0eb8f4ec64e6442c19/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/UnreserveJob.java][connect][1] = -> TRY {  -> postData=new HashMap<String, String>()@ -> System.out.println(postData,)@ -> r=Jsoup.connect(userUrl,).method(Method.POST,).cookies(session.getCookies(),).data(postData,).execute()@ } CATCH(Exception) {}
results[https://github.com/hansson/rento/blob/90154d4e5ee7145130b54684ab491f30914920f8/src/main/java/com/hansson/rento/apartments/KSFastigheterApartments.java][getAvailableApartments][1] = -> TRY { -> doc=Jsoup.connect(BASE_URL,).get()@ -> apartments=doc.getElementsByTag("tbody",).get(3,).getElementsByTag("tr",)@ -> LOOP { -> IF { -> apartment.setUrl(BASE_URL,)@ } } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mmx900/ManalithBot/blob/10c4b28d0dfb6d1161934fa534098b7e7d16431a/ManalithBot/src/main/java/org/manalith/ircbot/plugin/linuxpkgfinder/FedoraPackageFinder.java][find][1] = -> IF { -> return result@keyword.equals("",) } -> TRY { -> conn=Jsoup.connect(url,)@!(keyword.equals("",)) -> conn.timeout(5000,)@!(keyword.equals("",)) -> tables=conn.get().select("table",)@!(keyword.equals("",)) -> IF { -> return result@!(keyword.equals("",)) && tables.size()<2 } } CATCH(Exception) { -> logger.error(e.getMessage(),e,)@!(keyword.equals("",)) -> result="오류: "+e.getMessage()@!(keyword.equals("",)) }
results[https://github.com/calvinaquino/LNReader-Android/blob/ffacc58dcddfab26e5532374c6f38e500b197947/LNReader/src/com/erakk/lnreader/task/DownloadPageTask.java][doInBackground][2] = -> TRY { -> Log.d("DownloadPageTask","Downloading: "+arg0[0].toString(),)@ -> response=Jsoup.connect(arg0[0].toString(),).timeout(7000,).execute()@ -> Log.d("DownloadPageTask","Complete: "+arg0[0].toString(),)@ -> return new AsyncTaskResult<Document>(response.parse(),)@ } CATCH(Exception) { -> return new AsyncTaskResult<Document>(e,)@ }
results[https://github.com/sernav/SRILandaRepo/blob/924cc0ec6327c65963bac722460388973eed35a6/ParserWeb/src/es/uclm/sri/htmlparser/ScrapeLastfm.java][procesarEtiquetasAlbum][2] = -> TRY { -> docAlbum=Jsoup.connect(element.attr("abs:href",),).get()@ -> links=docAlbum.select("a[href]",)@ } CATCH(SocketTimeoutException) { -> System.out.println(" <<<<<< ERROR TIME OUT 3 >>>>>",)@ -> sto.printStackTrace()@ } CATCH(IOException) { -> e.printStackTrace()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/mmx900/ManalithBot/blob/d64f553042296394ce4dbda6227d2aa937faf9bc/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/GentooPackageFinder.java][find][1] = -> url="http://darkcircle.myhome.tv/phportage/phportage.xml?k="+this.getKeyword()+"&limit=1&similarity=exact"+"&showmasked=true&livebuild=false"@ -> TRY { -> d=Jsoup.connect(url,).get()@ -> System.out.println(d.select("result>code",).get(0,).text(),)@ -> IF { } ELSE { -> e=d.select("result>packages>pkg",).get(0,)@NumberUtils.toInt(d.select("result>code",).get(0,).text(),)==0 && !(NumberUtils.toInt(d.select("result>actualnumofres",).get(0,).text(),)==0) } } CATCH(Exception) { -> result=e.getMessage()@ }
results[https://github.com/indrek-koue/SERP-Tracker-Android/blob/1997062b6f5f8e029e717f294bb4509443f3676b/src/com/inc/im/serptracker/util/AsyncDownloader.java][downloadJsoapParseH3FirstA][1] = -> IF { -> return null@keyword==null } -> TRY { -> doc=Jsoup.connect(generateEscapedQueryString(keyword,false,),).userAgent("Apache-HttpClient/UNAVAILABLE (java 1.4)",).timeout(TIMEOUT,).get()@!(keyword==null) } CATCH(Exception) { -> Log.e("MY",e1.toString(),)@!(keyword==null) } -> IF { -> return null@doc==null && !(keyword==null) } -> allResults=doc.select("h3 > a",)@!(doc==null) && !(keyword==null) -> IF { -> return null@allResults==null && !(doc==null) && !(keyword==null) }
results[https://github.com/dkellycollins/CIS526_TeamProjects/blob/c1b66cb823af30c3bb1911a404748d947a10be6c/Assignment4/HTMLParse/src/htmlparse/CourseScraper.java][scrapeGrad][4] = -> LOOP { -> TRY { -> doc=Jsoup.connect(baseURI+page,).timeout(10000,).get()@ } CATCH(Exception) { -> e.printStackTrace()@ } -> content=doc.getElementsByClass("block_content",).first()@ -> LOOP { -> IF { -> System.out.println("I must be at the end of the course listing. Page "+page+" is blank!",)@ } } -> System.out.println("Page "+page+" complete! "+count+" courses processed so far...",)@ }
results[https://github.com/aommm/bibbla/blob/8a18ca71283b468871b74846a27687f172ffd65b/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/LoanedBooksJob.java][getLoanedBooks][1] = -> TRY {  -> response=Jsoup.connect(userUrl,).method(Method.GET,).cookies(session.getCookies(),).execute()@ -> html=response.parse()@ -> IF { -> throw new Exception("Not logged in",)@html.select("div.loginPage",).size()>0 } -> LOOP { -> IF { -> throw new Exception("step1(): Too many slashes in title!",)@!(html.select("div.loginPage",).size()>0) && rows.size() > 0 } } } CATCH(Exception) {}
results[https://github.com/aommm/bibbla/blob/8d9e1875f997cec4853669623d69aa26b67d3231/Bibbla/src/dat255/grupp06/bibbla/backend/tasks/LoginJob.java][postLoginForm][1] = -> TRY {  -> url="https://www.gotlib.goteborg.se/iii/cas/login;jsessionid="+sessionVariables.get("JSESSIONID",)+"?service=http%3A%2F%2Fencore.got"+"lib.goteborg.se%3A80%2Fiii%2Fencore%2Fj_acegi_cas_security_c"+"heck&lang="+sessionVariables.get("org.springframework.web.se"+"rvlet.i18n.CookieLocaleResolver.LOCALE",)@ -> postData=new HashMap<String, String>()@ -> response=Jsoup.connect(url,).method(Method.POST,).timeout(Backend.CONNECTION_TIMEOUT,).data(postData,).cookies(sessionCookies,).execute()@ -> sessionCookies=response.cookies()@ -> IF { -> throw new Exception("missing cookies/variables.",)@sessionVariables.get("lt",)==null||sessionCookies.get("JSESSIONID",)==null||sessionCookies.get("III_SESSION_ID",)==null } } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/10c4b28d0dfb6d1161934fa534098b7e7d16431a/ManalithBot/src/main/java/org/manalith/ircbot/plugin/linuxpkgfinder/PhPortageProvider.java][find][1] = -> TRY { -> d=Jsoup.connect(url,).get()@ -> System.out.println(d.select("result>code",).get(0,).text(),)@ -> IF { } ELSE { -> e=d.select("result>packages>pkg",).get(0,)@NumberUtils.toInt(d.select("result>code",).get(0,).text(),)==0 && !(NumberUtils.toInt(d.select("result>actualnumofres",).get(0,).text(),)==0) } } CATCH(Exception) { -> logger.error(e.getMessage(),e,)@ -> result="오류: "+e.getMessage()@ }
results[https://github.com/sernav/SRILandaRepo/blob/d0aa50a5ab2bd3cb00ad9bd07c75cad7cc943dc1/ToolsSRILanda/src/es/uclm/sri/sis/scrape/webscraping/ScrapingLastfm.java][procesarLinkArtista][2] = -> LOOP { -> IF { -> TRY { -> docAlbum=Jsoup.connect(link.attr("abs:href",),).get()@ -> procesarLinkAlbums(docAlbum,artista,)@ } CATCH(SocketTimeoutException) { -> System.out.println(" <<<<<< ERROR TIME OUT >>>>>",)@ -> sto.printStackTrace()@ } CATCH(IOException) { -> e.printStackTrace()@ } CATCH(Exception) { -> e.printStackTrace()@ } } }
results[https://github.com/darklordpotter/DLP-API/blob/7f636b9bb0df541333f47f7ac5ec6b4c00fa75e1/library-query/src/main/java/net/darklordpotter/ml/query/resources/FFNResource.java][load][1] = -> TRY {  -> c=Jsoup.connect("http://www.fanfiction.net/s/"+key.get(0,)+"/"+key.get(1,)+"/",).userAgent(UA_STRING,)@ -> TRY { -> c.get()@ -> IF { -> throw new WebApplicationException(Response.Status.NO_CONTENT,)@c.response().statusCode()!=200 } -> return c.get()@!(c.response().statusCode()!=200) } CATCH(SocketTimeoutException) { -> log.error("Failed to connect to FFN "+e.getMessage(),e,)@ -> throw new WebApplicationException(504,)@ } } CATCH(Exception) {}
results[https://github.com/mmx900/ManalithBot/blob/648725c2a4889ed2e7d6166ee52e686629600266/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/GentooPkgFinderRunner.java][run][3] = -> url="http://gentoo-portage.com/Search?search="+this.getKeyword()@ -> conn=Jsoup.connect(url,)@ -> conn.timeout(120000,)@ -> TRY { -> e=conn.get().select("#search_results",).select("a",)@ -> IF { -> return result@result_size==0 } -> IF { -> return result@!(result_size==0) && !(pkgname.split("\\/",)[1].equals(this.getKeyword(),)) } -> conn2=Jsoup.connect(detail_url,)@!(result_size==0) && !(!(pkgname.split("\\/",)[1].equals(this.getKeyword(),))) -> conn2.timeout(120000,)@!(result_size==0) && !(!(pkgname.split("\\/",)[1].equals(this.getKeyword(),))) -> ee=conn2.get().select("#ebuild_list>ul>li",)@!(result_size==0) && !(!(pkgname.split("\\/",)[1].equals(this.getKeyword(),))) -> IF { -> return result@!(result_size==0) && ee.size()==0 && !(!(pkgname.split("\\/",)[1].equals(this.getKeyword(),))) } } CATCH(Exception) { -> result=e.getMessage()@ }
results[https://github.com/mmx900/ManalithBot/blob/c7eb3a61fb0a16f691cc08ba002f89c9c59dcef2/ManalithBot/src/main/java/org/manalith/ircbot/plugin/DistroPkgFinder/DebianPkgFinderJsoupRunner.java][run][1] = -> url="http://packages.debian.org/search?keywords="+this.getKeyword()+"&searchon=names&suite=all&section=all"@ -> TRY { -> doc=Jsoup.connect(url,).get()@ -> IF { -> return result@doc.select("#psearchres",).size()==0 } -> hits=doc.select("#psearchres",).select("h2",)@!(doc.select("#psearchres",).size()==0) -> pkgname=doc.select("#psearchres",).select("h3",).get(0,).text().split("\\s",)[1]@!(doc.select("#psearchres",).size()==0) -> ExactHits=doc.select("#psearchres",).select("ul",).get(0,).select("li",)@!(doc.select("#psearchres",).size()==0) } CATCH(Exception) { -> result=e.getMessage()@ }
results[https://github.com/NasaGeek/utexas-utilities/blob/701738de12364c5dac0627d147218d786a84ce2c/src/com/nasageek/UTilities/CourseScheduleFragment.java][doInBackground][1] = -> TRY { -> doc=Jsoup.connect("https://utdirect.utexas.edu/registration/classlist.WBX?sem="+semId,).cookie("SC",ConnectionHelper.getAuthCookie(parentAct,client,),).get()@ } CATCH(Exception) { -> Log.d("JSOUP EXCEPTION",e.getMessage(),)@ -> parentAct.finish()@ } -> classels=doc.select("div[align]",).get(0,).select("tr[valign]",)@ -> LOOP { -> cdb.addClass(new UTClass(uniqueid.ownText(),classid.ownText(),classname.ownText(),buildings,rooms,days,times,semId,),)@ }
results[https://github.com/mmx900/ManalithBot/blob/10c4b28d0dfb6d1161934fa534098b7e7d16431a/ManalithBot/src/main/java/org/manalith/ircbot/plugin/linuxpkgfinder/GentooPortageProvider.java][find][1] = -> conn=Jsoup.connect(url,)@ -> conn.timeout(120000,)@ -> TRY { -> e=conn.get().select("#search_results",).select("a",)@ -> IF { -> return result@result_size==0 } -> IF { -> return result@!(result_size==0) && !(pkgname.split("\\/",)[1].equals(arg,)) } -> conn2=Jsoup.connect(detail_url,)@!(!(pkgname.split("\\/",)[1].equals(arg,))) && !(result_size==0) -> conn2.timeout(120000,)@!(!(pkgname.split("\\/",)[1].equals(arg,))) && !(result_size==0) -> ee=conn2.get().select("#ebuild_list>ul>li",)@!(!(pkgname.split("\\/",)[1].equals(arg,))) && !(result_size==0) -> IF { -> return result@!(!(pkgname.split("\\/",)[1].equals(arg,))) && !(result_size==0) && ee.size()==0 } } CATCH(Exception) { -> logger.error(e.getMessage(),e,)@ -> result="오류: "+e.getMessage()@ }
results[https://github.com/mmx900/ManalithBot/blob/ebaca745bf08f3e5f60749a1198638c3086c5e73/ManalithBot/src/main/java/org/manalith/ircbot/plugin/distropkgfinder/DebianPkgFinderJsoupRunner.java][run][1] = -> url="http://packages.debian.org/search?keywords="+this.getKeyword()+"&searchon=names&suite=all&section=all"@ -> TRY { -> doc=Jsoup.connect(url,).get()@ -> IF { -> return result@doc.select("#psearchres",).size()==0 } -> hits=doc.select("#psearchres",).select("h2",)@!(doc.select("#psearchres",).size()==0) -> pkgname=doc.select("#psearchres",).select("h3",).get(0,).text().split("\\s",)[1]@!(doc.select("#psearchres",).size()==0) -> exactHits=doc.select("#psearchres",).select("ul",).get(0,).select("li",)@!(doc.select("#psearchres",).size()==0) -> result+=parseVersionInfo(doc,)@!(doc.select("#psearchres",).size()==0) } CATCH(Exception) { -> result=e.getMessage()@ }
results[https://github.com/storm345dev/MarioKart/blob/87406e044f85f266e0e2301c791921b91acb33ae/src/main/java/net/stormdev/RPManager/RPManager.java][getURLFromCurseForgePage][1] = -> TRY {  -> con=Jsoup.connect("http://minecraft.curseforge.com/texture-packs/mario-kart-resource-pack/",)@ -> con.followRedirects(true,)@ -> TRY { -> doc=con.get()@ } CATCH(Exception) { -> MarioKart.logger.info("Unable to determine URL of MarioKart RP! Using built in default version...",)@ } -> IF { -> return fallbackURL@downloadButton==null } -> pageURL=downloadButton.absUrl("href",)@!(downloadButton==null) -> con=Jsoup.connect(pageURL,)@!(downloadButton==null) -> con.followRedirects(true,)@!(downloadButton==null) -> doc=con.get()@!(downloadButton==null) -> IF { -> return fallbackURL@!(downloadButton==null) && link==null } -> IF { -> return fallbackURL@downloadURL==null||downloadURL.length()<1 && !(downloadButton==null) && !(link==null) } } CATCH(IOException) {}
results[https://github.com/hansson/rento/blob/cbfbbdd722bed692912609ee8dd37cda7061a42f/src/main/java/com/hansson/rentit/apartments/SBFApartments.java][getAvailableApartments][2] = -> TRY { -> doc=Jsoup.connect(BASE_URL+"/pages/Lediga_lagenheter.aspx",).get()@ -> apartments=doc.getElementsByClass("listRow",)@ -> apartments.addAll(doc.getElementsByClass("listRowGray",),)@ -> LOOP { -> TRY { -> apartment.setUrl(BASE_URL+element.getElementsByTag("a",).attr("href",),)@ } CATCH(Exception) { -> mLog.error(LANDLORD+" error on element #"+apartments.indexOf(element,),)@apartments.size() > 0 -> e.printStackTrace()@ } } -> e.printStackTrace()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/hansson/rento/blob/035342925e4f53f426cd394300071e1b460742cc/src/main/java/com/hansson/rento/apartments/UtklippanApartments.java][getAvailableApartments][3] = -> TRY { -> doc=Jsoup.connect(BASE_URL+"/pages/fastigheter/ledigt-just-nu.php",).get()@ -> apartments=doc.getElementById("wrapper",).getElementsByTag("tr",)@ -> LOOP { -> TRY { -> apartment.setUrl(BASE_URL+element.getElementsByTag("td",).get(0,).getElementsByTag("a",).attr("href",),)@ } CATCH(Exception) { -> mLog.error(LANDLORD+" error on element #"+apartments.indexOf(element,),)@apartments.size() > 0 -> e.printStackTrace()@ } } -> e.printStackTrace()@ } CATCH(IOException) { -> e.printStackTrace()@ }
results[https://github.com/dendrite/viscosity/blob/8f70f3b380d494f91a988be4d8b641607283134c/Glia/glia-examples/src/test/java/com/reversemind/glia/go.java][main][1] = -> TRY {  -> doc=Jsoup.connect(parseUrl,).ignoreContentType(true,).timeout(3000,).followRedirects(true,).referrer("http://www.google.com",).get()@ -> masthead=doc.select("body",).first()@ -> doc.outputSettings().charset("UTF-8",)@ -> title=doc.title()@ -> LOG.debug(URLDecoder.decode(doc.body().html().toString(),"UTF-8",),)@ -> LOG.debug(doc.html(),)@ -> s2=Jsoup.clean(doc.html(),Whitelist.basic(),)@ -> actualObj=mapper.readValue(doc.html().toString(),JsonNode.class,)@ } CATCH(Exception) {}
results[https://github.com/dzolo/sudoku_portlet/blob/3e4d3eacfbedfa774610a609531c0fe7820c839b/src/main/java/org/gatein/portal/examples/games/sudoku/provider/publisher/driver/RahanWzCzPeriodiclServiceDriver.java][getGame][1] = -> TRY {  -> doc=Jsoup.connect(getService().getUrl(),).get()@ -> inputs=doc.select("table tr td input",)@ -> LOOP { -> IF { } ELSE { -> IF { -> TRY { -> IF { -> throw new ArrayIndexOutOfBoundsException("Invalid name of a remote field",)@inputs.size() > 0 } -> IF { -> throw new Exception("A set value cannot be re-set",)@inputs.size() > 0 } -> IF { -> throw new Exception("A wrong value: "+values[index],)@values[index]<=0||values[index]>9 && inputs.size() > 0 } } CATCH(Exception) { -> throw new IOException("Invalid content obtained",ex,)@inputs.size() > 0 } } } } } CATCH(IOException) {}
results[https://github.com/dzolo/sudoku_portlet/blob/dad74a8a0d8603207af35e8115545e5aee8ce6ce/src/main/java/org/gatein/portal/examples/games/sudoku/provider/publisher/driver/RahanWzCzPeriodicalServiceDriver.java][getGame][1] = -> TRY {  -> doc=Jsoup.connect(getService().getUrl(),).timeout(TIMEOUT,).get()@ -> inputs=doc.select("table tr td input",)@ -> LOOP { -> IF { } ELSE { -> IF { -> TRY { -> IF { -> throw new ArrayIndexOutOfBoundsException("Invalid name of a remote field",)@inputs.size() > 0 } -> IF { -> throw new Exception("A set value cannot be re-set",)@inputs.size() > 0 } -> IF { -> throw new Exception("A wrong value: "+values[index],)@values[index]<=0||values[index]>9 && inputs.size() > 0 } } CATCH(Exception) { -> throw new IOException("Invalid content obtained",ex,)@inputs.size() > 0 } } } } } CATCH(IOException) {}
results[https://github.com/enina/AdvertManager/blob/09ce6bce3e4a4494685972873acf4d8d9bd7bc9f/src/java/com/mne/adman/test/Driver.java][main][1] = -> TRY { -> con=Jsoup.connect("http://friedmanspace:8080/AdvertManager/",)@ -> con.get()@ -> con.url("http://friedmanspace:8080/AdvertManager/j_spring_security_check",)@ -> con.followRedirects(false,)@ -> doc=con.data("j_username","ilya","j_password","ilya",).post()@ -> sesId=con.response().cookie("JSESSIONID",)@ -> con.followRedirects(true,)@ -> iter=con.request().data().iterator()@ -> con.url("http://friedmanspace:8080/AdvertManager/",)@ -> con.cookie("JSESSIONID",sesId,)@ -> doc=con.get()@ } CATCH(Exception) { -> System.out.println("failure",)@ } FINALLY { -> TRY { -> IF { -> con.url("http://friedmanspace:8080/AdvertManager/j_spring_security_logout",)@con!=null } FINALLY { -> con.get()@con!=null } -> Logger.getLogger(Driver.class.getName(),).log(Level.SEVERE,"failed to logout",ex,)@ } }
results[https://github.com/enina/AdvertManager/blob/aeec85acaa3461af47b712962cfee22dba87591d/src/java/com/mne/advertmanager/util/JSoupTransport.java][login][1] = -> TRY { -> url=proj.getBaseURL()+proj.getHomePage()@ -> logger.log(Level.FINE,"Login:::Retrieve HomePage::: URL:{0}",url,)@ -> result=Jsoup.connect(url,).timeout(100000,)@ -> doc=result.get()@ -> result.url(loginUrl,)@ -> result.followRedirects(false,)@ -> firstCookie=result.response().cookie(proj.getCookieName(),)@ -> doc=result.data(proj.getUserField(),proj.getUsername(),proj.getPasswordField(),proj.getPassword(),).post()@ -> secondCookie=result.response().cookie(proj.getCookieName(),)@ -> result.followRedirects(true,)@ -> result.request().data().clear()@ -> IF { -> result.cookie(proj.getCookieName(),sesId,)@sesId!=null&&sesId.length()>0 } } CATCH(Exception) { -> logger.log(Level.SEVERE,"Authentication failure connecting to {0} , Exception {1}, Message {2}", new Object[],)@ }
results[https://github.com/apache/maven-sandbox/blob/535e14a6dafed64d30317c29574095f54a2a9d2b/dist-tools/dist-tool-plugin/src/main/java/org/apache/maven/dist/tools/DistCheckSiteMojo.java][checkSite][1] = -> TRY { -> siteUrl=sites.get(cli.getArtifactId(),)@ -> IF { -> siteUrl=sites.get(cli.getArtifactId()+':'+version,)@siteUrl==null -> IF { -> siteUrl=artifactProject.getUrl()@siteUrl==null } } -> result.setUrl(siteUrl,)@ -> doc=Jsoup.connect(siteUrl,).get()@ -> LOOP { -> result.getCheckMap().put(c,c.isOk(doc,version,),)@ } -> result.setDocument(doc,)@ } CATCH(HttpStatusException) { -> addErrorLine(cli,version,ignoreSiteFailures,"HTTP result code: "+hes.getStatusCode()+" for "+cli.getArtifactId()+" site = "+hes.getUrl(),)@ -> result.setHTTPErrorUrl(hes.getStatusCode(),)@ } CATCH(Exception) { -> getLog().error(ex.getMessage()+cli.getArtifactId(),)@ }
results[https://github.com/c2nes/ircbot/blob/0b9d3dd88238a481c5e473bf0f606c0e3f0ab17c/src/org/transtruct/cmthunes/ircbot/applets/UrbanDictionaryApplet.java][run][2] = -> TRY { -> IF { -> url=new URLBuilder("http://www.urbandictionary.com/random.php",)@ } ELSE { -> url=new URLBuilder("http://www.urbandictionary.com/define.php",)@ -> url.setParameter("term",unparsed,)@ } -> LOOP { -> con=Jsoup.connect(url.toString(),)@ -> con.followRedirects(false,)@ -> con.execute()@ -> IF { -> doc=con.response().parse()@con.response().statusCode()==200 } ELSE { -> IF { -> url=new URLBuilder(con.response().header("Location",),)@con.response().statusCode()==302 && !(con.response().statusCode()==200) } ELSE { -> return @!(con.response().statusCode()==200) && !(con.response().statusCode()==302) } } } } CATCH(IOException) { -> channel.write("Unknown error occured",)@ -> e.printStackTrace()@ } } ELSE { -> TRY { -> IF { -> response=url.getQueryParameter("term",)+": "+longestLine@ } } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/c2nes/ircbot/blob/9c21c2e779ef6521f023058fb2d5169f69717b57/src/org/transtruct/cmthunes/ircbot/applets/WikiApplet.java][run][2] = -> IF { -> return @unparsed.trim().length()==0 } -> TRY { -> url=new URLBuilder("http://en.wikipedia.org/w/index.php",)@!(unparsed.trim().length()==0) -> url.setParameter("search",unparsed,)@!(unparsed.trim().length()==0) -> LOOP { -> con=Jsoup.connect(url.toString(),)@!(unparsed.trim().length()==0) -> con.followRedirects(false,)@!(unparsed.trim().length()==0) -> con.execute()@!(unparsed.trim().length()==0) -> IF { -> doc=con.response().parse()@!(unparsed.trim().length()==0) && con.response().statusCode()==200 } ELSE { -> IF { -> url=new URLBuilder(con.response().header("Location",),)@con.response().statusCode()==302 && !(con.response().statusCode()==200) && !(unparsed.trim().length()==0) } ELSE { -> return @!(con.response().statusCode()==200) && !(con.response().statusCode()==302) && !(unparsed.trim().length()==0) } } } } CATCH(MalformedURLException) { -> e.printStackTrace()@!(unparsed.trim().length()==0) } CATCH(IOException) { -> channel.write("No such article",)@!(unparsed.trim().length()==0) } } ELSE { -> TRY { -> IF { -> channel.write(url.toString(),)@!(unparsed.trim().length()==0) } } CATCH(Exception) { -> e.printStackTrace()@!(unparsed.trim().length()==0) }
results[https://github.com/c2nes/ircbot/blob/aa22892f512826e0384218547b0a00bfdbed8fdb/brewtab-ircbot/src/main/java/com/brewtab/ircbot/applets/UrbanDictionaryApplet.java][run][1] = -> TRY { -> IF { -> url=new URLBuilder("http://www.urbandictionary.com/random.php",)@ } ELSE { -> url=new URLBuilder("http://www.urbandictionary.com/define.php",)@ -> url.setParameter("term",unparsed,)@ } -> LOOP { -> con=Jsoup.connect(url.toString(),)@ -> con.followRedirects(false,)@ -> con.execute()@ -> IF { -> doc=con.response().parse()@con.response().statusCode()==200 } ELSE { -> IF { -> url=new URLBuilder(con.response().header("Location",),)@con.response().statusCode()==302 && !(con.response().statusCode()==200) } ELSE { -> return @!(con.response().statusCode()==200) && !(con.response().statusCode()==302) } } } } CATCH(IOException) { -> channel.write("Unknown error occured",)@ -> log.error("caught exception while loading page",e,)@ } } ELSE { -> TRY { -> IF { -> response=url.getQueryParameter("term",)+": "+longestLine@ } } CATCH(Exception) { -> log.error("caught exception while parsing",e,)@ }
results[https://github.com/c2nes/ircbot/blob/aa22892f512826e0384218547b0a00bfdbed8fdb/brewtab-ircbot/src/main/java/com/brewtab/ircbot/applets/WikiApplet.java][run][1] = -> IF { -> return @unparsed.trim().length()==0 } -> TRY { -> url=new URLBuilder("http://en.wikipedia.org/w/index.php",)@!(unparsed.trim().length()==0) -> url.setParameter("search",unparsed,)@!(unparsed.trim().length()==0) -> LOOP { -> con=Jsoup.connect(url.toString(),)@!(unparsed.trim().length()==0) -> con.followRedirects(false,)@!(unparsed.trim().length()==0) -> con.execute()@!(unparsed.trim().length()==0) -> IF { -> doc=con.response().parse()@!(unparsed.trim().length()==0) && con.response().statusCode()==200 } ELSE { -> IF { -> url=new URLBuilder(con.response().header("Location",),)@con.response().statusCode()==302 && !(con.response().statusCode()==200) && !(unparsed.trim().length()==0) } ELSE { -> return @!(con.response().statusCode()==200) && !(con.response().statusCode()==302) && !(unparsed.trim().length()==0) } } } } CATCH(MalformedURLException) { -> log.error("malformed url",e,)@!(unparsed.trim().length()==0) } CATCH(IOException) { -> log.warn("could not retrieve article",e,)@!(unparsed.trim().length()==0) -> channel.write("No such article",)@!(unparsed.trim().length()==0) } } ELSE { -> TRY { -> IF { -> channel.write(url.toString(),)@!(unparsed.trim().length()==0) } } CATCH(Exception) { -> log.error("could not parse document",e,)@!(unparsed.trim().length()==0) }
results[https://github.com/elyas-bhy/CampusUB1/blob/90d3d035172cd6dd36e15e7857512464804e0e01/source/src/com/dev/campus/directory/DirectoryManager.java][parseLabriDirectory][1] = -> TRY {  -> TRY { -> doc=Jsoup.connect("http://www.labri.fr/index.php?n=Annuaires.Noms&initiale=tout",).get()@ } CATCH(Exception) { -> CampusUB1App.LogD("Failed to retrieve LaBRI contacts",)@ } -> tables=doc.select("table[border=1][cellpadding=4][cellspacing=0][width=100%]",)@ } CATCH(IOException) {}
results[https://github.com/cp149/nzhelper/blob/d45eb0e3cb6d2b820d8d9631045879d498d2ecae/src/main/java/cp149/github/com/utils/HtmlUitl.java][readhtmlpage][1] = -> TRY {  -> LOOP { -> TRY { -> doc=Jsoup.connect(url,).get()@doc==null&&++times<retrytimes } CATCH(Exception) { -> TimeUnit.SECONDS.sleep(3+random.nextInt(5,),)@ } } } CATCH(InterruptedException) {}
results[https://github.com/AKSW/REX/blob/8d85886d4e7e6b4f132e6538dca9e8328d5c7f4a/src/test/java/org/aksw/rex/xpath/XPathGeneralizerTest.java][testGeneralizeXPathExpressions][2] = -> TRY {  -> log.debug("Extraction on URL "+url1,)@ -> doc=Jsoup.connect(url1,).get()@ -> nodeList=(NodeList) xpath.evaluate(generalizedXPath,org.aksw.rex.crawler.DOMBuilder.jsoup2DOM(doc,),XPathConstants.NODESET,)@ -> log.debug("Extraction on URL "+url2,)@ -> doc=Jsoup.connect(url2,).get()@ -> nodeList=(NodeList) xpath.evaluate(generalizedXPath,org.aksw.rex.crawler.DOMBuilder.jsoup2DOM(doc,),XPathConstants.NODESET,)@ } CATCH(Exception) {}
results[https://github.com/KhArtNJava/ftspc/blob/2a1d8efcca7710b4933ec7d9a722c7f2aa070a1e/Indexer/src/main/java/name/khartn/ftspc/indexer/Net/Crawler/CrawlersProcessPageThread.java][processPage][1] = -> TRY { -> url=new URL(secondUrl,)@ -> IF { -> TRY { -> jsoupConnection=Jsoup.connect(secondUrl,)@ -> doc=jsoupConnection.get()@ } CATCH(Exception) { -> TRY { -> jsoupConnection=Jsoup.connect(secondUrl,)@ } } } }
results[https://github.com/christofferh/nbi/blob/80e1a7806bca903c6c0e87030f741097ee76615c/03/task-3/src/de/fub/searchengine/IndexLucene.java][indexUrl][3] = -> TRY {  -> TRY { -> htmlDoc=Jsoup.connect(url,).get()@ -> meta=htmlDoc.select("meta[name=keywords]",)@ -> title=htmlDoc.title()@ -> text=htmlDoc.text()@ -> h1=htmlDoc.select("h1",)@ -> img=htmlDoc.getElementsByTag("img",)@ -> urlField=new TextField("url",url,Field.Store.YES,)@ } CATCH(Exception) { -> System.out.println(e,)@ } } CATCH(IOException) {}
results[https://github.com/badqiu/fpcms/blob/63b83309f24f601376caaa696909659b0c43601f/fpcms/util/src/main/java/com/fpcms/common/webcrawler/htmlparser/SinglePageCrawler.java][extractArticleByJsoup][1] = -> TRY {  -> TRY { -> conn=Jsoup.connect(anchor.getHref(),)@ -> conn.userAgent("Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)",)@ -> conn.timeout(1000*6,)@ -> doc=conn.get()@ -> title=HtmlPageTitleUtil.smartGetTitle(anchor,doc.title(),)@ -> page.setAnchor(anchor,)@ -> IF { -> return null@StringUtils.length(page.getContent(),)<minContentLength } } CATCH(Exception) { -> throw new RuntimeException("error on extractArticleByJsoup anchor:"+anchor,e,)@ } } CATCH(IOException) {}
results[https://github.com/indrek-koue/SERP-Tracker-Android/blob/c4d210f20e48b74205e4871cbd5b1ea89e12c113/src/com/inc/im/serptrackerpremium/data/access/Download.java][download][1] = -> TRY {  -> con=Jsoup.connect(generateEscapedQueryString(a,keyword,),).userAgent(ua,).header("Accept","text/plain",).timeout(TIMEOUT,)@ -> IF { -> TRY { -> doc=con.get()@con!=null } CATCH(Exception) { -> e.printStackTrace()@con!=null } -> return doc@con!=null } ELSE { -> return null@!(con!=null) } } CATCH(Exception) {}
results[https://github.com/meoden1005/PaperMiner/blob/e29988c75aace7b3a8fb95e07703238b0efb05c6/src/au/org/paperminer/ws/WebController.java][getPage][2] = -> TRY {  -> doc=Jsoup.connect(requestBody,).get()@ -> element=doc.getElementById("initiateCite",)@ -> doc1=Jsoup.connect("http://trove.nla.gov.au"+element.attr("href",),).get()@ -> links=doc1.getElementsByTag("a",)@ -> pageNumber=new String()@ -> LOOP { -> IF { -> pageNumber=matcher.replaceAll(new String(),)@matcher.find() } } -> doc2=Jsoup.connect("http://trove.nla.gov.au/ndp/del/page/"+pageNumber+"?zoomLevel=1",).get()@ -> elements1=doc2.getElementsByAttributeValue("title","Download a PDF containing all pages from this issue",)@ } CATCH(Exception) {}
results[https://github.com/KhArtNJava/ftspc/blob/147c58c9b94e49b21a9683ae57d7d49c5ccf11a5/Crawler/src/main/java/name/khartn/ftspc/indexer/net/crawler/CrawlersProcessPageThread.java][processPage][2] = -> TRY { -> url=new URL(secondUrl,)@ -> IF { -> TRY { -> jsoupConnection=Jsoup.connect(secondUrl,)@ -> IF { -> doc=jsoupConnection.timeout(70000,).cookies(Vars.cookies,).get()@ } ELSE { -> doc=jsoupConnection.timeout(70000,).get()@ } } CATCH(Exception) { -> TRY { -> jsoupConnection=Jsoup.connect(secondUrl,)@ } } } }
results[https://github.com/AntonioCollarino/MusicFeatureExtractor/blob/5bff02dfc5f4adcd6129cca80e4502cea42bd4f9/src/wikipedia/ArtistBiography.java][getArtistBiography][1] = -> TRY {  -> IF { -> throw new ArtistBiographyException("The expected url is not the english version of wikipedia web site",)@url.contains("en.wikipedia",)==false } -> TRY { -> conn=Jsoup.connect(url,)@!(url.contains("en.wikipedia",)==false) -> conn.timeout(ArtistBiography.timeOut,)@!(url.contains("en.wikipedia",)==false) -> doc=conn.get()@!(url.contains("en.wikipedia",)==false) -> IF { -> return null@bio.equals("[From en.wikipedia] ",) && !(url.contains("en.wikipedia",)==false) } } CATCH(IOException) { -> throw new ArtistBiographyException("IOException "+e.getMessage(),e,)@!(url.contains("en.wikipedia",)==false) } CATCH(Exception) { -> throw new ArtistBiographyException("Exception "+e.getMessage(),e,)@!(url.contains("en.wikipedia",)==false) } } CATCH(ArtistBiographyException) {}
results[https://github.com/Avricot/prediction/blob/3935cf30387f73f99d0f0b452a9bc8efa2e61bb9/prediction-sentiments/src/main/java/com/avricot/prediction/sentiment/AnalysePolarite.java][evaluateURLPolarite][1] = -> TRY {  -> LOOP { -> TRY { -> doc=Jsoup.connect(currentUrl,).timeout(2500,).get()@ -> IF { -> splittedArticle=doc.body().text().split("\\.",)@doc.body()!=null&&!(doc.body().text().isEmpty()) } } CATCH(IOException) { -> LOG.error("ERREUR EN SCANNANT URL : "+currentUrl,)@ } CATCH(Exception) { -> LOG.error("EXCEPTION",)@ } } } CATCH(IOException) {}
results[https://github.com/bammaster/PolyMealProject/blob/ce97f5d95dbba74cf728bc2049be4d8b8eb42cec/PolyMeal/src/main/java/com/mustangexchange/polymeal/MainActivity.java][run][1] = -> TRY { -> one=Jsoup.connect("http://dining.calpoly.edu/menus/?lid=1014&name=VG%20Cafe",).timeout(10000,)@ -> two=Jsoup.connect("http://dining.calpoly.edu/menus/?lid=1012&name=Sandwich%20Factory",).timeout(10000,)@ -> three=Jsoup.connect("http://dining.calpoly.edu/menus/?lid=1006&name=Tacos%20To%20Go",).timeout(10000,)@ -> docVg=one.get()@ -> docSand=two.get()@ -> docTaco=three.get()@ } CATCH(Exception) { -> IF { -> uiUpdate.post(new Runnable(),)@ } ELSE { -> appSharedPrefs=getSharedPreferences("PolyMeal",MODE_PRIVATE,)@ -> uiUpdate.post(new Runnable(),)@ } }
results[https://github.com/apache/karaf-cave/blob/1a56729609f80e385297ae816953afac313118b8/server/backend/filesystem/src/main/java/org/apache/karaf/cave/server/backend/impl/CaveRepositoryImpl.java][proxyHttp][1] = -> TRY {  -> LOGGER.debug("Proxying HTTP URL {}",url,)@ -> httpGet=new HttpGet(url,)@ -> IF { -> IF { -> TRY { -> resource=new DataModelHelperImpl().createResource(new URL(url,),)@ } CATCH(IllegalArgumentException) { -> LOGGER.warn(e.getMessage(),)@ } } ELSE { -> document=Jsoup.connect(url,).get()@ -> links=document.select("a",)@ } } } CATCH(Exception) {}
results[https://github.com/gckjdev/GroupBuy_Data_Fetcher/blob/d3d07153e5a445c835696b2eb0041375c99705db/src/com/orange/groupbuy/addressparser/GaopengAddressParser.java][doParseAddress][1] = -> TRY { -> connection=Jsoup.connect(url,).timeout(RequestConstants.ADDRESS_PARSER_CONNECTION_TIMEOUT,)@ -> doc=connection.get()@ -> IF { -> LOOP { -> IF { -> urlString=getUrlFromWeb("u=\'","\';",string,)@doc!=null } } -> IF { -> return null@doc!=null && urlString==null||urlString.isEmpty() } -> connection=Jsoup.connect(urlString,).timeout(RequestConstants.ADDRESS_PARSER_CONNECTION_TIMEOUT,)@doc!=null && !(urlString==null||urlString.isEmpty()) -> doc=connection.get()@doc!=null && !(urlString==null||urlString.isEmpty()) -> super.find_common_add(doc,urlString,)@doc!=null && !(urlString==null||urlString.isEmpty()) -> return super.addList@doc!=null && !(urlString==null||urlString.isEmpty()) } ELSE { -> return null@!(doc!=null) } } CATCH(Exception) { -> log.error("<doParseAddress> url = "+url+" catch exception = "+e.toString(),e,)@ }
results[https://github.com/mmx900/ManalithBot/blob/8e985756c1e6e74bf8f6b43b37b15a71db75e2b2/ManalithBot/src/main/java/org/manalith/ircbot/plugin/cer2/SQLiteTableManager.java][insertDataToTable][2] = -> TRY {  -> TRY { -> trs=Jsoup.connect(url,).get().select("div.tbl_area",).get(0,).select("table.tbl_exchange",).get(0,).select("tbody",).get(0,).select("tr",)@ -> size=trs.size()@ -> LOOP { -> LOOP { -> tds=trs.get(i,).select("td",)@i<size } } } CATCH(Exception) { -> e.printStackTrace()@ } } CATCH(SQLException) {}
results[https://github.com/mmx900/ManalithBot/blob/8da6d63489d6d5c852e73a8e71a837082369f304/ManalithBot/src/main/java/org/manalith/ircbot/plugin/cer2/HSQLDBTableManager.java][insertDataToTable][1] = -> TRY {  -> TRY { -> trs=Jsoup.connect(url,).get().select("div.tbl_area",).get(0,).select("table.tbl_exchange",).get(0,).select("tbody",).get(0,).select("tr",)@ -> size=trs.size()@ -> LOOP { -> LOOP { -> tds=trs.get(i,).select("td",)@i<size } } } CATCH(Exception) { -> logger.error(e,)@ } } CATCH(SQLException) {}
results[https://github.com/grudelsud/fom/blob/598522459ed780dc9d2858a13819bf809cf44410/java/fom/src/fom/streamcapturing/PostQueueProcessor.java][run][1] = -> LOOP { -> TRY { -> LOOP { -> TRY { -> doc=Jsoup.connect(link,).get()@ -> IF { -> lang=langIdentifier.identifyLanguageOf(doc.body().text(),)@!(BlacklistChecker.isBlacklisted(doc.baseUri(),)) -> currentPost.addLink(new Link(doc.baseUri(),doc.body().text(),lang,objMapper.writeValueAsString(meta,),),)@!(BlacklistChecker.isBlacklisted(doc.baseUri(),)) && StringOperations.extractURLs(currentPost.getContent(),) } } CATCH(Exception) { -> System.err.println("Invalid link found",)@ } } -> e1.printStackTrace()@ } }
results[https://github.com/apache/karaf-cave/blob/f740a19159ab48f69924bc6340abc6d0b52c382e/server/storage/src/main/java/org/apache/karaf/cave/server/storage/CaveRepositoryImpl.java][proxyHttp][1] = -> TRY {  -> LOGGER.debug("Proxying HTTP URL {}",url,)@ -> httpGet=new HttpGet(url,)@ -> IF { -> IF { -> TRY { -> IF { -> resource=new DataModelHelperImpl().createResource(new URL(url,),)@filter==null||url.matches(filter,) } } CATCH(IllegalArgumentException) { -> LOGGER.warn(e.getMessage(),)@ } } ELSE { -> TRY { -> document=Jsoup.connect(url,).get()@ -> links=document.select("a",)@ } } } } CATCH(Exception) {}
results[https://github.com/sernav/SRILandaRepo/blob/d0aa50a5ab2bd3cb00ad9bd07c75cad7cc943dc1/ToolsSRILanda/src/es/uclm/sri/sis/scrape/webscraping/ScrapingLastfm.java][scrappingWeb][2] = -> LOOP { -> TRY { -> doc=Jsoup.connect(urlAnalyze,).timeout(10*1000,).get()@ -> links=doc.select("a[href]",)@ -> LOOP { -> IF { -> IF { -> docArtista=Jsoup.connect(link.attr("abs:href",),).get()@ -> procesarLinkAlbums(docArtista,artista,)@ } } } } CATCH(SocketTimeoutException) { -> System.out.println(" <<<<<< ERROR TIME OUT >>>>>",)@ -> sto.printStackTrace()@ } CATCH(IOException) { -> e.printStackTrace()@ } CATCH(Exception) { -> e.printStackTrace()@ } }
results[https://github.com/indrek-koue/SERP-Tracker-Android/blob/41f4f0c8712d2cd9dc91c026fc2cf45d4f8254a3/src/com/inc/im/serptracker/data/access/Download.java][download][1] = -> TRY {  -> IF { -> httpQuery=generateEscapedQueryString(a,keyword,)@ } ELSE { -> IF { -> httpQuery=generateEscapedQueryString(a,keyword,)+"&num=100"@ } ELSE { -> httpQuery=generateEscapedQueryString(a,keyword,)+"&start="+pageNum*10@!(pageNum==0) && !(pageNum==-1) } } -> Log.i("MY","QUERY: "+httpQuery,)@ -> con=Jsoup.connect(httpQuery,).userAgent(ua,).header("Accept","text/plain",).timeout(TIMEOUT,)@ -> IF { -> TRY { -> doc=con.get()@con!=null } CATCH(Exception) { -> e.printStackTrace()@con!=null } -> return doc@con!=null } ELSE { -> return null@!(con!=null) } } CATCH(Exception) {}
results[https://github.com/martinrevert/aRGENTeaM/blob/8306ac4c5cdb72258699bc86e3ac15413ded9a40/aRGENTeaM/src/main/java/ar/com/martinrevert/argenteam/TvSeasons.java][doInBackground][2] = -> LOOP { -> TRY { -> doc=Jsoup.connect(query[0],).timeout(60000,).cookie("tca","Y",).get()@ } CATCH(Exception) { -> e.printStackTrace()@ -> IF { -> CATCH(Exception) { -> e1.printStackTrace()@ } } } } -> deta=doc.select("div.details",).first().text()@ -> poster=doc.select("div.pmovie > img",).first()@ -> titulo=doc.select("div.pmovie > h1",).first()@ -> IF { -> puntaje=doc.select("div.score",).first()@doc.select("div.score",).first()!=null } -> items=doc.select("div.pmovie > div.item",).iterator()@ -> seasons=doc.select("div.season-list > div.season-item > a",).iterator()@
results[https://github.com/apache/karaf-cave/blob/1a56729609f80e385297ae816953afac313118b8/server/backend/filesystem/src/main/java/org/apache/karaf/cave/server/backend/impl/CaveRepositoryImpl.java][populateFromHttp][1] = -> TRY {  -> LOGGER.debug("Populating from HTTP URL {}",url,)@ -> httpGet=new HttpGet(url,)@ -> IF { -> IF { -> TRY { -> resource=(ResourceImpl) new DataModelHelperImpl().createResource(new URL(url,),)@ -> IF { -> LOGGER.debug("Copy {} into the Karaf Cave repository storage",url,)@ -> index=url.lastIndexOf("/",)@ -> IF { -> url=url.substring(index,)@index>0 } -> destination=new File(new File(this.getLocation(),),url,)@ } } CATCH(IllegalArgumentException) { -> LOGGER.warn(e.getMessage(),)@ } } ELSE { -> document=Jsoup.connect(url,).get()@ -> links=document.select("a",)@ } } } CATCH(Exception) {}
results[https://github.com/amcereijo/trcardmanager/blob/33e6afb7b083e54c621428e0c0fd528658f5d0eb/src/com/trcardmanager/http/TRCardManagerHttpUserAction.java][callRecoverPassword][1] = -> TRY {  -> TRY { -> postMap=new HashMap<String, String>()@ -> postMap.put(LANG_PARAMETER,LANG_PARAMETER_VALUE,)@ -> postMap.put(RECOVER_USER_PARAMETER,email,)@ -> response=Jsoup.connect(URL_BASE+URL_RECOVER_PASSWORD,).data(postMap,).execute()@ } CATCH(IOException) { -> Log.e(TAG,e.getMessage(),e,)@ -> throw new TRCardManagerRecoverPasswordException(TRCardManagerRecoverPasswordException.CONECTION_ERROR,)@ } CATCH(Exception) { -> Log.e(TAG,e.getMessage(),e,)@ -> throw new TRCardManagerRecoverPasswordException(TRCardManagerRecoverPasswordException.UNKNOWN_ERROR,)@ } -> IF { -> responseString=response.body()@response!=null -> IF { -> throw new TRCardManagerRecoverPasswordException(TRCardManagerRecoverPasswordException.BAD_USER,)@RECOVER_RESPONSE_ERROR.equals(responseString,) && response!=null } ELSE { -> IF { -> throw new TRCardManagerRecoverPasswordException(TRCardManagerRecoverPasswordException.UNKNOWN_ERROR,)@!(RECOVER_RESPONSE_OK.equals(responseString,)) && !(RECOVER_RESPONSE_ERROR.equals(responseString,)) && response!=null } } } } CATCH(TRCardManagerRecoverPasswordException) {}
