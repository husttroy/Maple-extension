results[https://github.com/OSAStudio/newshub/blob/14d3306a4813dc751901c9d6212ea9177a09496b/src/com/osastudio/newshub/utils/InputStreamHelper.java][getInputStream] = -> TRY { -> IF { -> this.is=new FileInputStream(this.path,)@!(this.is!=null) && this.path!=null } -> IF { -> this.is=this.url.openConnection().getInputStream()@!(this.is!=null) && this.url!=null } }
results[https://github.com/klew00/okapi/blob/754655c5d9f318f013140e624c007c97cfdd0665/okapi/steps/formatconversion/src/main/java/net/sf/okapi/steps/formatconversion/CorpusFilterWriter.java][close] = -> TRY { -> IF { -> Util.copy(new FileInputStream(srcTempFile,),srcOutputPath,)@srcTempFile!=null } -> IF { -> Util.copy(new FileInputStream(trgTempFile,),trgOutputPath,)@trgTempFile!=null } }
results[https://github.com/shantanusharma/barna/blob/6796a6c942f719fb62edc2a0b16d6c1da3fd6321/fbi/fbi.genome.io/src/main/java/fbi/genome/io/ThreadedBufferedByteArrayStream.java][run] = -> TRY { -> IF { -> IF { -> inStream=new FileInputStream(f,)@f!=null } -> IF { -> inStream.close()@ } } }
results[https://github.com/shantanusharma/barna/blob/07822a56f77130d2b5a752c2208d99e67f95f1c3/barna.io/src/main/java/barna/genome/io/ThreadedBufferedByteArrayStream.java][run] = -> TRY { -> IF { -> IF { -> inStream=new FileInputStream(f,)@f!=null } -> IF { -> inStream.close()@ } } }
results[https://github.com/spartansw/okapi/blob/d8b644a5b8e7a05349921e821005e3c4987c7aa3/okapi/steps/formatconversion/src/main/java/net/sf/okapi/steps/formatconversion/CorpusFilterWriter.java][close] = -> TRY { -> IF { -> Util.copy(new FileInputStream(srcTempFile,),srcOutputPath,)@srcTempFile!=null } -> IF { -> Util.copy(new FileInputStream(trgTempFile,),trgOutputPath,)@trgTempFile!=null } }
results[https://github.com/shantanusharma/barna/blob/957510c17f9d7f6481dacf02b1bae938b9b38dc0/fbi.genome.io/src/main/java/fbi/genome/io/ThreadedBufferedByteArrayStream.java][run] = -> TRY { -> IF { -> IF { -> inStream=new FileInputStream(f,)@f!=null } -> IF { -> inStream.close()@ } } }
results[https://github.com/shantanusharma/barna/blob/e14494c00a83fa500dbd5c2949ca401688ee1d37/barna.io/src/main/java/barna/io/ThreadedBufferedByteArrayStream.java][run] = -> TRY { -> IF { -> IF { -> inStream=new FileInputStream(f,)@f!=null } -> IF { -> inStream.close()@ } } }
results[https://github.com/shantanusharma/barna/blob/173831d6c258d9273cb6cf2860f3012c610f05dc/barna/barna.io/src/main/java/barna/genome/io/ThreadedBufferedByteArrayStream.java][run] = -> TRY { -> IF { -> IF { -> inStream=new FileInputStream(f,)@f!=null } -> IF { -> inStream.close()@ } } }
results[https://github.com/shantanusharma/barna/blob/173831d6c258d9273cb6cf2860f3012c610f05dc/barna/barna.io/src/main/java/barna/genome/io/AbstractFileIOWrapper.java][getInputStream] = -> TRY {  -> IF { -> throw new NullPointerException("No input file specified",)@inputFile==null } -> inputStream=new FileInputStream(inputFile,)@!(inputFile==null) -> IF { -> inputStream=new GZIPInputStream(inputStream,)@!(inputFile==null) } } CATCH {}
results[https://github.com/apavlo/h-store/blob/e1f70e244e03e6adc24af4950455535ee2119e5f/src/frontend/gpl_vcr/org/voltdb/debugstate/ContextLoader.java][run] = -> LOOP { -> inFile=inFiles.pollFirst()@ -> TRY { -> ois=new ObjectInputStream(new FileInputStream(inFile,),)@!(inFile==null) -> temp=ois.readObject()@!(inFile==null) -> IF { -> contexts.add((VoltThreadContext) temp,)@!(inFile==null) && temp instanceof VoltThreadContext } } }
