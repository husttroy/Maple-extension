results[https://github.com/restlet/restlet-framework-java/blob/5e3a11301a9e7ed297411292e7c97292575d2a02/plugins/internal/com.noelios.restlet/src/com/noelios/restlet/impl/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/AndrewChanChina/cmsserver/blob/d5cf03a2841f823cd8a8d4c4313e55e88438097c/test/com/smit/productcontrol/testServcie/XDEncodeHelper.java][encode] = -> TRY { -> byteUtf8=strWhiteText.getBytes("utf-8",)@ -> deskey=new SecretKeySpec(strKey.getBytes(),KEYTYPE,)@ -> c1.init(Cipher.ENCRYPT_MODE,deskey,ips,)@ -> byteTemp=c1.doFinal(byteUtf8,)@ }
results[https://github.com/carnero/c-geo/blob/d92c90355b43a0c12508888132bbeb3880dac89b/src/carnero/cgeo/cgBase.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
results[https://github.com/carnero/cgeo-original/blob/ad7cb876ef663c3dd06f400fff6c70c80a0a124c/src/carnero/cgeo/original/libs/Base.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
results[https://github.com/restlet/restlet-framework-java/blob/0eaf0666de4a80123a0f7692775a88d74029cf25/internal/com.noelios.restlet/src/com/noelios/restlet/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/social-computing/jmi-server/blob/4bf18c213b7fe1e41da6fa790e088bf150f876eb/src/main/java/com/socialcomputing/wps/server/plandictionary/connectors/utils/OAuthHelper.java][getOAuthSignature] = -> TRY {  -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ } } CATCH {}
results[https://github.com/restlet/restlet-framework-java/blob/8cfe60acde5594f0d9008e529de3cd774596c2a9/plugins/internal/com.noelios.restlet/src/com/noelios/restlet/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/killbilling/recurly-java-library/blob/035d1c79d67c2d4549e2a2360d561a262d98f57d/src/main/java/com/ning/billing/recurly/RecurlyJs.java][generateRecurlyHMAC] = -> TRY { -> sk=new SecretKeySpec(privateJsKey.getBytes(),"HmacSHA1",)@ -> mac.init(sk,)@ -> result=mac.doFinal(protectedParams.getBytes("UTF-8",),)@ }
results[https://github.com/AndrewChanChina/cmsserver/blob/d5cf03a2841f823cd8a8d4c4313e55e88438097c/test/com/smit/productcontrol/testServcie/TripleDES.java][getEncString] = -> TRY { -> keySpec=new SecretKeySpec(key.getBytes(),"TripleDES",)@ -> nCipher.init(Cipher.ENCRYPT_MODE,keySpec,)@ -> v=nCipher.doFinal(originStr.getBytes(),)@ }
results[https://github.com/greese/dasein-cloud-cloudstack/blob/b806784162e2d87cd7b7d45610dd3263435ff141/src/main/java/org/dasein/cloud/cloudstack/CloudstackMethod.java][calculateHmac] = -> TRY {  -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> return mac.doFinal(data.getBytes(),)@ } } CATCH {}
