results[https://github.com/BroadleafCommerce/blc-authorizenet/blob/2e745f5c8d2b85048e31bcf781cc5d085392739e/src/main/java/org/broadleafcommerce/vendor/authorizenet/service/payment/AuthorizeNetCheckoutServiceImpl.java][createTamperProofSeal] = -> TRY {  -> publicKeySpec=new SecretKeySpec(transactionKey.getBytes(),"HmacSHA1",)@ -> sha1Mac.init(publicKeySpec,)@ -> publicBytes=sha1Mac.doFinal(customerOrderString.getBytes(),)@ } CATCH {}
results[https://github.com/schibsted/sdk-android/blob/aac3d7a5294d3f2e83bc9377cafbca0ee9ca1f38/SPiDSDK/src/com/schibsted/android/sdk/utils/SPiDUtils.java][getHmacSHA256] = -> TRY {  -> mac.init(new SecretKeySpec(key.getBytes(),"HmacSHA256",),)@ -> bs=mac.doFinal(string.getBytes(),)@ } CATCH {}
results[https://github.com/RemiNV/edtemps-ecn/blob/e9b803ee13ed8f59f8262f03b409135ed7676558/EdTempsECN/src/org/ecn/edtemps/managers/UtilisateurGestion.java][hmac_sha256] = -> TRY {  -> keySpec=new SecretKeySpec(password.getBytes(),"HmacSHA256",)@ -> mac.init(keySpec,)@ -> result=mac.doFinal(input.getBytes(),)@ } CATCH {}
results[https://github.com/javaswift/joss/blob/36c1ae1ff10a2bce1c76d2e69a0c329cc393df0a/src/main/java/org/javaswift/joss/util/HashSignature.java][getHmacMD5] = -> TRY {  -> keySpec=new SecretKeySpec(key.getBytes(),"HmacSHA1",)@ -> mac.init(keySpec,)@ -> hashBytes=mac.doFinal(input.getBytes(),)@ } CATCH {}
results[https://github.com/nysenate/BillBuzz/blob/6165aab6d00575deb03f9635754d0185b2703640/BBSignup/src/collect/XmlRpc.java][generateServicesHash] = -> TRY {  -> secret=new SecretKeySpec(API_KEY.getBytes(),"HmacSHA256",)@ -> mac.init(secret,)@ -> shaDigest=mac.doFinal(time+";"+BASE_URL+";"+nonce+";"+methodName.getBytes(),)@ } CATCH {}
results[https://github.com/klwork-social/main/blob/c5fe64c9758c7139184d0fa9950717129fad30d0/src/main/java/com/vdisk/utils/Signature.java][getHmacSHA1] = -> TRY {  -> secret=new SecretKeySpec(appKeyPair.secret.getBytes("UTF-8",),mac.getAlgorithm(),)@ -> mac.init(secret,)@ -> return mac.doFinal(src.getBytes(),)@ } CATCH {}
results[https://github.com/restlet/restlet-framework-java/blob/5e3a11301a9e7ed297411292e7c97292575d2a02/plugins/internal/com.noelios.restlet/src/com/noelios/restlet/impl/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/asktkhr/porunga-youroom/blob/aa965875dd8a08d8accde568194b1f1c7572afd3/src/jp/co/tokaneoka/youroomclient/YouRoomAccess.java][getSignature] = -> TRY {  -> mac=Mac.getInstance(ALGOTITHM,)@ -> key=new SecretKeySpec(keyString.getBytes(),ALGOTITHM,)@ -> mac.init(key,)@ -> digest=mac.doFinal(base.getBytes(),)@ } CATCH {}
results[https://github.com/asktkhr/porunga-youroom/blob/24436efbfb788a40dfbf0281d8529c7de1672c83/src/com/porunga/youroomclient/YouRoomAccess.java][getSignature] = -> TRY {  -> mac=Mac.getInstance(ALGOTITHM,)@ -> key=new SecretKeySpec(keyString.getBytes(),ALGOTITHM,)@ -> mac.init(key,)@ -> digest=mac.doFinal(base.getBytes(),)@ } CATCH {}
results[https://github.com/carnero/c-geo/blob/d92c90355b43a0c12508888132bbeb3880dac89b/src/carnero/cgeo/cgBase.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
