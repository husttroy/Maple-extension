results[https://github.com/projectrsc/ProjectRSC/blob/be9e2e1854a0e4b93816e52712c9fe37ff7dfc39/ProjectRSC/Development/Server/src/org/darkquest/ls/util/DataConversions.java][hmac] = -> TRY { -> keyBytes=key.getBytes()@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(value.getBytes(),)@ }
results[https://github.com/projectrsc/ProjectRSC/blob/da221ee8790c906b216e57cb35e83ebc3002d126/ProjectRSC/Server/src/com/prsc/ls/util/DataConversions.java][hmac] = -> TRY { -> keyBytes=key.getBytes()@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(value.getBytes(),)@ }
results[https://github.com/restlet/restlet-framework-java/blob/5e3a11301a9e7ed297411292e7c97292575d2a02/plugins/internal/com.noelios.restlet/src/com/noelios/restlet/impl/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/FAP-Team/Fap-Module/blob/b5ac8b60bd0d216c434f978ec6a3a84f7c93015f/fap/app/controllers/fap/WSPortafirma.java][encodeHmac] = -> TRY { -> keyBytes=key.getBytes()@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(value.getBytes(),)@ }
results[https://github.com/restlet/restlet-framework-java/blob/0eaf0666de4a80123a0f7692775a88d74029cf25/internal/com.noelios.restlet/src/com/noelios/restlet/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/social-computing/jmi-server/blob/4bf18c213b7fe1e41da6fa790e088bf150f876eb/src/main/java/com/socialcomputing/wps/server/plandictionary/connectors/utils/OAuthHelper.java][getOAuthSignature] = -> TRY {  -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(data.getBytes(),)@ } } CATCH {}
results[https://github.com/carnero/c-geo/blob/d92c90355b43a0c12508888132bbeb3880dac89b/src/carnero/cgeo/cgBase.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
results[https://github.com/carnero/cgeo-original/blob/ad7cb876ef663c3dd06f400fff6c70c80a0a124c/src/carnero/cgeo/original/libs/Base.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
results[https://github.com/killbilling/recurly-java-library/blob/035d1c79d67c2d4549e2a2360d561a262d98f57d/src/main/java/com/ning/billing/recurly/RecurlyJs.java][generateRecurlyHMAC] = -> TRY { -> sk=new SecretKeySpec(privateJsKey.getBytes(),"HmacSHA1",)@ -> mac.init(sk,)@ -> result=mac.doFinal(protectedParams.getBytes("UTF-8",),)@ }
results[https://github.com/CommercialWebDevelopment/pyramid/blob/0dd55d499395d5359b7d37785e2eb46e60990203/src/main/java/com/financial/pyramid/service/impl/PayUServiceImpl.java][hmacMD5] = -> TRY { -> keyBytes=key.getBytes()@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(value.getBytes(),)@ -> return new String(hexBytes,"UTF-8",)@ }
