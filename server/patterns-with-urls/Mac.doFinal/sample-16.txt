results[https://github.com/restlet/restlet-framework-java/blob/5e3a11301a9e7ed297411292e7c97292575d2a02/plugins/internal/com.noelios.restlet/src/com/noelios/restlet/impl/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/restlet/restlet-framework-java/blob/8cfe60acde5594f0d9008e529de3cd774596c2a9/plugins/internal/com.noelios.restlet/src/com/noelios/restlet/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/greese/dasein-cloud-cloudstack/blob/b806784162e2d87cd7b7d45610dd3263435ff141/src/main/java/org/dasein/cloud/cloudstack/CloudstackMethod.java][calculateHmac] = -> TRY {  -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> return mac.doFinal(data.getBytes(),)@ } } CATCH {}
results[https://github.com/restlet/restlet-framework-java/blob/c55b891fc25ca52e693a45d029017e1a18a0f15b/module/com.noelios.restlet/src/com/noelios/restlet/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/carnero/c-geo/blob/d92c90355b43a0c12508888132bbeb3880dac89b/src/carnero/cgeo/cgBase.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
results[https://github.com/pengliaoye/exchange/blob/24f61432820fd777b22ef3f2da94321975983d55/src/main/java/com/dm/exchange/servlet/QQOpen.java][doPost] = -> TRY {  -> TRY { -> mac.init(new SecretKeySpec("SW9ssjaMvLGHfonv&".getBytes(),"HmacSHA1",),)@ -> rawHmac=mac.doFinal(str.getBytes(),)@ } } CATCH {}
results[https://github.com/restlet/restlet-framework-java/blob/8d21e59283811ea3ea001c4152642054a95b9247/modules/org.restlet/src/org/restlet/engine/util/SecurityUtils.java][toHMac] = -> TRY { -> signingKey=new SecretKeySpec(secretKey.getBytes(),"HmacSHA1",)@ -> mac.init(signingKey,)@ -> result=mac.doFinal(source.getBytes(),)@ }
results[https://github.com/cgeo/cgeo/blob/1a961abf676ce1ad24726514f2194e739394deeb/src/cgeo/geocaching/cgBase.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
results[https://github.com/carnero/cgeo-original/blob/ad7cb876ef663c3dd06f400fff6c70c80a0a124c/src/carnero/cgeo/original/libs/Base.java][hashHmac] = -> TRY { -> secretKeySpec=new SecretKeySpec(salt.getBytes(),"HmacSHA1",)@ -> mac.init(secretKeySpec,)@ -> macBytes=mac.doFinal(text.getBytes(),)@ }
results[https://github.com/AppBlade/SDK/blob/b0e14ae69c705efd826998a9163fa46a8f281066/Android/AppBlade Framework/src/com/appblade/framework/utils/StringUtils.java][hmacSha256] = -> TRY { -> signingKey=new SecretKeySpec(key.getBytes(),"HmacSHA256",)@ -> mac.init(signingKey,)@ -> rawHmac=mac.doFinal(message.getBytes(),)@ }
