results[https://github.com/mduduzik/flowframe/blob/bed27ea29488ad168c4cbdde0d7640265bb652c9/editors/oryx/webserver/src/main/java/org/b3mn/poem/handler/HandlerBase.java][doGet][41] = -> TRY {  -> out=res.getWriter()@ -> out.write("Forbidden!",)@ } CATCH(Exception) {}
results[https://github.com/jorge-glass/test/blob/cd3d70b8c6df949703aed9d42323c790867c6e75/services/oceanos/src/main/java/com/glass/core/services/shiro/filter/TokenAuthenticationFilter.java][onLoginSuccess][2] = -> TRY {  -> writer=response.getWriter()@ -> responseBody=FilterUtil.marshalResponse(accept,user,)@ -> writer.write(responseBody,)@ } CATCH(Exception) {}
results[https://github.com/yangjiandong/sshapp/blob/208be22cbc2d7f55535402a13de79fc5cdee2dc2/application/sshapp/src/main/java/org/ssh/app/util/JsonViewUtil.java][buildJSONObjectResponse][3] = -> TRY {  -> out=response.getWriter()@ -> out.write(data.toString(),)@ } CATCH(Exception) {}
results[https://github.com/zhfy/server/blob/2c4f4ac543cbc86bf90af22862b038da210d4b50/caipiao/src/com/caipiao/rights/action/SysRolesAddAction.java][execute][358] = -> TRY {  -> out=response.getWriter()@ -> out.write(result,)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/jak786/VASE/blob/5c3c021716a0fe6ac1f383e45b2a5a859c3a7d17/poem-jvm/src/java/org/b3mn/poem/handler/JpdlImporter.java][doPost][11] = -> TRY { -> out=res.getWriter()@ -> result=JpdlToJson.transform(jpdlDoc,)@ -> out.write(result,)@ } CATCH(Exception) { -> e1.printStackTrace()@ }
results[https://github.com/yangjiandong/sshapp/blob/78f98601c87a231380a7612d9e626d54cab063f8/modules/extension/src/main/java/org/springside/modules/utils/JsonViewUtil.java][buildJSONResponse][3] = -> TRY {  -> jsonArray=JSONArray.fromObject(data,)@ -> out=response.getWriter()@ -> out.write(jsonArray.toString(),)@ } CATCH(Exception) {}
results[https://github.com/jimmccusker/caTissue/blob/d743951dfffd076a8a01a42a423fa7441ecaae26/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/ClinincalStatusComboAction.java][executeAction][2] = -> TRY {  -> jsonObject=getClinicalStatusData(limitFetch,startFetch,clinicalStatusList,query,showOption,)@ -> out=response.getWriter()@ -> out.write(jsonObject.toString(),)@ } CATCH(Exception) {}
results[https://github.com/typeofb/SpringMVC/blob/ff2202de1a537a35f88f429364d75681e2478161/src/kr/co/androider/spring3/hello/controller/HelloWorldController.java][fileUpload][1] = -> TRY {  -> fileName=mFile.getOriginalFilename()@ -> filePath=System.getProperty("java.io.tmpdir",)+fileName@ -> out=response.getWriter()@ -> out.write("{\"jsonResult\":\"Upload has been done successfully!\", \"fileName\":\""+fileName+"\"}",)@ } CATCH(Exception) {}
results[https://github.com/lat-lon/deegree-securityproxy/blob/b9a57e2c17197ae3d1ab92593884033c8fb18228/deegree-securityproxy-core/src/test/java/org/deegree/securityproxy/filter/StatusCodeResponseBodyWrapperTest.java][testCopyBufferedStreamToRealStreamWithWriter][2] = -> TRY {  -> writer=wrapper.getWriter()@ -> writer.write(textToWrite,)@ -> assertThat(writtenTextToRealStream,is(textToWrite,),)@ } CATCH(Exception) {}
results[https://github.com/jimmccusker/caTissue/blob/09bfc122b6880b1a3b6de50c57c2d59819e15f22/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/ComboDataAction.java][executeAction][2] = -> TRY {  -> jsonObject=comboDataBizObj.getClinicalDiagnosisData(limitFetch,startFetch,query,clinicalDiagnosisBean,showOption,)@ -> out=response.getWriter()@ -> out.write(jsonObject.toString(),)@ } CATCH(Exception) {}
results[https://github.com/droolsjbpm/jbpm-designer/blob/490d0ace220b03bf2ec37e5eb818f91a59dc6518/jbpm-designer-backend/src/main/java/org/jbpm/designer/repository/servlet/AssetServiceServlet.java][jsonResponse][1] = -> TRY {  -> returnObj.put("errors",errorsArray,)@ -> pw=resp.getWriter()@ -> pw.write(returnObj.toString(),)@ } CATCH(Exception) {}
results[https://github.com/donmelaka/ESBhive/blob/12a5c8404b781e8e7325bdcefa6b028ac7c65bc5/carbon-core/src/main/java/org/wso2/carbon/core/transports/util/MockTryItProcessor.java][process][1] = -> TRY {  -> out=response.getWriter()@ -> out.write("<div id=\"alertMessageBox\" style=\"display:none;position:absolute;z-index: 600;\">\n"+"    <!--the message area-->\n"+"    <p id=\"alertMessageBoxMessageArea\"></p>\n"+"    <!-- the button area-->\n"+"    <p id=\"alertButton\" align=\"right\">\n"+"        <input id=\"alertBoxButton\" type=\"button\"\n"+"                value=\"  OK  \"\n"+"                onclick=\"javascript:document.getElementById('alertMessageBox').style.display='none';return false;\"/></p>\n"+"</div>"+"<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/main.css\" media=\"screen, projection\" />"+"<script type=\"text/javascript\" src=\"../js/main.js\"></script>"+"<script type=\"text/javascript\">"+"wso2.wsf.Util.alertMessage('This function is not currently supported by WSO2 WSAS');"+"setTimeout(\"history.back()\",3000)"+"</script>",)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/NCIP/catissue-core/blob/7bb72a71e49a515ef24a03a2cbe59ed1051d5337/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/AddDepartmentAction.java][executeSecureAction][6] = -> TRY {  -> IF { -> responseString=AppUtility.getResponseString(request,responseString,)@ } -> out=response.getWriter()@ -> out.write(responseString,)@ } CATCH(Exception) {}
results[https://github.com/yangjiandong/sshapp/blob/c80aca6ce50c951a2f6903f8effd51452029ddc8/application/ekapp/src/main/java/com/ekingsoft/core/utils/JSONResponseUtil.java][buildCustomJSONDataResponse][1] = -> TRY {  -> jsonObject=JSONObject.fromObject(data,)@ -> out=response.getWriter()@ -> out.write(jsonObject.toString(),)@ } CATCH(Exception) {}
results[https://github.com/builddoctor/cruisecontrol/blob/10828b2afd8d9810794118b522f47889afce3673/cruisecontrol/reporting/dashboard/src/net/sourceforge/cruisecontrol/dashboard/web/view/JsonView.java][renderMergedOutputModel][1] = -> TRY {  -> json=StringUtils.replaceChars(renderJson(map,),"\r\t\n","",)@ -> writer=httpServletResponse.getWriter()@ -> writer.write(json,)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/easysoa/EasySOA/blob/caa5d1aee25ac0e37ee52d84caf02362d40f4ba7/easysoa/easysoa-proxy/easysoa-proxy-httpdiscoveryproxy/src/main/java/com/openwide/easysoa/proxy/HttpDiscoveryProxy.java][forward][1] = -> TRY {  -> respOut=response.getWriter()@ -> clientResponse=httpClient.execute(httpUriRequest,responseHandler,)@ -> message.setResponse(clientResponse,)@ -> respOut.write(clientResponse,)@ -> respOut.close()@ } CATCH(Exception) {}
results[https://github.com/gilsondev/jsf2-api/blob/8402b1b643dd4f30a76daed852426ea766e22b08/jsf-ri/test/com/sun/faces/io/TestIO.java][testViewHandlerResponseWrapperCharIO][1] = -> TRY {  -> pw=w1.getWriter()@ -> pw.write("some stuff",)@ -> pw.flush()@ -> pw.close()@ -> pw=w1.getWriter()@ } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/4074dda25fc9f8439394bebdc4bc8409f67f2c50/java/common/src/test/java/org/apache/shindig/protocol/DataServiceServletTest.java][verifyHandlerWasFoundForPathInfo][1] = -> TRY {  -> writerMock=EasyMock.createMock(PrintWriter.class,)@ -> EasyMock.expect(res.getWriter(),).andReturn(writerMock,)@ -> writerMock.write(TestHandler.GET_RESPONSE,)@ } CATCH(Exception) {}
results[https://github.com/liujie0924/tmpServer/blob/f61bd96e1cfbc36b47b2e5a6e768c76f60f835d8/Test/src/com/jyz/action/RestoreDBAction.java][execute][8] = -> TRY {  -> out=response.getWriter()@ -> out.write(result,)@ -> out.flush()@ -> out.close()@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/yangjiandong/sshapp/blob/208be22cbc2d7f55535402a13de79fc5cdee2dc2/application/sshapp/src/main/java/org/ssh/app/util/JsonViewUtil.java][buildJacksonDataResponse][2] = -> TRY {  -> sb=new StringBuffer()@ -> sb.append("{\"totalCount\":"+total+",\"rows\":",)@ -> sb.append("}",)@ -> out=response.getWriter()@ -> out.write(sb.toString(),)@ } CATCH(Exception) {}
results[https://github.com/robworth/patientview/blob/04a56d4f68bee5edc202759671d11e2bb7d5bb6b/patientview-parent/patientview/src/main/java/org/patientview/patientview/unitstat/UnitStatFileDownLoadAction.java][execute][1] = -> TRY {  -> printWriter=response.getWriter()@ -> LOOP { -> printWriter.write(tempString+"\n",)@(tempString=reader.readLine())!=null } -> printWriter.flush()@ -> printWriter.close()@ } CATCH(Exception) {}
results[https://github.com/mlhartme/lavender/blob/d4dc5914f2738312bf5cf33bcad5060d25215361/lavendelizer/src/test/java/com/oneandone/lavendel/filter/pt/LavendelizeHttpServletResponsePT.java][executeRequestWithWriter][4] = -> TRY {  -> writer=response.getWriter()@ -> writer.write(content,)@ -> writer.close()@ -> assertEquals(content,wrappedResponse.getResult().toString(),)@ } CATCH(Exception) {}
results[https://github.com/JetBrains/teamcity-nuget-support/blob/a6caf6f66bfc6bd3e6b0ffaafe69b5829a068b57/nuget-server/src/jetbrains/buildServer/nuget/server/feed/server/controllers/dotNet/PingBackController.java][processRequest][2] = -> TRY {  -> accessToken=mySettings.getServerToken()@ -> response.setHeader(mySettings.getServerTokenHeaderName(),accessToken,)@ -> writer=response.getWriter()@ -> writer.write(accessToken,)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/wf1768/archive/blob/8eb7b6a03f086d6105d38444ab7283c9f822e7d8/src/java/com/yapu/system/action/AuthInterceptor.java][intercept][1] = -> TRY {  } ELSE { -> pw=response.getWriter()@ -> IF { -> pw.write("window.location.href=\"../../common/logout.jsp\"",)@ } } CATCH(Exception) {}
results[https://github.com/svn2github/openid4java/blob/ce9d619321c8bbdec0963a9a187224f6d48f5a6f/test/src/org/openid4java/samples/UserInfoServlet.java][onService][3] = -> TRY {  } ELSE { -> back="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"+"<xrds:XRDS\n"+"  xmlns:xrds=\"xri://$xrds\"\n"+"  xmlns:openid=\"http://openid.net/xmlns/1.0\"\n"+"  xmlns=\"xri://$xrd*($v*2.0)\">\n"+"  <XRD>\n"+"    <Service priority=\"0\">\n"+"      <Type>http://openid.net/signon/1.0</Type>\n"+"      <URI>http://"+req.getServerName()+":"+req.getServerPort()+"/provider</URI>\n"+"    </Service>\n"+"  </XRD>\n"+"</xrds:XRDS>"@!("html".equals(req.getParameter("format",),)) -> out=resp.getWriter()@ -> out.write(back,)@ } CATCH(Exception) {}
results[https://github.com/NCIP/catissue-dynamic-extensions/blob/f5d5b20e4211a7801bb04cde8d82ce236a771641/src/edu/common/dynamicextensions/util/global/ComboDataAction.java][execute][17] = -> TRY {  -> mainJsonObject=new JSONObject()@ -> mainJsonObject.put("totalCount",querySpecificNVBeans.size(),)@ -> mainJsonObject.put("row",jsonArray,)@ -> out=response.getWriter()@ -> out.write(mainJsonObject.toString(),)@ } CATCH(Exception) {}
results[https://github.com/liujie0924/tmpServer/blob/a5f9fc031ccdc8db0043710645762f8b5a921c5d/caipiao/src/com/caipiao/rights/action/SysUserLoginAction.java][execute][7] = -> TRY {  -> out=response.getWriter()@ -> jsonObj=JSONObject.fromObject(map,)@ -> out.write(jsonObj.toString(),)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/yangjiandong/sshapp/blob/78f98601c87a231380a7612d9e626d54cab063f8/modules/extension/src/main/java/org/springside/modules/utils/JsonViewUtil.java][buildCustomJSONDataResponse][2] = -> TRY {  -> jsonObject=JSONObject.fromObject(data,)@ -> out=response.getWriter()@ -> logger.debug(jsonObject.toString(),)@ -> out.write(jsonObject.toString(),)@ } CATCH(Exception) {}
results[https://github.com/jimmccusker/caTissue/blob/09bfc122b6880b1a3b6de50c57c2d59819e15f22/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/RequestDetailsAction.java][sendSpecimenDetails][1] = -> TRY {  -> out=response.getWriter()@ -> IF { -> responseString=identifier+Constants.RESPONSE_SEPARATOR+specimen.getAvailableQuantity().toString()+Constants.RESPONSE_SEPARATOR+specimen.getSpecimenType()+Constants.RESPONSE_SEPARATOR+specimenQuantityUnit@specimen!=null } -> out.write(responseString,)@ } CATCH(Exception) {}
results[https://github.com/anis-moubarik/SimpleREST/blob/7b64c50bdb0b8013a1801112b357c3cb6f6e1c84/src/test/java/fi/helsinki/lib/simplerest/TestServlets/CommunityServlet.java][jsonTest][2] = -> TRY {  -> out=resp.getWriter()@ -> TRY { -> out.write(cr.toJson(),)@ } CATCH(Exception) { -> log.log(Level.INFO,null,ex,)@ } } CATCH(IOException) {}
results[https://github.com/CTSIatUCSF/shindigorng/blob/64a6c006ecf320bffdc244e6b3dfedaa3ddf968d/java/social-api/src/test/java/org/apache/shindig/social/opensocial/service/JsonRpcServletTest.java][testInvalidService][6] = -> TRY {  -> err=new JSONObject("{id:id,error:{message:'notImplemented: The method junk.get is not implemented',code:501}}",)@ -> writerMock=mockControl.createMock(PrintWriter.class,)@ -> EasyMock.expect(res.getWriter(),).andReturn(writerMock,)@ -> writerMock.write(EasyMock.eq(err.toString(),),)@ } CATCH(Exception) {}
results[https://github.com/Unidata/thredds/blob/9a8f9dc737f8dc151fe701f11730b0aa41578fb5/tds/src/main/java/thredds/server/ncSubset/controller/DatasetInfoController.java][getDatasetDescription][1] = -> TRY {  -> strResponse=ncssShowDatasetInfo.showForm(getGridDataset(),buildDatasetUrl(requestPathInfo,),wantXML,showPointForm,)@ -> res.setContentLength(strResponse.length(),)@ -> pw=res.getWriter()@ -> pw.write(strResponse,)@ -> pw.flush()@ } CATCH(Exception) {}
results[https://github.com/yangjiandong/sshapp/blob/9d29573cf55cf6e79ca4d950d69ac89a69ccc35e/application/pm/src/main/java/org/ssh/pm/common/web/SystemController.java][buildJSONDataResponse][1] = -> TRY {  -> sb=new StringBuffer()@ -> sb.append("{\"totalCount\":"+total+",\"rows\":",)@ -> sb.append(jsonArray.toString(),)@ -> sb.append("}",)@ -> out=response.getWriter()@ -> out.write(sb.toString(),)@ } CATCH(Exception) {}
results[https://github.com/NCIP/stats-application-commons/blob/3add3e16364761810e4f44cc692502c2316363ab/src/gov/nih/nci/caintegrator/application/util/CSVUtil.java][renderCSV][2] = -> TRY { -> LOOP { -> out=response.getWriter()@ -> out.write(StringUtils.join(row.toArray(),",",)+"\r\n",)@ -> out.flush()@ } } CATCH(Exception) { -> out.write("error generating report",)@ }
results[https://github.com/CTSIatUCSF/shindigorng/blob/64a6c006ecf320bffdc244e6b3dfedaa3ddf968d/java/social-api/src/test/java/org/apache/shindig/social/opensocial/service/JsonRpcServletTest.java][testBasicBatch][2] = -> TRY {  -> result=new JSONArray("[{id:'1',data:{foo:'bar'}},"+"{id:'2',data:{foo:'bar'}}]",)@ -> writerMock=mockControl.createMock(PrintWriter.class,)@ -> EasyMock.expect(res.getWriter(),).andReturn(writerMock,)@ -> writerMock.write(EasyMock.eq(result.toString(),),)@ } CATCH(Exception) {}
results[https://github.com/openmrs/openmrs-module-metadatasharing/blob/032d4abcefc0562af664e20163f97d790e7d3d00/omod/src/main/java/org/openmrs/module/metadatasharing/web/view/XmlView.java][renderMergedOutputModel][2] = -> TRY {  -> response.setHeader("Pragma","No-cache",)@ -> response.setDateHeader("Expires",0,)@ -> response.setHeader("Cache-Control","no-cache",)@ -> response.setContentType("application/xml",)@ -> writer=response.getWriter()@ -> writer.write(serializer.serialize(getObjectToSerialize(model,request,response,),),)@ } CATCH(Exception) {}
results[https://github.com/anis-moubarik/SimpleREST/blob/7b64c50bdb0b8013a1801112b357c3cb6f6e1c84/src/test/java/fi/helsinki/lib/simplerest/TestServlets/ItemsResourceServlet.java][jsonTest][1] = -> TRY {  -> out=resp.getWriter()@ -> TRY { -> out.write(ir.toJson(),)@ } CATCH(Exception) { -> log.log(Priority.INFO,ex,)@ } } CATCH(IOException) {}
results[https://github.com/nofarb/Conf4you/blob/89dad590cbe807c1d74ae6630409ebeae156a366/src/servlets/UsersServlet.java][addUser][3] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> json=gson.toJson(jsonObject,)@ -> out.write(json,)@ -> out.flush()@ } FINALLY { -> out.close()@ } } CATCH(Exception) {}
results[https://github.com/damiancarrillo/agave-framework/blob/bcd08c5ff05b268cafbda8f51a3f45ee7dab0fdd/samples/xml-tools/src/main/java/co/cdev/agave/samples/XMLToolsHandler.java][output][3] = -> TRY {  -> handlerContext.getResponse().setContentType("text/xml",)@ -> out=handlerContext.getResponse().getWriter()@ -> out.write(handlerContext.getSession().getAttribute("contents",).toString(),)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/yangjiandong/sshapp/blob/153417abc8ff2e82393f0dbe53ec23e00eaeb98a/application/sshapp/src/main/java/org/ssh/app/example/web/BookController.java][getOpoaTree][1] = -> TRY {  -> sb=new StringBuffer()@ -> sb.append("[",)@ -> sb.append("{id:\'grid\',text:\'数据表格\',leaf:true},",)@ -> sb.append("{id:\'form\',text:\'表单提交\',leaf:true},",)@ -> sb.append("{id:\'html\',text:\'静态页面\',leaf:true}",)@ -> sb.append("]",)@ -> out=response.getWriter()@ -> out.write(sb.toString(),)@ } CATCH(Exception) {}
results[https://github.com/liujie0924/tmpServer/blob/f78db6f386f1ccbfd164b5c1b8e2576e120c511e/sys/src/com/caipiao/manager/action/ArticleCategoryListAction.java][execute][4] = -> TRY { -> json=new JSONObject()@ -> json.put("total",count,)@ -> json.put("rows",articleList,)@ -> out=response.getWriter()@ -> out.write(json.toString(),)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/anis-moubarik/SimpleREST/blob/7b64c50bdb0b8013a1801112b357c3cb6f6e1c84/src/test/java/fi/helsinki/lib/simplerest/TestServlets/RootCommunitiesServlet.java][xmlTest][2] = -> TRY {  -> out=resp.getWriter()@ -> TRY { -> out.write(rcr.toXml().getText(),)@ } CATCH(Exception) { -> log.log(Level.INFO,null,ex,)@ } } CATCH(IOException) {}
results[https://github.com/anis-moubarik/SimpleREST/blob/7b64c50bdb0b8013a1801112b357c3cb6f6e1c84/src/test/java/fi/helsinki/lib/simplerest/TestServlets/ItemsResourceServlet.java][xmlTest][1] = -> TRY {  -> out=resp.getWriter()@ -> TRY { -> out.write(ir.toXml().getText(),)@ } CATCH(Exception) { -> log.log(Priority.INFO,ex,)@ } } CATCH(IOException) {}
results[https://github.com/jeromexu/ubank/blob/b36db24230c0aac6aa8064021ed496cfbd9fa753/src/java/main/com/ufinity/marchant/ubank/servlet/FileUploadServlet.java][responseClientMsg][2] = -> TRY { -> out=response.getWriter()@ -> out.write("<meta http-equiv='Content-Type' content='text/html; charset=UTF-8'>"+"<div id='uploadError'>"+msg+"</div>",)@ -> out.flush()@ } CATCH(Exception) { -> logger.error("response client error:",e,)@ } FINALLY { -> IF { -> out.close()@out!=null } }
results[https://github.com/easysoa/EasySOA/blob/bff04a4a3a86a6fa9f1acfca5cf83333933e98c2/easysoa-proxy/easysoa-proxy-core/easysoa-proxy-core-httpdiscoveryproxy/src/main/java/org/easysoa/proxy/HttpDiscoveryProxy.java][forward][1] = -> TRY {  -> respOut=response.getWriter()@ -> outMessage=forwarder.send(inMessage,)@ -> logger.debug("clientResponse : "+outMessage.getMessageContent().getRawContent(),)@ -> respOut.write(outMessage.getMessageContent().getRawContent(),)@ -> respOut.close()@ } CATCH(Exception) {}
results[https://github.com/unpush/apache-incubator-shindig/blob/30fe8250399e92adf0f180d22d4a292ac3802660/java/social-api/src/test/java/org/apache/shindig/social/dataservice/DataServiceServletTest.java][verifyHandlerWasFoundForPathInfo][2] = -> TRY {  -> response=new ResponseItem<String>(jsonObject,)@ -> EasyMock.expect(jsonConverter.convertToString(jsonObject,),).andReturn(jsonObject,)@ -> writerMock=EasyMock.createMock(PrintWriter.class,)@ -> EasyMock.expect(res.getWriter(),).andReturn(writerMock,)@ -> writerMock.write(jsonObject,)@ } CATCH(Exception) {}
results[https://github.com/yangjiandong/sshapp/blob/2d8f08f25839a720cc064e0d009617b0b6d59647/application/pm/src/main/java/org/ssh/pm/common/web/CommonController.java][initData][1] = -> TRY {  -> sb=new StringBuffer()@ -> sb.append("{\"totalCount\":"+data.size()+",\"info\":",)@ -> sb.append(jsonArray.toString(),)@ -> sb.append("}",)@ -> out=response.getWriter()@ -> out.write(sb.toString(),)@ } CATCH(Exception) {}
results[https://github.com/medcafe/medCafe/blob/5339d0b6174f4fa902d3454ca214929e9fa20034/medj/src/org/mitre/medj/servlets/Convert.java][doPost][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { } ELSE { -> out.write("There was an error parsing your XML or creating the JSON.  Please double check your input and ensure it is a valid CCR document.",)@ } CATCH(Exception) { -> out.write("There was an error parsing your XML or creating the JSON.  Please double check your input and ensure it is a valid CCR document.",)@ -> log.log(Level.SEVERE,"Error retrieving ContinuityOfCareRecord ",e,)@ } } CATCH(IOException,ServletException) {}
results[https://github.com/nickleus-j/StorySenseWeb/blob/6beec7d2d974d292920f483003b1d5466ff6c10d/StorySense/src/servlets/UserRegistrator.java][executeCustomCode][1] = -> TRY { -> theSession=request.getSession()@ -> out=response.getWriter()@ -> out.write("Path "+request.getContextPath(),)@ -> myUser=createUser(request,out,)@ -> redirectUser(myUser,request,response,)@ } CATCH(IOException) { -> out.print("IO problem",)@ } CATCH(Exception) { -> out.print("Problem in registering",)@ }
results[https://github.com/liujie0924/tmpServer/blob/b42c560da237350fb8a501877ebdef7147f34859/caipiao/src/com/caipiao/action/CreateMoneyAction.java][execute][2] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> result=RandomNumber.getRandom()+"&login_check="+loginCheck@ } CATCH(Exception) { -> e.printStackTrace()@ } -> out.write(result,)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/gertv/servicemix-sandbox/blob/62093bd49b99f4c1702f0b88089a649544f81bc3/karaf/features/cxf/cxf-transport-osgi/src/test/java/org/apache/servicemix/cxf/transport/http_osgi/OsgiServletTest.java][setUpResponse][1] = -> TRY {  -> IF { -> writer=control.createMock(PrintWriter.class,)@ -> expect(response.getWriter(),).andReturn(writer,).anyTimes()@ -> LOOP { -> writer.write(msg,)@ } } } CATCH(Exception) {}
results[https://github.com/camptocamp/secureOWS/blob/36abae7e77d3c056352799f286899453ecac360b/owsproxyserver/src/org/deegree/enterprise/AbstractOGCServlet.java][handleException][1] = -> wex=new OGCWebServiceException(this.getClass().getName(),tmp,)@ -> TRY { -> pw=response.getWriter()@ -> pw.write((Marshallable) wex.exportAsXML(),)@ -> pw.close()@ } CATCH(Exception) { -> getServletContext().log(e.toString(),)@ }
results[https://github.com/stas-bob/Projektmanager/blob/942e1ff64d10c86befbb645501e7fe8c55f05971/src/java/util/ValidateProjectServlet.java][processRequest][3] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> out.write(status,)@ } CATCH(Exception) { -> Logger.getLogger(ValidateProjectServlet.class.getName(),).log(Level.SEVERE,null,ex,)@ } -> out.close()@ } CATCH(ServletException,IOException) {}
results[https://github.com/liujie0924/tmpServer/blob/b9db17386220166873ac61ccdec451d398eeb0f4/caipiao/src/com/caipiao/action/CreateRandomAction.java][execute][2] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> result="imgname="+imgname+"&snd="+gs.getSound()+"&login_check="+loginFlag@ } CATCH(Exception) { -> e.printStackTrace()@ } -> out.write(result,)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/apache/cxf-fediz/blob/e75b76c22c38aa934133553d8941cce43b71c6d4/services/idp/src/main/java/org/apache/cxf/fediz/service/idp/MetadataServlet.java][doGet][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> metadata=mw.getMetaData(idpConfig,)@ -> out.write(DOM2Writer.nodeToString(metadata,),)@ } CATCH(Exception) { -> LOG.error("Failed to get metadata document: ",ex,)@ -> response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/CTSIatUCSF/shindigorng/blob/64a6c006ecf320bffdc244e6b3dfedaa3ddf968d/java/social-api/src/test/java/org/apache/shindig/social/opensocial/service/JsonRpcServletTest.java][testMethodRecognition][2] = -> TRY {  -> result=new JSONObject()@ -> result.put("id","id",)@ -> result.put("data",ImmutableMap.of("foo","bar",),)@ -> writerMock=mockControl.createMock(PrintWriter.class,)@ -> EasyMock.expect(res.getWriter(),).andReturn(writerMock,)@ -> writerMock.write(EasyMock.eq(result.toString(),),)@ } CATCH(Exception) {}
results[https://github.com/b3log/b3log-solo/blob/06be1bc7c8e49e5b479f3dde9fe488e496d12c9a/core/src/main/java/org/b3log/solo/processor/IndexProcessor.java][render][1] = -> TRY { -> writer=response.getWriter()@ -> pageContent=stringWriter.toString()@ -> writer.write(pageContent,)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) { -> TRY { -> response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,)@ } CATCH(IOException) { -> LOGGER.log(Level.ERROR,"Can not sned error 500!",ex,)@ } }
results[https://github.com/jimmccusker/caTissue/blob/09bfc122b6880b1a3b6de50c57c2d59819e15f22/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/FetchReportAction.java][executeAction][2] = -> TRY {  -> xmlData=new StringBuffer()@ -> IF { -> IF { -> IF { -> xmlData=this.makeXMLData(xmlData,identifiedReport,)@identifiedReport.getSpecimenCollectionGroup()!=null } } } -> out=response.getWriter()@ -> out.write(xmlData.toString(),)@ } CATCH(Exception) {}
results[https://github.com/ansell/openrdf-sesame/blob/b22cf6d0b8700ea2b5ce8e366396912f5adf0908/core/http/workbench/src/main/java/org/openrdf/workbench/commands/DeleteServlet.java][service][1] = -> TRY {  -> checkSafe=req.getParameter("checkSafe",)@ } ELSE { -> writer=new PrintWriter(new BufferedWriter(resp.getWriter(),),)@ -> writer.write(new JSONObject().put("safe",manager.isSafeToRemove(checkSafe,),).toString(),)@!(null==checkSafe) -> writer.flush()@ } CATCH(Exception) {}
results[https://github.com/molgenis/molgenis_apps-legacy/blob/6aa9c6aab9cae55903bfa3c25a302e54e6f2ce11/apps/xgap/plugins/autohidelogin/AutoHideLoginSwitchService.java][handleRequest][1] = -> TRY {  -> out=response.getResponse().getWriter()@ -> TRY { -> out.write("<HTML><HEAD><META HTTP-EQUIV=\"refresh\" CONTENT=\"0;URL=molgenis.do?__target=main&select=UserLogin\"></HEAD><BODY></BODY></HTML>",)@ } CATCH(Exception) { -> out.write("\n\n",)@ -> e.printStackTrace(out,)@ } FINALLY { -> out.close()@ } } CATCH(ParseException,DatabaseException,IOException) {}
results[https://github.com/madhusudancs/asterixdb/blob/95ab427da1a6d67c52902812b646d175001b35d4/asterix-app/src/main/java/edu/uci/ics/asterix/api/http/servlet/QueryResultAPIServlet.java][doGet][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> jsonResponse=new JSONObject()@ -> jsonResponse.put("results",results,)@ -> out.write(jsonResponse.toString(),)@ } CATCH(Exception) { -> out.println(e.getMessage(),)@ -> e.printStackTrace(out,)@ } } CATCH(IOException) {}
results[https://github.com/nickleus-j/StorySenseWeb/blob/366a82e5ca07663faa7c0c6618032fe242c6b96a/StorySense/src/servlets/StoryLoader.java][executeCustomCode][1] = -> TRY { -> out=response.getWriter()@ -> storyFile=(StoryFileAccess) oi.readObject()@ -> out.println("The story",)@ -> out.write(preview(storyFile,),)@ } CATCH(IOException) { -> out.println("Error in reading the story"+ioEx.getMessage(),)@ } CATCH(Exception) { -> out.println("Error in getting the story\n"+ex.getMessage(),)@ } -> out.flush()@
results[https://github.com/debop/jvm-experiments/blob/92d90c221e2b23bc658a9877abff582e0b2387bb/web-example/src/main/java/examples/async/SimpleSample.java][call][2] = -> TRY { -> responseStr=EntityUtils.toString(response.getEntity(),Charsets.UTF_8.toString(),)@ -> IF { -> log.debug("URI=[{}]로부터 웹 컨텐츠를 다운로드 받았습니다. responseStr=[{}]",url,StringTool.ellipsisChar(responseStr,255,),)@ } -> writer=ctx.getResponse().getWriter()@ -> writer.write(responseStr,)@ -> writer.close()@ } CATCH(Exception) { -> throw new RuntimeException(ignored,)@ }
results[https://github.com/madhusudancs/asterixdb/blob/5ee049d45ea3aa9e6317cd59063e2e0b4f2d4d4c/asterix-app/src/main/java/edu/uci/ics/asterix/api/http/servlet/QueryStatusAPIServlet.java][doGet][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> jsonResponse=new JSONObject()@ -> jsonResponse.put("status",status,)@ -> out.write(jsonResponse.toString(),)@ } CATCH(Exception) { -> out.println(e.getMessage(),)@ -> e.printStackTrace(out,)@ } } CATCH(IOException) {}
results[https://github.com/sakai-mirror/sam/blob/c6b732e1b4eea7c4c7db69d5244824a2f640347c/tool/src/java/org/sakaiproject/tool/assessment/ui/servlet/delivery/UploadAudioMediaServlet.java][doPost][1] = -> TRY {  -> pw=res.getWriter()@ -> log.info(status,)@ -> IF { -> TRY { -> pw.write(status,)@ } CATCH(Exception) { -> log.info(ex.getMessage(),)@ -> pw.write(ex.getMessage(),)@ } } } CATCH(ServletException,IOException) {}
results[https://github.com/nkhoang/ja12sec02jav/blob/998bf847b06de24cd83df6534854bbd303dcf912/gae/src/main/java/com/nkhoang/gae/view/JSONView.java][render][2] = -> TRY {  -> writer=response.getWriter()@ -> excludeAttrs=(List<String>) map.get(GSONStrategy.EXCLUDE_ATTRIBUTES,)@ -> IF { -> gson=new GsonBuilder().setExclusionStrategies(new GSONStrategy(excludeAttrs,),).create()@excludeAttrs!=null&&excludeAttrs.size()>0 } ELSE { -> gson=new Gson()@ } -> writer.write(gson.toJson(map.get(GSONStrategy.DATA,),),)@ } CATCH(Exception) {}
results[https://github.com/nofarb/Conf4you/blob/89dad590cbe807c1d74ae6630409ebeae156a366/src/servlets/UsersServlet.java][activateUser][4] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> IF { -> json=gson.toJson(jsonObject,)@ } ELSE { -> json=gson.toJson(jsonObject,)@ } -> out.write(json,)@ -> out.flush()@ } FINALLY { -> out.close()@ } } CATCH(Exception) {}
results[https://github.com/ddumontatibm/Landos-App/blob/db096d84d8c9c5afc3bee290bb181ca710b9a836/src/main/java/com/ibm/opensocial/landos/OrdersServlet.java][doGet][1] = -> TRY {  -> resWriter=res.getWriter()@ -> body=new StringWriter()@ -> jsonWriter=new JSONWriter(body,)@ -> TRY { -> resWriter.write(body.toString(),)@ } CATCH(Exception) { -> LOGGER.logp(Level.SEVERE,CLAZZ,"doGet",e.getMessage(),)@ } FINALLY { -> close(resWriter,jsonWriter,body,countResults,countStmt,results,stmt,conn,)@ } } CATCH(IOException) {}
results[https://github.com/PLOS/ambra-sandbox/blob/227051958dd97a3c8cf96661a99aa6d17dbec2eb/ambra/plos-cas/src/main/java/org/topazproject/ambra/cas/GetGuidReturnEmailFilter.java][doFilter][1] = -> TRY {  -> writer=response.getWriter()@ -> TRY { -> emailFromGuid=databaseService.getEmailAddressFromGuid(request.getParameter("guid",),)@ -> IF { -> log.debug("Now passing back the email address: "+emailFromGuid,)@log.isDebugEnabled() } -> writer.write(emailFromGuid,)@ } CATCH(Exception) { -> log.error("Unable to query an email address or to write that email address to ServletResponse."+"  Attempted to query an email address for the guid = "+request.getParameter("guid",),e,)@ -> writer.write("fake_guid_returned_from_cas",)@ } } CATCH(IOException,ServletException) {}
results[https://github.com/idega/com.idega.content/blob/4ae6f00800bf4cedd5aaa72e155b4b30d14cfd81/src/java/com/idega/content/upload/servlet/BlueimpUploadServlet.java][doPost][1] = -> TRY {  -> responseWriter=response.getWriter()@ -> TRY { -> jsonString=gson.toJson(responseMapArray,)@ -> responseWriter.write(jsonString,)@ } CATCH(FileUploadException) { -> log("Error encountered while parsing the request",ex,)@ -> response.sendError(500,)@ } CATCH(Exception) { -> log("Error encountered while uploading file",ex,)@ -> response.sendError(500,)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/wf1768/archive/blob/2e01ca3e971db8d67654e15c5cec7bf18e0fa048/src/java/com/yapu/archive/action/TempletfieldAction.java][add][1] = -> TRY {  -> out=response.getWriter()@ -> IF { -> CATCH(Exception) { -> out.write(result,)@ } -> IF { } ELSE { -> CATCH(Exception) { -> out.write(result,)@ } } } -> out.write(result,)@ } CATCH(IOException) {}
results[https://github.com/builddoctor/cruisecontrol/blob/b58d7607a909857998cc91da47e77ac790016a6e/cruisecontrol/reporting/dashboard/src/net/sourceforge/cruisecontrol/dashboard/web/GetProjectBuildOutputController.java][handleRequest][1] = -> TRY {  -> output=buildLoopQueryService.getBuildOutput(projectName,startAsInt,)@ -> nextStart=calculateNextStart(oldOutputID,newOutputID,startAsInt,output,)@ -> IF { -> msg="*********** ----------- **************"+"\nparam start: "+start+"\nparam oldOutputID: "+oldOutputID+"\nnewOutputID: "+newOutputID+"\nnextStart: "+nextStart+"\noutput: "+(output==null)?null:"lines: "+output.length+"\n*********** ----------- **************"@ } -> IF { -> writer=response.getWriter()@ -> TRY { -> writer.write(StringUtils.join(output,"\n",),)@output!=null } FINALLY { -> writer.close()@ } } } CATCH(Exception) {}
results[https://github.com/gmfawcett/openmark-mvn/blob/d786c6a4b223ab19427e37d7f0eb80a1a314667d/tags/v1.11.2/src/om/devservlet/DevServlet.java][handleBuildAll][12] = -> TRY {  -> pw=response.getWriter()@ -> pw.write("<html>"+"<head>"+"<title>Building all questions</title>"+"<style type='text/css'>"+"body { font: 10px Andale Mono, Lucida Console, monospace; }"+".out,.err { white-space:pre; }"+".err { color:#900; }"+"</style>"+"</head>"+"<body>",)@ -> LOOP { -> pw.println("<p><b>"+i+1+". "+qd.getID()+"</b> - [<a href='./'>List</a>]</p>",)@i<questionDefs.length -> TRY { -> qd.build(pw,)@ } CATCH(OmException) { -> pw.println("<pre>"+XHTML.escape(Exceptions.getString(e, new String[],),XHTML.ESCAPE_TEXT,)+"</pre>",)@ } } -> pw.println("</body></html>",)@ } CATCH(Exception) {}
results[https://github.com/AdeleResearchGroup/ApAM/blob/c5691f1f573d3ccaf75a6ca195f5eb947382d711/runtime/managers/distriman/src/main/java/fr/imag/adele/apam/distriman/provider/LocalMachine.java][doPost][1] = -> TRY {  -> writer=resp.getWriter()@ -> TRY { -> jsonString=toJson(reg,)@ -> logger.info("payload of the response {}",jsonString,)@ -> writer.write(URLEncoder.encode(jsonString.toString(),"UTF-8",)+"\n",)@ -> writer.flush()@ } CATCH(Exception) { -> e.printStackTrace()@ } FINALLY { -> writer.close()@ } } CATCH(ServletException,IOException) {}
results[https://github.com/gemy21ce/mek/blob/826137d1a085b57de72ab5c73de320415e0c44ce/src/main/java/viper/core/viewutil/JSONView.java][render][1] = -> TRY {  -> writer=response.getWriter()@ -> serializer=new JSONSerializer()@ -> IF { -> LOOP { -> serializer.include(include,)@ } } -> serializer.exclude("*.class",)@ -> IF { -> LOOP { -> serializer.exclude(exclude,)@ } } -> writer.write(serializer.serialize(this.object,),)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/gmfawcett/openmark-mvn/blob/d786c6a4b223ab19427e37d7f0eb80a1a314667d/tags/v1.11.2/src/om/devservlet/DevServlet.java][handleBuild][12] = -> TRY {  -> sQuestion=sRemainingPath.replaceAll("^([^/]*)/?.*$","$1",)@ -> IF { -> return @!(sAfter.equals("",)) } -> pw=response.getWriter()@!(!(sAfter.equals("",))) -> pw.write("<html>"+"<head>"+"<title>Building "+sQuestion+"</title>"+"<style type='text/css'>"+"body { font: 10px Andale Mono, Lucida Console, monospace; }"+".out,.err { white-space:pre; }"+".err { color:#900; }"+"</style>"+"</head>"+"<body>",)@!(!(sAfter.equals("",))) -> bSuccess=qdQuestions.getQuestionDefinition(sQuestion,).build(pw,)@!(!(sAfter.equals("",))) -> IF { -> pw.println("<script type='text/javascript'>\n"+"var re=/^(.*)\\/build\\/(.*)$/;\n"+"location.href=location.href.replace(re,'$1/run/$2');\n"+"</script>",)@!(!(sAfter.equals("",))) } ELSE { -> pw.println("<p>[<a href='javascript:location.reload()'>Rebuild</a>] &nbsp; ["+"<a href='../../'>List</a>]</p>",)@!(!(sAfter.equals("",))) } -> pw.println("</body></html>",)@!(!(sAfter.equals("",))) -> pw.close()@!(!(sAfter.equals("",))) } CATCH(Exception) {}
results[https://github.com/papyri/navigator/blob/3d1e698a63ca02f06d5ec706419f57e060f61e96/pn-dispatcher/src/main/java/info/papyri/dispatch/Reader.java][sendWithHighlight][1] = -> TRY {  -> out=response.getWriter()@ -> IF { -> TRY { -> patterns=util.buildPatterns(q,)@ -> out.write(util.highlight(patterns,util.loadFile(f,),),)@f!=null&&f.exists() } CATCH(Exception) { -> logger.error("Error while writing highligted file "+f.getAbsolutePath(),e,)@f!=null&&f.exists() } FINALLY { -> out.close()@ } } } CATCH(ServletException,IOException) {}
results[https://github.com/OpenIotOrg/openiot/blob/ab006c734941776297172389f1bc1d67fd7f17ea/modules/x-gsn/src/main/java/org/openiot/gsn/http/FieldUpload.java][doPost][1] = -> TRY {  -> out=res.getWriter()@ -> IF { -> out.write("not multipart!",)@ -> logger.error(msg,)@ } ELSE { -> TRY { -> msg="The upload to the virtual sensor went successfully! ("+vsname+")"@ } CATCH(ServletFileUpload.SizeLimitExceededException) { -> logger.error(msg,e,)@ } CATCH(Exception) { -> logger.error(msg,e,)@ } } -> out.write("<script>window.parent.GSN.msgcallback('"+msg+"',"+code+");</script>",)@ } CATCH(ServletException,IOException) {}
results[https://github.com/rodericj/TopDish/blob/92166044c839dbe81a3c95a5387aacea0c0bfdac/server/old/java/tags/0527/src/com/topdish/api/FeedbackServlet.java][doPost][3] = -> TRY {  -> pw=resp.getWriter()@ -> TRY { -> pw.write(APIUtils.generateJSONSuccessMessage(),)@ } CATCH(Exception) { -> e.printStackTrace()@ -> Logger.getLogger(TAG,).error(e.getMessage(),)@ -> pw.write(APIUtils.generateJSONFailureMessage(e,),)@ } FINALLY { -> pw.flush()@ -> pw.close()@ } } CATCH(ServletException,IOException) {}
results[https://github.com/easysoa/EasySOA/blob/32865e52b3a2afef4ab37fdc897e44bbfc04167a/easysoa-proxy/easysoa-proxy-core/easysoa-proxy-core-httpdiscoveryproxy/src/main/java/com/openwide/easysoa/proxy/HttpDiscoveryProxy.java][forward][1] = -> TRY {  -> respOut=response.getWriter()@ -> exchangeRecord=new ExchangeRecord(UUID.randomUUID().toString(),new InMessage(new HttpMessageRequestWrapper(request,),),)@ -> exchangeRecord.setOutMessage(forwarder.send(exchangeRecord.getInMessage(),),)@ -> logger.debug("clientResponse : "+exchangeRecord.getOutMessage().getMessageContent().getRawContent(),)@ -> respOut.write(exchangeRecord.getOutMessage().getMessageContent().getRawContent(),)@ -> respOut.close()@ } CATCH(Exception) {}
results[https://github.com/auxgroup-sanxing/Sesame/blob/e56cab801da3f67430c10fa776991bda5aba7c02/sesame-studio/src/main/java/com/sanxing/studio/action/UserAction.java][doGet][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> IF { -> IF { -> IF { -> result=accredit.getText()@accredit!=null } -> out.write(result,)@ } } } CATCH(Exception) { -> IF { -> LOG.error(e.getMessage(),e,)@ } -> WebUtil.sendError(response,e.getMessage(),)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/NCIP/caarray-docs/blob/4ff87803776fe2602ad915f14bf95d1bd947618b/analysis_and_design/prototypes/caupload/src/gov/nih/nci/caupload/UploadServlet.java][doPost][1] = -> TRY {  -> IF { -> throw new IllegalArgumentException("Request is not multipart, please 'multipart/form-data' enctype for your form.",)@!(ServletFileUpload.isMultipartContent(request,)) } -> writer=response.getWriter()@!(!(ServletFileUpload.isMultipartContent(request,))) -> TRY { -> s=JSONArray.fromObject(uploads.toArray(),).toString()@!(!(ServletFileUpload.isMultipartContent(request,))) -> writer.write(s,)@!(!(ServletFileUpload.isMultipartContent(request,))) } CATCH(FileUploadException) { -> throw new RuntimeException(e,)@!(!(ServletFileUpload.isMultipartContent(request,))) } CATCH(Exception) { -> throw new RuntimeException(e,)@!(!(ServletFileUpload.isMultipartContent(request,))) } FINALLY { -> writer.close()@!(!(ServletFileUpload.isMultipartContent(request,))) } } CATCH(ServletException,IOException) {}
results[https://github.com/jimmccusker/caTissue/blob/09bfc122b6880b1a3b6de50c57c2d59819e15f22/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/DefineArrayAction.java][executeAction][2] = -> TRY {  -> IF { -> CATCH(Exception) { -> return null@session.getAttribute("OrderForm",)!=null } -> IF { -> dimen=Integer.valueOf(capacityobj.getOneDimensionCapacity(),).toString()+":"+new Integer(capacityobj.getTwoDimensionCapacity(),).toString()+":"+defineArray.getArrayClass()@session.getAttribute("OrderForm",)!=null && !(request.getParameter("arrayType",)!=null) -> out=response.getWriter()@session.getAttribute("OrderForm",)!=null && !(request.getParameter("arrayType",)!=null) -> out.write(dimen,)@session.getAttribute("OrderForm",)!=null && !(request.getParameter("arrayType",)!=null) -> return null@session.getAttribute("OrderForm",)!=null && request.getParameter("arrayType",)!=null } -> return mapping.findForward("success",)@session.getAttribute("OrderForm",)!=null && !(request.getParameter("arrayType",)!=null) } ELSE { -> return mapping.findForward("failure",)@!(session.getAttribute("OrderForm",)!=null) } } CATCH(Exception) {}
results[https://github.com/xplatform/xplatform/blob/139264ca1220b17ed0439818fc21fd0845032cb5/action/src/java/com/jiakun/xplatform/file/action/FileAction.java][saveFile][1] = -> TRY { -> out=response.getWriter()@ -> id=dfsService.saveFile(FileUtil.getFileName(uploadFileName,),FileUtil.getFileSuffix(uploadFileName,),upload,)@ -> out.write((StringUtil.isNotEmpty(id,))?"{success:true,msg:'"+id+"'}":"{success:false,msg:'failure'}",)@ -> out.flush()@ } CATCH(Exception) { -> logger.error(e,)@ -> out.write("{success:false,msg:'failure'}",)@ } FINALLY { -> IF { -> TRY { -> out.close()@out!=null } FINALLY { -> logger.error(e,)@ } } }
results[https://github.com/rodericj/TopDish/blob/92166044c839dbe81a3c95a5387aacea0c0bfdac/server/old/java/tags/0624/src/com/topdish/api/AddRestaurantServlet.java][doPost][3] = -> TRY {  -> pw=resp.getWriter()@ -> TRY { -> json=new JSONObject().put(RestaurantConstants.RESTAURANT,new JSONObject(new Gson().toJson(new RestaurantLite(restaurant,),),),)@ -> pw.write(APIUtils.generateJSONSuccessMessage(json,),)@ } CATCH(Exception) { -> e.printStackTrace()@ -> pw.write(APIUtils.generateJSONFailureMessage(e,),)@ } FINALLY { -> pw.flush()@ -> pw.close()@ } } CATCH(ServletException,IOException) {}
results[https://github.com/CIDARLAB/igem-datasheet/blob/979128b165763a2d674600b1d7484d4bd709527a/Datasheet Generator/src/java/datasheet/DataServlet.java][processGetRequest][2] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> IF { -> out.write(heldData.toString(),)@ } } CATCH(Exception) { -> e.printStackTrace()@ -> stringWriter=new StringWriter()@ -> printWriter=new PrintWriter(stringWriter,)@ -> e.printStackTrace(printWriter,)@ -> exceptionAsString=stringWriter.toString().replaceAll("[\r\n\t]+","<br/>",)@ -> IF { -> out.write("{\"data\":\""+exceptionAsString+"\",\"status\":\"bad\"}",)@out!=null } } FINALLY { -> out.close()@ } } CATCH(ServletException,IOException) {}
results[https://github.com/apache/cxf-fediz/blob/0fbe60a8f129b4df70dd94f33075dd2643db7fc4/plugins/tomcat/src/main/java/org/apache/cxf/fediz/tomcat/FederationAuthenticator.java][invoke][1] = -> TRY {  -> IF { -> out=response.getWriter()@!(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) -> TRY { -> metadata=wfProc.getMetaData(fedConfig,)@!(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) -> out.write(DOM2Writer.nodeToString(metadata,),)@!(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) -> return @request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1 } CATCH(Exception) { -> LOG.error("Failed to get metadata document: "+ex.getMessage(),)@!(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) -> response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,)@!(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) -> return @request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1 } } -> IF { -> IF { -> return @logoutUrl!=null&&!(logoutUrl.isEmpty()) && !(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) && httpSession!=null&&uri.equals(contextName+logoutUrl,) } } -> IF { -> IF { -> return @!(logoutUrl!=null&&!(logoutUrl.isEmpty())) && !(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) && inputStream==null && FederationConstants.ACTION_SIGNOUT_CLEANUP.equals(wa,) } -> return @!(inputStream==null) && !(logoutUrl!=null&&!(logoutUrl.isEmpty())) && !(request.getRequestURL().indexOf(FederationConstants.METADATA_PATH_URI,)!=-1) && FederationConstants.ACTION_SIGNOUT_CLEANUP.equals(wa,) } } CATCH(IOException,ServletException) {}
results[https://github.com/jimmccusker/caTissue/blob/aed358b61f97eda262777ab0b2cbe070b01a0712/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/CTRPUserAjaxAction.java][executeSecureAction][2] = -> TRY {  -> responseJsonObject=new JSONObject()@ -> IF { -> responseJsonObject=constructJSONResponse(userList,)@ } ELSE { -> IF { -> responseJsonObject=constructJSONResponse(userList,)@ } ELSE { -> IF { -> responseJsonObject=constructJSONComboResponse(comboInstList,COPPAUtil.isCOPPAEnabled(),)@ } ELSE { -> responseJsonObject.put("error","Unsupported pageOperation:"+pageOperation,)@!("GetRemoteById".equalsIgnoreCase(pageOperation,)) && !("GetInstitutions".equalsIgnoreCase(pageOperation,)) && !("SearchRemote".equalsIgnoreCase(pageOperation,)) } } } -> out=response.getWriter()@ -> out.write(responseJsonObject.toString(),)@ -> logger.debug("JSON Inst Response:"+responseJsonObject,)@ } CATCH(Exception) {}
results[https://github.com/jimmccusker/caTissue/blob/09bfc122b6880b1a3b6de50c57c2d59819e15f22/software/caTissue/modules/core/src/main/java/edu/wustl/catissuecore/action/CTRPStudyProtocolAjaxAction.java][executeSecureAction][2] = -> TRY {  -> responseJsonObject=new JSONObject()@ -> IF { -> responseJsonObject=constructJSONResponse(protocolList,)@ } ELSE { -> IF { -> responseJsonObject=constructDetailJSONResponse(studyProtocol,principalInvestigator,)@ } ELSE { -> IF { -> responseJsonObject=constructJSONComboResponse(comboUserList,COPPAUtil.isCOPPAEnabled(),)@ } ELSE { -> responseJsonObject.put("error","Unsupported pageOperation:"+pageOperation,)@!("GetRemoteById".equalsIgnoreCase(pageOperation,)) && !("GetUsers".equalsIgnoreCase(pageOperation,)) && !("SearchRemote".equalsIgnoreCase(pageOperation,)) } } } -> out=response.getWriter()@ -> out.write(responseJsonObject.toString(),)@ -> logger.debug("JSON User Response:"+responseJsonObject,)@ } CATCH(Exception) {}
results[https://github.com/sky2b/DbWebService/blob/db573de9544ae824248e5822bc2b3c7ab06b65f1/src/main/java/com/dbservice/managing/QueriesManagementServlet.java][doPost][1] = -> TRY {  -> writer=response.getWriter()@ -> IF { -> TRY { -> handlerResponse=handler.getResponse(createRequest(action,request,),)@handler!=null -> writer.write(handlerResponse,)@ } CATCH(Exception) { -> logger.error("error",e,)@ -> writer.write(CommonHandler.resultResponse(false,),)@ } FINALLY { -> writer.flush()@ } } ELSE { -> servletResult=new JsonObject()@ -> servletResult.addProperty("result","error",)@ -> servletResult.addProperty("error",message,)@ -> writer.write(servletResult.toString(),)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/auxgroup-sanxing/Sesame/blob/061175727614cfcbd9cd7ce5b0536d981b54aa64/sesame-studio/src/main/java/com/sanxing/studio/action/TableBrowser.java][doGet][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> IF { -> IF { -> info="数据库类型: "+meta.getDatabaseProductName()+meta.getDatabaseProductVersion()+"\n"@ -> out.write(info,)@ } } } CATCH(Exception) { -> log.debug(e.getMessage(),e,)@ -> WebUtil.sendError(response,e.getMessage(),)@ } FINALLY { -> TRY { -> IF { -> conn.close()@conn!=null&&!(conn.isClosed()) } } } } CATCH(ServletException,IOException) {}
results[https://github.com/lwz7512/ipintu/blob/694de1ff18ac55a168aecd550be3adb7a1937179/src/com/pintu/tools/ImageUploader.java][doPost][1] = -> TRY {  -> pw=response.getWriter()@ -> IF { -> pw.write(">>> Invalid request, not to deal with! ! !",)@!(!(isMultipart)) -> pw.close()@!(!(isMultipart)) -> return @!(isMultipart) } -> TRY { -> LOOP { -> IF { -> processFormField(item,pw,)@!(!(isMultipart)) && item.isFormField() } ELSE { -> processUploadFile(item,pw,)@!(!(isMultipart)) && !(item.isFormField()) } } -> pw.close()@!(!(isMultipart)) } CATCH(SizeLimitExceededException) { -> log.debug(">>>File size exceeds the limit, can not upload!",)@!(!(isMultipart)) -> pw.print(">>> File size exceeds the limit, can not upload!",)@!(!(isMultipart)) } CATCH(Exception) { -> log.debug("Exception occurs when using fileupload package...",)@!(!(isMultipart)) -> e.printStackTrace()@!(!(isMultipart)) } } CATCH(ServletException,IOException) {}
results[https://github.com/rodericj/TopDish/blob/92166044c839dbe81a3c95a5387aacea0c0bfdac/server/old/java/tags/0624/src/com/topdish/api/LocateUserServlet.java][doPost][3] = -> TRY {  -> writer=resp.getWriter()@ -> IF { -> TRY { -> json=new JSONObject(new Gson().toJson(point,),)@ -> writer.write(APIUtils.generateJSONSuccessMessage(json,),)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) { -> e.printStackTrace()@ -> writer.write(APIUtils.generateJSONFailureMessage(e,),)@ -> writer.flush()@ -> writer.close()@ } } ELSE { -> writer.write(APIUtils.generateJSONFailureMessage("No IpAddress Was Found",),)@ -> writer.flush()@ -> writer.close()@ } } CATCH(ServletException,IOException) {}
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIBirtReportEngine/src/it/eng/spagobi/engines/birt/BirtReportServlet.java][service][1] = -> TRY {  -> CATCH(ConnectionDefinitionException) { -> writer=response.getWriter()@ -> resp="<html><body><center>"+e.getDescription()+"</center></body></html>"@ -> writer.write(resp,)@ -> writer.flush()@ -> writer.close()@ -> IF { -> IF { -> auditAccessUtils.updateAudit(session,userId,auditId,null,new Long(System.currentTimeMillis(),),"EXECUTION_FAILED",e.getDescription(),null,)@auditId!=null && auditAccessUtils!=null } } } CATCH(Exception) { -> logger.error("Error during report production \n\n ",e,)@ -> IF { -> IF { -> auditAccessUtils.updateAudit(session,userId,auditId,null,new Long(System.currentTimeMillis(),),"EXECUTION_FAILED",e.getMessage(),null,)@auditId!=null && auditAccessUtils!=null } } } } CATCH(IOException,ServletException) {}
results[https://github.com/apache/aries/blob/c0dfffa164479fb58258e219257a8f631d282ec1/samples/transaction-sample/transaction-sample-web/src/main/java/org/apache/aries/samples/transaction/TxDBServlet.java][doGet][3] = -> TRY {  -> pw=response.getWriter()@ -> pw.write(LOGO_HEADER,)@ -> pw.println("<html>",)@ -> pw.println("<head>",)@ -> pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"tableTemplate.css\"/>",)@ -> pw.println("<body>",)@ -> pw.println("<h2 align=center><p><font face=\"Tahoma\">Sample Application for JDBC usage in JTA Transactions.</font></h2>",)@ -> pw.println("<p><p>",)@ -> IF { -> pw.println("<font face=\"Tahoma\">TransactionManager or Derby driver are not available in the OSGI registry.</font><br>",)@ } ELSE { -> TRY { -> pw.println("<center><form><table><tr><td align='right'>Value: </td><td align=left><input type='text' name='value' value='' size='12'/><input type='submit' name='action' value='InsertAndCommit' size='100'/></td></tr>",)@ -> pw.println("<tr><td align='right'>Value: </td><td align=left><input type='text' name='value' value='' size='12'/><input type='submit' name='action' value='InsertAndRollback' size='100'/></center></td></tr>",)@ -> pw.println("<tr colspan='2' align='center'><td>&nbsp;</td><td><input type='submit' name='action' value='cleanTable' size='100' />&nbsp;<input type='submit' name='action' value='printTable' size='100'/></td><tr></table></form></center>",)@ } CATCH(Exception) { -> pw.println("<font face=\"Tahoma\">Unexpected exception occurred "+e.toString()+".</font><br>",)@ -> e.printStackTrace(pw,)@ } } -> pw.println("</body>",)@ -> pw.println("</html>",)@ -> pw.flush()@ } CATCH(ServletException,IOException) {}
results[https://github.com/rodericj/TopDish/blob/92166044c839dbe81a3c95a5387aacea0c0bfdac/server/old/java/TopDish/src/com/topdish/batch/UploadDishRestaurantCSVServlet.java][doPost][1] = -> TRY {  -> pw=resp.getWriter()@ -> IF { -> throw new ServletException("Only multipart/form-data POST allowed!",)@!(isMultipart) } -> TRY { -> IF { -> throw new Exception("CSV Reader is NULL!",)@!(!(isMultipart)) && null==csvRdr } -> LOOP { -> IF { -> pw.write(" ",)@!(!(isMultipart)) && !(null==csvRdr) } } -> summary="Summary:"+" \n\tNew Dishes: "+dishesAdded.size()+" \n\tDuplicate Dishes: "+duplicateDish.size()+" \n\tNew Restaurants: "+restaurantsAdded.size()+" \n\tDuplicate Restaurants: "+duplicateRest.size()@!(!(isMultipart)) && !(null==csvRdr) -> Logger.getLogger(TAG,).info(summary,)@!(!(isMultipart)) && !(null==csvRdr) } CATCH(Exception) { -> e2.printStackTrace()@!(!(isMultipart)) } -> pw.write(summary,)@!(!(isMultipart)) -> pw.flush()@!(!(isMultipart)) -> pw.close()@!(!(isMultipart)) } CATCH(IOException,ServletException) {}
results[https://github.com/muloem/xins/blob/861540325b38e6da5869a9a78d8c5167f828e14c/src/java-server-framework/org/xins/server/XSLTCallingConvention.java][convertResultImpl][1] = -> TRY {  -> IF { -> out=httpResponse.getWriter()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) -> out.write("Done.",)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) -> out.close()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) -> return @"true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),) } -> IF { -> throw new IOException(TEMPLATE_PARAMETER+" parameter not allowed.",)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && _templatesPrefix==null&&templatesSuffix!=null } -> IF { -> IF { -> throw new IOException("No location specified for the XSLT stylesheets.",)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && xsltLocation==null && _location==null && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) } } -> TRY { -> out=httpResponse.getWriter()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) -> out.print(buffer.toString(),)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) -> out.close()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) } CATCH(Exception) { -> IF { -> throw (IOException) exception@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) } ELSE { -> ioe=new IOException(message,)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) -> ExceptionUtils.setCause(ioe,exception,)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) } } } CATCH(IOException) {}
results[https://github.com/znerd/xins/blob/6b515b24181adbe18a9e3407af917d5596cd962a/src/java/org/xins/server/XSLTCallingConvention.java][convertResultImpl][2] = -> TRY {  -> IF { -> out=httpResponse.getWriter()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) -> out.write("Done.",)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) -> out.close()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) -> return @"true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),) } -> IF { -> throw new IOException(TEMPLATE_PARAMETER+" parameter not allowed.",)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && _templatesPrefix==null&&templatesSuffix!=null } -> IF { -> IF { -> throw new IOException("No location specified for the XSLT stylesheets.",)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && xsltLocation==null && _location==null && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) } } -> TRY { -> out=httpResponse.getWriter()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) -> out.print(buffer.toString(),)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) -> out.close()@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) } CATCH(Exception) { -> IF { -> throw (IOException) exception@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) } ELSE { -> ioe=new IOException(message,)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) -> ioe.initCause(exception,)@!("true".equals(httpRequest.getParameter(CLEAR_TEMPLATE_CACHE_PARAMETER,),)) && !(_templatesPrefix!=null&&templatesSuffix!=null) && !(_templatesPrefix==null&&templatesSuffix!=null) && !(xsltLocation==null) } } } CATCH(IOException) {}
results[https://github.com/yangjiandong/sshapp/blob/a46537f2d043de4ffca8a0b48f7f04000ac53c59/application/sshapp/src/main/java/org/ssh/app/common/web/ResourcesController.java][loadMenu][1] = -> TRY {  -> sb=new StringBuffer()@ -> sb.append("",)@ -> IF { -> LOOP { -> IF { -> sb.append("[{\"text\" :\""+res.getResourceName()+"\" ,\"id\" :\""+res.getId().toString()+"\" ,\"leaf\" :"+res.isLeaf()+" ,\"guiID\" :\""+res.getUrl()+"\" } ",)@ } ELSE { -> sb.append(",{\"text\" :\""+res.getResourceName()+"\" ,\"id\" :\""+res.getId().toString()+"\" ,\"leaf\" :"+res.isLeaf()+" ,\"guiID\" :\""+res.getUrl()+"\" } ",)@ } } -> IF { -> sb.append("]",)@!(sb.equals("",)) } } -> out=response.getWriter()@ -> out.write(sb.toString(),)@ } CATCH(Exception) {}
results[https://github.com/nofarb/Conf4you/blob/89dad590cbe807c1d74ae6630409ebeae156a366/src/servlets/UsersServlet.java][validate][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> IF { -> IF { -> json=gson.toJson("false",)@ } ELSE { -> IF { -> json=gson.toJson("false",)@ } ELSE { -> json=gson.toJson("true",)@ } } } ELSE { -> IF { -> json=gson.toJson("false",)@ } ELSE { -> json=gson.toJson("true",)@ } } -> out.write(json,)@ -> out.flush()@ } FINALLY { -> out.close()@ } } CATCH(Exception) {}
