results[https://github.com/apache/hadoop-common/blob/8dbdeba533c72a1f2660c23ac3030487849d8d37/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManager.java][testContainerSetup][16] = -> TRY {  -> fileWriter=new PrintWriter(file,)@ -> fileWriter.write("Hello World!",)@ -> fileWriter.close()@ } CATCH(Exception) {}
results[https://github.com/matlach/atinject/blob/a65234ec05f8b5f8106501f418f71ff3313546a8/atinject-core/src/main/java/org/atinject/core/websocket/server/DTOToJavascript.java][saveJavascript][2] = -> TRY { -> writer.write(javascript,)@ -> writer.close()@ } CATCH(Exception) { -> throw new RuntimeException(e,)@ }
results[https://github.com/tfreese/misc/blob/ebc64815941e2fd9b384106ab6d79ceb9e8b2c35/vfs-extensions/src/test/java/de/freese/vfs/Main.java][main][1] = -> TRY {  -> bw=new PrintWriter(outputStream,)@ -> bw.write("blabla",)@ -> bw.close()@ } CATCH(Exception) {}
results[https://github.com/zhfy/server/blob/2c4f4ac543cbc86bf90af22862b038da210d4b50/caipiao/src/com/caipiao/rights/action/SysRolesAddAction.java][execute][358] = -> TRY {  -> out=response.getWriter()@ -> out.write(result,)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/linkedin/helix/blob/85b6267b64472c9e6252855537de7d8232146663/helix-core/src/test/java/com/linkedin/helix/tools/TestHelixAdminScenariosCli.java][testDropAddResource][1] = -> TRY {  -> x=ObjectToJson(record,)@ -> pw=new PrintWriter(fos,)@ -> pw.write(x,)@ -> pw.close()@ } CATCH(Exception) {}
results[https://github.com/studentkittens/webarchive/blob/a52b9688b2154fbaed51c9ef55e272fb64ea6784/test/java/webarchive/init/ConfigHandlerTest.java][setUpBeforeClass][1] = -> TRY {  -> pw=new PrintWriter(PATH,)@!(PATH.exists()) -> pw.write(CONF,)@!(PATH.exists()) -> pw.flush()@!(PATH.exists()) -> pw.close()@!(PATH.exists()) } CATCH(Exception) {}
results[https://github.com/jeromewagener/Sammelbox/blob/df6e7fcdc6c92419118ed9c03d1cfe19e38ef7f5/collector-desktop/src/collector/desktop/filesystem/FileSystemAccessWrapper.java][writeToFile][2] = -> TRY { -> out=new PrintWriter(filepath,)@ -> out.write(content,)@ -> out.close()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/guilhermemg/SIProject/blob/5a301a367718ed0df6cb754f3e37e3d7900a76ee/ProjetoSI/src/main/java/estradasolidaria/ui/server/data/GerenciadorDeDados.java][writeIntoFile][1] = -> TRY { -> outputStream=new PrintWriter(file,"UTF-8",)@ -> outputStream.write(x,)@ -> outputStream.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/eclipse/riena/blob/91df45e67ec3b71a5991a663915c687b2412fbd7/org.eclipse.riena.tests/src/org/eclipse/riena/communication/core/attachment/AttachmentClientITest.java][testSendFileAndTestIfItIsClosed][2] = -> TRY {  -> printWriter=new PrintWriter(new FileOutputStream(file,),)@ -> printWriter.write("This text file is accessed in AttachmentTest to test the Attachment class.",)@ -> printWriter.close()@ } CATCH(Exception) {}
results[https://github.com/jerrevds/ODS/blob/115653835630f6e3917a632983167c671dfd54f9/version2/_bundles/bundle_serversideimplementations/src/be/ugent/ods/testapplications/service/impl/EchoServiceImpl.java][autoMeasureDumpData][1] = -> TRY { -> w=new PrintWriter(f,)@ -> w.write(data,)@ -> w.close()@ } CATCH(Exception) { -> error(e,)@ }
results[https://github.com/AnalogDevicesLyricLabs/dimple/blob/3547f81aaff937b9c40a4a97081242477eed3c43/solvers/java/src/main/java/com/analog/lyric/dimple/schedulers/dependencyGraph/StaticDependencyGraph.java][createDotFile][1] = -> str=createDotString()@ -> TRY { -> writer=new PrintWriter(fileName,"UTF-8",)@ -> writer.write(str,)@ -> writer.close()@ } CATCH(Exception) { -> throw new DimpleException(e,)@ }
results[https://github.com/donmelaka/ESBhive/blob/12a5c8404b781e8e7325bdcefa6b028ac7c65bc5/carbon-core/src/main/java/org/wso2/carbon/core/transports/util/MockTryItProcessor.java][process][1] = -> TRY {  -> out=response.getWriter()@ -> out.write("<div id=\"alertMessageBox\" style=\"display:none;position:absolute;z-index: 600;\">\n"+"    <!--the message area-->\n"+"    <p id=\"alertMessageBoxMessageArea\"></p>\n"+"    <!-- the button area-->\n"+"    <p id=\"alertButton\" align=\"right\">\n"+"        <input id=\"alertBoxButton\" type=\"button\"\n"+"                value=\"  OK  \"\n"+"                onclick=\"javascript:document.getElementById('alertMessageBox').style.display='none';return false;\"/></p>\n"+"</div>"+"<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/main.css\" media=\"screen, projection\" />"+"<script type=\"text/javascript\" src=\"../js/main.js\"></script>"+"<script type=\"text/javascript\">"+"wso2.wsf.Util.alertMessage('This function is not currently supported by WSO2 WSAS');"+"setTimeout(\"history.back()\",3000)"+"</script>",)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/blacktitan/apache-helix/blob/f3e32551094e4edfd73364e3c79e3aba980a8208/helix-admin-webapp/src/test/java/org/apache/helix/tools/TestHelixAdminScenariosRest.java][testDropAddResource][2] = -> TRY {  -> x=ObjectToJson(record,)@ -> pw=new PrintWriter(fos,)@ -> pw.write(x,)@ -> pw.close()@ -> extraform.put(JsonParameters.NEW_IDEAL_STATE,x,)@ } CATCH(Exception) {}
results[https://github.com/alex-fiennes/webmacro/blob/17d9626b542d7e79bbf8e76e955077f2318ac8a8/webmacro/test/unit/org/webmacro/template/TestPerformanceAreas.java][report][4] = -> TRY {  -> report=executeFileTemplate(reportName,)@ -> p=new PrintWriter(new FileOutputStream("PerformanceReport.html",),)@ -> p.write(report,)@ -> p.close()@ } CATCH(Exception) {}
results[https://github.com/builddoctor/cruisecontrol/blob/10828b2afd8d9810794118b522f47889afce3673/cruisecontrol/reporting/dashboard/src/net/sourceforge/cruisecontrol/dashboard/web/view/JsonView.java][renderMergedOutputModel][1] = -> TRY {  -> json=StringUtils.replaceChars(renderJson(map,),"\r\t\n","",)@ -> writer=httpServletResponse.getWriter()@ -> writer.write(json,)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/studentkittens/webarchive/blob/a52b9688b2154fbaed51c9ef55e272fb64ea6784/test/java/webarchive/server/FileHandlerTest.java][SetUp][1] = -> TRY {  -> pw=new PrintWriter(new FileOutputStream(rootFile,),)@ -> pw.write(LOREM,)@ -> pw.flush()@ -> pw.close()@ } CATCH(Exception) {}
results[https://github.com/andreasb242/Simulation/blob/9b8fed0b31794782fdb7788643ec53d2c04420c0/SimulationBuild/src/ch/zhaw/simulation/ant/MacInfoPlist.java][filePutContents][1] = -> TRY { -> out=new PrintWriter(outFile,)@ -> out.write(contents,)@ -> out.close()@ } CATCH(Exception) { -> System.out.println("filePutContents: "+url,)@ -> e.printStackTrace()@ }
results[https://github.com/easysoa/EasySOA/blob/caa5d1aee25ac0e37ee52d84caf02362d40f4ba7/easysoa/easysoa-proxy/easysoa-proxy-httpdiscoveryproxy/src/main/java/com/openwide/easysoa/proxy/HttpDiscoveryProxy.java][forward][1] = -> TRY {  -> respOut=response.getWriter()@ -> clientResponse=httpClient.execute(httpUriRequest,responseHandler,)@ -> message.setResponse(clientResponse,)@ -> respOut.write(clientResponse,)@ -> respOut.close()@ } CATCH(Exception) {}
results[https://github.com/ochafik/nativelibs4java/blob/2130f01189b7db6b25d6f25e6acab798e4ba667c/libraries/jnaerator/jnaerator/src/main/java/com/ochafik/lang/jnaerator/studio/JNAeratorStudio.java][closed][1] = -> TRY { -> w=outputter.getSourceWriter(path,)@ -> w.write(this.getContent(),)@ -> w.close()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/bobmcwhirter/drools/blob/26fe563cec9a86d016697c2e38d53b62ed9fad55/drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/views/RepositoryView.java][prepareFileTransfer][1] = -> TRY {  -> contents=getResourceContents(node,)@ -> writer=new PrintWriter(fos,)@!(!(path.toFile().mkdir())) -> writer.write(contents,)@!(!(path.toFile().mkdir())) -> writer.flush()@!(!(path.toFile().mkdir())) -> writer.close()@!(!(path.toFile().mkdir())) } CATCH(Exception) {}
results[https://github.com/sosilent/euca/blob/54fd3c97a69a5054705bc777a5b6f1403a72ba1e/clc/modules/msgs/src/main/java/com/eucalyptus/binding/InternalSoapBindingGenerator.java][close][1] = -> TRY { -> this.out.flush()@ -> this.out.write("</binding>",)@ -> this.out.flush()@ -> this.out.close()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/gilsondev/jsf2-api/blob/8402b1b643dd4f30a76daed852426ea766e22b08/jsf-ri/test/com/sun/faces/io/TestIO.java][testViewHandlerResponseWrapperCharIO][1] = -> TRY {  -> pw=w1.getWriter()@ -> pw.write("some stuff",)@ -> pw.flush()@ -> pw.close()@ -> pw=w1.getWriter()@ } CATCH(Exception) {}
results[https://github.com/robworth/patientview/blob/04a56d4f68bee5edc202759671d11e2bb7d5bb6b/patientview-parent/patientview/src/main/java/org/patientview/patientview/unitstat/UnitStatFileDownLoadAction.java][execute][1] = -> TRY {  -> printWriter=response.getWriter()@ -> LOOP { -> printWriter.write(tempString+"\n",)@(tempString=reader.readLine())!=null } -> printWriter.flush()@ -> printWriter.close()@ } CATCH(Exception) {}
results[https://github.com/jeromewagener/Sammelbox/blob/9223cf193a323a84346cc09bb593e34ba15e2bc7/Sammelbox-Desktop/src/org/sammelbox/controller/filesystem/FileSystemAccessWrapper.java][writeToFile][1] = -> TRY { -> printWriter=new PrintWriter(filepath,Charset.defaultCharset().name(),)@ -> printWriter.write(content,)@ -> printWriter.close()@ } CATCH(Exception) { -> LOGGER.error("An error occured while writing '"+content+"' to filepath",ex,)@ }
results[https://github.com/wersling/manaca/blob/8cb1a898101e4ecf3827efef5e7d5200d9c430bc/build/common/tools/ModuleNameLower.java][main][1] = -> TRY {  -> out=new PrintWriter(os,)@ -> out.write(Character.toLowerCase(s.charAt(0,),)+s.substring(1,),)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/wersling/manaca/blob/55d45582969686585eb5afbf0f31d979f455e636/build/common/tools/ImportClasses.java][main][1] = -> TRY {  -> LOOP { -> code+=seatchFiles(args[i],)@i<args.length } -> out=new PrintWriter(os,)@ -> out.write(code,)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/mlhartme/lavender/blob/d4dc5914f2738312bf5cf33bcad5060d25215361/lavendelizer/src/test/java/com/oneandone/lavendel/filter/pt/LavendelizeHttpServletResponsePT.java][executeRequestWithWriter][4] = -> TRY {  -> writer=response.getWriter()@ -> writer.write(content,)@ -> writer.close()@ -> assertEquals(content,wrappedResponse.getResult().toString(),)@ } CATCH(Exception) {}
results[https://github.com/JetBrains/teamcity-nuget-support/blob/a6caf6f66bfc6bd3e6b0ffaafe69b5829a068b57/nuget-server/src/jetbrains/buildServer/nuget/server/feed/server/controllers/dotNet/PingBackController.java][processRequest][2] = -> TRY {  -> accessToken=mySettings.getServerToken()@ -> response.setHeader(mySettings.getServerTokenHeaderName(),accessToken,)@ -> writer=response.getWriter()@ -> writer.write(accessToken,)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/egonw/cdk-taverna-2/blob/ae33026e663cb420ec2231398c08934f63715c67/cdk-taverna-2-activity/src/main/java/org/openscience/cdk/applications/taverna/basicutilities/ErrorLogger.java][writeMolecule][1] = -> TRY { -> tmpMolString=convertIAtomContainerToMolString(aMolecule,)@ -> tmpPrintWriter=new PrintWriter(tmpMolFile,)@ -> tmpPrintWriter.write(tmpMolString,)@ -> tmpPrintWriter.flush()@ -> tmpPrintWriter.close()@ } CATCH(Exception) { -> this.writeError("Error writing molecule!","ErrorLogger",e,)@ }
results[https://github.com/zhuowei/MCPELauncher/blob/a53f4ffc856e06c9cd0dbdb666403696a95c7687/src/net/zhuoweizhang/mcpelauncher/ManageScriptsActivity.java][importFromClipboard][1] = -> TRY { -> printWriter=new PrintWriter(scriptFile,)@ -> printWriter.write(code,)@ -> printWriter.flush()@ -> printWriter.close()@ } CATCH(Exception) { -> e.printStackTrace()@ -> reportError(e,)@ }
results[https://github.com/jarodwen/hyracks/blob/5df938fcf2165f56736f0f245141345fcbb4734d/fullstack/hivesterix/hivesterix-runtime/src/main/java/edu/uci/ics/hivesterix/runtime/operator/filewrite/HivePushRuntimeFactory.java][readConfContent][5] = -> TRY { -> out=new PrintWriter(new OutputStreamWriter(new FileOutputStream(new File(fileName,),),),)@ -> out.write(confContent,)@ -> out.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/liujie0924/tmpServer/blob/a5f9fc031ccdc8db0043710645762f8b5a921c5d/caipiao/src/com/caipiao/rights/action/SysUserLoginAction.java][execute][7] = -> TRY {  -> out=response.getWriter()@ -> jsonObj=JSONObject.fromObject(map,)@ -> out.write(jsonObj.toString(),)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/eea/eea.eunis/blob/d36a08f3f2076c3985eabd223c72bcb28097e3d6/src/main/java/ro/finsiel/eunis/reports/XMLReport.java][closeFile][3] = -> IF { -> TRY { -> fileStream.write("</results>",)@null!=fileStream -> fileStream.flush()@null!=fileStream -> fileStream.close()@null!=fileStream } CATCH(Exception) { -> System.err.println("Exception while closing stream.",)@ -> _ex.printStackTrace()@ } }
results[https://github.com/conceptstailored/NCSU-GBS-Pipeline/blob/d16978268678f9fa8958e60cdd43d64937a912d5/TASSEL_20121011/maizegenetics/src/net/maizegenetics/genome/solexa/LDbyBits.java][writeResultsToFile][1] = -> TRY { -> fileOut=new PrintWriter(outfile,)@ -> fileOut.write("Site\tPosition\tMajorCnt\tMinorCnt\tClose_Chr\tClose_Pos\tClose_P\tClose_N\t"+"Far_Chr\tFar_Pos\tFar_P\tFar_N\n",)@ -> LOOP { -> fileOut.printf("%d %d %d %d %d %d %g %d %d %d %g %d %n",i,position[i],majoraf[i],minoraf[i],bestChr[0][i],bestPosition[0][i],bestP[0][i],numTests[0][i],bestChr[1][i],bestPosition[1][i],bestP[1][i],numTests[1][i],)@i<bestChr[0].length } -> fileOut.close()@ } CATCH(Exception) { -> System.out.println("File output in diversityPipeline: "+e,)@ }
results[https://github.com/peixere/gotom/blob/4011c772fabd4f79150f9d3fea354c3388e1bed9/core/cn.gotom.ireport/src/main/java/cn/gotom/ireport/IReportExporter.java][expHtml][1] = -> TRY {  -> pw=new PrintWriter(fos,)@ -> html=toHtmlString()@ -> html=html.replaceAll("<td style=\"width: 45px; height: 1px;\"></td>","<td style=\"width: 45px; height: 0px;\"></td>",)@ -> html=html.replaceAll("width: 540px; border-collapse: collapse; empty-cells: show","border-collapse: collapse; empty-cells: show",)@ -> pw.write(html,)@ -> pw.flush()@ -> pw.close()@ } CATCH(Exception) {}
results[https://github.com/zzj1213/PDE/blob/7b9c49e6ac89144ffb800aaf471b92239d074c30/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/convert/MigratePluginWizard.java][writeFile][4] = -> TRY {  -> writer=new PrintWriter(new FileWriter(file.getLocation().toOSString(),),)@ -> writer.write(document.get(),)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/iph/Projects/blob/fb3dc3d5815ffcdd7ccabe581b2ec7afc55a89a5/java/Java Projects/0401Stuff/src/DrawingProject/Assign5.java][saveSystem][1] = -> IF { -> TRY { -> bw=new PrintWriter(file+".txt",)@ -> bw.write(drawPanel.saveObjects(),)@ -> bw.close()@ } CATCH(Exception) { -> JOptionPane.showMessageDialog(theWindow,"Error with file you tried to save, please try again",)@ } }
results[https://github.com/timrdf/csv2rdf4lod-automation/blob/ff38f4a4b8a047fad063e7345153bc1e55576a03/lib/javacsv2.0/src/AllTests.java][test48][1] = -> TRY {  -> writer=new PrintWriter(new OutputStreamWriter(stream,Charset.forName("UTF-8",),),)@ -> writer.write(test,)@ -> writer.close()@ -> Assert.assertEquals(test,reader.get(0,),)@ } CATCH(Exception) {}
results[https://github.com/NigoroJr/java/blob/3991dcb457fcba8c73e47e2a21d91911a7e08869/archive/CSE271/program/program1/PointPractice.java][writePoints][2] = -> TRY {  -> pw=new PrintWriter(fileName,)@ -> LOOP { -> pw.write((int) points[i].getX()+" "+(int) points[i].getY()+"\n",)@i<points.length } -> pw.flush()@ -> pw.close()@ } CATCH(Exception) {}
results[https://github.com/bbossgroups/bboss-cms/blob/180d8ee7fd65a32109f817ee22525cec0bd1f43b/src-cms/com/frameworkset/platform/cms/rssmanager/RssManagerImpl.java][writeToFile][2] = -> TRY { -> info=new String(info.getBytes("GB2312",),)@ -> fos=new PrintWriter(p,)@ -> fos.write(info,)@ -> fos.println()@ -> fos.flush()@ -> fos.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/flamingo-geocms/flamingo/blob/f3a7eeacd9009e422b6192526197d10b2df18fef/src/java/nl/b3p/viewer/stripes/DrawingActionBean.java][stream][4] = -> TRY {  -> CATCH(Exception) { -> pw=new PrintWriter(out,)@ -> pw.write(e.getMessage(),)@ } FINALLY { -> out.close()@ } } CATCH(Exception) {}
results[https://github.com/apache/tomcat55/blob/f4b58a36642dc04cdf4b0522638e955d18ec70de/connectors/juli/src/java/org/apache/juli/FileHandler.java][close][1] = -> TRY { -> IF { -> return @writer==null } -> writer.write(getFormatter().getTail(this,),)@!(writer==null) -> writer.flush()@!(writer==null) -> writer.close()@!(writer==null) } CATCH(Exception) { -> reportError(null,e,ErrorManager.CLOSE_FAILURE,)@ }
results[https://github.com/niles2005/visitors/blob/557c6b8bda50a9df6dd2586de23cfdf2fcc60510/src/com/inesazt/visitors/DeviceGroup.java][doSave][2] = -> TRY { -> writer=new PrintWriter(new OutputStreamWriter(new FileOutputStream(deviceFile,),"UTF-8",),)@ -> jsonTxt=JSON.toJSONString(this,)@ -> writer.write(jsonTxt,)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) { -> ex.printStackTrace()@ }
results[https://github.com/jibrankhan/Domination/blob/714cf723b20d1f5f62e48182271fa8be3ce5a8cd/Domination/src_swing/net/yura/domination/ui/swinggui/SwingGUIPanel.java][saveLog][1] = -> IF { -> TRY { -> printer=new PrintWriter(buffer,)@ -> printer.write(textArea.getText(),)@ -> printer.close()@ } CATCH(Exception) { -> showError(error.getMessage(),)@ } }
results[https://github.com/jibrankhan/Domination/blob/61b5a67eeaf03e996aeb97a16f8f49307c028e9e/Domination/src_swing/net/yura/domination/ui/increment1gui/Increment1Frame.java][actionPerformed][1] = -> IF { -> TRY { -> printer=new PrintWriter(buffer,)@ -> printer.write(Console.getText(),)@ -> printer.close()@ } CATCH(Exception) { -> Testing.append("Error: "+error.getMessage()+"\n",)@ } }
results[https://github.com/damiancarrillo/agave-framework/blob/bcd08c5ff05b268cafbda8f51a3f45ee7dab0fdd/samples/xml-tools/src/main/java/co/cdev/agave/samples/XMLToolsHandler.java][output][3] = -> TRY {  -> handlerContext.getResponse().setContentType("text/xml",)@ -> out=handlerContext.getResponse().getWriter()@ -> out.write(handlerContext.getSession().getAttribute("contents",).toString(),)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/liujie0924/tmpServer/blob/f78db6f386f1ccbfd164b5c1b8e2576e120c511e/sys/src/com/caipiao/manager/action/ArticleCategoryListAction.java][execute][4] = -> TRY { -> json=new JSONObject()@ -> json.put("total",count,)@ -> json.put("rows",articleList,)@ -> out=response.getWriter()@ -> out.write(json.toString(),)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/saltlab/Pythia/blob/78991c9ed851c0c30ab3efc5abce251339f323fa/src/main/java/executionTracer/JSExecutionTracer.java][onFireEventSuccessed][3] = -> TRY { -> result=trace.getTraceRecord(points,)@ -> file=new PrintWriter(filename,)@ -> file.write(result,)@ -> file.close()@ } CATCH(CrawljaxException) { -> we.printStackTrace()@ -> LOGGER.error("Unable to get instrumentation log from the browser",)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/easysoa/EasySOA/blob/bff04a4a3a86a6fa9f1acfca5cf83333933e98c2/easysoa-proxy/easysoa-proxy-core/easysoa-proxy-core-httpdiscoveryproxy/src/main/java/org/easysoa/proxy/HttpDiscoveryProxy.java][forward][1] = -> TRY {  -> respOut=response.getWriter()@ -> outMessage=forwarder.send(inMessage,)@ -> logger.debug("clientResponse : "+outMessage.getMessageContent().getRawContent(),)@ -> respOut.write(outMessage.getMessageContent().getRawContent(),)@ -> respOut.close()@ } CATCH(Exception) {}
results[https://github.com/cytoscape/cytoscape-impl/blob/c92e985f187b6772871f816440eef03f90ab4ded/log-swing-impl/src/main/java/org/cytoscape/log/internal/ConsoleDialog.java][run][1] = -> TRY {  -> output=new PrintWriter(file,)@ -> LOOP { -> LOOP { -> output.write(event.toString(),)@ -> output.println()@ } } -> output.close()@ } CATCH(Exception) {}
results[https://github.com/ALRubinger/oreilly-ejb-6thedition-book-examples/blob/f67da18e2df1746b18f96e7e584a7b226ff57149/ch07-rsscache/src/test/java/org/jboss/ejb3/examples/ch07/rsscache/RssCacheTestCaseBase.java][writeToRssFeedFile][1] = -> TRY {  -> writer=new PrintWriter(new BufferedWriter(new FileWriter(rssFile,),),)@ -> LOOP { -> writer.write(line,)@(line=reader.readLine())!=null -> writer.write(NEWLINE,)@ } -> writer.flush()@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/mdb92nc/STAR-Vote/blob/2c90bb57a2006ad8d0be32ca11b22999d861a6ff/auditorium/loganalysis/Graph.java][stats][1] = -> TRY {  -> writer=new PrintWriter(new FileOutputStream(new File("logdata"+System.getProperty("file.separator",)+fileName+".stat",),),)@ -> stats=dag.getBranchStatistics()@ -> LOOP { -> writer.write(i+":"+stats.get(i,)+"\n",)@stats.keySet() } -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/wox2/migrace_databaze/blob/fe474e18a720b5bf55f88fc2d35345c3ee57b51f/skola/Fel_bc/1.semestr/Algoritmizace/PrikladyPrednasky2007/Alg9/src/alg9/Text3.java][main][1] = -> TRY {  -> out=new PrintWriter(new FileWriter("text3.txt",),)@ -> out.print(a,)@ -> out.print("+",)@ -> out.print(b,)@ -> out.print("=",)@ -> out.println(a+b,)@ -> out.println("konec programu",)@ -> out.write("nazdar",)@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/LSTS/neptus/blob/384b7f2a0074a179aed1c2143bd993b711adfa07/plugins-dev/noptilus/convcao/com/caoAgent/convcaoNeptusInteraction.java][controlLoop][2] = -> TRY {  -> IF { -> throw new Exception("Unable to compute local state",)@send==null } -> json=gson.toJson(send,)@!(send==null) -> writer=new PrintWriter(SessionID+"_Data.txt","UTF-8",)@!(send==null) -> writer.write(json,)@!(send==null) -> writer.close()@!(send==null) -> NeptusLog.pub().info("uploading to convcao..."+json.toString(),)@!(send==null) } CATCH(Exception) {}
results[https://github.com/camptocamp/secureOWS/blob/36abae7e77d3c056352799f286899453ecac360b/owsproxyserver/src/org/deegree/enterprise/AbstractOGCServlet.java][handleException][1] = -> wex=new OGCWebServiceException(this.getClass().getName(),tmp,)@ -> TRY { -> pw=response.getWriter()@ -> pw.write((Marshallable) wex.exportAsXML(),)@ -> pw.close()@ } CATCH(Exception) { -> getServletContext().log(e.toString(),)@ }
results[https://github.com/rwl/DSS/blob/a6b03e2d523064654b1d2474b47f13985e0fd298/core/dss/src/main/java/com/ncond/dss/meter/EnergyMeter.java][createDI_Totals][2] = -> TRY { -> pw=new PrintWriter(DI_Totals,)@ -> pw.write("Time",)@ -> LOOP { -> pw.print(", \""+meter.getRegisterName(i,)+"\"",)@i<DSS.activeCircuit.getEnergyMeters().size() } -> pw.println()@ -> pw.close()@ } CATCH(Exception) { -> DSS.doSimpleMsg("Error creating: \""+DI_Dir+DSS.SEPARATOR+"DI_Totals.csv\": "+e.getMessage(),539,)@ }
results[https://github.com/liucong/jms4cxf2/blob/bcf3dea39b02267fa2663733c790cf39c20a993a/integration/jca/src/test/java/org/apache/cxf/jca/core/resourceadapter/ManagedConnectionFactoryImplTest.java][testGetSetLogWriter][1] = -> TRY {  -> writer=EasyMock.createMock(PrintWriter.class,)@ -> writer.write(EasyMock.isA(String.class,),)@ -> writer.flush()@ -> writer.close()@ -> EasyMock.replay(writer,)@ -> mcf.setLogWriter(writer,)@ -> assertTrue(mcf.getLogWriter()==writer,)@ -> EasyMock.verify(writer,)@ } CATCH(Exception) {}
results[https://github.com/PerfCake/PerfCake/blob/984fc35301c04577759c4c2864763489a52b22f6/src/main/java/org/perfcake/message/sender/CommandSender.java][doSend][1] = -> TRY {  -> IF { -> writer=new PrintWriter(new OutputStreamWriter(new BufferedOutputStream(process.getOutputStream(),),Utils.getDefaultEncoding(),),true,)@ -> writer.write(messagePayload,)@ -> writer.flush()@ -> writer.close()@ } } CATCH(Exception) {}
results[https://github.com/droolsjbpm/droolsjbpm-tools/blob/6ac3d1de0577caf6806727b4daa79d2cdf805a9d/droolsjbpm-tools/drools-eclipse/org.guvnor.tools/src/org/guvnor/tools/views/RepositoryView.java][prepareFileTransfer][3] = -> TRY {  -> LOOP { -> contents=getResourceContents(nodes[i],)@i<nodes.length -> IF { -> throw new Exception("Could not create directory "+path.toOSString(),)@!(path.toFile().mkdir()) && i<nodes.length } -> writer=new PrintWriter(fos,)@!(!(path.toFile().mkdir())) && !(i<nodes.length) -> writer.write(contents,)@!(!(path.toFile().mkdir())) && !(i<nodes.length) -> writer.flush()@!(!(path.toFile().mkdir())) && !(i<nodes.length) -> writer.close()@!(!(path.toFile().mkdir())) && !(i<nodes.length) } } CATCH(Exception) {}
results[https://github.com/alvyxaz/mayhem-and-hell/blob/a1446dac78ea682ef9c6db583de383c1b92475cb/MayhemAndHell/src/com/friendlyblob/mayhemandhell/client/mapeditor/ObjectEditorWindow.java][actionPerformed][2] = } ELSE { -> IF { -> sw=new StringWriter()@ -> xmlWriter=new XmlWriter(sw,)@ -> TRY { -> out=new PrintWriter("data/objects.xml",)@ -> out.write(sw.toString(),)@ -> out.close()@ } CATCH(Exception) { -> e1.printStackTrace()@ } }
results[https://github.com/b3log/b3log-solo/blob/06be1bc7c8e49e5b479f3dde9fe488e496d12c9a/core/src/main/java/org/b3log/solo/processor/IndexProcessor.java][render][1] = -> TRY { -> writer=response.getWriter()@ -> pageContent=stringWriter.toString()@ -> writer.write(pageContent,)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) { -> TRY { -> response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,)@ } CATCH(IOException) { -> LOGGER.log(Level.ERROR,"Can not sned error 500!",ex,)@ } }
results[https://github.com/aurelf/avrora/blob/85355b36df0edaa84b9bf6ea42a7e60298eca081/src/avrora/syntax/objdump/ObjDumpPreprocessor.java][run][1] = -> TRY {  -> IF { -> p=new PrintWriter(outf,)@ -> p.write(cleanCode(args[0],).toString(),)@ -> p.close()@ } ELSE { -> System.out.println(cleanCode(args[0],),)@ } } CATCH(Exception) {}
results[https://github.com/f1ori/yacy/blob/d2ba1fd2ab5c034a8ef2b63ef10ecc15a2c48a02/source/de/anomic/plasma/crawler/plasmaFTPLoader.java][generateDirlist][1] = -> dirList=ftpClient.dirhtml(path,)@ -> IF { -> TRY { -> writer=new PrintWriter(new FileOutputStream(cacheFile,),false,)@!(dirList!=null&&dirList.length()>0) -> writer.write(dirList.toString(),)@dirList!=null&&dirList.length()>0 -> writer.flush()@!(dirList!=null&&dirList.length()>0) -> writer.close()@!(dirList!=null&&dirList.length()>0) -> return true@dirList!=null&&dirList.length()>0 } CATCH(Exception) { -> log.logInfo("Unable to write dirlist for URL "+entryUrl.toString(),)@!(dirList!=null&&dirList.length()>0) } }
results[https://github.com/rwl/DSS/blob/a6b03e2d523064654b1d2474b47f13985e0fd298/core/dss/src/main/java/com/ncond/dss/meter/EnergyMeterObj.java][saveRegisters][2] = -> TRY { -> pw=new PrintWriter(DSS.dataDirectory+csvName,)@ -> pw.print("Year, "+DSS.activeCircuit.getSolution().getYear()+",",)@ -> pw.println()@ -> LOOP { -> pw.write("\""+registerNames[i]+"\","+registers[i],)@i<EnergyMeter.NUM_EM_REGISTERS -> pw.println()@ } -> pw.close()@ } CATCH(Exception) { -> DSS.doSimpleMsg("Error opening Meter File \""+DSS.CRLF+csvName+"\": "+e.getMessage(),526,)@ }
results[https://github.com/eclipse/virgo.eclipse-mirror/blob/9295dd7207d1d06da1154bcd5f579003047b002c/hotfix/source/openejb-core_4.5.2/src/main/java/org/apache/openejb/log/FileHandler.java][closeWriter][6] = -> TRY { -> IF { -> return @writer==null } -> writer.write(getFormatter().getTail(this,),)@!(writer==null) -> writer.flush()@!(writer==null) -> writer.close()@!(writer==null) } CATCH(Exception) { -> reportError(null,e,ErrorManager.CLOSE_FAILURE,)@ } FINALLY { -> writerLock.writeLock().unlock()@ }
results[https://github.com/rwl/DSS/blob/bba7d1636ebe2f9f64eadafd04d82299caa92c8a/core/dss-core/src/main/java/com/ncond/dss/meter/SystemMeter.java][save][3] = -> TRY { -> pw=new PrintWriter(fw,)@ -> pw.write("Year, ",)@ -> writeRegisterNames(pw,)@ -> pw.println()@ -> pw.print(DSS.activeCircuit.getSolution().getYear(),)@ -> writeRegisters(pw,)@ -> pw.println()@ -> pw.close()@ } CATCH(Exception) { -> DSS.doSimpleMsg("Error opening system meter file \""+DSS.CRLF+csvName+"\": "+e.getMessage(),542,)@ }
results[https://github.com/debop/jvm-experiments/blob/92d90c221e2b23bc658a9877abff582e0b2387bb/web-example/src/main/java/examples/async/SimpleSample.java][call][2] = -> TRY { -> responseStr=EntityUtils.toString(response.getEntity(),Charsets.UTF_8.toString(),)@ -> IF { -> log.debug("URI=[{}]로부터 웹 컨텐츠를 다운로드 받았습니다. responseStr=[{}]",url,StringTool.ellipsisChar(responseStr,255,),)@ } -> writer=ctx.getResponse().getWriter()@ -> writer.write(responseStr,)@ -> writer.close()@ } CATCH(Exception) { -> throw new RuntimeException(ignored,)@ }
results[https://github.com/blickly/ptii/blob/f63eca94e95393c798eaba9b78bd389aecee3eb8/ptolemy/backtrack/eclipse/plugin/preferences/BacktrackingPreferencePage.java][doStore][1] = -> IF { -> items=list.getItems()@ -> TRY { -> writer=new PrintWriter(new FileOutputStream(fileName,),)@ -> LOOP { -> writer.write(items[i]+"\n",)@i<items.length } -> writer.close()@ } CATCH(Exception) { -> MessageDialog.openError(getShell(),"Error writing file",e.getMessage(),)@ } }
results[https://github.com/aurelf/avrora/blob/d361e8d477077fdc852295e0e745651c3bf8e902/src/avrora/syntax/objdump/ODPPAction.java][run][2] = -> TRY {  -> rf=new ObjDumpReformatter(SECTIONS.get(),)@ -> IF { -> System.out.println(rf.cleanCode(args[0],),)@ } ELSE { -> p=new PrintWriter(outf,)@ -> p.write(rf.cleanCode(args[0],).toString(),)@ -> p.close()@ } } CATCH(Exception) {}
results[https://github.com/wakandan/FYP/blob/843c7186f0262910f9a575b1a9632067ec97dde5/src/main/java/marketbase/Marketplace_Reader.java][writeFile][1] = -> IF { -> return @fileName==null } ELSE { -> IF { -> return @fileName.isEmpty() && !(fileName==null) } } -> TRY { -> outFile=new PrintWriter(fileName,)@fileName==null && !(fileName.isEmpty()) -> outFile.write(getFieldPanel(),)@fileName==null && !(fileName.isEmpty()) -> outFile.flush()@fileName==null && !(fileName.isEmpty()) -> outFile.close()@fileName==null && !(fileName.isEmpty()) } CATCH(Exception) { -> System.out.println("Error in writeFile method! "+ex.getMessage(),)@fileName==null && !(fileName.isEmpty()) }
results[https://github.com/blacktitan/apache-helix/blob/f3e32551094e4edfd73364e3c79e3aba980a8208/helix-core/src/test/java/org/apache/helix/tools/TestHelixAdminCli.java][testDropAddResource][1] = -> TRY {  -> idealState=accessor.getProperty(accessor.keyBuilder().idealStates("db_11",),)@ -> serializer=new ZNRecordJsonSerializer()@ -> pw=new PrintWriter(fos,)@ -> pw.write(new String(serializer.serialize(idealState.getRecord(),),),)@ -> pw.close()@ -> Assert.assertTrue(idealState2.getRecord().equals(idealState.getRecord(),),)@ } CATCH(Exception) {}
results[https://github.com/gf-metro/jaxws/blob/e77771b3189d8f6efba26fce4c7e72b6a7721823/jaxws-ri/tests/unit/testcases/xop/hellodirect/client/MtomCidTest.java][sendMessage][1] = -> TRY { -> _pw=new PrintWriter(httpConn.getOutputStream(),)@ -> _pw.write(createMessage(cid,mimeCid,),)@ -> _pw.flush()@ -> _pw.close()@ -> IF { -> System.out.println(" Reproduced bug with CID "+cid,)@ } ELSE { -> System.out.println(" Successfully sent MTOM message with CID "+cid,)@ } } CATCH(Exception) { -> fail(e.getMessage(),)@ }
results[https://github.com/Monomachus/Jason.NET/blob/9fd04a654e3119f710715a130d573da8f4bfcaca/javaSrc/jason/infra/centralised/CreateJNLP.java][main][2] = -> TRY { -> out=new PrintWriter(new File(file,),)@ -> script=Config.get().getTemplate("jnlp-template.xml",)@ -> script=CentralisedMASLauncherAnt.replace(script,"<PROJECT-ID>",projectName,)@ -> script=CentralisedMASLauncherAnt.replace(script,"<PROJECT-ID>",projectName,)@ -> script=CentralisedMASLauncherAnt.replace(script,"<PROJECT-ID>",projectName,)@ -> script=CentralisedMASLauncherAnt.replace(script,"<PROJECT-ID>",projectName,)@ -> script=CentralisedMASLauncherAnt.replace(script,"<PROJECT-ID>",projectName,)@ -> script=CentralisedMASLauncherAnt.replace(script,"<DEFAULT-CODEBASE>",defCodebase,)@ -> script=CentralisedMASLauncherAnt.replace(script,"<OTHER-JARS>",jars,)@ -> out.write(script,)@ -> out.close()@ } CATCH(Exception) { -> System.err.println("Error creating the jnlp file:",)@ -> e.printStackTrace()@ }
results[https://github.com/exoplatform/jcr/blob/21d715446d11567bdf48fbe43a4b88f10943319b/exo.jcr.component.core/src/test/java/org/exoplatform/services/jcr/load/perf/TestBulkItemsAdd.java][testNodeAdd][1] = -> TRY {  -> stats=new StringBuilder()@ -> LOOP { -> IF { -> stats.append(i,)@i<nodesCount && i%100==0 -> stats.append(";",)@ -> stats.append(System.currentTimeMillis()-addTime,)@ -> stats.append("\r\n",)@ } } -> statFile=new PrintWriter(new File("stats.txt",),)@ -> statFile.write(stats.toString(),)@ -> statFile.close()@ } CATCH(Exception) {}
results[https://github.com/gemy21ce/mek/blob/826137d1a085b57de72ab5c73de320415e0c44ce/src/main/java/viper/core/viewutil/JSONView.java][render][1] = -> TRY {  -> writer=response.getWriter()@ -> serializer=new JSONSerializer()@ -> IF { -> LOOP { -> serializer.include(include,)@ } } -> serializer.exclude("*.class",)@ -> IF { -> LOOP { -> serializer.exclude(exclude,)@ } } -> writer.write(serializer.serialize(this.object,),)@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/gmfawcett/openmark-mvn/blob/d786c6a4b223ab19427e37d7f0eb80a1a314667d/tags/v1.11.2/src/om/devservlet/DevServlet.java][handleBuild][12] = -> TRY {  -> sQuestion=sRemainingPath.replaceAll("^([^/]*)/?.*$","$1",)@ -> IF { -> return @!(sAfter.equals("",)) } -> pw=response.getWriter()@!(!(sAfter.equals("",))) -> pw.write("<html>"+"<head>"+"<title>Building "+sQuestion+"</title>"+"<style type='text/css'>"+"body { font: 10px Andale Mono, Lucida Console, monospace; }"+".out,.err { white-space:pre; }"+".err { color:#900; }"+"</style>"+"</head>"+"<body>",)@!(!(sAfter.equals("",))) -> bSuccess=qdQuestions.getQuestionDefinition(sQuestion,).build(pw,)@!(!(sAfter.equals("",))) -> IF { -> pw.println("<script type='text/javascript'>\n"+"var re=/^(.*)\\/build\\/(.*)$/;\n"+"location.href=location.href.replace(re,'$1/run/$2');\n"+"</script>",)@!(!(sAfter.equals("",))) } ELSE { -> pw.println("<p>[<a href='javascript:location.reload()'>Rebuild</a>] &nbsp; ["+"<a href='../../'>List</a>]</p>",)@!(!(sAfter.equals("",))) } -> pw.println("</body></html>",)@!(!(sAfter.equals("",))) -> pw.close()@!(!(sAfter.equals("",))) } CATCH(Exception) {}
results[https://github.com/marytts/marytts/blob/b13215e660f3d6defdcab692187e8b7516d32c27/marytts-builder/src/main/java/marytts/tools/dbselection/FeatureMakerMaryServer.java][getFeatures][2] = -> TRY {  -> IF { -> pw=new PrintWriter(new FileWriter(new File("./"+locale+"_featureDefinition.txt",),),)@ -> pw.write("# This file lists the features to be used for the selection algorithm. \n"+"#\n"+"# Note that the feature definitions must be identical between this file\n"+"# and the feature files used for selection. Use the corresponding file\n"+"# [locale]-targetfeatures.config for feature computation.\n"+"# \n"+"\n"+"ByteValuedFeatureProcessors\n",)@ -> LOOP { -> pw.print(selectionFeature.elementAt(i,)+" ",)@i<selectionFeature.size() -> LOOP { -> pw.print(feas[j]+" ",)@j<feas.length } -> pw.println()@ } -> pw.println("ShortValuedFeatureProcessors\nContinuousFeatureProcessors\n",)@ -> pw.close()@ } } CATCH(Exception) {}
results[https://github.com/Distributome/distribitome/blob/94c761557e36356f98478d233c75b6f253f3a282/src/org/distributome/editor/DistributomeEditor.java][actionPerformed][1] = } ELSE { } ELSE { -> IF { -> xml=TreeTableCodec.toXml(nodeModels,edgeModels,formulaModels,refModels,)@!(returnValue!=JFileChooser.APPROVE_OPTION) -> b=xml.getBytes()@!(returnValue!=JFileChooser.APPROVE_OPTION) -> IF { -> return @!(returnValue!=JFileChooser.APPROVE_OPTION) && !("".equals(invalidMsgs,)) } -> TRY { -> pWriter=new PrintWriter(bWriter,)@!(returnValue!=JFileChooser.APPROVE_OPTION) && !(!("".equals(invalidMsgs,))) -> pWriter.write(xml,)@!(returnValue!=JFileChooser.APPROVE_OPTION) && !(!("".equals(invalidMsgs,))) -> pWriter.flush()@!(returnValue!=JFileChooser.APPROVE_OPTION) && !(!("".equals(invalidMsgs,))) -> pWriter.close()@!(returnValue!=JFileChooser.APPROVE_OPTION) && !(!("".equals(invalidMsgs,))) } CATCH(Exception) { -> msg="Unable to write:  "+ex.getMessage()@!(returnValue!=JFileChooser.APPROVE_OPTION) && !(!("".equals(invalidMsgs,))) -> JOptionPane.showMessageDialog(this,msg,"Write Error",JOptionPane.ERROR_MESSAGE,)@!(returnValue!=JFileChooser.APPROVE_OPTION) && !(!("".equals(invalidMsgs,))) } }
results[https://github.com/LSTS/neptus/blob/4d58343c2f0b754328d5bc72f465001d443238c5/plugins-dev/web/pt/lsts/neptus/plugins/web/MissionServlet.java][sendTransponder][1] = -> TRY {  -> IF { -> page=resp.getWriter()@!(myConsole==null||myConsole.getMission()==null) -> page.write("<p><font color='red'>ERROR: </font>No mission has been set in the console.<p></body></html>",)@!(myConsole==null||myConsole.getMission()==null) -> page.close()@!(myConsole==null||myConsole.getMission()==null) -> return @myConsole==null||myConsole.getMission()==null } -> page=resp.getWriter()@!(myConsole==null||myConsole.getMission()==null) -> TRY { -> el=(TransponderElement) MapGroup.getMapGroupInstance(myConsole.getMission(),).getMapObjectsByID(id,)[0]@!(myConsole==null||myConsole.getMission()==null) -> page.write(el.asXML("Transponder",),)@!(myConsole==null||myConsole.getMission()==null) } CATCH(Exception) { -> throw new ServletException("Invalid transponder id",)@!(myConsole==null||myConsole.getMission()==null) } -> page.close()@!(myConsole==null||myConsole.getMission()==null) } CATCH(ServletException,IOException) {}
results[https://github.com/JakeWharton/WakkaWallpaper/blob/296295d85024a546f1c2dce0a603d805c6d9b34c/src/com/jakewharton/wakkawallpaper/Preferences.java][jsonExport][1] = -> TRY { -> settings=new JSONObject()@ -> settings.put(resources.getString(R.string.settings_display_key,),display,)@ -> settings.put(resources.getString(R.string.settings_game_key,),game,)@ -> settings.put(resources.getString(R.string.settings_color_key,),color,)@ -> file=new PrintWriter(new FileOutputStream(new File(Environment.getExternalStorageDirectory(),Preferences.FILE_NAME,),),)@ -> file.write(settings.toString(),)@ -> file.close()@ } CATCH(Exception) { -> e.printStackTrace()@ -> Toast.makeText(this,R.string.menu_export_failed,Toast.LENGTH_LONG,).show()@ }
results[https://github.com/easysoa/EasySOA/blob/32865e52b3a2afef4ab37fdc897e44bbfc04167a/easysoa-proxy/easysoa-proxy-core/easysoa-proxy-core-httpdiscoveryproxy/src/main/java/com/openwide/easysoa/proxy/HttpDiscoveryProxy.java][forward][1] = -> TRY {  -> respOut=response.getWriter()@ -> exchangeRecord=new ExchangeRecord(UUID.randomUUID().toString(),new InMessage(new HttpMessageRequestWrapper(request,),),)@ -> exchangeRecord.setOutMessage(forwarder.send(exchangeRecord.getInMessage(),),)@ -> logger.debug("clientResponse : "+exchangeRecord.getOutMessage().getMessageContent().getRawContent(),)@ -> respOut.write(exchangeRecord.getOutMessage().getMessageContent().getRawContent(),)@ -> respOut.close()@ } CATCH(Exception) {}
results[https://github.com/quattor/pan/blob/2f469c5799cca8a4415a16b57bd0bc0c802627fd/panc/src/main/java/org/quattor/pan/output/JsonFormatter.java][write][1] = -> TRY {  -> gson=new GsonBuilder().registerTypeAdapter(BooleanProperty.class,new PropertySerializer(),).registerTypeAdapter(DoubleProperty.class,new PropertySerializer(),).registerTypeAdapter(LongProperty.class,new PropertySerializer(),).registerTypeAdapter(StringProperty.class,new PropertySerializer(),).registerTypeAdapter(HashResource.class,new HashSerializer(),).registerTypeAdapter(ProtectedHashResource.class,new HashSerializer(),).registerTypeAdapter(ListResource.class,new ListSerializer(),).registerTypeAdapter(ProtectedListResource.class,new ListSerializer(),).setPrettyPrinting().create()@ -> ps.write(gson.toJson(result.getRoot(),),)@ -> ps.close()@ } CATCH(Exception) {}
results[https://github.com/rwl/DSS/blob/a6b03e2d523064654b1d2474b47f13985e0fd298/core/dss/src/main/java/com/ncond/dss/conversion/Generator.java][edit][2] = -> LOOP { -> IF { -> IF { -> TRY { -> pw=new PrintWriter(fw,)@ -> pw.write("t, Iteration, LoadMultiplier, Mode, LoadModel, GenModel, dQdV, Avg_Vpu, Vdiff, MQnominalperphase, MPnominalperphase, CurrentType",)@ -> LOOP { -> pw.print(", |Iinj"+String.valueOf(i,)+"|",)@i<elem.getNumPhases() } -> LOOP { -> pw.print(", |Iterm"+String.valueOf(i,)+"|",)@i<elem.getNumPhases() } -> LOOP { -> pw.print(", |Vterm"+String.valueOf(i,)+"|",)@i<elem.getNumPhases() } -> pw.println(", Vthev, Theta",)@ -> pw.close()@ } CATCH(Exception) { -> DSS.doSimpleMsg("Error writing debug trace: "+e.getMessage(),-1,)@ } } } }
results[https://github.com/svn2github/SpagoBI-V4x/blob/9ff27a69e1f78db17d1d66ba1112bc9b59f009a5/SpagoBIBirtReportEngine/src/it/eng/spagobi/engines/birt/BirtReportServlet.java][service][1] = -> TRY {  -> CATCH(ConnectionDefinitionException) { -> writer=response.getWriter()@ -> resp="<html><body><center>"+e.getDescription()+"</center></body></html>"@ -> writer.write(resp,)@ -> writer.flush()@ -> writer.close()@ -> IF { -> IF { -> auditAccessUtils.updateAudit(session,userId,auditId,null,new Long(System.currentTimeMillis(),),"EXECUTION_FAILED",e.getDescription(),null,)@auditId!=null && auditAccessUtils!=null } } } CATCH(Exception) { -> logger.error("Error during report production \n\n ",e,)@ -> IF { -> IF { -> auditAccessUtils.updateAudit(session,userId,auditId,null,new Long(System.currentTimeMillis(),),"EXECUTION_FAILED",e.getMessage(),null,)@auditId!=null && auditAccessUtils!=null } } } } CATCH(IOException,ServletException) {}
results[https://github.com/need4spd/crescent/blob/15e0cdc0abeae9e7cef63596996539988a931632/src/main/java/com/tistory/devyongsik/controller/MorphAdminMainController.java][morphTestAjax][3] = -> TRY {  -> LOOP { -> morphResult=new MorphResult()@ -> morphResult.setWord(token.toString(),)@ -> morphResult.setType(token.type(),)@ -> morphResult.setStartOffset(token.startOffset(),)@ -> morphResult.setEndOffset(token.endOffset(),)@ -> morphIndexingTestResult.add(morphResult,)@ } -> LOOP { -> morphResult=new MorphResult()@ -> morphResult.setWord(token.toString(),)@ -> morphResult.setType(token.type(),)@ -> morphResult.setStartOffset(token.startOffset(),)@ -> morphResult.setEndOffset(token.endOffset(),)@ -> morphQueryTestResult.add(morphResult,)@ } -> morphResult=gson.toJson(morphTestResultSet,)@ -> logger.info("morphResult : {}",morphResult,)@ -> writer=response.getWriter()@ -> writer.write(morphResult,)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/need4spd/crescent/blob/e79468e6827138039df81d17c8bd31e58df43f1d/crescent_core_web/src/main/java/com/tistory/devyongsik/controller/MorphAdminMainController.java][morphTestAjax][1] = -> TRY {  -> LOOP { -> morphResult=new MorphResult()@ -> morphResult.setWord(token.getTerm(),)@ -> morphResult.setType(token.getType(),)@ -> morphResult.setStartOffset(token.getStartOffset(),)@ -> morphResult.setEndOffset(token.getEndOffset(),)@ -> morphIndexingTestResult.add(morphResult,)@ } -> LOOP { -> morphResult=new MorphResult()@ -> morphResult.setWord(token.getTerm(),)@ -> morphResult.setType(token.getType(),)@ -> morphResult.setStartOffset(token.getStartOffset(),)@ -> morphResult.setEndOffset(token.getEndOffset(),)@ -> morphQueryTestResult.add(morphResult,)@ } -> morphResult=gson.toJson(morphTestResultSet,)@ -> logger.info("morphResult : {}",morphResult,)@ -> writer=response.getWriter()@ -> writer.write(morphResult,)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/need4spd/crescent/blob/ed3056ffcaa1189ce847d89daa2cfdf66fa8abca/crescent_core_web/src/main/java/com/tistory/devyongsik/crescent/admin/controller/MorphAdminMainController.java][morphTestAjax][1] = -> TRY {  -> LOOP { -> morphResult=new MorphResult()@ -> morphResult.setWord(token.getTerm(),)@ -> morphResult.setType(token.getType(),)@ -> morphResult.setStartOffset(token.getStartOffset(),)@ -> morphResult.setEndOffset(token.getEndOffset(),)@ -> morphIndexingTestResult.add(morphResult,)@ } -> LOOP { -> morphResult=new MorphResult()@ -> morphResult.setWord(token.getTerm(),)@ -> morphResult.setType(token.getType(),)@ -> morphResult.setStartOffset(token.getStartOffset(),)@ -> morphResult.setEndOffset(token.getEndOffset(),)@ -> morphQueryTestResult.add(morphResult,)@ } -> morphResult=mapper.writeValueAsString(morphTestResultSet,)@ -> logger.info("morphResult : {}",morphResult,)@ -> writer=response.getWriter()@ -> writer.write(morphResult,)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/i7/i7grip/blob/aa4fa1dff6295e9cbe063043c92ed377358c272d/installers/i7grip/InstallerEscalation.java][escalateWindowsPrivileges][1] = -> innerScript=new File(writableDirectory,"i7grip-escalator.js",)@ -> IF { } ELSE { -> fatalError("The temporary file ``"+innerScript.getPath()+"'' already exists.  Normally I would ask permission to replace it, but in this case it's not marked as a ``normal'' file.",)@innerScript.exists() && !(innerScript.isFile()) } -> innerScript.delete()@ -> TRY { -> enclosingJar=new File(InstallerEscalation.class.getProtectionDomain().getCodeSource().getLocation().toURI().getSchemeSpecificPart(),)@ -> output=new PrintWriter(new BufferedWriter(new FileWriter(outerScript,),),)@ -> candidateRoot=innerScript.getPath().substring(0,innerScript.getPath().indexOf(File.separatorChar,),)@ -> LOOP { -> IF { -> output.write('@'+candidateRoot+'\n',)@ } } -> output.write("@wscript.exe \""+innerScript.getPath()+"\"\n",)@ -> output.close()@ -> output=new PrintWriter(new BufferedWriter(new FileWriter(innerScript,),),)@ -> output.write("new ActiveXObject(\"Shell.Application\").ShellExecute(\""+scriptEscape(System.getProperty("java.home",)+File.separator+"bin"+File.separator+"javaw.exe",)+"\",\"-jar \\\""+scriptEscape(enclosingJar.getPath(),)+"\\\" \\\""+scriptEscape(escalationArgument,)+"\\\"\",\"\",\"runas\");\n",)@ -> output.close()@ } CATCH(Exception) { -> exception.printStackTrace()@ -> fatalError("Encountered error when escalating privileges: "+exception,)@ } FINALLY { -> innerScript.delete()@ -> outerScript.delete()@ }
results[https://github.com/GreenGroup/RMG-Java/blob/fa51f7d8927595978300b65366a5edc9109ca72a/RMG/jing/chem/GATPFit.java][callGATPFit][2] = -> result="SPEC "+species.getChemkinName()+ls@ -> result+="ELEM C "+MathTool.formatInteger(Cn,3,"L",)+ls@ -> result+="ELEM H "+MathTool.formatInteger(Hn,3,"L",)+ls@ -> IF { -> result+="ELEM O "+MathTool.formatInteger(On,3,"L",)+ls@On>0 } -> IF { -> result+="ELEM Si "+MathTool.formatInteger(Sin,3,"L",)+ls@Sin>0 } -> IF { -> result+="ELEM S "+MathTool.formatInteger(Sn,3,"L",)+ls@Sn>0 } -> result+="H298 "+Double.toString(td.getH298(),)+"\n"@ -> result+="S298 "+Double.toString(td.getS298(),)+"\n"@ -> result+="DLTH "+Double.toString(td.getH298(),)+"\n"@ -> result+="MWEI "+Double.toString(species.getMolecularWeight(),)+"\n"@ -> result+=String.valueOf(cg.getAtomNumber(),)+ls@ -> result+=String.valueOf(species.getInternalRotor(),)+ls@ -> result+="TECP 300 "+Double.toString(td.Cp300,)+"\n"@ -> result+="TECP 400 "+Double.toString(td.Cp400,)+"\n"@ -> result+="TECP 500 "+Double.toString(td.Cp500,)+"\n"@ -> result+="TECP 600 "+Double.toString(td.Cp600,)+"\n"@ -> result+="TECP 800 "+Double.toString(td.Cp800,)+"\n"@ -> result+="TECP 1000 "+Double.toString(td.Cp1000,)+"\n"@ -> result+="TECP 1500 "+Double.toString(td.Cp1500,)+"\n"@ -> TRY { -> commandInput=new PrintWriter(new OutputStreamWriter(bufferout,),true,)@ -> commandInput.write(result,)@ -> commandInput.close()@ -> IF { -> throw new GATPFitException(error_message,)@errline!=null } -> IF { -> System.out.print(result,)@!(errline!=null) && !(line==null) -> throw new GATPFitException("no output from GATPFit",)@!(errline!=null) && line==null } } CATCH(Exception) { -> err+=e.toString()@ -> TRY { -> GATPFit_input=new File(GATPFit_input_name,)@ } }
results[https://github.com/liujie0924/tmpServer/blob/f61bd96e1cfbc36b47b2e5a6e768c76f60f835d8/Test/src/com/jyz/action/RestoreDBAction.java][execute][8] = -> TRY {  -> out=response.getWriter()@ -> out.write(result,)@ -> out.flush()@ -> out.close()@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/muleforge/Galaxy/blob/efc598f81917ebf058a4d9f2e6c2afcd9f776cce/web/src/main/java/org/mule/galaxy/web/ArtifactUploadServlet.java][handleRequest][2] = -> TRY {  -> writer=resp.getWriter()@ -> IF { -> writer.write("No file was specified.",)@!(uploadItem==null) -> return null@uploadItem==null } -> id=uploadService.upload(uploadItem.getInputStream(),)@!(uploadItem==null) -> writer.write("OK "+id,)@!(uploadItem==null) -> writer.close()@!(uploadItem==null) } CATCH(Exception) {}
results[https://github.com/jrsaunde/PathDrop/blob/06d4e9b1e65c563de18284ee0446e2319ee45107/src/guiFX/Browser.java][loadTopo][1] = -> TRY {  -> TRY { -> out=new PrintWriter("src/web/web.html",)@ -> out.write(web,)@ -> out.close()@ } CATCH(Exception) { -> e.printStackTrace()@ } } CATCH(MalformedURLException,FileNotFoundException) {}
results[https://github.com/nofarb/Conf4you/blob/89dad590cbe807c1d74ae6630409ebeae156a366/src/servlets/UsersServlet.java][addUser][3] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> json=gson.toJson(jsonObject,)@ -> out.write(json,)@ -> out.flush()@ } FINALLY { -> out.close()@ } } CATCH(Exception) {}
results[https://github.com/sxyx2008/maven-framework-project/blob/d30d1bb71e9acdba12a1c049effc162fc1ab2022/src/main/java/com/fengjing/framework/struts2/action/HelloAction.java][delete][3] = -> TRY {  -> writer=response.getWriter()@ -> TRY { -> writer.write("<script type='text/javascript'>alert('ɾ��ɹ�!');</script>",)@ } CATCH(Exception) { -> writer.write("<script type='text/javascript'>alert('ɾ��ʧ��!\t"+e.getMessage()+"');</script>",)@ } -> writer.flush()@ -> writer.close()@ } CATCH(Exception) {}
results[https://github.com/pruiz/signserver/blob/9648a36f2d15911198ff079bc0bf669b51e21f42/signserver/modules/SignServer-Test-System/test/org/signserver/db/MysqlClusterContinouslyTestSeparately.java][addRow][1] = -> TRY {  -> TRY { -> fw.write("Addning i "+count+1+"\n",)@ -> query="insert ctest () values ( "+count+")"@ } FINALLY { -> TRY { -> IF { -> con.close()@con!=null } } } } CATCH(Exception) {}
results[https://github.com/zhfy/server/blob/e071cb0c837b4a99c03f5c072482e3a23affebd3/caipiao/src/com/caipiao/rights/action/SysUserDeleteAction.java][execute][11] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> out.write("[{\"success\":\"true\"}]",)@ } CATCH(Exception) { -> e.printStackTrace()@ -> out.write("[[{\"failure\":\"true\"}]",)@ } -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/test/sun/nio/cs/StreamEncoderClose.java][main][1] = -> TRY {  -> pw=new PrintWriter(new OutputStreamWriter(mbos,"ISO-2022-JP",),)@ -> pw.write("\u4e00",)@ -> pw.close()@ -> pw.close()@ -> LOOP { -> IF { -> throw new IOException("Failed",)@i<out.length && out[i]!=expected[i] } } } CATCH(Exception) {}
results[https://github.com/mabrek/jetty/blob/5748bee6623e9cdd9b15cbc61a73b79c46892555/jetty-server/src/test/java/org/eclipse/jetty/server/HttpConnectionTest.java][handle][2] = -> TRY {  -> TRY { -> writer=response.getWriter()@ -> writer.write("<html><h1>FOO</h1></html>",)@ -> writer.flush()@ -> writer.close()@ } CATCH(Exception) { -> Log.debug(e,)@ -> Log.info("correctly ignored "+e,)@ } } CATCH(IOException,ServletException) {}
results[https://github.com/twitter/commons/blob/fdcf34c74c3b4cfdbd08842c28fe014a0cb7368e/src/java/com/twitter/common/net/http/handlers/LogPrinter.java][doPost][1] = -> TRY {  -> TRY { -> responseBody=resp.getWriter()@ -> responseXml=fetchXmlLogContents(request,)@ -> responseBody.write(responseXml,)@ -> responseBody.close()@ } CATCH(Exception) { -> LOG.log(Level.SEVERE,"Unknown exception.",e,)@ -> resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,)@ } } CATCH(ServletException,IOException) {}
results[https://github.com/liujie0924/tmpServer/blob/b42c560da237350fb8a501877ebdef7147f34859/caipiao/src/com/caipiao/action/CreateMoneyAction.java][execute][1] = -> TRY {  -> out=response.getWriter()@ -> TRY { -> result=RandomNumber.getRandom()+"&login_check="+loginCheck@ } CATCH(Exception) { -> e.printStackTrace()@ } -> out.write(result,)@ -> out.flush()@ -> out.close()@ } CATCH(Exception) {}
