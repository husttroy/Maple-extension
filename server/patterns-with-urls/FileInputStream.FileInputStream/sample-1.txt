results[https://github.com/uditrugman/openjdk8-jdk/blob/c445903c23d3316d31b5171130aaf714c23f3446/src/share/classes/sun/security/action/OpenFileInputStreamAction.java][run][79] = -> TRY {  -> return new FileInputStream(file,)@ } CATCH(Exception) {}
results[https://github.com/petergeneric/xmlunit/blob/9de7c4ee463817568a87e013a772c6d4747d9d5f/src/tests/java-core/net/sf/xmlunit/builder/InputTest.java][readTestFile][70] = -> TRY {  -> is=new FileInputStream(TestResources.ANIMAL_FILE,)@ -> is.close()@ } CATCH(Exception) {}
results[https://github.com/cyrildumont/MCA/blob/982077e4b9f4805d9c454583a2c7f1f92853790c/org.mca.mca-parent/mca-core/src/main/java/org/mca/data/DDataStructure.java][upload][1] = -> TRY {  -> input=new FileInputStream(outputlocalFile,)@ -> computationCase.upload(name,part,input,)@ } CATCH(Exception) {}
results[https://github.com/cbockermann/streams/blob/65cc4c9aab5f7b451fb4948d954f357e5144cfed/stream-plugin/src/main/java/stream/plugin/util/OperatorList.java][<init>][2] = -> TRY {  -> <init>(new FileInputStream(file,),)@ } CATCH(Exception) {}
results[https://github.com/darrenjl/pdfrun/blob/f2228948952ca30a82037fd2c618262426910388/external_sources/httpcore-4.1.1/httpcore-nio/src/test/java/org/apache/http/impl/nio/codecs/TestIdentityDecoder.java][readFromFile][9] = -> TRY {  -> filestream=new FileInputStream(file,)@ -> reader=new InputStreamReader(filestream,)@ } CATCH(Exception) {}
results[https://github.com/qyb/sohu/blob/404c544d3ef1be92a2ab36e6a3c538b41870ec1e/src/StorageWorkspace/BladeFSClient/test/com/bladefs/client/TestBladeFSClient.java][setUp][24] = -> TRY {  -> file=new File("src.jpg",)@ -> in=new FileInputStream(file,)@ } CATCH(Exception) {}
results[https://github.com/LibraryOfCongress/bagit-java/blob/262dd88965fb08f2af0bea6f6d2d4272655a9b6a/bagit/tags/3.0/src/main/java/gov/loc/repository/bagit/impl/FileBagFile.java][newInputStream][16] = -> TRY { -> return new FileInputStream(this.file,)@ } CATCH(Exception) { -> throw new RuntimeException(ex,)@ }
results[https://github.com/quchunguang/test/blob/5326b1372c4ab1e3aaf3f0d16a07a6342b20d84d/testjava/TIJ4-code/io/ChannelCopy.java][main][11] = -> TRY {  -> in=new FileInputStream(args[0],).getChannel()@ } CATCH(Exception) {}
results[https://github.com/afimb/chouette/blob/9164e121312226d96b1dfc5bc8c39307b9ae0641/chouette-attic/src/main/java/fr/certu/chouette/struts/company/CompanyAction.java][getInputStream][8] = -> TRY {  -> return new FileInputStream(temp.getPath(),)@ } CATCH(Exception) {}
results[https://github.com/ursatong/GuardroidROM/blob/01a1c6fbcaf758ea6d9cf6296618bc6092733b36/libcore/luni/src/test/java/org/apache/harmony/nio/tests/java/nio/channels/ChannelsTest.java][testnewReaderCharsetError2][32] = -> TRY {  -> this.fins=new FileInputStream(tmpFile,)@ -> rbChannel=Channels.newChannel(this.fins,)@ } CATCH(Exception) {}
results[https://github.com/hzbarcea/cosmo/blob/17d31c582c381ce19fb2417297f53cc25947d4fc/cosmo-core/src/test/java/org/osaf/cosmo/calendar/TimeZoneTranslatorTest.java][getTimeZone][34] = -> TRY {  -> fis=new FileInputStream(baseDir+filename,)@ -> calendar=cb.build(fis,)@ } CATCH(Exception) {}
results[https://github.com/codehaus/jetty-project/blob/bdf28e6daece56d30d276d33c7348c6a601a429a/trunk-jetty-maven-plugin/src/main/java/org/mortbay/jetty/plugin/AbstractJettyMojo.java][setSystemPropertiesFile][19] = -> TRY {  -> propFile=new FileInputStream(systemPropertiesFile,)@ -> properties.load(propFile,)@ } CATCH(Exception) {}
results[https://github.com/jponge/izpack-full-svn-history-copy/blob/a63559fe85139d57d91fa7981461ffcdf2f6d2db/izpack-src/branches/4.3/src/tests/com/izforge/izpack/Bin_Langpacks_InstallerTest.java][<init>][33] = -> TRY {  -> Bin_Langpacks_InstallerTest.reference=new LocaleDatabase(new FileInputStream(basePath+referencePack,),)@ } CATCH(Exception) {}
results[https://github.com/bcgit/bc-java/blob/158b54fbacb8926df0e74086e95900924c862b6e/src/main/java/org/bouncycastle/asn1/util/Dump.java][main][33] = -> TRY {  -> fIn=new FileInputStream(args[0],)@ -> bIn=new ASN1InputStream(fIn,)@ } CATCH(Exception) {}
results[https://github.com/mauricioaniche/rEvolution/blob/6c173f623828cc0f2a36041cd223bd5a7373e3a3/src/edu/usp/ime/revolution/Runner.java][main][4] = -> TRY {  -> configStream=new FileInputStream(args[0],)@ -> config=new PropertiesConfig(configStream,)@ } CATCH(Exception) {}
results[https://github.com/ipa320/srs_public/blob/089d48e06379a482b3c27fc5bb909af72d9f4996/srs_knowledge/src/main/java/org/srs/srs_knowledge/knowledge_engine/KnowledgeEngine.java][initProperties][4] = -> TRY {  -> is=new FileInputStream(this.confPath+cfgFile,)@ -> this.config.load(is,)@ } CATCH(Exception) {}
results[https://github.com/fcrepo/fcrepo-before33/blob/8058d1f8d0e5b23a1f0a68f05dcb31f4bdd1ca18/src/test/fedora/server/resourceIndex/TestResourceIndex.java][getDigitalObject][4] = -> TRY {  -> in=new FileInputStream(file,)@ -> deser.deserialize(in,obj,"UTF-8",0,)@ } CATCH(Exception) {}
results[https://github.com/gbhl/bhl-europe/blob/57ffa7724f0f368d8dc6634a1458c66f00004873/pre-ingest/schema-mapping-tool/applet/src/at/nhmwien/schema_mapping_tool/converter/MARC21Converter.java][convertToMARCXML][1] = -> TRY {  -> in=new FileInputStream(inputFile,)@ -> reader=new MarcPermissiveStreamReader(in,true,true,"IS05426",)@ } CATCH(Exception) {}
results[https://github.com/rpelisse/pmd-old/blob/5d125e3c169b0ca9d32e7f641e8c5ffa4b8932d4/src/net/sourceforge/pmd/cpd/SourceCode.java][getReader][8] = -> TRY {  -> return new InputStreamReader(new FileInputStream(file,),encoding,)@ } CATCH(Exception) {}
results[https://github.com/benschi11/Alt_F4/blob/db8a036f89847dc74fc3f5737362cab51ad8b871/framework/src/play/vfs/VirtualFile.java][inputstream][7] = -> TRY { -> return new FileInputStream(realFile,)@ } CATCH(Exception) { -> throw new UnexpectedException(e,)@ }
results[https://github.com/jbossas/jboss-vfs/blob/687b64637ca8fb66b163557ce802c459fef15a8f/src/main/java/org/jboss/vfs/spi/RealFileSystem.java][run][1] = -> TRY {  -> return new FileInputStream(getFile(mountPoint,target,),)@ } CATCH(Exception) {}
results[https://github.com/epabst/sonar-plugins/blob/e64043294951c5f819bd85a185323e0fcf1908ec/phpdepend/src/main/java/org/sonar/plugins/phpdepend/PhpDependResultsParser.java][collectMeasures][1] = -> TRY {  -> input=new FileInputStream(reportXml,)@ -> reader=(XMLStreamReader2) xmlFactory.createXMLStreamReader(input,)@ } CATCH(Exception) {}
results[https://github.com/sosilent/euca/blob/54fd3c97a69a5054705bc777a5b6f1403a72ba1e/clc/modules/authentication/src/main/java/com/eucalyptus/auth/ldap/LicParserTest.java][main][1] = -> TRY {  -> input=new FileInputStream(args[0],)@ -> licText=readInputAsString(input,)@ } CATCH(Exception) {}
results[https://github.com/ios-driver/ios-driver/blob/393460354e559495b5df881510b3e5610291bb7f/server/src/main/java/org/uiautomation/ios/server/utils/PlistFileUtils.java][readJSONFile][1] = -> TRY {  -> is=new FileInputStream(from,)@ -> IOUtils.copy(is,writer,"UTF-8",)@ } CATCH(Exception) {}
results[https://github.com/seage/seage/blob/2401203b19140526d2db8f44989e2f7d36090b1d/seage-misc/src/main/java/org/seage/data/xml/XmlHelper.java][readXml][1] = -> TRY {  -> return readXml(new FileInputStream(file,),null,)@ } CATCH(Exception) {}
results[https://github.com/apache/webservices-axiom/blob/49984ae1e6560f85861d1870e545a714d5922fc1/modules/axiom-tests/src/test/java/org/apache/axiom/om/util/TextHelperTest.java][test_toOMText_fromBytes_notOptimized][4] = -> TRY {  -> is=new FileInputStream(file,)@ -> BufferUtils.inputStream2OutputStream(is,baos,)@ } CATCH(Exception) {}
results[https://github.com/Top-Q/jsystem/blob/442f8e439d673acdeb4eb80494d9eec9bcff77c6/jsystem-core-system-objects/FileTransfer-so/src/main/java/com/aqua/filetransfer/ftp/FTPFileTransfer.java][copyFileFromLocalMachineToRemoteMachine][1] = -> TRY {  -> copyFileFromLocalMachineToRemoteMachine(new FileInputStream(source,),destination,)@ } CATCH(Exception) {}
results[https://github.com/jsanda/rhq-plugins/blob/2368464c7f63c90d38af2a0600b1461d2296659a/platform/src/main/java/org/rhq/plugins/platform/content/yum/Primary.java][openStream][2] = -> TRY {  -> return new FileInputStream(file(),)@ } CATCH(Exception) {}
results[https://github.com/kbeswick/opensrf/blob/40df5b9733e6fc92894c8010c6173d12a885ec96/src/java/org/opensrf/test/TestXMLFlattener.java][main][1] = -> TRY {  -> fis=new FileInputStream(args[0],)@ -> f=new XMLFlattener(fis,)@ } CATCH(Exception) {}
results[https://github.com/scottanderson/DMUpdater/blob/554ba94cda2db00b20959c95eef9e6171d6d26c6/src/info/sholes/camel/updater/DownloadUtil.java][md5][3] = -> TRY {  -> return md5(new FileInputStream(f,),)@ } CATCH(Exception) {}
results[https://github.com/mlhartme/lavender/blob/f2dc94479aedb4a537eadbe42e425c7f10a7b561/src/test/java/com/oneandone/lavendel/index/IndexTest.java][testInputStreamConstructor][3] = -> TRY {  -> new Index(new FileInputStream(indexFile,),)@ } CATCH(Exception) {}
results[https://github.com/apache/poi/blob/21b4a0f94837321b1993bb00524e1667294e657a/src/examples/src/org/apache/poi/xslf/usermodel/tutorial/Step1.java][main][1] = -> TRY {  -> ppt=new XMLSlideShow(new FileInputStream(args[0],),)@ } CATCH(Exception) {}
results[https://github.com/nuxeo/nuxeo-signature/blob/3b3cc0264125b9f724203c400d725e70af292a0a/nuxeo-platform-signature-core/src/test/java/org/nuxeo/ecm/platform/signature/core/pki/CertServiceTest.java][getKeystoreIS][1] = -> TRY {  -> keystoreFile=FileUtils.getResourceFileFromContext(keystoreFilePath,)@ -> return new FileInputStream(keystoreFile,)@ } CATCH(Exception) {}
results[https://github.com/Mikuz/Boarder/blob/f4a5d36daaf9dd5cdf96b79557008e91710ca6d5/src/fi/mikuz/boarder/util/FileProcessor.java][calculateHash][16] = -> TRY {  -> fis=new FileInputStream(file,)@ -> bis=new BufferedInputStream(fis,)@ } CATCH(Exception) {}
results[https://github.com/DawnScience/scisoft-core/blob/87c23b613ce02be29bacbbd992b9142686fb5c89/uk.ac.diamond.scisoft.analysis/src/uk/ac/diamond/scisoft/analysis/utils/FileUtils.java][readFile][7] = -> TRY {  -> return FileUtils.readFile(new FileInputStream(file,),)@ } CATCH(Exception) {}
results[https://github.com/apache/webservices-axiom/blob/22bda41a0f5236119f58c88dc187cd21c47f9a97/test/org/apache/ws/commons/om/AbstractOMSerializationTest.java][getDiffForComparison][2] = -> TRY {  -> return getDiffForComparison(new FileInputStream(xmlFile,),)@ } CATCH(Exception) {}
results[https://github.com/kjetilv/vanadis/blob/031f6cc8d4d77cd955a9ae15208b932c20e1036c/deployer/src/main/java/vanadis/deployer/AbstractDirectoryUriExplorer.java][streamFrom][2] = -> TRY { -> return new FileInputStream(file,)@ } CATCH(Exception) { -> throw new DiscoveryException(this+" failed to open file "+file,e,)@ }
results[https://github.com/mz2/nmica-extra/blob/9b45f9ed197e4d1e33342e45342a77b0409058e0/src/net/derkholm/nmica/extra/app/motif/ModelScoreEvaluator.java][setMotifs][2] = -> TRY {  -> this.motifs=MotifIOTools.loadMotifSetXML(new FileInputStream(file,),)@ } CATCH(Exception) {}
results[https://github.com/uci-cbcl/genomix/blob/68bd0ca0ea8f386aa076f90549cb32e3456425f8/hyracks/hyracks-control/hyracks-control-cc/src/main/java/edu/uci/ics/hyracks/control/cc/web/ApplicationInstallationHandler.java][doRun][4] = -> TRY {  -> jarFile=new File(deploymentDir,fileName,)@ -> is=new FileInputStream(jarFile,)@ } CATCH(Exception) {}
results[https://github.com/patrick478/Medieval-Madness/blob/7f6aaca3f3d6c4c93825cf927176c7dcdafd8704/src/comp261/modelview/Main.java][main][1] = -> TRY {  -> ifs=new FileInputStream(args[0],)@ -> scan=new Scanner(ifs,)@ } CATCH(Exception) {}
results[https://github.com/dustin/snippets/blob/865a4396fd000f5fc4cee3a249fdb07f0ebb8fec/java/java/spytools/net/spy/util/UUInputStream.java][main][1] = -> TRY {  -> fis=new FileInputStream(args[0],)@ -> uu=new UUInputStream(fis,)@ } CATCH(Exception) {}
results[https://github.com/phenoscape/phenoscape-nlp/blob/750dcb72b92e58419e3121c8cc37b4c6c1eaa8f8/phenoscapeII/src/oboaccessor/OBO2DB.java][export2DB][1] = -> TRY {  -> fstream=new FileInputStream(this.onto,)@ -> in=new DataInputStream(fstream,)@ } CATCH(Exception) {}
results[https://github.com/escidoc/escidoc-core/blob/bf1c1aa7a31de8241fc22d276621a3d04e135796/integration-tests/src/test/java/de/escidoc/core/test/EscidocAssertions.java][assertXmlEquals][3] = -> TRY {  -> assertXmlEquals(message,new FileInputStream(expected,),toBeAsserted,)@ } CATCH(Exception) {}
results[https://github.com/bndtools/bnd/blob/e64655294f42e46d1a996c98aa8324376237fa56/aQute.libg/src/aQute/lib/json/Decoder.java][from][1] = -> TRY {  -> return from(new FileInputStream(file,),)@ } CATCH(Exception) {}
results[https://github.com/apache/tomcat55/blob/2ee172f418591edd61cfd3dc9676753b281d1fe2/connectors/http11/src/test/java/org/apache/coyote/http11/FileTester.java][test][1] = -> TRY {  -> is=new FileInputStream(inputFile,)@ -> processor.process(is,os,)@ } CATCH(Exception) {}
results[https://github.com/SciSysUK/m2e-core/blob/fc4b75e5ce600e6d0fd96282680b726781a26093/org.eclipse.m2e.tests.common/src/org/eclipse/m2e/tests/common/AbstractMavenProjectTestCase.java][copyContent][5] = -> TRY {  -> copyContent(project,new FileInputStream(from,),to,true,)@ } CATCH(Exception) {}
results[https://github.com/sake/bouncycastle-java/blob/c53c1effee7820c94a76c29fb6e75eae9deb8fdd/jdk1.0/org/bouncycastle/asn1/util/Dump.java][main][2] = -> TRY {  -> fIn=new FileInputStream(args[0],)@ -> bIn=new BERInputStream(fIn,)@ } CATCH(Exception) {}
results[https://github.com/cyrildumont/MCA/blob/1e53f086ff9ef5af6c12d5764afa133274d35688/org.mca.mca-parent/mca-core/src/main/java/org/mca/math/DistributedData.java][upload][1] = -> TRY {  -> input=new FileInputStream(outputlocalFile,)@ -> computationCase.upload(name,input,)@ } CATCH(Exception) {}
results[https://github.com/nuxeo/nuxeo-filesystem-connectors/blob/18328d7e83323c41b12444f23fe349c651b82586/nuxeo-generic-wss-handler/src/test/java/org/nuxeo/wss/fprpc/tests/fake/FakeRequestBuilder.java][build][2] = -> TRY {  -> in=new FileInputStream(file,)@ -> return build(in,)@ } CATCH(Exception) {}
results[https://github.com/gf-metro/jaxws/blob/3c981bcf41a11f02a49a65d04c59c940f9a68e56/jaxws-ri/tests/unit-rearch/src/whitebox/domutil/client/DomUtilTester.java][getSOAPMessage][1] = -> TRY {  -> sm=mf.createMessage(null,new FileInputStream(f,),)@ } CATCH(Exception) {}
results[https://github.com/ppke-nlpg/purepos/blob/1f151d516a6d46a9146486c561276fef98371aa4/src/main/java/hu/ppke/itk/nlpg/purepos/common/serializer/StandardSerializer.java][readModel][6] = -> TRY {  -> fis=new FileInputStream(from,)@ -> input=new ObjectInputStream(fis,)@ } CATCH(Exception) {}
results[https://github.com/vitkin/aptoide-client/blob/3c12d31f0bd39cfc520c4d911d59cc491e9d2abf/src/cm/aptoide/pt2/util/Md5Handler.java][md5Calc][5] = -> TRY { -> is=new FileInputStream(f,)@ } CATCH(Exception) { -> e.printStackTrace()@ }
results[https://github.com/FunkyAndroid/platform_libcore/blob/e69c2998bebbe2bf8e9f01ca6e644fd41c7914ec/harmony-tests/src/test/java/org/apache/harmony/nio/tests/java/nio/channels/FileChannelTest.java][test_forceJ][8] = -> TRY {  -> fis=new FileInputStream(fileOfWriteOnlyFileChannel,)@ -> fis.read(readBuffer,)@ } CATCH(Exception) {}
results[https://github.com/barchart/barchart-netty4/blob/23f3724f7af3e292fa82559b2fb489fad15cdb98/host/src/test/java/bench/record/MainRecord.java][main][4] = -> TRY {  -> path=new File(folder,file,)@ -> input=new FileInputStream(path,)@ } CATCH(Exception) {}
results[https://github.com/EnderWiggin/Haven-and-Hearth-client-modified-by-Ender/blob/3dc60a9b44e3bc50838e38f8139b8b79a8968b3b/src/haven/VorbisDecoder.java][main][3] = -> TRY {  -> dec=new VorbisDecoder(new FileInputStream(args[0],),)@ } CATCH(Exception) {}
results[https://github.com/cloudius-systems/mgmt/blob/52ea80808c7f1b195b7629a02c3d315177bf8240/crash/src/main/java/com/cloudius/cli/command/CRaSH.java][main][1] = -> TRY {  -> in=new FileInputStream(FileDescriptor.in,)@ -> processor=new JLineProcessor(shell,in,out,err,term,)@ } CATCH(Exception) {}
results[https://github.com/eclipse/rt.equinox.bundles/blob/e862a0697e3ea44c260490c5f043c959411b3eb9/bundles/org.eclipse.equinox.ds.tests/bundles_src/tb26/org/eclipse/equinox/ds/tests/tb26/Component.java][getResourceAsFileInputStream][1] = -> TRY {  -> return new FileInputStream(getResourceAsFile(name,),)@ } CATCH(Exception) {}
results[https://github.com/cybergarage/CyberLink4Java/blob/e3b1442043378b2a3413dc6d2b7f58c33788b5c5/clinkjava/src/upnp-media/org/cybergarage/upnp/media/server/object/item/file/FileItemNode.java][getContentInputStream][3] = -> TRY { -> return new FileInputStream(itemFile,)@ } CATCH(Exception) { -> Debug.warning(e,)@ }
results[https://github.com/BriteSnow/snow/blob/c92882c9c2f586a15458e17af7246db0c92ba9d5/src/main/java/com/britesnow/snow/util/image/ImageProcessor.java][resizeImage][1] = -> TRY {  -> imageInput=new FileInputStream(srcImageFile,)@ -> newImageInput=scaleImageWithMultisteps(imageInput,width,height,)@ } CATCH(Exception) {}
results[https://github.com/pedropaulovc/USP-2012-2/blob/5b4c99d551edbea45c9d85ffc09ff770e320a06a/workspace/WebEP1-Servidor/src/servidorWeb/Requisicao.java][enviarArquivo][1] = -> TRY {  -> sendBytes(new FileInputStream(req,),output,)@ } CATCH(Exception) {}
results[https://github.com/rbalent/Log4j-Convert-Configuration/blob/3dd45a90ff347c1227e8453ebd81324a51bde6aa/src/main/java/cz/muni/pb138/log4j/PropsToXmlConverter.java][convert][2] = -> TRY {  -> fis=new FileInputStream(sourceFile,)@ -> convert(fis,out,)@ } CATCH(Exception) {}
results[https://github.com/sisbell/masa/blob/04dcc7978e4a4433a0bfaa3444d6dde3b4f9e4bb/plugins/maven-apkbuilder-plugin/src/main/java/org/jvending/masa/plugin/apkbuilder/ApkBuilderMojo.java][getCertFromFile][1] = -> TRY {  -> inStream=new FileInputStream(file,)@ -> return getCertFromStream(inStream,)@ } CATCH(Exception) {}
results[https://github.com/jintrone/TurkSnet/blob/e6bcc83a2a3ed454e2290e633e6f4a862d71670c/src/main/java/edu/mit/cci/turkit/util/U.java][slurp][1] = -> TRY {  -> return slurp(new FileInputStream(f,),"UTF8",)@ } CATCH(Exception) {}
results[https://github.com/shantanusharma/barna/blob/e14494c00a83fa500dbd5c2949ca401688ee1d37/barna.tools/src/main/java/barna/genome/utils/Bed2Freq.java][getFreq][2] = -> TRY {  -> reader=new BufferedBACSReader(new FileInputStream(bedFile,),)@ } CATCH(Exception) {}
results[https://github.com/Phillipus/archi/blob/cae8ac4e47570c7072bd88968aa4e1d381ffd544/tests/com.archimatetool.editor.tests/src/com/archimatetool/editor/model/impl/ByteArrayStorageTests.java][addStreamEntry][1] = -> TRY {  -> in=new FileInputStream(img1File,)@ -> storage.addStreamEntry(entry1,in,)@ } CATCH(Exception) {}
results[https://github.com/giorgiosironi/Chansonnier/blob/7edea56c641cb51edd0f2d466c9fa3b71253931d/chansonnier/it.polimi.chansonnier/code/src/it/polimi/chansonnier/utils/URLUtils.java][readStart][1] = -> TRY {  -> return readStart(new FileInputStream(fp,),)@ } CATCH(Exception) {}
results[https://github.com/bitrepository/reference/blob/9a29d04eac59e3ff00e77ebb364ea85d8f0c0548/bitrepository-integration/src/main/java/org/bitrepository/pillar/ReferenceArchive.java][getFileAsInputstream][1] = -> TRY {  -> return new FileInputStream(getFile(fileID,),)@ } CATCH(Exception) {}
results[https://github.com/srnsw/xena/blob/989afa8144c983933dac297847a1c4c3c0032bab/src/au/gov/naa/digipres/xena/plugin/email/msg/MsgMessage.java][main][3] = -> TRY {  -> inputStream=new FileInputStream(args[0],)@ -> fs=new POIFSFileSystem(inputStream,)@ } CATCH(Exception) {}
results[https://github.com/NFLabs/ambari/blob/f7ab1d0d73d17b49bafd197dd998fc5d8a9fb9db/client/src/main/java/org/apache/ambari/client/BlueprintAdd.java][readStackFromJSONFile][4] = -> TRY {  -> fis=new FileInputStream(f,)@ -> stack=m.readValue(fis,Stack.class,)@ } CATCH(Exception) {}
results[https://github.com/digitalabs/IBFb/blob/c35c463737937d3b8f3e21a9218e057b5dc96032/IBFbNursery/src/ibfb/nursery/importwizard/ExcelImporter.java][importValues][1] = -> TRY {  -> inputStream=new FileInputStream(excelFile,)@ -> resultsBook=WorkbookFactory.create(inputStream,)@ } CATCH(Exception) {}
results[https://github.com/gbhl/bhl-europe/blob/bcae9582074f9cebc3ba4071f27163f660ee229f/pre-ingest/schema-mapping-tool/applet/src/at/nhmwien/schema_mapping_tool/converter/XSLTransformer.java][transform][1] = -> TRY {  -> XSLTransformer.transform(inputFile,outputFile,new FileInputStream(xslFile,),)@ } CATCH(Exception) {}
results[https://github.com/apache/aries/blob/fa5cfba0c0c218d373875890227a43923e5baa05/spi-fly/spi-fly-static/src/test/java/org/apache/aries/spifly/statictool/MainTest.java][assertStreams][1] = -> TRY {  -> is1=new FileInputStream(file,)@ -> assertStreams(is1,is2,)@ } CATCH(Exception) {}
results[https://github.com/juretta/couch4j/blob/e5ea2c7b729bedec90c3aaafae76ebda6013b1af/src/test/java/org/couch4j/util/StreamUtilsTest.java][testCopyAndClose][1] = -> TRY {  -> fin=new FileInputStream(testFile,)@ -> StreamUtils.copyAndClose(fin,bos,)@ } CATCH(Exception) {}
results[https://github.com/bleujin/aradon/blob/870e7727c1b4d309a0b51782d4e3b2263f5624ae/src/net/ion/radon/core/classloading/VirtualFile.java][inputstream][1] = -> TRY { -> return new FileInputStream(realFile,)@ } CATCH(Exception) { -> throw new AradonRuntimeException(e,)@ }
results[https://github.com/teiid/teiid/blob/0f5dc210e4568d1efedcd459377f25283991eb22/engine/src/test/java/org/teiid/query/processor/xml/TestXMLProcessor.java][readFile][3] = -> TRY {  -> fis=new FileInputStream(UnitTestUtil.getTestDataFile(fileName,),)@ } CATCH(Exception) {}
results[https://github.com/Mikescher/jClipCorn/blob/281c1951cbd88a5d0df58ab8a67270032b82da86/src/de/jClipCorn/database/util/ExportHelper.java][copyAllCoverFromBackup][1] = -> TRY {  -> theFile=new FileInputStream(backup,)@ -> stream=new ZipInputStream(theFile,)@ } CATCH(Exception) {}
results[https://github.com/pholser/property-binder/blob/8dd96221e942752978b968c9fa94169732b7df41/src/test/java/com/pholser/util/properties/BindingStringResourceBundlesToTypedInterfacesTest.java][initializeProperties][1] = -> TRY {  -> inputStream=new FileInputStream(propertiesFile,)@ -> bundle=new PropertyResourceBundle(inputStream,)@ } CATCH(Exception) {}
results[https://github.com/ecologylab/ecologylabFundamental/blob/dbdd2f7d2a3bbee2e85ec4a05eb31f1219a1f16f/3-2Beta1b/ecologylab/io/Files.java][openInStream][3] = -> TRY { -> stream=new FileInputStream(inFile,)@ } CATCH(Exception) { -> Debug.println("Can't open input stream from "+inFile+" "+e,)@ }
results[https://github.com/europeana/contrib/blob/15934811e1930e93405735facf6b5c3989f9efdd/ntua/mint/src/main/java/gr/ntua/ivml/mint/persistent/Publication.java][getDownloadStream][3] = -> TRY { -> is=new FileInputStream(tmpFile,)@ } CATCH(Exception) { -> log.error("File unload problem",e,)@ }
results[https://github.com/digitalabs/IBFb/blob/c35c463737937d3b8f3e21a9218e057b5dc96032/IBFbStudyEditor/src/ibfb/studyeditor/importwizard/ExcelImporter.java][importValues][1] = -> TRY {  -> inputStream=new FileInputStream(excelFile,)@ -> resultsBook=new HSSFWorkbook(inputStream,)@ } CATCH(Exception) {}
results[https://github.com/fcrepo/fcrepo/blob/e19ff9b6cb5e9f87b059976516b2c61739ec2f44/fcrepo-server/src/test/java/org/fcrepo/utilities/TestZip.java][testUnzip][1] = -> TRY {  -> fis=new FileInputStream(ZIP_FILE,)@ -> Zip.unzip(fis,TMP_DIR,)@ } CATCH(Exception) {}
results[https://github.com/karlmdavis/m2e-core/blob/a24bc4e0d79a1dbaee0b2ce86d2cfacf8ef87d6e/org.eclipse.m2e.tests.common/src/org/eclipse/m2e/tests/common/AbstractMavenProjectTestCase.java][copyContent][1] = -> TRY {  -> copyContent(project,new FileInputStream(from,),to,)@ } CATCH(Exception) {}
results[https://github.com/eclipse/remus/blob/08bef60d29103db2baf65b817458d0917df41286/bundles/org.eclipse.remus.efs.password/src/org/eclipse/remus/efs/password/AESCryptoManager.java][getDecryptedInputStream][2] = -> TRY {  -> fileIn=new FileInputStream(file,)@ -> return new CipherInputStream(fileIn,cipher,)@ } CATCH(Exception) {}
results[https://github.com/jgzornoza/SistemaVotacion/blob/ccaf325b948e85350f5e733af84690d429c0c1fc/VotingToolAndroidProject/libraries/votingsystem/src/main/java/org/votingsystem/util/FileUtils.java][copyFileToFile][1] = -> TRY {  -> fs=new FileInputStream(inputFile,)@ -> return copyStreamToFile(fs,outputFile,)@ } CATCH(Exception) {}
results[https://github.com/specify/specify/blob/f3059c2edc655551faf9249ceac2cef26125f360/src/edu/ku/brc/specify/helpers/XMLHelper.java][readFileToDOM4J][1] = -> TRY {  -> return readFileToDOM4J(new FileInputStream(file,),)@ } CATCH(Exception) {}
results[https://github.com/FreakyPenguin/elexis-hilotec-base/blob/a03ec9ac9020af9ee6cd14b2cf9cc1a46863f035/elexis-medikamente-bag/src/ch/elexis/medikamente/bag/data/BAGMediImporter.java][doImport][4] = -> TRY {  -> is=new FileInputStream(results[0],)@ -> return doImport(is,monitor,)@ } CATCH(Exception) {}
results[https://github.com/sisbell/masa/blob/04dcc7978e4a4433a0bfaa3444d6dde3b4f9e4bb/plugins/maven-apkbuilder-plugin/src/main/java/org/jvending/masa/plugin/apkbuilder/ApkBuilderMojo.java][getPrivateKeyFromFile][1] = -> TRY {  -> return getPrivateKeyFromStream(new FileInputStream(file,),)@ } CATCH(Exception) {}
results[https://github.com/digitalabs/IBFb/blob/c35c463737937d3b8f3e21a9218e057b5dc96032/IBFbStudyEditor/src/ibfb/studyeditor/reports/ProcessReport.java][doInBackground][1] = -> TRY {  -> streamReport=new FileInputStream(reportFile,)@ -> report=(JasperReport) JRLoader.loadObject(streamReport,)@ } CATCH(Exception) {}
results[https://github.com/aptana/studio2/blob/0905925e7efa7e473e7c2b3d69a618e19056ed31/plugins/com.aptana.ide.core.ui/src/com/aptana/ide/core/ui/WorkbenchHelper.java][getInputStream][1] = -> TRY {  -> return new FileInputStream(getFile(),)@ } CATCH(Exception) {}
results[https://github.com/gbhl/bhl-europe/blob/598d66f1871d9a4de6280ec9865273a3f680e636/pre-ingest/schema-mapping-tool/applet/src/at/nhmwien/schema_mapping_tool/mappingProcess/MapFileHandler.java][loadFile][1] = -> TRY {  -> fis=new FileInputStream(fileName,)@ -> this.loadFile(fis,)@ } CATCH(Exception) {}
results[https://github.com/gbhl/bhl-europe/blob/e97595ea2a3b1ae23fb17a62afb28816ca8d9da5/pre-ingest/schema-mapping-tool/applet/src/at/nhmwien/schema_mapping_tool/converter/PassthroughConverter.java][passthrough][1] = -> TRY {  -> in=new FileInputStream(inputFile,)@ -> reader=new InputStreamReader(in,inputEncoding,)@ } CATCH(Exception) {}
results[https://github.com/jsonld-java/jsonld-java/blob/bd104d863beea7c3667ef9e3e270a16fd675c6b2/core/src/test/java/com/github/jsonldjava/utils/TestUtils.java][copyResourceToFileStream][1] = -> TRY {  -> return new FileInputStream(copyResourceToFile(testDir,resource,),)@ } CATCH(Exception) {}
results[https://github.com/masterjc/ecosystemguard/blob/5bff8017ff44d567ead177b9a47ee8cc8ee930b8/nosql/src/java/com/ecosystem/guard/nosql/disk/RepositoryManagerImpl.java][addEntries][1] = -> TRY {  -> entryParser=new FileEntryParser(new FileInputStream(file,),)@ } CATCH(Exception) {}
results[https://github.com/veiset/Epsilon/blob/6362e7a0c56b15012ab195995af51da2bab26055/Epsilon/src/epsilon/tools/mapcreator/Datahistory.java][load][1] = -> TRY {  -> fileinput=new FileInputStream(file,)@ -> objIS=new ObjectInputStream(fileinput,)@ -> fileinput.close()@ } CATCH(Exception) {}
results[https://github.com/kraktos/DBPediaMapping/blob/9a094404af8d6f5cb318a4aca5b9d420b986b359/EntityLinker/src/de/dws/reasoner/mln/MLNFileGenerator.java][loadSameAsConfidences][1] = -> TRY {  -> input=new BufferedReader(new InputStreamReader(new FileInputStream(Constants.APRIORI_PROB_FILE,),),)@ } CATCH(Exception) {}
results[https://github.com/rasmuserik/rasmuserik/blob/bd6f85e520fba9a3950863c4d2a9d1a3ada94094/code/ys/Main.java][main][1] = -> TRY {  -> is=new FileInputStream(new File(args[0],),)@ -> cl=(Ys.Closure) Ys.readExpression(is,)@ } CATCH(Exception) {}
results[https://github.com/cismet/verdis/blob/d34041ddc756030686d7e4b72e721be800bdc26a/src/main/java/de/cismet/verdis/gui/Main.java][loadLayout][1] = -> TRY {  -> layoutFile=new File(file,)@ -> layoutInput=new FileInputStream(layoutFile,)@ -> in=new ObjectInputStream(layoutInput,)@ } CATCH(Exception) {}
results[https://github.com/apavlo/h-store/blob/634ebb24528d7390139ce627d75d3142acfa9464/third_party/cpp/protobuf/examples/ListPeople.java][main][2] = -> TRY {  -> addressBook=AddressBook.parseFrom(new FileInputStream(args[0],),)@ -> Print(addressBook,)@ } CATCH(Exception) {}
results[https://github.com/apache/jspwiki/blob/af238b05dfa27236b9831e73c3227a2be328ccce/tests/org/apache/wiki/TestJDBCDataSource.java][initializeJDBC][1] = -> TRY {  -> is=new FileInputStream(file,)@ -> properties.load(is,)@ -> is.close()@ } CATCH(Exception) {}
results[https://github.com/dryade/chouette/blob/1bb62f914d300504d6863daa14d6a70dd9bf8c9e/chouette-exchange-netex/src/test/java/fr/certu/chouette/exchange/netex/importer/converters/LineConverterTests.java][setUp][1] = -> TRY {  -> f=FileUtils.getFile("src","test","resources","line_test.xml",)@ -> fis=new FileInputStream(f,)@ -> fis.read(b,)@ } CATCH(Exception) {}
